//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3625
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.Projects.Projects {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ProjectTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ProjectTDS : global::System.Data.DataSet {
        
        private LFS_PROJECT_BONDINGS_BUDGETDataTable tableLFS_PROJECT_BONDINGS_BUDGET;
        
        private LFS_PROJECT_HOTELS_BUDGETDataTable tableLFS_PROJECT_HOTELS_BUDGET;
        
        private LFS_PROJECT_INSURANCES_BUDGETDataTable tableLFS_PROJECT_INSURANCES_BUDGET;
        
        private LFS_PROJECT_OTHER_COSTS_BUDGETDataTable tableLFS_PROJECT_OTHER_COSTS_BUDGET;
        
        private LFS_PROJECT_MATERIALS_BUDGETDataTable tableLFS_PROJECT_MATERIALS_BUDGET;
        
        private LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable tableLFS_PROJECT_SUBCONTRACTORS_BUDGET;
        
        private LFS_PROJECT_UNITS_BUDGETDataTable tableLFS_PROJECT_UNITS_BUDGET;
        
        private LFS_PROJECT_COSTING_UPDATESDataTable tableLFS_PROJECT_COSTING_UPDATES;
        
        private LFS_PROJECT_SALE_BILLING_PRICINGDataTable tableLFS_PROJECT_SALE_BILLING_PRICING;
        
        private LFS_PROJECT_SERVICEDataTable tableLFS_PROJECT_SERVICE;
        
        private LFS_PROJECT_TECHNICALDataTable tableLFS_PROJECT_TECHNICAL;
        
        private LFS_PROJECT_NUMBERDataTable tableLFS_PROJECT_NUMBER;
        
        private LFS_PROJECT_HISTORYDataTable tableLFS_PROJECT_HISTORY;
        
        private LFS_PROJECT_NOTEDataTable tableLFS_PROJECT_NOTE;
        
        private LFS_PROJECT_ENGINEER_SUBCONTRACTORSDataTable tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS;
        
        private LFS_PROJECT_LASTLOGINDataTable tableLFS_PROJECT_LASTLOGIN;
        
        private LFS_PROJECT_WORK_FUNCTION_FAIR_WAGEDataTable tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE;
        
        private LFS_PROJECTDataTable tableLFS_PROJECT;
        
        private LFS_PROJECT_JOB_CLASS_TYPE_RATEDataTable tableLFS_PROJECT_JOB_CLASS_TYPE_RATE;
        
        private LFS_PROJECT_SUBCONTRACTORDataTable tableLFS_PROJECT_SUBCONTRACTOR;
        
        private LFS_PROJECT_REVENUEDataTable tableLFS_PROJECT_REVENUE;
        
        private LFS_PROJECT_WORK_FUNCTION_BUDGETDataTable tableLFS_PROJECT_WORK_FUNCTION_BUDGET;
        
        private LFS_PROJECT_TERMSDataTable tableLFS_PROJECT_TERMS;
        
        private LFS_PROJECT_JOB_INFODataTable tableLFS_PROJECT_JOB_INFO;
        
        private global::System.Data.DataRelation relationLFS_PROJECT_LFS_PROJECT_SALE_BILLING_PRICING;
        
        private global::System.Data.DataRelation relationLFS_PROJECT_LFS_PROJECT_SERVICE;
        
        private global::System.Data.DataRelation relationLFS_PROJECT_LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE;
        
        private global::System.Data.DataRelation relationLFS_PROJECT_LFS_PROJECT_TECHNICAL;
        
        private global::System.Data.DataRelation relationLFS_PROJECT_LFS_PROJECT_NOTE;
        
        private global::System.Data.DataRelation relationLFS_PROJECT_LFS_PROJECT_HISTORY;
        
        private global::System.Data.DataRelation relationLFS_PROJECT_LFS_PROJECT_ENGINEER_SUBCONTRACTORS;
        
        private global::System.Data.DataRelation relationLFS_PROJECT_LFS_PROJECT_COSTING_UPDATES;
        
        private global::System.Data.DataRelation relationLFS_PROJECT_LFS_PROJECT_LASTLOGIN;
        
        private global::System.Data.DataRelation relationLFS_PROJECT_LFS_PROJECT_JOB_CLASS_TYPE_RATE;
        
        private global::System.Data.DataRelation relationLFS_PROJECT_LFS_PROJECT_REVENUE;
        
        private global::System.Data.DataRelation relationLFS_PROJECT_LFS_PROJECT_TERMS;
        
        private global::System.Data.DataRelation relationLFS_PROJECT_LFS_PROJECT_JOB_INFO;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProjectTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ProjectTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LFS_PROJECT_BONDINGS_BUDGET"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_BONDINGS_BUDGETDataTable(ds.Tables["LFS_PROJECT_BONDINGS_BUDGET"]));
                }
                if ((ds.Tables["LFS_PROJECT_HOTELS_BUDGET"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_HOTELS_BUDGETDataTable(ds.Tables["LFS_PROJECT_HOTELS_BUDGET"]));
                }
                if ((ds.Tables["LFS_PROJECT_INSURANCES_BUDGET"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_INSURANCES_BUDGETDataTable(ds.Tables["LFS_PROJECT_INSURANCES_BUDGET"]));
                }
                if ((ds.Tables["LFS_PROJECT_OTHER_COSTS_BUDGET"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_OTHER_COSTS_BUDGETDataTable(ds.Tables["LFS_PROJECT_OTHER_COSTS_BUDGET"]));
                }
                if ((ds.Tables["LFS_PROJECT_MATERIALS_BUDGET"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_MATERIALS_BUDGETDataTable(ds.Tables["LFS_PROJECT_MATERIALS_BUDGET"]));
                }
                if ((ds.Tables["LFS_PROJECT_SUBCONTRACTORS_BUDGET"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable(ds.Tables["LFS_PROJECT_SUBCONTRACTORS_BUDGET"]));
                }
                if ((ds.Tables["LFS_PROJECT_UNITS_BUDGET"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_UNITS_BUDGETDataTable(ds.Tables["LFS_PROJECT_UNITS_BUDGET"]));
                }
                if ((ds.Tables["LFS_PROJECT_COSTING_UPDATES"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_COSTING_UPDATESDataTable(ds.Tables["LFS_PROJECT_COSTING_UPDATES"]));
                }
                if ((ds.Tables["LFS_PROJECT_SALE_BILLING_PRICING"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_SALE_BILLING_PRICINGDataTable(ds.Tables["LFS_PROJECT_SALE_BILLING_PRICING"]));
                }
                if ((ds.Tables["LFS_PROJECT_SERVICE"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_SERVICEDataTable(ds.Tables["LFS_PROJECT_SERVICE"]));
                }
                if ((ds.Tables["LFS_PROJECT_TECHNICAL"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_TECHNICALDataTable(ds.Tables["LFS_PROJECT_TECHNICAL"]));
                }
                if ((ds.Tables["LFS_PROJECT_NUMBER"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_NUMBERDataTable(ds.Tables["LFS_PROJECT_NUMBER"]));
                }
                if ((ds.Tables["LFS_PROJECT_HISTORY"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_HISTORYDataTable(ds.Tables["LFS_PROJECT_HISTORY"]));
                }
                if ((ds.Tables["LFS_PROJECT_NOTE"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_NOTEDataTable(ds.Tables["LFS_PROJECT_NOTE"]));
                }
                if ((ds.Tables["LFS_PROJECT_ENGINEER_SUBCONTRACTORS"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_ENGINEER_SUBCONTRACTORSDataTable(ds.Tables["LFS_PROJECT_ENGINEER_SUBCONTRACTORS"]));
                }
                if ((ds.Tables["LFS_PROJECT_LASTLOGIN"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_LASTLOGINDataTable(ds.Tables["LFS_PROJECT_LASTLOGIN"]));
                }
                if ((ds.Tables["LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_WORK_FUNCTION_FAIR_WAGEDataTable(ds.Tables["LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE"]));
                }
                if ((ds.Tables["LFS_PROJECT"] != null)) {
                    base.Tables.Add(new LFS_PROJECTDataTable(ds.Tables["LFS_PROJECT"]));
                }
                if ((ds.Tables["LFS_PROJECT_JOB_CLASS_TYPE_RATE"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_JOB_CLASS_TYPE_RATEDataTable(ds.Tables["LFS_PROJECT_JOB_CLASS_TYPE_RATE"]));
                }
                if ((ds.Tables["LFS_PROJECT_SUBCONTRACTOR"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_SUBCONTRACTORDataTable(ds.Tables["LFS_PROJECT_SUBCONTRACTOR"]));
                }
                if ((ds.Tables["LFS_PROJECT_REVENUE"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_REVENUEDataTable(ds.Tables["LFS_PROJECT_REVENUE"]));
                }
                if ((ds.Tables["LFS_PROJECT_WORK_FUNCTION_BUDGET"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_WORK_FUNCTION_BUDGETDataTable(ds.Tables["LFS_PROJECT_WORK_FUNCTION_BUDGET"]));
                }
                if ((ds.Tables["LFS_PROJECT_TERMS"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_TERMSDataTable(ds.Tables["LFS_PROJECT_TERMS"]));
                }
                if ((ds.Tables["LFS_PROJECT_JOB_INFO"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_JOB_INFODataTable(ds.Tables["LFS_PROJECT_JOB_INFO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_BONDINGS_BUDGETDataTable LFS_PROJECT_BONDINGS_BUDGET {
            get {
                return this.tableLFS_PROJECT_BONDINGS_BUDGET;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_HOTELS_BUDGETDataTable LFS_PROJECT_HOTELS_BUDGET {
            get {
                return this.tableLFS_PROJECT_HOTELS_BUDGET;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_INSURANCES_BUDGETDataTable LFS_PROJECT_INSURANCES_BUDGET {
            get {
                return this.tableLFS_PROJECT_INSURANCES_BUDGET;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_OTHER_COSTS_BUDGETDataTable LFS_PROJECT_OTHER_COSTS_BUDGET {
            get {
                return this.tableLFS_PROJECT_OTHER_COSTS_BUDGET;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_MATERIALS_BUDGETDataTable LFS_PROJECT_MATERIALS_BUDGET {
            get {
                return this.tableLFS_PROJECT_MATERIALS_BUDGET;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable LFS_PROJECT_SUBCONTRACTORS_BUDGET {
            get {
                return this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_UNITS_BUDGETDataTable LFS_PROJECT_UNITS_BUDGET {
            get {
                return this.tableLFS_PROJECT_UNITS_BUDGET;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_COSTING_UPDATESDataTable LFS_PROJECT_COSTING_UPDATES {
            get {
                return this.tableLFS_PROJECT_COSTING_UPDATES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_SALE_BILLING_PRICINGDataTable LFS_PROJECT_SALE_BILLING_PRICING {
            get {
                return this.tableLFS_PROJECT_SALE_BILLING_PRICING;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_SERVICEDataTable LFS_PROJECT_SERVICE {
            get {
                return this.tableLFS_PROJECT_SERVICE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_TECHNICALDataTable LFS_PROJECT_TECHNICAL {
            get {
                return this.tableLFS_PROJECT_TECHNICAL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_NUMBERDataTable LFS_PROJECT_NUMBER {
            get {
                return this.tableLFS_PROJECT_NUMBER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_HISTORYDataTable LFS_PROJECT_HISTORY {
            get {
                return this.tableLFS_PROJECT_HISTORY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_NOTEDataTable LFS_PROJECT_NOTE {
            get {
                return this.tableLFS_PROJECT_NOTE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_ENGINEER_SUBCONTRACTORSDataTable LFS_PROJECT_ENGINEER_SUBCONTRACTORS {
            get {
                return this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_LASTLOGINDataTable LFS_PROJECT_LASTLOGIN {
            get {
                return this.tableLFS_PROJECT_LASTLOGIN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_WORK_FUNCTION_FAIR_WAGEDataTable LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE {
            get {
                return this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECTDataTable LFS_PROJECT {
            get {
                return this.tableLFS_PROJECT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_JOB_CLASS_TYPE_RATEDataTable LFS_PROJECT_JOB_CLASS_TYPE_RATE {
            get {
                return this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_SUBCONTRACTORDataTable LFS_PROJECT_SUBCONTRACTOR {
            get {
                return this.tableLFS_PROJECT_SUBCONTRACTOR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_REVENUEDataTable LFS_PROJECT_REVENUE {
            get {
                return this.tableLFS_PROJECT_REVENUE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_WORK_FUNCTION_BUDGETDataTable LFS_PROJECT_WORK_FUNCTION_BUDGET {
            get {
                return this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_TERMSDataTable LFS_PROJECT_TERMS {
            get {
                return this.tableLFS_PROJECT_TERMS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_JOB_INFODataTable LFS_PROJECT_JOB_INFO {
            get {
                return this.tableLFS_PROJECT_JOB_INFO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ProjectTDS cln = ((ProjectTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LFS_PROJECT_BONDINGS_BUDGET"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_BONDINGS_BUDGETDataTable(ds.Tables["LFS_PROJECT_BONDINGS_BUDGET"]));
                }
                if ((ds.Tables["LFS_PROJECT_HOTELS_BUDGET"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_HOTELS_BUDGETDataTable(ds.Tables["LFS_PROJECT_HOTELS_BUDGET"]));
                }
                if ((ds.Tables["LFS_PROJECT_INSURANCES_BUDGET"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_INSURANCES_BUDGETDataTable(ds.Tables["LFS_PROJECT_INSURANCES_BUDGET"]));
                }
                if ((ds.Tables["LFS_PROJECT_OTHER_COSTS_BUDGET"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_OTHER_COSTS_BUDGETDataTable(ds.Tables["LFS_PROJECT_OTHER_COSTS_BUDGET"]));
                }
                if ((ds.Tables["LFS_PROJECT_MATERIALS_BUDGET"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_MATERIALS_BUDGETDataTable(ds.Tables["LFS_PROJECT_MATERIALS_BUDGET"]));
                }
                if ((ds.Tables["LFS_PROJECT_SUBCONTRACTORS_BUDGET"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable(ds.Tables["LFS_PROJECT_SUBCONTRACTORS_BUDGET"]));
                }
                if ((ds.Tables["LFS_PROJECT_UNITS_BUDGET"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_UNITS_BUDGETDataTable(ds.Tables["LFS_PROJECT_UNITS_BUDGET"]));
                }
                if ((ds.Tables["LFS_PROJECT_COSTING_UPDATES"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_COSTING_UPDATESDataTable(ds.Tables["LFS_PROJECT_COSTING_UPDATES"]));
                }
                if ((ds.Tables["LFS_PROJECT_SALE_BILLING_PRICING"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_SALE_BILLING_PRICINGDataTable(ds.Tables["LFS_PROJECT_SALE_BILLING_PRICING"]));
                }
                if ((ds.Tables["LFS_PROJECT_SERVICE"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_SERVICEDataTable(ds.Tables["LFS_PROJECT_SERVICE"]));
                }
                if ((ds.Tables["LFS_PROJECT_TECHNICAL"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_TECHNICALDataTable(ds.Tables["LFS_PROJECT_TECHNICAL"]));
                }
                if ((ds.Tables["LFS_PROJECT_NUMBER"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_NUMBERDataTable(ds.Tables["LFS_PROJECT_NUMBER"]));
                }
                if ((ds.Tables["LFS_PROJECT_HISTORY"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_HISTORYDataTable(ds.Tables["LFS_PROJECT_HISTORY"]));
                }
                if ((ds.Tables["LFS_PROJECT_NOTE"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_NOTEDataTable(ds.Tables["LFS_PROJECT_NOTE"]));
                }
                if ((ds.Tables["LFS_PROJECT_ENGINEER_SUBCONTRACTORS"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_ENGINEER_SUBCONTRACTORSDataTable(ds.Tables["LFS_PROJECT_ENGINEER_SUBCONTRACTORS"]));
                }
                if ((ds.Tables["LFS_PROJECT_LASTLOGIN"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_LASTLOGINDataTable(ds.Tables["LFS_PROJECT_LASTLOGIN"]));
                }
                if ((ds.Tables["LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_WORK_FUNCTION_FAIR_WAGEDataTable(ds.Tables["LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE"]));
                }
                if ((ds.Tables["LFS_PROJECT"] != null)) {
                    base.Tables.Add(new LFS_PROJECTDataTable(ds.Tables["LFS_PROJECT"]));
                }
                if ((ds.Tables["LFS_PROJECT_JOB_CLASS_TYPE_RATE"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_JOB_CLASS_TYPE_RATEDataTable(ds.Tables["LFS_PROJECT_JOB_CLASS_TYPE_RATE"]));
                }
                if ((ds.Tables["LFS_PROJECT_SUBCONTRACTOR"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_SUBCONTRACTORDataTable(ds.Tables["LFS_PROJECT_SUBCONTRACTOR"]));
                }
                if ((ds.Tables["LFS_PROJECT_REVENUE"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_REVENUEDataTable(ds.Tables["LFS_PROJECT_REVENUE"]));
                }
                if ((ds.Tables["LFS_PROJECT_WORK_FUNCTION_BUDGET"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_WORK_FUNCTION_BUDGETDataTable(ds.Tables["LFS_PROJECT_WORK_FUNCTION_BUDGET"]));
                }
                if ((ds.Tables["LFS_PROJECT_TERMS"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_TERMSDataTable(ds.Tables["LFS_PROJECT_TERMS"]));
                }
                if ((ds.Tables["LFS_PROJECT_JOB_INFO"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_JOB_INFODataTable(ds.Tables["LFS_PROJECT_JOB_INFO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableLFS_PROJECT_BONDINGS_BUDGET = ((LFS_PROJECT_BONDINGS_BUDGETDataTable)(base.Tables["LFS_PROJECT_BONDINGS_BUDGET"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_BONDINGS_BUDGET != null)) {
                    this.tableLFS_PROJECT_BONDINGS_BUDGET.InitVars();
                }
            }
            this.tableLFS_PROJECT_HOTELS_BUDGET = ((LFS_PROJECT_HOTELS_BUDGETDataTable)(base.Tables["LFS_PROJECT_HOTELS_BUDGET"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_HOTELS_BUDGET != null)) {
                    this.tableLFS_PROJECT_HOTELS_BUDGET.InitVars();
                }
            }
            this.tableLFS_PROJECT_INSURANCES_BUDGET = ((LFS_PROJECT_INSURANCES_BUDGETDataTable)(base.Tables["LFS_PROJECT_INSURANCES_BUDGET"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_INSURANCES_BUDGET != null)) {
                    this.tableLFS_PROJECT_INSURANCES_BUDGET.InitVars();
                }
            }
            this.tableLFS_PROJECT_OTHER_COSTS_BUDGET = ((LFS_PROJECT_OTHER_COSTS_BUDGETDataTable)(base.Tables["LFS_PROJECT_OTHER_COSTS_BUDGET"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_OTHER_COSTS_BUDGET != null)) {
                    this.tableLFS_PROJECT_OTHER_COSTS_BUDGET.InitVars();
                }
            }
            this.tableLFS_PROJECT_MATERIALS_BUDGET = ((LFS_PROJECT_MATERIALS_BUDGETDataTable)(base.Tables["LFS_PROJECT_MATERIALS_BUDGET"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_MATERIALS_BUDGET != null)) {
                    this.tableLFS_PROJECT_MATERIALS_BUDGET.InitVars();
                }
            }
            this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET = ((LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable)(base.Tables["LFS_PROJECT_SUBCONTRACTORS_BUDGET"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET != null)) {
                    this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET.InitVars();
                }
            }
            this.tableLFS_PROJECT_UNITS_BUDGET = ((LFS_PROJECT_UNITS_BUDGETDataTable)(base.Tables["LFS_PROJECT_UNITS_BUDGET"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_UNITS_BUDGET != null)) {
                    this.tableLFS_PROJECT_UNITS_BUDGET.InitVars();
                }
            }
            this.tableLFS_PROJECT_COSTING_UPDATES = ((LFS_PROJECT_COSTING_UPDATESDataTable)(base.Tables["LFS_PROJECT_COSTING_UPDATES"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_COSTING_UPDATES != null)) {
                    this.tableLFS_PROJECT_COSTING_UPDATES.InitVars();
                }
            }
            this.tableLFS_PROJECT_SALE_BILLING_PRICING = ((LFS_PROJECT_SALE_BILLING_PRICINGDataTable)(base.Tables["LFS_PROJECT_SALE_BILLING_PRICING"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_SALE_BILLING_PRICING != null)) {
                    this.tableLFS_PROJECT_SALE_BILLING_PRICING.InitVars();
                }
            }
            this.tableLFS_PROJECT_SERVICE = ((LFS_PROJECT_SERVICEDataTable)(base.Tables["LFS_PROJECT_SERVICE"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_SERVICE != null)) {
                    this.tableLFS_PROJECT_SERVICE.InitVars();
                }
            }
            this.tableLFS_PROJECT_TECHNICAL = ((LFS_PROJECT_TECHNICALDataTable)(base.Tables["LFS_PROJECT_TECHNICAL"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_TECHNICAL != null)) {
                    this.tableLFS_PROJECT_TECHNICAL.InitVars();
                }
            }
            this.tableLFS_PROJECT_NUMBER = ((LFS_PROJECT_NUMBERDataTable)(base.Tables["LFS_PROJECT_NUMBER"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_NUMBER != null)) {
                    this.tableLFS_PROJECT_NUMBER.InitVars();
                }
            }
            this.tableLFS_PROJECT_HISTORY = ((LFS_PROJECT_HISTORYDataTable)(base.Tables["LFS_PROJECT_HISTORY"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_HISTORY != null)) {
                    this.tableLFS_PROJECT_HISTORY.InitVars();
                }
            }
            this.tableLFS_PROJECT_NOTE = ((LFS_PROJECT_NOTEDataTable)(base.Tables["LFS_PROJECT_NOTE"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_NOTE != null)) {
                    this.tableLFS_PROJECT_NOTE.InitVars();
                }
            }
            this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS = ((LFS_PROJECT_ENGINEER_SUBCONTRACTORSDataTable)(base.Tables["LFS_PROJECT_ENGINEER_SUBCONTRACTORS"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS != null)) {
                    this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.InitVars();
                }
            }
            this.tableLFS_PROJECT_LASTLOGIN = ((LFS_PROJECT_LASTLOGINDataTable)(base.Tables["LFS_PROJECT_LASTLOGIN"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_LASTLOGIN != null)) {
                    this.tableLFS_PROJECT_LASTLOGIN.InitVars();
                }
            }
            this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE = ((LFS_PROJECT_WORK_FUNCTION_FAIR_WAGEDataTable)(base.Tables["LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE != null)) {
                    this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE.InitVars();
                }
            }
            this.tableLFS_PROJECT = ((LFS_PROJECTDataTable)(base.Tables["LFS_PROJECT"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT != null)) {
                    this.tableLFS_PROJECT.InitVars();
                }
            }
            this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE = ((LFS_PROJECT_JOB_CLASS_TYPE_RATEDataTable)(base.Tables["LFS_PROJECT_JOB_CLASS_TYPE_RATE"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE != null)) {
                    this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE.InitVars();
                }
            }
            this.tableLFS_PROJECT_SUBCONTRACTOR = ((LFS_PROJECT_SUBCONTRACTORDataTable)(base.Tables["LFS_PROJECT_SUBCONTRACTOR"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_SUBCONTRACTOR != null)) {
                    this.tableLFS_PROJECT_SUBCONTRACTOR.InitVars();
                }
            }
            this.tableLFS_PROJECT_REVENUE = ((LFS_PROJECT_REVENUEDataTable)(base.Tables["LFS_PROJECT_REVENUE"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_REVENUE != null)) {
                    this.tableLFS_PROJECT_REVENUE.InitVars();
                }
            }
            this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET = ((LFS_PROJECT_WORK_FUNCTION_BUDGETDataTable)(base.Tables["LFS_PROJECT_WORK_FUNCTION_BUDGET"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET != null)) {
                    this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET.InitVars();
                }
            }
            this.tableLFS_PROJECT_TERMS = ((LFS_PROJECT_TERMSDataTable)(base.Tables["LFS_PROJECT_TERMS"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_TERMS != null)) {
                    this.tableLFS_PROJECT_TERMS.InitVars();
                }
            }
            this.tableLFS_PROJECT_JOB_INFO = ((LFS_PROJECT_JOB_INFODataTable)(base.Tables["LFS_PROJECT_JOB_INFO"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_JOB_INFO != null)) {
                    this.tableLFS_PROJECT_JOB_INFO.InitVars();
                }
            }
            this.relationLFS_PROJECT_LFS_PROJECT_SALE_BILLING_PRICING = this.Relations["LFS_PROJECT_LFS_PROJECT_SALE_BILLING_PRICING"];
            this.relationLFS_PROJECT_LFS_PROJECT_SERVICE = this.Relations["LFS_PROJECT_LFS_PROJECT_SERVICE"];
            this.relationLFS_PROJECT_LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE = this.Relations["LFS_PROJECT_LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE"];
            this.relationLFS_PROJECT_LFS_PROJECT_TECHNICAL = this.Relations["LFS_PROJECT_LFS_PROJECT_TECHNICAL"];
            this.relationLFS_PROJECT_LFS_PROJECT_NOTE = this.Relations["LFS_PROJECT_LFS_PROJECT_NOTE"];
            this.relationLFS_PROJECT_LFS_PROJECT_HISTORY = this.Relations["LFS_PROJECT_LFS_PROJECT_HISTORY"];
            this.relationLFS_PROJECT_LFS_PROJECT_ENGINEER_SUBCONTRACTORS = this.Relations["LFS_PROJECT_LFS_PROJECT_ENGINEER_SUBCONTRACTORS"];
            this.relationLFS_PROJECT_LFS_PROJECT_COSTING_UPDATES = this.Relations["LFS_PROJECT_LFS_PROJECT_COSTING_UPDATES"];
            this.relationLFS_PROJECT_LFS_PROJECT_LASTLOGIN = this.Relations["LFS_PROJECT_LFS_PROJECT_LASTLOGIN"];
            this.relationLFS_PROJECT_LFS_PROJECT_JOB_CLASS_TYPE_RATE = this.Relations["LFS_PROJECT_LFS_PROJECT_JOB_CLASS_TYPE_RATE"];
            this.relationLFS_PROJECT_LFS_PROJECT_REVENUE = this.Relations["LFS_PROJECT_LFS_PROJECT_REVENUE"];
            this.relationLFS_PROJECT_LFS_PROJECT_TERMS = this.Relations["LFS_PROJECT_LFS_PROJECT_TERMS"];
            this.relationLFS_PROJECT_LFS_PROJECT_JOB_INFO = this.Relations["LFS_PROJECT_LFS_PROJECT_JOB_INFO"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ProjectTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ProjectTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLFS_PROJECT_BONDINGS_BUDGET = new LFS_PROJECT_BONDINGS_BUDGETDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_BONDINGS_BUDGET);
            this.tableLFS_PROJECT_HOTELS_BUDGET = new LFS_PROJECT_HOTELS_BUDGETDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_HOTELS_BUDGET);
            this.tableLFS_PROJECT_INSURANCES_BUDGET = new LFS_PROJECT_INSURANCES_BUDGETDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_INSURANCES_BUDGET);
            this.tableLFS_PROJECT_OTHER_COSTS_BUDGET = new LFS_PROJECT_OTHER_COSTS_BUDGETDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_OTHER_COSTS_BUDGET);
            this.tableLFS_PROJECT_MATERIALS_BUDGET = new LFS_PROJECT_MATERIALS_BUDGETDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_MATERIALS_BUDGET);
            this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET = new LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET);
            this.tableLFS_PROJECT_UNITS_BUDGET = new LFS_PROJECT_UNITS_BUDGETDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_UNITS_BUDGET);
            this.tableLFS_PROJECT_COSTING_UPDATES = new LFS_PROJECT_COSTING_UPDATESDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_COSTING_UPDATES);
            this.tableLFS_PROJECT_SALE_BILLING_PRICING = new LFS_PROJECT_SALE_BILLING_PRICINGDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_SALE_BILLING_PRICING);
            this.tableLFS_PROJECT_SERVICE = new LFS_PROJECT_SERVICEDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_SERVICE);
            this.tableLFS_PROJECT_TECHNICAL = new LFS_PROJECT_TECHNICALDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_TECHNICAL);
            this.tableLFS_PROJECT_NUMBER = new LFS_PROJECT_NUMBERDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_NUMBER);
            this.tableLFS_PROJECT_HISTORY = new LFS_PROJECT_HISTORYDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_HISTORY);
            this.tableLFS_PROJECT_NOTE = new LFS_PROJECT_NOTEDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_NOTE);
            this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS = new LFS_PROJECT_ENGINEER_SUBCONTRACTORSDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS);
            this.tableLFS_PROJECT_LASTLOGIN = new LFS_PROJECT_LASTLOGINDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_LASTLOGIN);
            this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE = new LFS_PROJECT_WORK_FUNCTION_FAIR_WAGEDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE);
            this.tableLFS_PROJECT = new LFS_PROJECTDataTable();
            base.Tables.Add(this.tableLFS_PROJECT);
            this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE = new LFS_PROJECT_JOB_CLASS_TYPE_RATEDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE);
            this.tableLFS_PROJECT_SUBCONTRACTOR = new LFS_PROJECT_SUBCONTRACTORDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_SUBCONTRACTOR);
            this.tableLFS_PROJECT_REVENUE = new LFS_PROJECT_REVENUEDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_REVENUE);
            this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET = new LFS_PROJECT_WORK_FUNCTION_BUDGETDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET);
            this.tableLFS_PROJECT_TERMS = new LFS_PROJECT_TERMSDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_TERMS);
            this.tableLFS_PROJECT_JOB_INFO = new LFS_PROJECT_JOB_INFODataTable();
            base.Tables.Add(this.tableLFS_PROJECT_JOB_INFO);
            this.relationLFS_PROJECT_LFS_PROJECT_SALE_BILLING_PRICING = new global::System.Data.DataRelation("LFS_PROJECT_LFS_PROJECT_SALE_BILLING_PRICING", new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT_SALE_BILLING_PRICING.ProjectIDColumn}, false);
            this.Relations.Add(this.relationLFS_PROJECT_LFS_PROJECT_SALE_BILLING_PRICING);
            this.relationLFS_PROJECT_LFS_PROJECT_SERVICE = new global::System.Data.DataRelation("LFS_PROJECT_LFS_PROJECT_SERVICE", new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT_SERVICE.ProjectIDColumn}, false);
            this.Relations.Add(this.relationLFS_PROJECT_LFS_PROJECT_SERVICE);
            this.relationLFS_PROJECT_LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE = new global::System.Data.DataRelation("LFS_PROJECT_LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE", new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE.ProjectIDColumn}, false);
            this.Relations.Add(this.relationLFS_PROJECT_LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE);
            this.relationLFS_PROJECT_LFS_PROJECT_TECHNICAL = new global::System.Data.DataRelation("LFS_PROJECT_LFS_PROJECT_TECHNICAL", new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT_TECHNICAL.ProjectIDColumn}, false);
            this.Relations.Add(this.relationLFS_PROJECT_LFS_PROJECT_TECHNICAL);
            this.relationLFS_PROJECT_LFS_PROJECT_NOTE = new global::System.Data.DataRelation("LFS_PROJECT_LFS_PROJECT_NOTE", new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT_NOTE.ProjectIDColumn}, false);
            this.Relations.Add(this.relationLFS_PROJECT_LFS_PROJECT_NOTE);
            this.relationLFS_PROJECT_LFS_PROJECT_HISTORY = new global::System.Data.DataRelation("LFS_PROJECT_LFS_PROJECT_HISTORY", new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT_HISTORY.ProjectIDColumn}, false);
            this.Relations.Add(this.relationLFS_PROJECT_LFS_PROJECT_HISTORY);
            this.relationLFS_PROJECT_LFS_PROJECT_ENGINEER_SUBCONTRACTORS = new global::System.Data.DataRelation("LFS_PROJECT_LFS_PROJECT_ENGINEER_SUBCONTRACTORS", new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.ProjectIDColumn}, false);
            this.Relations.Add(this.relationLFS_PROJECT_LFS_PROJECT_ENGINEER_SUBCONTRACTORS);
            this.relationLFS_PROJECT_LFS_PROJECT_COSTING_UPDATES = new global::System.Data.DataRelation("LFS_PROJECT_LFS_PROJECT_COSTING_UPDATES", new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT_COSTING_UPDATES.ProjectIDColumn}, false);
            this.Relations.Add(this.relationLFS_PROJECT_LFS_PROJECT_COSTING_UPDATES);
            this.relationLFS_PROJECT_LFS_PROJECT_LASTLOGIN = new global::System.Data.DataRelation("LFS_PROJECT_LFS_PROJECT_LASTLOGIN", new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT_LASTLOGIN.ProjectIDColumn}, false);
            this.Relations.Add(this.relationLFS_PROJECT_LFS_PROJECT_LASTLOGIN);
            this.relationLFS_PROJECT_LFS_PROJECT_JOB_CLASS_TYPE_RATE = new global::System.Data.DataRelation("LFS_PROJECT_LFS_PROJECT_JOB_CLASS_TYPE_RATE", new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE.ProjectIDColumn}, false);
            this.Relations.Add(this.relationLFS_PROJECT_LFS_PROJECT_JOB_CLASS_TYPE_RATE);
            this.relationLFS_PROJECT_LFS_PROJECT_REVENUE = new global::System.Data.DataRelation("LFS_PROJECT_LFS_PROJECT_REVENUE", new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT_REVENUE.ProjectIDColumn}, false);
            this.Relations.Add(this.relationLFS_PROJECT_LFS_PROJECT_REVENUE);
            this.relationLFS_PROJECT_LFS_PROJECT_TERMS = new global::System.Data.DataRelation("LFS_PROJECT_LFS_PROJECT_TERMS", new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT_TERMS.ProjectIDColumn}, false);
            this.Relations.Add(this.relationLFS_PROJECT_LFS_PROJECT_TERMS);
            this.relationLFS_PROJECT_LFS_PROJECT_JOB_INFO = new global::System.Data.DataRelation("LFS_PROJECT_LFS_PROJECT_JOB_INFO", new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT.ProjectIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_PROJECT_JOB_INFO.ProjectIDColumn}, false);
            this.Relations.Add(this.relationLFS_PROJECT_LFS_PROJECT_JOB_INFO);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_BONDINGS_BUDGET() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_HOTELS_BUDGET() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_INSURANCES_BUDGET() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_OTHER_COSTS_BUDGET() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_MATERIALS_BUDGET() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_SUBCONTRACTORS_BUDGET() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_UNITS_BUDGET() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_COSTING_UPDATES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_SALE_BILLING_PRICING() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_SERVICE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_TECHNICAL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_NUMBER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_HISTORY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_NOTE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_ENGINEER_SUBCONTRACTORS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_LASTLOGIN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_JOB_CLASS_TYPE_RATE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_SUBCONTRACTOR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_REVENUE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_WORK_FUNCTION_BUDGET() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_TERMS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_JOB_INFO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ProjectTDS ds = new ProjectTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void LFS_PROJECT_BONDINGS_BUDGETRowChangeEventHandler(object sender, LFS_PROJECT_BONDINGS_BUDGETRowChangeEvent e);
        
        public delegate void LFS_PROJECT_HOTELS_BUDGETRowChangeEventHandler(object sender, LFS_PROJECT_HOTELS_BUDGETRowChangeEvent e);
        
        public delegate void LFS_PROJECT_INSURANCES_BUDGETRowChangeEventHandler(object sender, LFS_PROJECT_INSURANCES_BUDGETRowChangeEvent e);
        
        public delegate void LFS_PROJECT_OTHER_COSTS_BUDGETRowChangeEventHandler(object sender, LFS_PROJECT_OTHER_COSTS_BUDGETRowChangeEvent e);
        
        public delegate void LFS_PROJECT_MATERIALS_BUDGETRowChangeEventHandler(object sender, LFS_PROJECT_MATERIALS_BUDGETRowChangeEvent e);
        
        public delegate void LFS_PROJECT_SUBCONTRACTORS_BUDGETRowChangeEventHandler(object sender, LFS_PROJECT_SUBCONTRACTORS_BUDGETRowChangeEvent e);
        
        public delegate void LFS_PROJECT_UNITS_BUDGETRowChangeEventHandler(object sender, LFS_PROJECT_UNITS_BUDGETRowChangeEvent e);
        
        public delegate void LFS_PROJECT_COSTING_UPDATESRowChangeEventHandler(object sender, LFS_PROJECT_COSTING_UPDATESRowChangeEvent e);
        
        public delegate void LFS_PROJECT_SALE_BILLING_PRICINGRowChangeEventHandler(object sender, LFS_PROJECT_SALE_BILLING_PRICINGRowChangeEvent e);
        
        public delegate void LFS_PROJECT_SERVICERowChangeEventHandler(object sender, LFS_PROJECT_SERVICERowChangeEvent e);
        
        public delegate void LFS_PROJECT_TECHNICALRowChangeEventHandler(object sender, LFS_PROJECT_TECHNICALRowChangeEvent e);
        
        public delegate void LFS_PROJECT_NUMBERRowChangeEventHandler(object sender, LFS_PROJECT_NUMBERRowChangeEvent e);
        
        public delegate void LFS_PROJECT_HISTORYRowChangeEventHandler(object sender, LFS_PROJECT_HISTORYRowChangeEvent e);
        
        public delegate void LFS_PROJECT_NOTERowChangeEventHandler(object sender, LFS_PROJECT_NOTERowChangeEvent e);
        
        public delegate void LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowChangeEventHandler(object sender, LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowChangeEvent e);
        
        public delegate void LFS_PROJECT_LASTLOGINRowChangeEventHandler(object sender, LFS_PROJECT_LASTLOGINRowChangeEvent e);
        
        public delegate void LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowChangeEventHandler(object sender, LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowChangeEvent e);
        
        public delegate void LFS_PROJECTRowChangeEventHandler(object sender, LFS_PROJECTRowChangeEvent e);
        
        public delegate void LFS_PROJECT_JOB_CLASS_TYPE_RATERowChangeEventHandler(object sender, LFS_PROJECT_JOB_CLASS_TYPE_RATERowChangeEvent e);
        
        public delegate void LFS_PROJECT_SUBCONTRACTORRowChangeEventHandler(object sender, LFS_PROJECT_SUBCONTRACTORRowChangeEvent e);
        
        public delegate void LFS_PROJECT_REVENUERowChangeEventHandler(object sender, LFS_PROJECT_REVENUERowChangeEvent e);
        
        public delegate void LFS_PROJECT_WORK_FUNCTION_BUDGETRowChangeEventHandler(object sender, LFS_PROJECT_WORK_FUNCTION_BUDGETRowChangeEvent e);
        
        public delegate void LFS_PROJECT_TERMSRowChangeEventHandler(object sender, LFS_PROJECT_TERMSRowChangeEvent e);
        
        public delegate void LFS_PROJECT_JOB_INFORowChangeEventHandler(object sender, LFS_PROJECT_JOB_INFORowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_BONDINGS_BUDGETDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnBondingCompanyID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnBudget;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_BONDINGS_BUDGETDataTable() {
                this.TableName = "LFS_PROJECT_BONDINGS_BUDGET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_BONDINGS_BUDGETDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_BONDINGS_BUDGETDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BondingCompanyIDColumn {
                get {
                    return this.columnBondingCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BudgetColumn {
                get {
                    return this.columnBudget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_BONDINGS_BUDGETRow this[int index] {
                get {
                    return ((LFS_PROJECT_BONDINGS_BUDGETRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_BONDINGS_BUDGETRowChangeEventHandler LFS_PROJECT_BONDINGS_BUDGETRowChanging;
            
            public event LFS_PROJECT_BONDINGS_BUDGETRowChangeEventHandler LFS_PROJECT_BONDINGS_BUDGETRowChanged;
            
            public event LFS_PROJECT_BONDINGS_BUDGETRowChangeEventHandler LFS_PROJECT_BONDINGS_BUDGETRowDeleting;
            
            public event LFS_PROJECT_BONDINGS_BUDGETRowChangeEventHandler LFS_PROJECT_BONDINGS_BUDGETRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_BONDINGS_BUDGETRow(LFS_PROJECT_BONDINGS_BUDGETRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_BONDINGS_BUDGETRow AddLFS_PROJECT_BONDINGS_BUDGETRow(int ProjectID, int BondingCompanyID, int RefID, decimal Budget, bool Deleted, int COMPANY_ID) {
                LFS_PROJECT_BONDINGS_BUDGETRow rowLFS_PROJECT_BONDINGS_BUDGETRow = ((LFS_PROJECT_BONDINGS_BUDGETRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProjectID,
                        BondingCompanyID,
                        RefID,
                        Budget,
                        Deleted,
                        COMPANY_ID};
                rowLFS_PROJECT_BONDINGS_BUDGETRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_BONDINGS_BUDGETRow);
                return rowLFS_PROJECT_BONDINGS_BUDGETRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_BONDINGS_BUDGETRow FindByProjectIDBondingCompanyIDRefID(int ProjectID, int BondingCompanyID, int RefID) {
                return ((LFS_PROJECT_BONDINGS_BUDGETRow)(this.Rows.Find(new object[] {
                            ProjectID,
                            BondingCompanyID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_BONDINGS_BUDGETDataTable cln = ((LFS_PROJECT_BONDINGS_BUDGETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_BONDINGS_BUDGETDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnBondingCompanyID = base.Columns["BondingCompanyID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnBudget = base.Columns["Budget"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnBondingCompanyID = new global::System.Data.DataColumn("BondingCompanyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBondingCompanyID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnBudget = new global::System.Data.DataColumn("Budget", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudget);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID,
                                this.columnBondingCompanyID,
                                this.columnRefID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnBondingCompanyID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnBudget.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_BONDINGS_BUDGETRow NewLFS_PROJECT_BONDINGS_BUDGETRow() {
                return ((LFS_PROJECT_BONDINGS_BUDGETRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_BONDINGS_BUDGETRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_BONDINGS_BUDGETRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_BONDINGS_BUDGETRowChanged != null)) {
                    this.LFS_PROJECT_BONDINGS_BUDGETRowChanged(this, new LFS_PROJECT_BONDINGS_BUDGETRowChangeEvent(((LFS_PROJECT_BONDINGS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_BONDINGS_BUDGETRowChanging != null)) {
                    this.LFS_PROJECT_BONDINGS_BUDGETRowChanging(this, new LFS_PROJECT_BONDINGS_BUDGETRowChangeEvent(((LFS_PROJECT_BONDINGS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_BONDINGS_BUDGETRowDeleted != null)) {
                    this.LFS_PROJECT_BONDINGS_BUDGETRowDeleted(this, new LFS_PROJECT_BONDINGS_BUDGETRowChangeEvent(((LFS_PROJECT_BONDINGS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_BONDINGS_BUDGETRowDeleting != null)) {
                    this.LFS_PROJECT_BONDINGS_BUDGETRowDeleting(this, new LFS_PROJECT_BONDINGS_BUDGETRowChangeEvent(((LFS_PROJECT_BONDINGS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_BONDINGS_BUDGETRow(LFS_PROJECT_BONDINGS_BUDGETRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_BONDINGS_BUDGETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_HOTELS_BUDGETDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnHolelID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnBudget;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_HOTELS_BUDGETDataTable() {
                this.TableName = "LFS_PROJECT_HOTELS_BUDGET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_HOTELS_BUDGETDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_HOTELS_BUDGETDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HolelIDColumn {
                get {
                    return this.columnHolelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BudgetColumn {
                get {
                    return this.columnBudget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_HOTELS_BUDGETRow this[int index] {
                get {
                    return ((LFS_PROJECT_HOTELS_BUDGETRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_HOTELS_BUDGETRowChangeEventHandler LFS_PROJECT_HOTELS_BUDGETRowChanging;
            
            public event LFS_PROJECT_HOTELS_BUDGETRowChangeEventHandler LFS_PROJECT_HOTELS_BUDGETRowChanged;
            
            public event LFS_PROJECT_HOTELS_BUDGETRowChangeEventHandler LFS_PROJECT_HOTELS_BUDGETRowDeleting;
            
            public event LFS_PROJECT_HOTELS_BUDGETRowChangeEventHandler LFS_PROJECT_HOTELS_BUDGETRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_HOTELS_BUDGETRow(LFS_PROJECT_HOTELS_BUDGETRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_HOTELS_BUDGETRow AddLFS_PROJECT_HOTELS_BUDGETRow(int ProjectID, int HolelID, int RefID, decimal Budget, bool Deleted, int COMPANY_ID) {
                LFS_PROJECT_HOTELS_BUDGETRow rowLFS_PROJECT_HOTELS_BUDGETRow = ((LFS_PROJECT_HOTELS_BUDGETRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProjectID,
                        HolelID,
                        RefID,
                        Budget,
                        Deleted,
                        COMPANY_ID};
                rowLFS_PROJECT_HOTELS_BUDGETRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_HOTELS_BUDGETRow);
                return rowLFS_PROJECT_HOTELS_BUDGETRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_HOTELS_BUDGETRow FindByProjectIDHolelIDRefID(int ProjectID, int HolelID, int RefID) {
                return ((LFS_PROJECT_HOTELS_BUDGETRow)(this.Rows.Find(new object[] {
                            ProjectID,
                            HolelID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_HOTELS_BUDGETDataTable cln = ((LFS_PROJECT_HOTELS_BUDGETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_HOTELS_BUDGETDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnHolelID = base.Columns["HolelID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnBudget = base.Columns["Budget"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnHolelID = new global::System.Data.DataColumn("HolelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHolelID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnBudget = new global::System.Data.DataColumn("Budget", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudget);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID,
                                this.columnHolelID,
                                this.columnRefID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnHolelID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnBudget.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_HOTELS_BUDGETRow NewLFS_PROJECT_HOTELS_BUDGETRow() {
                return ((LFS_PROJECT_HOTELS_BUDGETRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_HOTELS_BUDGETRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_HOTELS_BUDGETRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_HOTELS_BUDGETRowChanged != null)) {
                    this.LFS_PROJECT_HOTELS_BUDGETRowChanged(this, new LFS_PROJECT_HOTELS_BUDGETRowChangeEvent(((LFS_PROJECT_HOTELS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_HOTELS_BUDGETRowChanging != null)) {
                    this.LFS_PROJECT_HOTELS_BUDGETRowChanging(this, new LFS_PROJECT_HOTELS_BUDGETRowChangeEvent(((LFS_PROJECT_HOTELS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_HOTELS_BUDGETRowDeleted != null)) {
                    this.LFS_PROJECT_HOTELS_BUDGETRowDeleted(this, new LFS_PROJECT_HOTELS_BUDGETRowChangeEvent(((LFS_PROJECT_HOTELS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_HOTELS_BUDGETRowDeleting != null)) {
                    this.LFS_PROJECT_HOTELS_BUDGETRowDeleting(this, new LFS_PROJECT_HOTELS_BUDGETRowChangeEvent(((LFS_PROJECT_HOTELS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_HOTELS_BUDGETRow(LFS_PROJECT_HOTELS_BUDGETRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_HOTELS_BUDGETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_INSURANCES_BUDGETDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnInsuranceCompanyID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnBudget;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_INSURANCES_BUDGETDataTable() {
                this.TableName = "LFS_PROJECT_INSURANCES_BUDGET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_INSURANCES_BUDGETDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_INSURANCES_BUDGETDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsuranceCompanyIDColumn {
                get {
                    return this.columnInsuranceCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BudgetColumn {
                get {
                    return this.columnBudget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_INSURANCES_BUDGETRow this[int index] {
                get {
                    return ((LFS_PROJECT_INSURANCES_BUDGETRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_INSURANCES_BUDGETRowChangeEventHandler LFS_PROJECT_INSURANCES_BUDGETRowChanging;
            
            public event LFS_PROJECT_INSURANCES_BUDGETRowChangeEventHandler LFS_PROJECT_INSURANCES_BUDGETRowChanged;
            
            public event LFS_PROJECT_INSURANCES_BUDGETRowChangeEventHandler LFS_PROJECT_INSURANCES_BUDGETRowDeleting;
            
            public event LFS_PROJECT_INSURANCES_BUDGETRowChangeEventHandler LFS_PROJECT_INSURANCES_BUDGETRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_INSURANCES_BUDGETRow(LFS_PROJECT_INSURANCES_BUDGETRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_INSURANCES_BUDGETRow AddLFS_PROJECT_INSURANCES_BUDGETRow(int ProjectID, int InsuranceCompanyID, int RefID, decimal Budget, bool Deleted, int COMPANY_ID) {
                LFS_PROJECT_INSURANCES_BUDGETRow rowLFS_PROJECT_INSURANCES_BUDGETRow = ((LFS_PROJECT_INSURANCES_BUDGETRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProjectID,
                        InsuranceCompanyID,
                        RefID,
                        Budget,
                        Deleted,
                        COMPANY_ID};
                rowLFS_PROJECT_INSURANCES_BUDGETRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_INSURANCES_BUDGETRow);
                return rowLFS_PROJECT_INSURANCES_BUDGETRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_INSURANCES_BUDGETRow FindByProjectIDInsuranceCompanyIDRefID(int ProjectID, int InsuranceCompanyID, int RefID) {
                return ((LFS_PROJECT_INSURANCES_BUDGETRow)(this.Rows.Find(new object[] {
                            ProjectID,
                            InsuranceCompanyID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_INSURANCES_BUDGETDataTable cln = ((LFS_PROJECT_INSURANCES_BUDGETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_INSURANCES_BUDGETDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnInsuranceCompanyID = base.Columns["InsuranceCompanyID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnBudget = base.Columns["Budget"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnInsuranceCompanyID = new global::System.Data.DataColumn("InsuranceCompanyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsuranceCompanyID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnBudget = new global::System.Data.DataColumn("Budget", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudget);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID,
                                this.columnInsuranceCompanyID,
                                this.columnRefID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnInsuranceCompanyID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnBudget.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_INSURANCES_BUDGETRow NewLFS_PROJECT_INSURANCES_BUDGETRow() {
                return ((LFS_PROJECT_INSURANCES_BUDGETRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_INSURANCES_BUDGETRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_INSURANCES_BUDGETRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_INSURANCES_BUDGETRowChanged != null)) {
                    this.LFS_PROJECT_INSURANCES_BUDGETRowChanged(this, new LFS_PROJECT_INSURANCES_BUDGETRowChangeEvent(((LFS_PROJECT_INSURANCES_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_INSURANCES_BUDGETRowChanging != null)) {
                    this.LFS_PROJECT_INSURANCES_BUDGETRowChanging(this, new LFS_PROJECT_INSURANCES_BUDGETRowChangeEvent(((LFS_PROJECT_INSURANCES_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_INSURANCES_BUDGETRowDeleted != null)) {
                    this.LFS_PROJECT_INSURANCES_BUDGETRowDeleted(this, new LFS_PROJECT_INSURANCES_BUDGETRowChangeEvent(((LFS_PROJECT_INSURANCES_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_INSURANCES_BUDGETRowDeleting != null)) {
                    this.LFS_PROJECT_INSURANCES_BUDGETRowDeleting(this, new LFS_PROJECT_INSURANCES_BUDGETRowChangeEvent(((LFS_PROJECT_INSURANCES_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_INSURANCES_BUDGETRow(LFS_PROJECT_INSURANCES_BUDGETRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_INSURANCES_BUDGETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_OTHER_COSTS_BUDGETDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnBudget;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_OTHER_COSTS_BUDGETDataTable() {
                this.TableName = "LFS_PROJECT_OTHER_COSTS_BUDGET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_OTHER_COSTS_BUDGETDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_OTHER_COSTS_BUDGETDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BudgetColumn {
                get {
                    return this.columnBudget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_OTHER_COSTS_BUDGETRow this[int index] {
                get {
                    return ((LFS_PROJECT_OTHER_COSTS_BUDGETRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_OTHER_COSTS_BUDGETRowChangeEventHandler LFS_PROJECT_OTHER_COSTS_BUDGETRowChanging;
            
            public event LFS_PROJECT_OTHER_COSTS_BUDGETRowChangeEventHandler LFS_PROJECT_OTHER_COSTS_BUDGETRowChanged;
            
            public event LFS_PROJECT_OTHER_COSTS_BUDGETRowChangeEventHandler LFS_PROJECT_OTHER_COSTS_BUDGETRowDeleting;
            
            public event LFS_PROJECT_OTHER_COSTS_BUDGETRowChangeEventHandler LFS_PROJECT_OTHER_COSTS_BUDGETRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_OTHER_COSTS_BUDGETRow(LFS_PROJECT_OTHER_COSTS_BUDGETRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_OTHER_COSTS_BUDGETRow AddLFS_PROJECT_OTHER_COSTS_BUDGETRow(int ProjectID, string Category, int RefID, decimal Budget, bool Deleted, int COMPANY_ID) {
                LFS_PROJECT_OTHER_COSTS_BUDGETRow rowLFS_PROJECT_OTHER_COSTS_BUDGETRow = ((LFS_PROJECT_OTHER_COSTS_BUDGETRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProjectID,
                        Category,
                        RefID,
                        Budget,
                        Deleted,
                        COMPANY_ID};
                rowLFS_PROJECT_OTHER_COSTS_BUDGETRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_OTHER_COSTS_BUDGETRow);
                return rowLFS_PROJECT_OTHER_COSTS_BUDGETRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_OTHER_COSTS_BUDGETRow FindByProjectIDCategoryRefID(int ProjectID, string Category, int RefID) {
                return ((LFS_PROJECT_OTHER_COSTS_BUDGETRow)(this.Rows.Find(new object[] {
                            ProjectID,
                            Category,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_OTHER_COSTS_BUDGETDataTable cln = ((LFS_PROJECT_OTHER_COSTS_BUDGETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_OTHER_COSTS_BUDGETDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnCategory = base.Columns["Category"];
                this.columnRefID = base.Columns["RefID"];
                this.columnBudget = base.Columns["Budget"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnBudget = new global::System.Data.DataColumn("Budget", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudget);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID,
                                this.columnCategory,
                                this.columnRefID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnCategory.AllowDBNull = false;
                this.columnCategory.MaxLength = 50;
                this.columnRefID.AllowDBNull = false;
                this.columnBudget.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_OTHER_COSTS_BUDGETRow NewLFS_PROJECT_OTHER_COSTS_BUDGETRow() {
                return ((LFS_PROJECT_OTHER_COSTS_BUDGETRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_OTHER_COSTS_BUDGETRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_OTHER_COSTS_BUDGETRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_OTHER_COSTS_BUDGETRowChanged != null)) {
                    this.LFS_PROJECT_OTHER_COSTS_BUDGETRowChanged(this, new LFS_PROJECT_OTHER_COSTS_BUDGETRowChangeEvent(((LFS_PROJECT_OTHER_COSTS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_OTHER_COSTS_BUDGETRowChanging != null)) {
                    this.LFS_PROJECT_OTHER_COSTS_BUDGETRowChanging(this, new LFS_PROJECT_OTHER_COSTS_BUDGETRowChangeEvent(((LFS_PROJECT_OTHER_COSTS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_OTHER_COSTS_BUDGETRowDeleted != null)) {
                    this.LFS_PROJECT_OTHER_COSTS_BUDGETRowDeleted(this, new LFS_PROJECT_OTHER_COSTS_BUDGETRowChangeEvent(((LFS_PROJECT_OTHER_COSTS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_OTHER_COSTS_BUDGETRowDeleting != null)) {
                    this.LFS_PROJECT_OTHER_COSTS_BUDGETRowDeleting(this, new LFS_PROJECT_OTHER_COSTS_BUDGETRowChangeEvent(((LFS_PROJECT_OTHER_COSTS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_OTHER_COSTS_BUDGETRow(LFS_PROJECT_OTHER_COSTS_BUDGETRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_OTHER_COSTS_BUDGETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_MATERIALS_BUDGETDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnBudget;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_MATERIALS_BUDGETDataTable() {
                this.TableName = "LFS_PROJECT_MATERIALS_BUDGET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_MATERIALS_BUDGETDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_MATERIALS_BUDGETDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BudgetColumn {
                get {
                    return this.columnBudget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_MATERIALS_BUDGETRow this[int index] {
                get {
                    return ((LFS_PROJECT_MATERIALS_BUDGETRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_MATERIALS_BUDGETRowChangeEventHandler LFS_PROJECT_MATERIALS_BUDGETRowChanging;
            
            public event LFS_PROJECT_MATERIALS_BUDGETRowChangeEventHandler LFS_PROJECT_MATERIALS_BUDGETRowChanged;
            
            public event LFS_PROJECT_MATERIALS_BUDGETRowChangeEventHandler LFS_PROJECT_MATERIALS_BUDGETRowDeleting;
            
            public event LFS_PROJECT_MATERIALS_BUDGETRowChangeEventHandler LFS_PROJECT_MATERIALS_BUDGETRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_MATERIALS_BUDGETRow(LFS_PROJECT_MATERIALS_BUDGETRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_MATERIALS_BUDGETRow AddLFS_PROJECT_MATERIALS_BUDGETRow(int ProjectID, decimal Budget, bool Deleted, int COMPANY_ID) {
                LFS_PROJECT_MATERIALS_BUDGETRow rowLFS_PROJECT_MATERIALS_BUDGETRow = ((LFS_PROJECT_MATERIALS_BUDGETRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProjectID,
                        Budget,
                        Deleted,
                        COMPANY_ID};
                rowLFS_PROJECT_MATERIALS_BUDGETRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_MATERIALS_BUDGETRow);
                return rowLFS_PROJECT_MATERIALS_BUDGETRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_MATERIALS_BUDGETRow FindByProjectID(int ProjectID) {
                return ((LFS_PROJECT_MATERIALS_BUDGETRow)(this.Rows.Find(new object[] {
                            ProjectID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_MATERIALS_BUDGETDataTable cln = ((LFS_PROJECT_MATERIALS_BUDGETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_MATERIALS_BUDGETDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnBudget = base.Columns["Budget"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnBudget = new global::System.Data.DataColumn("Budget", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudget);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnProjectID.Unique = true;
                this.columnBudget.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_MATERIALS_BUDGETRow NewLFS_PROJECT_MATERIALS_BUDGETRow() {
                return ((LFS_PROJECT_MATERIALS_BUDGETRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_MATERIALS_BUDGETRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_MATERIALS_BUDGETRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_MATERIALS_BUDGETRowChanged != null)) {
                    this.LFS_PROJECT_MATERIALS_BUDGETRowChanged(this, new LFS_PROJECT_MATERIALS_BUDGETRowChangeEvent(((LFS_PROJECT_MATERIALS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_MATERIALS_BUDGETRowChanging != null)) {
                    this.LFS_PROJECT_MATERIALS_BUDGETRowChanging(this, new LFS_PROJECT_MATERIALS_BUDGETRowChangeEvent(((LFS_PROJECT_MATERIALS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_MATERIALS_BUDGETRowDeleted != null)) {
                    this.LFS_PROJECT_MATERIALS_BUDGETRowDeleted(this, new LFS_PROJECT_MATERIALS_BUDGETRowChangeEvent(((LFS_PROJECT_MATERIALS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_MATERIALS_BUDGETRowDeleting != null)) {
                    this.LFS_PROJECT_MATERIALS_BUDGETRowDeleting(this, new LFS_PROJECT_MATERIALS_BUDGETRowChangeEvent(((LFS_PROJECT_MATERIALS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_MATERIALS_BUDGETRow(LFS_PROJECT_MATERIALS_BUDGETRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_MATERIALS_BUDGETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnSubcontractorID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnBudget;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable() {
                this.TableName = "LFS_PROJECT_SUBCONTRACTORS_BUDGET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubcontractorIDColumn {
                get {
                    return this.columnSubcontractorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BudgetColumn {
                get {
                    return this.columnBudget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SUBCONTRACTORS_BUDGETRow this[int index] {
                get {
                    return ((LFS_PROJECT_SUBCONTRACTORS_BUDGETRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_SUBCONTRACTORS_BUDGETRowChangeEventHandler LFS_PROJECT_SUBCONTRACTORS_BUDGETRowChanging;
            
            public event LFS_PROJECT_SUBCONTRACTORS_BUDGETRowChangeEventHandler LFS_PROJECT_SUBCONTRACTORS_BUDGETRowChanged;
            
            public event LFS_PROJECT_SUBCONTRACTORS_BUDGETRowChangeEventHandler LFS_PROJECT_SUBCONTRACTORS_BUDGETRowDeleting;
            
            public event LFS_PROJECT_SUBCONTRACTORS_BUDGETRowChangeEventHandler LFS_PROJECT_SUBCONTRACTORS_BUDGETRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_SUBCONTRACTORS_BUDGETRow(LFS_PROJECT_SUBCONTRACTORS_BUDGETRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SUBCONTRACTORS_BUDGETRow AddLFS_PROJECT_SUBCONTRACTORS_BUDGETRow(int ProjectID, int SubcontractorID, int RefID, decimal Budget, bool Deleted, int COMPANY_ID) {
                LFS_PROJECT_SUBCONTRACTORS_BUDGETRow rowLFS_PROJECT_SUBCONTRACTORS_BUDGETRow = ((LFS_PROJECT_SUBCONTRACTORS_BUDGETRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProjectID,
                        SubcontractorID,
                        RefID,
                        Budget,
                        Deleted,
                        COMPANY_ID};
                rowLFS_PROJECT_SUBCONTRACTORS_BUDGETRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_SUBCONTRACTORS_BUDGETRow);
                return rowLFS_PROJECT_SUBCONTRACTORS_BUDGETRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SUBCONTRACTORS_BUDGETRow FindByProjectIDSubcontractorIDRefID(int ProjectID, int SubcontractorID, int RefID) {
                return ((LFS_PROJECT_SUBCONTRACTORS_BUDGETRow)(this.Rows.Find(new object[] {
                            ProjectID,
                            SubcontractorID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable cln = ((LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnSubcontractorID = base.Columns["SubcontractorID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnBudget = base.Columns["Budget"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnSubcontractorID = new global::System.Data.DataColumn("SubcontractorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubcontractorID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnBudget = new global::System.Data.DataColumn("Budget", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudget);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID,
                                this.columnSubcontractorID,
                                this.columnRefID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnSubcontractorID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnBudget.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SUBCONTRACTORS_BUDGETRow NewLFS_PROJECT_SUBCONTRACTORS_BUDGETRow() {
                return ((LFS_PROJECT_SUBCONTRACTORS_BUDGETRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_SUBCONTRACTORS_BUDGETRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_SUBCONTRACTORS_BUDGETRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_SUBCONTRACTORS_BUDGETRowChanged != null)) {
                    this.LFS_PROJECT_SUBCONTRACTORS_BUDGETRowChanged(this, new LFS_PROJECT_SUBCONTRACTORS_BUDGETRowChangeEvent(((LFS_PROJECT_SUBCONTRACTORS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_SUBCONTRACTORS_BUDGETRowChanging != null)) {
                    this.LFS_PROJECT_SUBCONTRACTORS_BUDGETRowChanging(this, new LFS_PROJECT_SUBCONTRACTORS_BUDGETRowChangeEvent(((LFS_PROJECT_SUBCONTRACTORS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_SUBCONTRACTORS_BUDGETRowDeleted != null)) {
                    this.LFS_PROJECT_SUBCONTRACTORS_BUDGETRowDeleted(this, new LFS_PROJECT_SUBCONTRACTORS_BUDGETRowChangeEvent(((LFS_PROJECT_SUBCONTRACTORS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_SUBCONTRACTORS_BUDGETRowDeleting != null)) {
                    this.LFS_PROJECT_SUBCONTRACTORS_BUDGETRowDeleting(this, new LFS_PROJECT_SUBCONTRACTORS_BUDGETRowChangeEvent(((LFS_PROJECT_SUBCONTRACTORS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_SUBCONTRACTORS_BUDGETRow(LFS_PROJECT_SUBCONTRACTORS_BUDGETRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_UNITS_BUDGETDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnBudget;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_UNITS_BUDGETDataTable() {
                this.TableName = "LFS_PROJECT_UNITS_BUDGET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_UNITS_BUDGETDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_UNITS_BUDGETDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BudgetColumn {
                get {
                    return this.columnBudget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_UNITS_BUDGETRow this[int index] {
                get {
                    return ((LFS_PROJECT_UNITS_BUDGETRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_UNITS_BUDGETRowChangeEventHandler LFS_PROJECT_UNITS_BUDGETRowChanging;
            
            public event LFS_PROJECT_UNITS_BUDGETRowChangeEventHandler LFS_PROJECT_UNITS_BUDGETRowChanged;
            
            public event LFS_PROJECT_UNITS_BUDGETRowChangeEventHandler LFS_PROJECT_UNITS_BUDGETRowDeleting;
            
            public event LFS_PROJECT_UNITS_BUDGETRowChangeEventHandler LFS_PROJECT_UNITS_BUDGETRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_UNITS_BUDGETRow(LFS_PROJECT_UNITS_BUDGETRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_UNITS_BUDGETRow AddLFS_PROJECT_UNITS_BUDGETRow(int ProjectID, decimal Budget, bool Deleted, int COMPANY_ID) {
                LFS_PROJECT_UNITS_BUDGETRow rowLFS_PROJECT_UNITS_BUDGETRow = ((LFS_PROJECT_UNITS_BUDGETRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProjectID,
                        Budget,
                        Deleted,
                        COMPANY_ID};
                rowLFS_PROJECT_UNITS_BUDGETRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_UNITS_BUDGETRow);
                return rowLFS_PROJECT_UNITS_BUDGETRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_UNITS_BUDGETRow FindByProjectID(int ProjectID) {
                return ((LFS_PROJECT_UNITS_BUDGETRow)(this.Rows.Find(new object[] {
                            ProjectID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_UNITS_BUDGETDataTable cln = ((LFS_PROJECT_UNITS_BUDGETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_UNITS_BUDGETDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnBudget = base.Columns["Budget"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnBudget = new global::System.Data.DataColumn("Budget", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudget);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnProjectID.Unique = true;
                this.columnBudget.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_UNITS_BUDGETRow NewLFS_PROJECT_UNITS_BUDGETRow() {
                return ((LFS_PROJECT_UNITS_BUDGETRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_UNITS_BUDGETRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_UNITS_BUDGETRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_UNITS_BUDGETRowChanged != null)) {
                    this.LFS_PROJECT_UNITS_BUDGETRowChanged(this, new LFS_PROJECT_UNITS_BUDGETRowChangeEvent(((LFS_PROJECT_UNITS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_UNITS_BUDGETRowChanging != null)) {
                    this.LFS_PROJECT_UNITS_BUDGETRowChanging(this, new LFS_PROJECT_UNITS_BUDGETRowChangeEvent(((LFS_PROJECT_UNITS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_UNITS_BUDGETRowDeleted != null)) {
                    this.LFS_PROJECT_UNITS_BUDGETRowDeleted(this, new LFS_PROJECT_UNITS_BUDGETRowChangeEvent(((LFS_PROJECT_UNITS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_UNITS_BUDGETRowDeleting != null)) {
                    this.LFS_PROJECT_UNITS_BUDGETRowDeleting(this, new LFS_PROJECT_UNITS_BUDGETRowChangeEvent(((LFS_PROJECT_UNITS_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_UNITS_BUDGETRow(LFS_PROJECT_UNITS_BUDGETRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_UNITS_BUDGETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_COSTING_UPDATESDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnExtrasToDate;
            
            private global::System.Data.DataColumn columnCostsIncurred;
            
            private global::System.Data.DataColumn columnCostToComplete;
            
            private global::System.Data.DataColumn columnOriginalProfitEstimated;
            
            private global::System.Data.DataColumn columnInvoicedToDate;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_COSTING_UPDATESDataTable() {
                this.TableName = "LFS_PROJECT_COSTING_UPDATES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_COSTING_UPDATESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_COSTING_UPDATESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtrasToDateColumn {
                get {
                    return this.columnExtrasToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostsIncurredColumn {
                get {
                    return this.columnCostsIncurred;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostToCompleteColumn {
                get {
                    return this.columnCostToComplete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OriginalProfitEstimatedColumn {
                get {
                    return this.columnOriginalProfitEstimated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoicedToDateColumn {
                get {
                    return this.columnInvoicedToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_COSTING_UPDATESRow this[int index] {
                get {
                    return ((LFS_PROJECT_COSTING_UPDATESRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_COSTING_UPDATESRowChangeEventHandler LFS_PROJECT_COSTING_UPDATESRowChanging;
            
            public event LFS_PROJECT_COSTING_UPDATESRowChangeEventHandler LFS_PROJECT_COSTING_UPDATESRowChanged;
            
            public event LFS_PROJECT_COSTING_UPDATESRowChangeEventHandler LFS_PROJECT_COSTING_UPDATESRowDeleting;
            
            public event LFS_PROJECT_COSTING_UPDATESRowChangeEventHandler LFS_PROJECT_COSTING_UPDATESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_COSTING_UPDATESRow(LFS_PROJECT_COSTING_UPDATESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_COSTING_UPDATESRow AddLFS_PROJECT_COSTING_UPDATESRow(LFS_PROJECTRow parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_COSTING_UPDATES, decimal ExtrasToDate, decimal CostsIncurred, decimal CostToComplete, decimal OriginalProfitEstimated, decimal InvoicedToDate, int COMPANY_ID) {
                LFS_PROJECT_COSTING_UPDATESRow rowLFS_PROJECT_COSTING_UPDATESRow = ((LFS_PROJECT_COSTING_UPDATESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ExtrasToDate,
                        CostsIncurred,
                        CostToComplete,
                        OriginalProfitEstimated,
                        InvoicedToDate,
                        COMPANY_ID};
                if ((parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_COSTING_UPDATES != null)) {
                    columnValuesArray[0] = parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_COSTING_UPDATES[0];
                }
                rowLFS_PROJECT_COSTING_UPDATESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_COSTING_UPDATESRow);
                return rowLFS_PROJECT_COSTING_UPDATESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_COSTING_UPDATESRow FindByProjectID(int ProjectID) {
                return ((LFS_PROJECT_COSTING_UPDATESRow)(this.Rows.Find(new object[] {
                            ProjectID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_COSTING_UPDATESDataTable cln = ((LFS_PROJECT_COSTING_UPDATESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_COSTING_UPDATESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnExtrasToDate = base.Columns["ExtrasToDate"];
                this.columnCostsIncurred = base.Columns["CostsIncurred"];
                this.columnCostToComplete = base.Columns["CostToComplete"];
                this.columnOriginalProfitEstimated = base.Columns["OriginalProfitEstimated"];
                this.columnInvoicedToDate = base.Columns["InvoicedToDate"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnExtrasToDate = new global::System.Data.DataColumn("ExtrasToDate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtrasToDate);
                this.columnCostsIncurred = new global::System.Data.DataColumn("CostsIncurred", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostsIncurred);
                this.columnCostToComplete = new global::System.Data.DataColumn("CostToComplete", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostToComplete);
                this.columnOriginalProfitEstimated = new global::System.Data.DataColumn("OriginalProfitEstimated", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalProfitEstimated);
                this.columnInvoicedToDate = new global::System.Data.DataColumn("InvoicedToDate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoicedToDate);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnProjectID.Unique = true;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_COSTING_UPDATESRow NewLFS_PROJECT_COSTING_UPDATESRow() {
                return ((LFS_PROJECT_COSTING_UPDATESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_COSTING_UPDATESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_COSTING_UPDATESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_COSTING_UPDATESRowChanged != null)) {
                    this.LFS_PROJECT_COSTING_UPDATESRowChanged(this, new LFS_PROJECT_COSTING_UPDATESRowChangeEvent(((LFS_PROJECT_COSTING_UPDATESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_COSTING_UPDATESRowChanging != null)) {
                    this.LFS_PROJECT_COSTING_UPDATESRowChanging(this, new LFS_PROJECT_COSTING_UPDATESRowChangeEvent(((LFS_PROJECT_COSTING_UPDATESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_COSTING_UPDATESRowDeleted != null)) {
                    this.LFS_PROJECT_COSTING_UPDATESRowDeleted(this, new LFS_PROJECT_COSTING_UPDATESRowChangeEvent(((LFS_PROJECT_COSTING_UPDATESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_COSTING_UPDATESRowDeleting != null)) {
                    this.LFS_PROJECT_COSTING_UPDATESRowDeleting(this, new LFS_PROJECT_COSTING_UPDATESRowChangeEvent(((LFS_PROJECT_COSTING_UPDATESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_COSTING_UPDATESRow(LFS_PROJECT_COSTING_UPDATESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_COSTING_UPDATESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_SALE_BILLING_PRICINGDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnSaleBidProject;
            
            private global::System.Data.DataColumn columnSaleRFP;
            
            private global::System.Data.DataColumn columnSaleSoleSource;
            
            private global::System.Data.DataColumn columnSaleTermContract;
            
            private global::System.Data.DataColumn columnSaleTermContractDetail;
            
            private global::System.Data.DataColumn columnSaleOther;
            
            private global::System.Data.DataColumn columnSaleOtherDetail;
            
            private global::System.Data.DataColumn columnSaleGettingJob;
            
            private global::System.Data.DataColumn columnBillPrice;
            
            private global::System.Data.DataColumn columnBillMoney;
            
            private global::System.Data.DataColumn columnBillBidHardDollar;
            
            private global::System.Data.DataColumn columnBillPerUnit;
            
            private global::System.Data.DataColumn columnBillHourly;
            
            private global::System.Data.DataColumn columnBillExpectExtras;
            
            private global::System.Data.DataColumn columnBillSubcontractorAmount;
            
            private global::System.Data.DataColumn columnChargesWater;
            
            private global::System.Data.DataColumn columnChargesWaterAmount;
            
            private global::System.Data.DataColumn columnChargesDisposal;
            
            private global::System.Data.DataColumn columnChargesDisposalAmount;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SALE_BILLING_PRICINGDataTable() {
                this.TableName = "LFS_PROJECT_SALE_BILLING_PRICING";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_SALE_BILLING_PRICINGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_SALE_BILLING_PRICINGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleBidProjectColumn {
                get {
                    return this.columnSaleBidProject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleRFPColumn {
                get {
                    return this.columnSaleRFP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleSoleSourceColumn {
                get {
                    return this.columnSaleSoleSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleTermContractColumn {
                get {
                    return this.columnSaleTermContract;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleTermContractDetailColumn {
                get {
                    return this.columnSaleTermContractDetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleOtherColumn {
                get {
                    return this.columnSaleOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleOtherDetailColumn {
                get {
                    return this.columnSaleOtherDetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleGettingJobColumn {
                get {
                    return this.columnSaleGettingJob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillPriceColumn {
                get {
                    return this.columnBillPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillMoneyColumn {
                get {
                    return this.columnBillMoney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillBidHardDollarColumn {
                get {
                    return this.columnBillBidHardDollar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillPerUnitColumn {
                get {
                    return this.columnBillPerUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillHourlyColumn {
                get {
                    return this.columnBillHourly;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillExpectExtrasColumn {
                get {
                    return this.columnBillExpectExtras;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillSubcontractorAmountColumn {
                get {
                    return this.columnBillSubcontractorAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChargesWaterColumn {
                get {
                    return this.columnChargesWater;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChargesWaterAmountColumn {
                get {
                    return this.columnChargesWaterAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChargesDisposalColumn {
                get {
                    return this.columnChargesDisposal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChargesDisposalAmountColumn {
                get {
                    return this.columnChargesDisposalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SALE_BILLING_PRICINGRow this[int index] {
                get {
                    return ((LFS_PROJECT_SALE_BILLING_PRICINGRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_SALE_BILLING_PRICINGRowChangeEventHandler LFS_PROJECT_SALE_BILLING_PRICINGRowChanging;
            
            public event LFS_PROJECT_SALE_BILLING_PRICINGRowChangeEventHandler LFS_PROJECT_SALE_BILLING_PRICINGRowChanged;
            
            public event LFS_PROJECT_SALE_BILLING_PRICINGRowChangeEventHandler LFS_PROJECT_SALE_BILLING_PRICINGRowDeleting;
            
            public event LFS_PROJECT_SALE_BILLING_PRICINGRowChangeEventHandler LFS_PROJECT_SALE_BILLING_PRICINGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_SALE_BILLING_PRICINGRow(LFS_PROJECT_SALE_BILLING_PRICINGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SALE_BILLING_PRICINGRow AddLFS_PROJECT_SALE_BILLING_PRICINGRow(
                        LFS_PROJECTRow parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_SALE_BILLING_PRICING, 
                        bool SaleBidProject, 
                        bool SaleRFP, 
                        bool SaleSoleSource, 
                        bool SaleTermContract, 
                        string SaleTermContractDetail, 
                        bool SaleOther, 
                        string SaleOtherDetail, 
                        int SaleGettingJob, 
                        decimal BillPrice, 
                        string BillMoney, 
                        string BillBidHardDollar, 
                        bool BillPerUnit, 
                        bool BillHourly, 
                        string BillExpectExtras, 
                        decimal BillSubcontractorAmount, 
                        bool ChargesWater, 
                        decimal ChargesWaterAmount, 
                        bool ChargesDisposal, 
                        decimal ChargesDisposalAmount, 
                        int COMPANY_ID) {
                LFS_PROJECT_SALE_BILLING_PRICINGRow rowLFS_PROJECT_SALE_BILLING_PRICINGRow = ((LFS_PROJECT_SALE_BILLING_PRICINGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SaleBidProject,
                        SaleRFP,
                        SaleSoleSource,
                        SaleTermContract,
                        SaleTermContractDetail,
                        SaleOther,
                        SaleOtherDetail,
                        SaleGettingJob,
                        BillPrice,
                        BillMoney,
                        BillBidHardDollar,
                        BillPerUnit,
                        BillHourly,
                        BillExpectExtras,
                        BillSubcontractorAmount,
                        ChargesWater,
                        ChargesWaterAmount,
                        ChargesDisposal,
                        ChargesDisposalAmount,
                        COMPANY_ID};
                if ((parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_SALE_BILLING_PRICING != null)) {
                    columnValuesArray[0] = parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_SALE_BILLING_PRICING[0];
                }
                rowLFS_PROJECT_SALE_BILLING_PRICINGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_SALE_BILLING_PRICINGRow);
                return rowLFS_PROJECT_SALE_BILLING_PRICINGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SALE_BILLING_PRICINGRow FindByProjectID(int ProjectID) {
                return ((LFS_PROJECT_SALE_BILLING_PRICINGRow)(this.Rows.Find(new object[] {
                            ProjectID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_SALE_BILLING_PRICINGDataTable cln = ((LFS_PROJECT_SALE_BILLING_PRICINGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_SALE_BILLING_PRICINGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnSaleBidProject = base.Columns["SaleBidProject"];
                this.columnSaleRFP = base.Columns["SaleRFP"];
                this.columnSaleSoleSource = base.Columns["SaleSoleSource"];
                this.columnSaleTermContract = base.Columns["SaleTermContract"];
                this.columnSaleTermContractDetail = base.Columns["SaleTermContractDetail"];
                this.columnSaleOther = base.Columns["SaleOther"];
                this.columnSaleOtherDetail = base.Columns["SaleOtherDetail"];
                this.columnSaleGettingJob = base.Columns["SaleGettingJob"];
                this.columnBillPrice = base.Columns["BillPrice"];
                this.columnBillMoney = base.Columns["BillMoney"];
                this.columnBillBidHardDollar = base.Columns["BillBidHardDollar"];
                this.columnBillPerUnit = base.Columns["BillPerUnit"];
                this.columnBillHourly = base.Columns["BillHourly"];
                this.columnBillExpectExtras = base.Columns["BillExpectExtras"];
                this.columnBillSubcontractorAmount = base.Columns["BillSubcontractorAmount"];
                this.columnChargesWater = base.Columns["ChargesWater"];
                this.columnChargesWaterAmount = base.Columns["ChargesWaterAmount"];
                this.columnChargesDisposal = base.Columns["ChargesDisposal"];
                this.columnChargesDisposalAmount = base.Columns["ChargesDisposalAmount"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnSaleBidProject = new global::System.Data.DataColumn("SaleBidProject", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleBidProject);
                this.columnSaleRFP = new global::System.Data.DataColumn("SaleRFP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleRFP);
                this.columnSaleSoleSource = new global::System.Data.DataColumn("SaleSoleSource", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleSoleSource);
                this.columnSaleTermContract = new global::System.Data.DataColumn("SaleTermContract", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleTermContract);
                this.columnSaleTermContractDetail = new global::System.Data.DataColumn("SaleTermContractDetail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleTermContractDetail);
                this.columnSaleOther = new global::System.Data.DataColumn("SaleOther", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleOther);
                this.columnSaleOtherDetail = new global::System.Data.DataColumn("SaleOtherDetail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleOtherDetail);
                this.columnSaleGettingJob = new global::System.Data.DataColumn("SaleGettingJob", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleGettingJob);
                this.columnBillPrice = new global::System.Data.DataColumn("BillPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillPrice);
                this.columnBillMoney = new global::System.Data.DataColumn("BillMoney", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillMoney);
                this.columnBillBidHardDollar = new global::System.Data.DataColumn("BillBidHardDollar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillBidHardDollar);
                this.columnBillPerUnit = new global::System.Data.DataColumn("BillPerUnit", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillPerUnit);
                this.columnBillHourly = new global::System.Data.DataColumn("BillHourly", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillHourly);
                this.columnBillExpectExtras = new global::System.Data.DataColumn("BillExpectExtras", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillExpectExtras);
                this.columnBillSubcontractorAmount = new global::System.Data.DataColumn("BillSubcontractorAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillSubcontractorAmount);
                this.columnChargesWater = new global::System.Data.DataColumn("ChargesWater", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChargesWater);
                this.columnChargesWaterAmount = new global::System.Data.DataColumn("ChargesWaterAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChargesWaterAmount);
                this.columnChargesDisposal = new global::System.Data.DataColumn("ChargesDisposal", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChargesDisposal);
                this.columnChargesDisposalAmount = new global::System.Data.DataColumn("ChargesDisposalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChargesDisposalAmount);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnProjectID.Unique = true;
                this.columnSaleBidProject.AllowDBNull = false;
                this.columnSaleRFP.AllowDBNull = false;
                this.columnSaleSoleSource.AllowDBNull = false;
                this.columnSaleTermContract.AllowDBNull = false;
                this.columnSaleTermContractDetail.MaxLength = 255;
                this.columnSaleOther.AllowDBNull = false;
                this.columnSaleOtherDetail.MaxLength = 255;
                this.columnBillMoney.AllowDBNull = false;
                this.columnBillMoney.MaxLength = 5;
                this.columnBillBidHardDollar.MaxLength = 100;
                this.columnBillPerUnit.AllowDBNull = false;
                this.columnBillHourly.AllowDBNull = false;
                this.columnBillExpectExtras.MaxLength = 255;
                this.columnChargesWater.AllowDBNull = false;
                this.columnChargesDisposal.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SALE_BILLING_PRICINGRow NewLFS_PROJECT_SALE_BILLING_PRICINGRow() {
                return ((LFS_PROJECT_SALE_BILLING_PRICINGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_SALE_BILLING_PRICINGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_SALE_BILLING_PRICINGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_SALE_BILLING_PRICINGRowChanged != null)) {
                    this.LFS_PROJECT_SALE_BILLING_PRICINGRowChanged(this, new LFS_PROJECT_SALE_BILLING_PRICINGRowChangeEvent(((LFS_PROJECT_SALE_BILLING_PRICINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_SALE_BILLING_PRICINGRowChanging != null)) {
                    this.LFS_PROJECT_SALE_BILLING_PRICINGRowChanging(this, new LFS_PROJECT_SALE_BILLING_PRICINGRowChangeEvent(((LFS_PROJECT_SALE_BILLING_PRICINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_SALE_BILLING_PRICINGRowDeleted != null)) {
                    this.LFS_PROJECT_SALE_BILLING_PRICINGRowDeleted(this, new LFS_PROJECT_SALE_BILLING_PRICINGRowChangeEvent(((LFS_PROJECT_SALE_BILLING_PRICINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_SALE_BILLING_PRICINGRowDeleting != null)) {
                    this.LFS_PROJECT_SALE_BILLING_PRICINGRowDeleting(this, new LFS_PROJECT_SALE_BILLING_PRICINGRowChangeEvent(((LFS_PROJECT_SALE_BILLING_PRICINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_SALE_BILLING_PRICINGRow(LFS_PROJECT_SALE_BILLING_PRICINGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_SALE_BILLING_PRICINGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_SERVICEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnServiceID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnAverageSize;
            
            private global::System.Data.DataColumn columnAveragePrice;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SERVICEDataTable() {
                this.TableName = "LFS_PROJECT_SERVICE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_SERVICEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_SERVICEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceIDColumn {
                get {
                    return this.columnServiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AverageSizeColumn {
                get {
                    return this.columnAverageSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AveragePriceColumn {
                get {
                    return this.columnAveragePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SERVICERow this[int index] {
                get {
                    return ((LFS_PROJECT_SERVICERow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_SERVICERowChangeEventHandler LFS_PROJECT_SERVICERowChanging;
            
            public event LFS_PROJECT_SERVICERowChangeEventHandler LFS_PROJECT_SERVICERowChanged;
            
            public event LFS_PROJECT_SERVICERowChangeEventHandler LFS_PROJECT_SERVICERowDeleting;
            
            public event LFS_PROJECT_SERVICERowChangeEventHandler LFS_PROJECT_SERVICERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_SERVICERow(LFS_PROJECT_SERVICERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SERVICERow AddLFS_PROJECT_SERVICERow(LFS_PROJECTRow parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_SERVICE, int RefID, int ServiceID, string Description, string AverageSize, decimal AveragePrice, int Quantity, bool Deleted, decimal Total, int COMPANY_ID) {
                LFS_PROJECT_SERVICERow rowLFS_PROJECT_SERVICERow = ((LFS_PROJECT_SERVICERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RefID,
                        ServiceID,
                        Description,
                        AverageSize,
                        AveragePrice,
                        Quantity,
                        Deleted,
                        Total,
                        COMPANY_ID};
                if ((parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_SERVICE != null)) {
                    columnValuesArray[0] = parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_SERVICE[0];
                }
                rowLFS_PROJECT_SERVICERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_SERVICERow);
                return rowLFS_PROJECT_SERVICERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SERVICERow FindByProjectIDRefID(int ProjectID, int RefID) {
                return ((LFS_PROJECT_SERVICERow)(this.Rows.Find(new object[] {
                            ProjectID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_SERVICEDataTable cln = ((LFS_PROJECT_SERVICEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_SERVICEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnServiceID = base.Columns["ServiceID"];
                this.columnDescription = base.Columns["Description"];
                this.columnAverageSize = base.Columns["AverageSize"];
                this.columnAveragePrice = base.Columns["AveragePrice"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnTotal = base.Columns["Total"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnServiceID = new global::System.Data.DataColumn("ServiceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnAverageSize = new global::System.Data.DataColumn("AverageSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAverageSize);
                this.columnAveragePrice = new global::System.Data.DataColumn("AveragePrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAveragePrice);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID,
                                this.columnRefID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnDescription.MaxLength = 100;
                this.columnAverageSize.MaxLength = 10;
                this.columnQuantity.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SERVICERow NewLFS_PROJECT_SERVICERow() {
                return ((LFS_PROJECT_SERVICERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_SERVICERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_SERVICERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_SERVICERowChanged != null)) {
                    this.LFS_PROJECT_SERVICERowChanged(this, new LFS_PROJECT_SERVICERowChangeEvent(((LFS_PROJECT_SERVICERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_SERVICERowChanging != null)) {
                    this.LFS_PROJECT_SERVICERowChanging(this, new LFS_PROJECT_SERVICERowChangeEvent(((LFS_PROJECT_SERVICERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_SERVICERowDeleted != null)) {
                    this.LFS_PROJECT_SERVICERowDeleted(this, new LFS_PROJECT_SERVICERowChangeEvent(((LFS_PROJECT_SERVICERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_SERVICERowDeleting != null)) {
                    this.LFS_PROJECT_SERVICERowDeleting(this, new LFS_PROJECT_SERVICERowChangeEvent(((LFS_PROJECT_SERVICERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_SERVICERow(LFS_PROJECT_SERVICERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_SERVICEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_TECHNICALDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnDrawings;
            
            private global::System.Data.DataColumn columnVideo;
            
            private global::System.Data.DataColumn columnGroundConditions;
            
            private global::System.Data.DataColumn columnGrounConditionsNotes;
            
            private global::System.Data.DataColumn columnReviewVideo;
            
            private global::System.Data.DataColumn columnStrangeConfigurations;
            
            private global::System.Data.DataColumn columnStrangeConfigurationsNotes;
            
            private global::System.Data.DataColumn columnFurtherObservations;
            
            private global::System.Data.DataColumn columnRestrictiveFactors;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TECHNICALDataTable() {
                this.TableName = "LFS_PROJECT_TECHNICAL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_TECHNICALDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_TECHNICALDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DrawingsColumn {
                get {
                    return this.columnDrawings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoColumn {
                get {
                    return this.columnVideo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroundConditionsColumn {
                get {
                    return this.columnGroundConditions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrounConditionsNotesColumn {
                get {
                    return this.columnGrounConditionsNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewVideoColumn {
                get {
                    return this.columnReviewVideo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StrangeConfigurationsColumn {
                get {
                    return this.columnStrangeConfigurations;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StrangeConfigurationsNotesColumn {
                get {
                    return this.columnStrangeConfigurationsNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FurtherObservationsColumn {
                get {
                    return this.columnFurtherObservations;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RestrictiveFactorsColumn {
                get {
                    return this.columnRestrictiveFactors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TECHNICALRow this[int index] {
                get {
                    return ((LFS_PROJECT_TECHNICALRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_TECHNICALRowChangeEventHandler LFS_PROJECT_TECHNICALRowChanging;
            
            public event LFS_PROJECT_TECHNICALRowChangeEventHandler LFS_PROJECT_TECHNICALRowChanged;
            
            public event LFS_PROJECT_TECHNICALRowChangeEventHandler LFS_PROJECT_TECHNICALRowDeleting;
            
            public event LFS_PROJECT_TECHNICALRowChangeEventHandler LFS_PROJECT_TECHNICALRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_TECHNICALRow(LFS_PROJECT_TECHNICALRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TECHNICALRow AddLFS_PROJECT_TECHNICALRow(LFS_PROJECTRow parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_TECHNICAL, bool Drawings, bool Video, bool GroundConditions, string GrounConditionsNotes, bool ReviewVideo, bool StrangeConfigurations, string StrangeConfigurationsNotes, string FurtherObservations, string RestrictiveFactors, int COMPANY_ID) {
                LFS_PROJECT_TECHNICALRow rowLFS_PROJECT_TECHNICALRow = ((LFS_PROJECT_TECHNICALRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Drawings,
                        Video,
                        GroundConditions,
                        GrounConditionsNotes,
                        ReviewVideo,
                        StrangeConfigurations,
                        StrangeConfigurationsNotes,
                        FurtherObservations,
                        RestrictiveFactors,
                        COMPANY_ID};
                if ((parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_TECHNICAL != null)) {
                    columnValuesArray[0] = parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_TECHNICAL[0];
                }
                rowLFS_PROJECT_TECHNICALRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_TECHNICALRow);
                return rowLFS_PROJECT_TECHNICALRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TECHNICALRow FindByProjectID(int ProjectID) {
                return ((LFS_PROJECT_TECHNICALRow)(this.Rows.Find(new object[] {
                            ProjectID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_TECHNICALDataTable cln = ((LFS_PROJECT_TECHNICALDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_TECHNICALDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnDrawings = base.Columns["Drawings"];
                this.columnVideo = base.Columns["Video"];
                this.columnGroundConditions = base.Columns["GroundConditions"];
                this.columnGrounConditionsNotes = base.Columns["GrounConditionsNotes"];
                this.columnReviewVideo = base.Columns["ReviewVideo"];
                this.columnStrangeConfigurations = base.Columns["StrangeConfigurations"];
                this.columnStrangeConfigurationsNotes = base.Columns["StrangeConfigurationsNotes"];
                this.columnFurtherObservations = base.Columns["FurtherObservations"];
                this.columnRestrictiveFactors = base.Columns["RestrictiveFactors"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnDrawings = new global::System.Data.DataColumn("Drawings", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrawings);
                this.columnVideo = new global::System.Data.DataColumn("Video", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideo);
                this.columnGroundConditions = new global::System.Data.DataColumn("GroundConditions", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroundConditions);
                this.columnGrounConditionsNotes = new global::System.Data.DataColumn("GrounConditionsNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrounConditionsNotes);
                this.columnReviewVideo = new global::System.Data.DataColumn("ReviewVideo", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewVideo);
                this.columnStrangeConfigurations = new global::System.Data.DataColumn("StrangeConfigurations", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrangeConfigurations);
                this.columnStrangeConfigurationsNotes = new global::System.Data.DataColumn("StrangeConfigurationsNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrangeConfigurationsNotes);
                this.columnFurtherObservations = new global::System.Data.DataColumn("FurtherObservations", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFurtherObservations);
                this.columnRestrictiveFactors = new global::System.Data.DataColumn("RestrictiveFactors", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestrictiveFactors);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnProjectID.Unique = true;
                this.columnDrawings.AllowDBNull = false;
                this.columnVideo.AllowDBNull = false;
                this.columnGroundConditions.AllowDBNull = false;
                this.columnGrounConditionsNotes.MaxLength = 1073741823;
                this.columnReviewVideo.AllowDBNull = false;
                this.columnStrangeConfigurations.AllowDBNull = false;
                this.columnStrangeConfigurationsNotes.MaxLength = 1073741823;
                this.columnFurtherObservations.MaxLength = 1073741823;
                this.columnRestrictiveFactors.MaxLength = 1073741823;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TECHNICALRow NewLFS_PROJECT_TECHNICALRow() {
                return ((LFS_PROJECT_TECHNICALRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_TECHNICALRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_TECHNICALRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_TECHNICALRowChanged != null)) {
                    this.LFS_PROJECT_TECHNICALRowChanged(this, new LFS_PROJECT_TECHNICALRowChangeEvent(((LFS_PROJECT_TECHNICALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_TECHNICALRowChanging != null)) {
                    this.LFS_PROJECT_TECHNICALRowChanging(this, new LFS_PROJECT_TECHNICALRowChangeEvent(((LFS_PROJECT_TECHNICALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_TECHNICALRowDeleted != null)) {
                    this.LFS_PROJECT_TECHNICALRowDeleted(this, new LFS_PROJECT_TECHNICALRowChangeEvent(((LFS_PROJECT_TECHNICALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_TECHNICALRowDeleting != null)) {
                    this.LFS_PROJECT_TECHNICALRowDeleting(this, new LFS_PROJECT_TECHNICALRowChangeEvent(((LFS_PROJECT_TECHNICALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_TECHNICALRow(LFS_PROJECT_TECHNICALRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_TECHNICALDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_NUMBERDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnYearCode;
            
            private global::System.Data.DataColumn columnProjectIncrement;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_NUMBERDataTable() {
                this.TableName = "LFS_PROJECT_NUMBER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_NUMBERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_NUMBERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearCodeColumn {
                get {
                    return this.columnYearCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIncrementColumn {
                get {
                    return this.columnProjectIncrement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_NUMBERRow this[int index] {
                get {
                    return ((LFS_PROJECT_NUMBERRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_NUMBERRowChangeEventHandler LFS_PROJECT_NUMBERRowChanging;
            
            public event LFS_PROJECT_NUMBERRowChangeEventHandler LFS_PROJECT_NUMBERRowChanged;
            
            public event LFS_PROJECT_NUMBERRowChangeEventHandler LFS_PROJECT_NUMBERRowDeleting;
            
            public event LFS_PROJECT_NUMBERRowChangeEventHandler LFS_PROJECT_NUMBERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_NUMBERRow(LFS_PROJECT_NUMBERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_NUMBERRow AddLFS_PROJECT_NUMBERRow(int YearCode, int ProjectIncrement, int COMPANY_ID) {
                LFS_PROJECT_NUMBERRow rowLFS_PROJECT_NUMBERRow = ((LFS_PROJECT_NUMBERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        YearCode,
                        ProjectIncrement,
                        COMPANY_ID};
                rowLFS_PROJECT_NUMBERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_NUMBERRow);
                return rowLFS_PROJECT_NUMBERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_NUMBERRow FindByYearCode(int YearCode) {
                return ((LFS_PROJECT_NUMBERRow)(this.Rows.Find(new object[] {
                            YearCode})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_NUMBERDataTable cln = ((LFS_PROJECT_NUMBERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_NUMBERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnYearCode = base.Columns["YearCode"];
                this.columnProjectIncrement = base.Columns["ProjectIncrement"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnYearCode = new global::System.Data.DataColumn("YearCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearCode);
                this.columnProjectIncrement = new global::System.Data.DataColumn("ProjectIncrement", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectIncrement);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnYearCode}, true));
                this.columnYearCode.AllowDBNull = false;
                this.columnYearCode.Unique = true;
                this.columnProjectIncrement.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_NUMBERRow NewLFS_PROJECT_NUMBERRow() {
                return ((LFS_PROJECT_NUMBERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_NUMBERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_NUMBERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_NUMBERRowChanged != null)) {
                    this.LFS_PROJECT_NUMBERRowChanged(this, new LFS_PROJECT_NUMBERRowChangeEvent(((LFS_PROJECT_NUMBERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_NUMBERRowChanging != null)) {
                    this.LFS_PROJECT_NUMBERRowChanging(this, new LFS_PROJECT_NUMBERRowChangeEvent(((LFS_PROJECT_NUMBERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_NUMBERRowDeleted != null)) {
                    this.LFS_PROJECT_NUMBERRowDeleted(this, new LFS_PROJECT_NUMBERRowChangeEvent(((LFS_PROJECT_NUMBERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_NUMBERRowDeleting != null)) {
                    this.LFS_PROJECT_NUMBERRowDeleting(this, new LFS_PROJECT_NUMBERRowChangeEvent(((LFS_PROJECT_NUMBERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_NUMBERRow(LFS_PROJECT_NUMBERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_NUMBERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_HISTORYDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnProjectState;
            
            private global::System.Data.DataColumn columnDate_;
            
            private global::System.Data.DataColumn columnLoginID;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_HISTORYDataTable() {
                this.TableName = "LFS_PROJECT_HISTORY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_HISTORYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_HISTORYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectStateColumn {
                get {
                    return this.columnProjectState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Date_Column {
                get {
                    return this.columnDate_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LoginIDColumn {
                get {
                    return this.columnLoginID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_HISTORYRow this[int index] {
                get {
                    return ((LFS_PROJECT_HISTORYRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_HISTORYRowChangeEventHandler LFS_PROJECT_HISTORYRowChanging;
            
            public event LFS_PROJECT_HISTORYRowChangeEventHandler LFS_PROJECT_HISTORYRowChanged;
            
            public event LFS_PROJECT_HISTORYRowChangeEventHandler LFS_PROJECT_HISTORYRowDeleting;
            
            public event LFS_PROJECT_HISTORYRowChangeEventHandler LFS_PROJECT_HISTORYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_HISTORYRow(LFS_PROJECT_HISTORYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_HISTORYRow AddLFS_PROJECT_HISTORYRow(LFS_PROJECTRow parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_HISTORY, int RefID, string ProjectState, System.DateTime Date_, int LoginID, int COMPANY_ID) {
                LFS_PROJECT_HISTORYRow rowLFS_PROJECT_HISTORYRow = ((LFS_PROJECT_HISTORYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RefID,
                        ProjectState,
                        Date_,
                        LoginID,
                        COMPANY_ID};
                if ((parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_HISTORY != null)) {
                    columnValuesArray[0] = parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_HISTORY[0];
                }
                rowLFS_PROJECT_HISTORYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_HISTORYRow);
                return rowLFS_PROJECT_HISTORYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_HISTORYRow FindByProjectIDRefID(int ProjectID, int RefID) {
                return ((LFS_PROJECT_HISTORYRow)(this.Rows.Find(new object[] {
                            ProjectID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_HISTORYDataTable cln = ((LFS_PROJECT_HISTORYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_HISTORYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnProjectState = base.Columns["ProjectState"];
                this.columnDate_ = base.Columns["Date_"];
                this.columnLoginID = base.Columns["LoginID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnProjectState = new global::System.Data.DataColumn("ProjectState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectState);
                this.columnDate_ = new global::System.Data.DataColumn("Date_", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate_);
                this.columnLoginID = new global::System.Data.DataColumn("LoginID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoginID);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID,
                                this.columnRefID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnProjectState.AllowDBNull = false;
                this.columnProjectState.MaxLength = 25;
                this.columnDate_.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_HISTORYRow NewLFS_PROJECT_HISTORYRow() {
                return ((LFS_PROJECT_HISTORYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_HISTORYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_HISTORYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_HISTORYRowChanged != null)) {
                    this.LFS_PROJECT_HISTORYRowChanged(this, new LFS_PROJECT_HISTORYRowChangeEvent(((LFS_PROJECT_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_HISTORYRowChanging != null)) {
                    this.LFS_PROJECT_HISTORYRowChanging(this, new LFS_PROJECT_HISTORYRowChangeEvent(((LFS_PROJECT_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_HISTORYRowDeleted != null)) {
                    this.LFS_PROJECT_HISTORYRowDeleted(this, new LFS_PROJECT_HISTORYRowChangeEvent(((LFS_PROJECT_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_HISTORYRowDeleting != null)) {
                    this.LFS_PROJECT_HISTORYRowDeleting(this, new LFS_PROJECT_HISTORYRowChangeEvent(((LFS_PROJECT_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_HISTORYRow(LFS_PROJECT_HISTORYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_HISTORYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_NOTEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnSubject;
            
            private global::System.Data.DataColumn columnDateTime;
            
            private global::System.Data.DataColumn columnLoginID;
            
            private global::System.Data.DataColumn columnNote;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnLIBRARY_FILES_ID;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnUserFullName;
            
            private global::System.Data.DataColumn columnCreationDateTime;
            
            private global::System.Data.DataColumn columnORIGINAL_FILENAME;
            
            private global::System.Data.DataColumn columnFILENAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_NOTEDataTable() {
                this.TableName = "LFS_PROJECT_NOTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_NOTEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_NOTEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeColumn {
                get {
                    return this.columnDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LoginIDColumn {
                get {
                    return this.columnLoginID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoteColumn {
                get {
                    return this.columnNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIBRARY_FILES_IDColumn {
                get {
                    return this.columnLIBRARY_FILES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserFullNameColumn {
                get {
                    return this.columnUserFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreationDateTimeColumn {
                get {
                    return this.columnCreationDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORIGINAL_FILENAMEColumn {
                get {
                    return this.columnORIGINAL_FILENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FILENAMEColumn {
                get {
                    return this.columnFILENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_NOTERow this[int index] {
                get {
                    return ((LFS_PROJECT_NOTERow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_NOTERowChangeEventHandler LFS_PROJECT_NOTERowChanging;
            
            public event LFS_PROJECT_NOTERowChangeEventHandler LFS_PROJECT_NOTERowChanged;
            
            public event LFS_PROJECT_NOTERowChangeEventHandler LFS_PROJECT_NOTERowDeleting;
            
            public event LFS_PROJECT_NOTERowChangeEventHandler LFS_PROJECT_NOTERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_NOTERow(LFS_PROJECT_NOTERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_NOTERow AddLFS_PROJECT_NOTERow(LFS_PROJECTRow parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_NOTE, int RefID, string Subject, System.DateTime DateTime, int LoginID, string Note, bool Deleted, int LIBRARY_FILES_ID, int COMPANY_ID, string UserFullName, string CreationDateTime, string ORIGINAL_FILENAME, string FILENAME) {
                LFS_PROJECT_NOTERow rowLFS_PROJECT_NOTERow = ((LFS_PROJECT_NOTERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RefID,
                        Subject,
                        DateTime,
                        LoginID,
                        Note,
                        Deleted,
                        LIBRARY_FILES_ID,
                        COMPANY_ID,
                        UserFullName,
                        CreationDateTime,
                        ORIGINAL_FILENAME,
                        FILENAME};
                if ((parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_NOTE != null)) {
                    columnValuesArray[0] = parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_NOTE[0];
                }
                rowLFS_PROJECT_NOTERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_NOTERow);
                return rowLFS_PROJECT_NOTERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_NOTERow FindByProjectIDRefID(int ProjectID, int RefID) {
                return ((LFS_PROJECT_NOTERow)(this.Rows.Find(new object[] {
                            ProjectID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_NOTEDataTable cln = ((LFS_PROJECT_NOTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_NOTEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnSubject = base.Columns["Subject"];
                this.columnDateTime = base.Columns["DateTime"];
                this.columnLoginID = base.Columns["LoginID"];
                this.columnNote = base.Columns["Note"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnLIBRARY_FILES_ID = base.Columns["LIBRARY_FILES_ID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnUserFullName = base.Columns["UserFullName"];
                this.columnCreationDateTime = base.Columns["CreationDateTime"];
                this.columnORIGINAL_FILENAME = base.Columns["ORIGINAL_FILENAME"];
                this.columnFILENAME = base.Columns["FILENAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnSubject = new global::System.Data.DataColumn("Subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnDateTime = new global::System.Data.DataColumn("DateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTime);
                this.columnLoginID = new global::System.Data.DataColumn("LoginID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoginID);
                this.columnNote = new global::System.Data.DataColumn("Note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNote);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnLIBRARY_FILES_ID = new global::System.Data.DataColumn("LIBRARY_FILES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIBRARY_FILES_ID);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnUserFullName = new global::System.Data.DataColumn("UserFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserFullName);
                this.columnCreationDateTime = new global::System.Data.DataColumn("CreationDateTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDateTime);
                this.columnORIGINAL_FILENAME = new global::System.Data.DataColumn("ORIGINAL_FILENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORIGINAL_FILENAME);
                this.columnFILENAME = new global::System.Data.DataColumn("FILENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFILENAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID,
                                this.columnRefID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnSubject.AllowDBNull = false;
                this.columnSubject.MaxLength = 100;
                this.columnDateTime.AllowDBNull = false;
                this.columnLoginID.AllowDBNull = false;
                this.columnNote.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_NOTERow NewLFS_PROJECT_NOTERow() {
                return ((LFS_PROJECT_NOTERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_NOTERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_NOTERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_NOTERowChanged != null)) {
                    this.LFS_PROJECT_NOTERowChanged(this, new LFS_PROJECT_NOTERowChangeEvent(((LFS_PROJECT_NOTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_NOTERowChanging != null)) {
                    this.LFS_PROJECT_NOTERowChanging(this, new LFS_PROJECT_NOTERowChangeEvent(((LFS_PROJECT_NOTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_NOTERowDeleted != null)) {
                    this.LFS_PROJECT_NOTERowDeleted(this, new LFS_PROJECT_NOTERowChangeEvent(((LFS_PROJECT_NOTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_NOTERowDeleting != null)) {
                    this.LFS_PROJECT_NOTERowDeleting(this, new LFS_PROJECT_NOTERowChangeEvent(((LFS_PROJECT_NOTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_NOTERow(LFS_PROJECT_NOTERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_NOTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_ENGINEER_SUBCONTRACTORSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnGeneralContractor;
            
            private global::System.Data.DataColumn columnGeneralWSIB;
            
            private global::System.Data.DataColumn columnGeneralInsuranceCertificate;
            
            private global::System.Data.DataColumn columnGeneralBondingSupplied;
            
            private global::System.Data.DataColumn columnGeneralMOLForm;
            
            private global::System.Data.DataColumn columnGeneralNoticeProject;
            
            private global::System.Data.DataColumn columnGeneralForm1000;
            
            private global::System.Data.DataColumn columnEngineeringFirmID;
            
            private global::System.Data.DataColumn columnEngineerID;
            
            private global::System.Data.DataColumn columnEngineerNumber;
            
            private global::System.Data.DataColumn columnSubcontractorUsed;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnBondNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_ENGINEER_SUBCONTRACTORSDataTable() {
                this.TableName = "LFS_PROJECT_ENGINEER_SUBCONTRACTORS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_ENGINEER_SUBCONTRACTORSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_ENGINEER_SUBCONTRACTORSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GeneralContractorColumn {
                get {
                    return this.columnGeneralContractor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GeneralWSIBColumn {
                get {
                    return this.columnGeneralWSIB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GeneralInsuranceCertificateColumn {
                get {
                    return this.columnGeneralInsuranceCertificate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GeneralBondingSuppliedColumn {
                get {
                    return this.columnGeneralBondingSupplied;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GeneralMOLFormColumn {
                get {
                    return this.columnGeneralMOLForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GeneralNoticeProjectColumn {
                get {
                    return this.columnGeneralNoticeProject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GeneralForm1000Column {
                get {
                    return this.columnGeneralForm1000;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EngineeringFirmIDColumn {
                get {
                    return this.columnEngineeringFirmID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EngineerIDColumn {
                get {
                    return this.columnEngineerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EngineerNumberColumn {
                get {
                    return this.columnEngineerNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubcontractorUsedColumn {
                get {
                    return this.columnSubcontractorUsed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BondNumberColumn {
                get {
                    return this.columnBondNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow this[int index] {
                get {
                    return ((LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowChangeEventHandler LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowChanging;
            
            public event LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowChangeEventHandler LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowChanged;
            
            public event LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowChangeEventHandler LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowDeleting;
            
            public event LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowChangeEventHandler LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_ENGINEER_SUBCONTRACTORSRow(LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow AddLFS_PROJECT_ENGINEER_SUBCONTRACTORSRow(LFS_PROJECTRow parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_ENGINEER_SUBCONTRACTORS, bool GeneralContractor, bool GeneralWSIB, bool GeneralInsuranceCertificate, string GeneralBondingSupplied, string GeneralMOLForm, bool GeneralNoticeProject, bool GeneralForm1000, int EngineeringFirmID, int EngineerID, string EngineerNumber, bool SubcontractorUsed, int COMPANY_ID, string BondNumber) {
                LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow rowLFS_PROJECT_ENGINEER_SUBCONTRACTORSRow = ((LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        GeneralContractor,
                        GeneralWSIB,
                        GeneralInsuranceCertificate,
                        GeneralBondingSupplied,
                        GeneralMOLForm,
                        GeneralNoticeProject,
                        GeneralForm1000,
                        EngineeringFirmID,
                        EngineerID,
                        EngineerNumber,
                        SubcontractorUsed,
                        COMPANY_ID,
                        BondNumber};
                if ((parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_ENGINEER_SUBCONTRACTORS != null)) {
                    columnValuesArray[0] = parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_ENGINEER_SUBCONTRACTORS[0];
                }
                rowLFS_PROJECT_ENGINEER_SUBCONTRACTORSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_ENGINEER_SUBCONTRACTORSRow);
                return rowLFS_PROJECT_ENGINEER_SUBCONTRACTORSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow FindByProjectID(int ProjectID) {
                return ((LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow)(this.Rows.Find(new object[] {
                            ProjectID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_ENGINEER_SUBCONTRACTORSDataTable cln = ((LFS_PROJECT_ENGINEER_SUBCONTRACTORSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_ENGINEER_SUBCONTRACTORSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnGeneralContractor = base.Columns["GeneralContractor"];
                this.columnGeneralWSIB = base.Columns["GeneralWSIB"];
                this.columnGeneralInsuranceCertificate = base.Columns["GeneralInsuranceCertificate"];
                this.columnGeneralBondingSupplied = base.Columns["GeneralBondingSupplied"];
                this.columnGeneralMOLForm = base.Columns["GeneralMOLForm"];
                this.columnGeneralNoticeProject = base.Columns["GeneralNoticeProject"];
                this.columnGeneralForm1000 = base.Columns["GeneralForm1000"];
                this.columnEngineeringFirmID = base.Columns["EngineeringFirmID"];
                this.columnEngineerID = base.Columns["EngineerID"];
                this.columnEngineerNumber = base.Columns["EngineerNumber"];
                this.columnSubcontractorUsed = base.Columns["SubcontractorUsed"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnBondNumber = base.Columns["BondNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnGeneralContractor = new global::System.Data.DataColumn("GeneralContractor", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralContractor);
                this.columnGeneralWSIB = new global::System.Data.DataColumn("GeneralWSIB", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralWSIB);
                this.columnGeneralInsuranceCertificate = new global::System.Data.DataColumn("GeneralInsuranceCertificate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralInsuranceCertificate);
                this.columnGeneralBondingSupplied = new global::System.Data.DataColumn("GeneralBondingSupplied", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralBondingSupplied);
                this.columnGeneralMOLForm = new global::System.Data.DataColumn("GeneralMOLForm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralMOLForm);
                this.columnGeneralNoticeProject = new global::System.Data.DataColumn("GeneralNoticeProject", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralNoticeProject);
                this.columnGeneralForm1000 = new global::System.Data.DataColumn("GeneralForm1000", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralForm1000);
                this.columnEngineeringFirmID = new global::System.Data.DataColumn("EngineeringFirmID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngineeringFirmID);
                this.columnEngineerID = new global::System.Data.DataColumn("EngineerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngineerID);
                this.columnEngineerNumber = new global::System.Data.DataColumn("EngineerNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngineerNumber);
                this.columnSubcontractorUsed = new global::System.Data.DataColumn("SubcontractorUsed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubcontractorUsed);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnBondNumber = new global::System.Data.DataColumn("BondNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBondNumber);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnProjectID.Unique = true;
                this.columnGeneralContractor.AllowDBNull = false;
                this.columnGeneralWSIB.AllowDBNull = false;
                this.columnGeneralInsuranceCertificate.AllowDBNull = false;
                this.columnGeneralBondingSupplied.AllowDBNull = false;
                this.columnGeneralBondingSupplied.MaxLength = 5;
                this.columnGeneralMOLForm.AllowDBNull = false;
                this.columnGeneralMOLForm.MaxLength = 5;
                this.columnGeneralNoticeProject.AllowDBNull = false;
                this.columnGeneralForm1000.AllowDBNull = false;
                this.columnEngineerNumber.MaxLength = 25;
                this.columnSubcontractorUsed.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnBondNumber.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow NewLFS_PROJECT_ENGINEER_SUBCONTRACTORSRow() {
                return ((LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowChanged != null)) {
                    this.LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowChanged(this, new LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowChangeEvent(((LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowChanging != null)) {
                    this.LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowChanging(this, new LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowChangeEvent(((LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowDeleted != null)) {
                    this.LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowDeleted(this, new LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowChangeEvent(((LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowDeleting != null)) {
                    this.LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowDeleting(this, new LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowChangeEvent(((LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_ENGINEER_SUBCONTRACTORSRow(LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_ENGINEER_SUBCONTRACTORSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_LASTLOGINDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnLastLoggedInDate;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_LASTLOGINDataTable() {
                this.TableName = "LFS_PROJECT_LASTLOGIN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_LASTLOGINDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_LASTLOGINDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastLoggedInDateColumn {
                get {
                    return this.columnLastLoggedInDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_LASTLOGINRow this[int index] {
                get {
                    return ((LFS_PROJECT_LASTLOGINRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_LASTLOGINRowChangeEventHandler LFS_PROJECT_LASTLOGINRowChanging;
            
            public event LFS_PROJECT_LASTLOGINRowChangeEventHandler LFS_PROJECT_LASTLOGINRowChanged;
            
            public event LFS_PROJECT_LASTLOGINRowChangeEventHandler LFS_PROJECT_LASTLOGINRowDeleting;
            
            public event LFS_PROJECT_LASTLOGINRowChangeEventHandler LFS_PROJECT_LASTLOGINRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_LASTLOGINRow(LFS_PROJECT_LASTLOGINRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_LASTLOGINRow AddLFS_PROJECT_LASTLOGINRow(LFS_PROJECTRow parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_LASTLOGIN, int UserID, System.DateTime LastLoggedInDate, int COMPANY_ID, bool Deleted) {
                LFS_PROJECT_LASTLOGINRow rowLFS_PROJECT_LASTLOGINRow = ((LFS_PROJECT_LASTLOGINRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        UserID,
                        LastLoggedInDate,
                        COMPANY_ID,
                        Deleted};
                if ((parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_LASTLOGIN != null)) {
                    columnValuesArray[0] = parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_LASTLOGIN[0];
                }
                rowLFS_PROJECT_LASTLOGINRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_LASTLOGINRow);
                return rowLFS_PROJECT_LASTLOGINRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_LASTLOGINRow FindByProjectIDUserIDCOMPANY_ID(int ProjectID, int UserID, int COMPANY_ID) {
                return ((LFS_PROJECT_LASTLOGINRow)(this.Rows.Find(new object[] {
                            ProjectID,
                            UserID,
                            COMPANY_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_LASTLOGINDataTable cln = ((LFS_PROJECT_LASTLOGINDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_LASTLOGINDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnUserID = base.Columns["UserID"];
                this.columnLastLoggedInDate = base.Columns["LastLoggedInDate"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnDeleted = base.Columns["Deleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnLastLoggedInDate = new global::System.Data.DataColumn("LastLoggedInDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastLoggedInDate);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID,
                                this.columnUserID,
                                this.columnCOMPANY_ID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnUserID.AllowDBNull = false;
                this.columnLastLoggedInDate.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_LASTLOGINRow NewLFS_PROJECT_LASTLOGINRow() {
                return ((LFS_PROJECT_LASTLOGINRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_LASTLOGINRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_LASTLOGINRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_LASTLOGINRowChanged != null)) {
                    this.LFS_PROJECT_LASTLOGINRowChanged(this, new LFS_PROJECT_LASTLOGINRowChangeEvent(((LFS_PROJECT_LASTLOGINRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_LASTLOGINRowChanging != null)) {
                    this.LFS_PROJECT_LASTLOGINRowChanging(this, new LFS_PROJECT_LASTLOGINRowChangeEvent(((LFS_PROJECT_LASTLOGINRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_LASTLOGINRowDeleted != null)) {
                    this.LFS_PROJECT_LASTLOGINRowDeleted(this, new LFS_PROJECT_LASTLOGINRowChangeEvent(((LFS_PROJECT_LASTLOGINRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_LASTLOGINRowDeleting != null)) {
                    this.LFS_PROJECT_LASTLOGINRowDeleting(this, new LFS_PROJECT_LASTLOGINRowChangeEvent(((LFS_PROJECT_LASTLOGINRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_LASTLOGINRow(LFS_PROJECT_LASTLOGINRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_LASTLOGINDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_WORK_FUNCTION_FAIR_WAGEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnWork_;
            
            private global::System.Data.DataColumn columnFunction_;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnIsFairWage;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_WORK_FUNCTION_FAIR_WAGEDataTable() {
                this.TableName = "LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_WORK_FUNCTION_FAIR_WAGEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_WORK_FUNCTION_FAIR_WAGEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Work_Column {
                get {
                    return this.columnWork_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Function_Column {
                get {
                    return this.columnFunction_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsFairWageColumn {
                get {
                    return this.columnIsFairWage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow this[int index] {
                get {
                    return ((LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowChangeEventHandler LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowChanging;
            
            public event LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowChangeEventHandler LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowChanged;
            
            public event LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowChangeEventHandler LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowDeleting;
            
            public event LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowChangeEventHandler LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow(LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow AddLFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow(LFS_PROJECTRow parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE, string Work_, string Function_, int RefID, bool IsFairWage, bool Deleted, int COMPANY_ID) {
                LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow rowLFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow = ((LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Work_,
                        Function_,
                        RefID,
                        IsFairWage,
                        Deleted,
                        COMPANY_ID};
                if ((parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE != null)) {
                    columnValuesArray[0] = parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE[0];
                }
                rowLFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow);
                return rowLFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow FindByProjectIDWork_Function_RefID(int ProjectID, string Work_, string Function_, int RefID) {
                return ((LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow)(this.Rows.Find(new object[] {
                            ProjectID,
                            Work_,
                            Function_,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_WORK_FUNCTION_FAIR_WAGEDataTable cln = ((LFS_PROJECT_WORK_FUNCTION_FAIR_WAGEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_WORK_FUNCTION_FAIR_WAGEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnWork_ = base.Columns["Work_"];
                this.columnFunction_ = base.Columns["Function_"];
                this.columnRefID = base.Columns["RefID"];
                this.columnIsFairWage = base.Columns["IsFairWage"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnWork_ = new global::System.Data.DataColumn("Work_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWork_);
                this.columnFunction_ = new global::System.Data.DataColumn("Function_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunction_);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnIsFairWage = new global::System.Data.DataColumn("IsFairWage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsFairWage);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID,
                                this.columnWork_,
                                this.columnFunction_,
                                this.columnRefID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnWork_.AllowDBNull = false;
                this.columnWork_.MaxLength = 50;
                this.columnFunction_.AllowDBNull = false;
                this.columnFunction_.MaxLength = 50;
                this.columnRefID.AllowDBNull = false;
                this.columnIsFairWage.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow NewLFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow() {
                return ((LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowChanged != null)) {
                    this.LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowChanged(this, new LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowChangeEvent(((LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowChanging != null)) {
                    this.LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowChanging(this, new LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowChangeEvent(((LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowDeleted != null)) {
                    this.LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowDeleted(this, new LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowChangeEvent(((LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowDeleting != null)) {
                    this.LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowDeleting(this, new LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowChangeEvent(((LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow(LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_WORK_FUNCTION_FAIR_WAGEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnCountryID;
            
            private global::System.Data.DataColumn columnOfficeID;
            
            private global::System.Data.DataColumn columnProjectLeadID;
            
            private global::System.Data.DataColumn columnSalesmanID;
            
            private global::System.Data.DataColumn columnProjectNumber;
            
            private global::System.Data.DataColumn columnProjectType;
            
            private global::System.Data.DataColumn columnProjectState;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnProposalDate;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnEndDate;
            
            private global::System.Data.DataColumn columnClientID;
            
            private global::System.Data.DataColumn columnClientProjectNumber;
            
            private global::System.Data.DataColumn columnClientPrimaryContactID;
            
            private global::System.Data.DataColumn columnClientSecondaryContactID;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnOriginalProjectID;
            
            private global::System.Data.DataColumn columnProjectNumberCopy;
            
            private global::System.Data.DataColumn columnLIBRARY_CATEGORIES_ID;
            
            private global::System.Data.DataColumn columnProvinceID;
            
            private global::System.Data.DataColumn columnCityID;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnCountyID;
            
            private global::System.Data.DataColumn columnFairWageApplies;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTDataTable() {
                this.TableName = "LFS_PROJECT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryIDColumn {
                get {
                    return this.columnCountryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfficeIDColumn {
                get {
                    return this.columnOfficeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectLeadIDColumn {
                get {
                    return this.columnProjectLeadID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesmanIDColumn {
                get {
                    return this.columnSalesmanID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectNumberColumn {
                get {
                    return this.columnProjectNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectTypeColumn {
                get {
                    return this.columnProjectType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectStateColumn {
                get {
                    return this.columnProjectState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProposalDateColumn {
                get {
                    return this.columnProposalDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientProjectNumberColumn {
                get {
                    return this.columnClientProjectNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientPrimaryContactIDColumn {
                get {
                    return this.columnClientPrimaryContactID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientSecondaryContactIDColumn {
                get {
                    return this.columnClientSecondaryContactID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OriginalProjectIDColumn {
                get {
                    return this.columnOriginalProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectNumberCopyColumn {
                get {
                    return this.columnProjectNumberCopy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIBRARY_CATEGORIES_IDColumn {
                get {
                    return this.columnLIBRARY_CATEGORIES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProvinceIDColumn {
                get {
                    return this.columnProvinceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityIDColumn {
                get {
                    return this.columnCityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountyIDColumn {
                get {
                    return this.columnCountyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FairWageAppliesColumn {
                get {
                    return this.columnFairWageApplies;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRow this[int index] {
                get {
                    return ((LFS_PROJECTRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECTRowChangeEventHandler LFS_PROJECTRowChanging;
            
            public event LFS_PROJECTRowChangeEventHandler LFS_PROJECTRowChanged;
            
            public event LFS_PROJECTRowChangeEventHandler LFS_PROJECTRowDeleting;
            
            public event LFS_PROJECTRowChangeEventHandler LFS_PROJECTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECTRow(LFS_PROJECTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRow AddLFS_PROJECTRow(
                        long CountryID, 
                        int OfficeID, 
                        int ProjectLeadID, 
                        int SalesmanID, 
                        string ProjectNumber, 
                        string ProjectType, 
                        string ProjectState, 
                        string Name, 
                        string Description, 
                        System.DateTime ProposalDate, 
                        System.DateTime StartDate, 
                        System.DateTime EndDate, 
                        int ClientID, 
                        string ClientProjectNumber, 
                        int ClientPrimaryContactID, 
                        int ClientSecondaryContactID, 
                        bool Deleted, 
                        int OriginalProjectID, 
                        int ProjectNumberCopy, 
                        int LIBRARY_CATEGORIES_ID, 
                        long ProvinceID, 
                        long CityID, 
                        int COMPANY_ID, 
                        long CountyID, 
                        bool FairWageApplies) {
                LFS_PROJECTRow rowLFS_PROJECTRow = ((LFS_PROJECTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CountryID,
                        OfficeID,
                        ProjectLeadID,
                        SalesmanID,
                        ProjectNumber,
                        ProjectType,
                        ProjectState,
                        Name,
                        Description,
                        ProposalDate,
                        StartDate,
                        EndDate,
                        ClientID,
                        ClientProjectNumber,
                        ClientPrimaryContactID,
                        ClientSecondaryContactID,
                        Deleted,
                        OriginalProjectID,
                        ProjectNumberCopy,
                        LIBRARY_CATEGORIES_ID,
                        ProvinceID,
                        CityID,
                        COMPANY_ID,
                        CountyID,
                        FairWageApplies};
                rowLFS_PROJECTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECTRow);
                return rowLFS_PROJECTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRow FindByProjectID(int ProjectID) {
                return ((LFS_PROJECTRow)(this.Rows.Find(new object[] {
                            ProjectID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECTDataTable cln = ((LFS_PROJECTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnCountryID = base.Columns["CountryID"];
                this.columnOfficeID = base.Columns["OfficeID"];
                this.columnProjectLeadID = base.Columns["ProjectLeadID"];
                this.columnSalesmanID = base.Columns["SalesmanID"];
                this.columnProjectNumber = base.Columns["ProjectNumber"];
                this.columnProjectType = base.Columns["ProjectType"];
                this.columnProjectState = base.Columns["ProjectState"];
                this.columnName = base.Columns["Name"];
                this.columnDescription = base.Columns["Description"];
                this.columnProposalDate = base.Columns["ProposalDate"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnEndDate = base.Columns["EndDate"];
                this.columnClientID = base.Columns["ClientID"];
                this.columnClientProjectNumber = base.Columns["ClientProjectNumber"];
                this.columnClientPrimaryContactID = base.Columns["ClientPrimaryContactID"];
                this.columnClientSecondaryContactID = base.Columns["ClientSecondaryContactID"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnOriginalProjectID = base.Columns["OriginalProjectID"];
                this.columnProjectNumberCopy = base.Columns["ProjectNumberCopy"];
                this.columnLIBRARY_CATEGORIES_ID = base.Columns["LIBRARY_CATEGORIES_ID"];
                this.columnProvinceID = base.Columns["ProvinceID"];
                this.columnCityID = base.Columns["CityID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnCountyID = base.Columns["CountyID"];
                this.columnFairWageApplies = base.Columns["FairWageApplies"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnCountryID = new global::System.Data.DataColumn("CountryID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryID);
                this.columnOfficeID = new global::System.Data.DataColumn("OfficeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficeID);
                this.columnProjectLeadID = new global::System.Data.DataColumn("ProjectLeadID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectLeadID);
                this.columnSalesmanID = new global::System.Data.DataColumn("SalesmanID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesmanID);
                this.columnProjectNumber = new global::System.Data.DataColumn("ProjectNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectNumber);
                this.columnProjectType = new global::System.Data.DataColumn("ProjectType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectType);
                this.columnProjectState = new global::System.Data.DataColumn("ProjectState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectState);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnProposalDate = new global::System.Data.DataColumn("ProposalDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProposalDate);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnClientID = new global::System.Data.DataColumn("ClientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnClientProjectNumber = new global::System.Data.DataColumn("ClientProjectNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientProjectNumber);
                this.columnClientPrimaryContactID = new global::System.Data.DataColumn("ClientPrimaryContactID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientPrimaryContactID);
                this.columnClientSecondaryContactID = new global::System.Data.DataColumn("ClientSecondaryContactID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientSecondaryContactID);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnOriginalProjectID = new global::System.Data.DataColumn("OriginalProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalProjectID);
                this.columnProjectNumberCopy = new global::System.Data.DataColumn("ProjectNumberCopy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectNumberCopy);
                this.columnLIBRARY_CATEGORIES_ID = new global::System.Data.DataColumn("LIBRARY_CATEGORIES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIBRARY_CATEGORIES_ID);
                this.columnProvinceID = new global::System.Data.DataColumn("ProvinceID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvinceID);
                this.columnCityID = new global::System.Data.DataColumn("CityID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityID);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnCountyID = new global::System.Data.DataColumn("CountyID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountyID);
                this.columnFairWageApplies = new global::System.Data.DataColumn("FairWageApplies", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFairWageApplies);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID}, true));
                this.columnProjectID.AutoIncrement = true;
                this.columnProjectID.AutoIncrementSeed = -1;
                this.columnProjectID.AutoIncrementStep = -1;
                this.columnProjectID.AllowDBNull = false;
                this.columnProjectID.ReadOnly = true;
                this.columnProjectID.Unique = true;
                this.columnCountryID.AllowDBNull = false;
                this.columnOfficeID.AllowDBNull = false;
                this.columnSalesmanID.AllowDBNull = false;
                this.columnProjectNumber.AllowDBNull = false;
                this.columnProjectNumber.MaxLength = 25;
                this.columnProjectType.AllowDBNull = false;
                this.columnProjectType.MaxLength = 25;
                this.columnProjectState.AllowDBNull = false;
                this.columnProjectState.MaxLength = 25;
                this.columnName.MaxLength = 100;
                this.columnDescription.MaxLength = 1073741823;
                this.columnClientID.AllowDBNull = false;
                this.columnClientProjectNumber.MaxLength = 50;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnFairWageApplies.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRow NewLFS_PROJECTRow() {
                return ((LFS_PROJECTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECTRowChanged != null)) {
                    this.LFS_PROJECTRowChanged(this, new LFS_PROJECTRowChangeEvent(((LFS_PROJECTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECTRowChanging != null)) {
                    this.LFS_PROJECTRowChanging(this, new LFS_PROJECTRowChangeEvent(((LFS_PROJECTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECTRowDeleted != null)) {
                    this.LFS_PROJECTRowDeleted(this, new LFS_PROJECTRowChangeEvent(((LFS_PROJECTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECTRowDeleting != null)) {
                    this.LFS_PROJECTRowDeleting(this, new LFS_PROJECTRowChangeEvent(((LFS_PROJECTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECTRow(LFS_PROJECTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_JOB_CLASS_TYPE_RATEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnJobClassType;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnFringeRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_JOB_CLASS_TYPE_RATEDataTable() {
                this.TableName = "LFS_PROJECT_JOB_CLASS_TYPE_RATE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_JOB_CLASS_TYPE_RATEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_JOB_CLASS_TYPE_RATEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobClassTypeColumn {
                get {
                    return this.columnJobClassType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FringeRateColumn {
                get {
                    return this.columnFringeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_JOB_CLASS_TYPE_RATERow this[int index] {
                get {
                    return ((LFS_PROJECT_JOB_CLASS_TYPE_RATERow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_JOB_CLASS_TYPE_RATERowChangeEventHandler LFS_PROJECT_JOB_CLASS_TYPE_RATERowChanging;
            
            public event LFS_PROJECT_JOB_CLASS_TYPE_RATERowChangeEventHandler LFS_PROJECT_JOB_CLASS_TYPE_RATERowChanged;
            
            public event LFS_PROJECT_JOB_CLASS_TYPE_RATERowChangeEventHandler LFS_PROJECT_JOB_CLASS_TYPE_RATERowDeleting;
            
            public event LFS_PROJECT_JOB_CLASS_TYPE_RATERowChangeEventHandler LFS_PROJECT_JOB_CLASS_TYPE_RATERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_JOB_CLASS_TYPE_RATERow(LFS_PROJECT_JOB_CLASS_TYPE_RATERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_JOB_CLASS_TYPE_RATERow AddLFS_PROJECT_JOB_CLASS_TYPE_RATERow(LFS_PROJECTRow parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_JOB_CLASS_TYPE_RATE, string JobClassType, int RefID, decimal Rate, bool Deleted, int COMPANY_ID, decimal FringeRate) {
                LFS_PROJECT_JOB_CLASS_TYPE_RATERow rowLFS_PROJECT_JOB_CLASS_TYPE_RATERow = ((LFS_PROJECT_JOB_CLASS_TYPE_RATERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        JobClassType,
                        RefID,
                        Rate,
                        Deleted,
                        COMPANY_ID,
                        FringeRate};
                if ((parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_JOB_CLASS_TYPE_RATE != null)) {
                    columnValuesArray[0] = parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_JOB_CLASS_TYPE_RATE[0];
                }
                rowLFS_PROJECT_JOB_CLASS_TYPE_RATERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_JOB_CLASS_TYPE_RATERow);
                return rowLFS_PROJECT_JOB_CLASS_TYPE_RATERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_JOB_CLASS_TYPE_RATERow FindByProjectIDJobClassTypeRefID(int ProjectID, string JobClassType, int RefID) {
                return ((LFS_PROJECT_JOB_CLASS_TYPE_RATERow)(this.Rows.Find(new object[] {
                            ProjectID,
                            JobClassType,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_JOB_CLASS_TYPE_RATEDataTable cln = ((LFS_PROJECT_JOB_CLASS_TYPE_RATEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_JOB_CLASS_TYPE_RATEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnJobClassType = base.Columns["JobClassType"];
                this.columnRefID = base.Columns["RefID"];
                this.columnRate = base.Columns["Rate"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnFringeRate = base.Columns["FringeRate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnJobClassType = new global::System.Data.DataColumn("JobClassType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobClassType);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnFringeRate = new global::System.Data.DataColumn("FringeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFringeRate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID,
                                this.columnJobClassType,
                                this.columnRefID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnJobClassType.AllowDBNull = false;
                this.columnJobClassType.MaxLength = 50;
                this.columnRefID.AllowDBNull = false;
                this.columnRate.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnFringeRate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_JOB_CLASS_TYPE_RATERow NewLFS_PROJECT_JOB_CLASS_TYPE_RATERow() {
                return ((LFS_PROJECT_JOB_CLASS_TYPE_RATERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_JOB_CLASS_TYPE_RATERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_JOB_CLASS_TYPE_RATERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_JOB_CLASS_TYPE_RATERowChanged != null)) {
                    this.LFS_PROJECT_JOB_CLASS_TYPE_RATERowChanged(this, new LFS_PROJECT_JOB_CLASS_TYPE_RATERowChangeEvent(((LFS_PROJECT_JOB_CLASS_TYPE_RATERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_JOB_CLASS_TYPE_RATERowChanging != null)) {
                    this.LFS_PROJECT_JOB_CLASS_TYPE_RATERowChanging(this, new LFS_PROJECT_JOB_CLASS_TYPE_RATERowChangeEvent(((LFS_PROJECT_JOB_CLASS_TYPE_RATERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_JOB_CLASS_TYPE_RATERowDeleted != null)) {
                    this.LFS_PROJECT_JOB_CLASS_TYPE_RATERowDeleted(this, new LFS_PROJECT_JOB_CLASS_TYPE_RATERowChangeEvent(((LFS_PROJECT_JOB_CLASS_TYPE_RATERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_JOB_CLASS_TYPE_RATERowDeleting != null)) {
                    this.LFS_PROJECT_JOB_CLASS_TYPE_RATERowDeleting(this, new LFS_PROJECT_JOB_CLASS_TYPE_RATERowChangeEvent(((LFS_PROJECT_JOB_CLASS_TYPE_RATERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_JOB_CLASS_TYPE_RATERow(LFS_PROJECT_JOB_CLASS_TYPE_RATERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_JOB_CLASS_TYPE_RATEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_SUBCONTRACTORDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnSubcontractorID;
            
            private global::System.Data.DataColumn columnWrittenQuote;
            
            private global::System.Data.DataColumn columnSurveyedSite;
            
            private global::System.Data.DataColumn columnWorkedBefore;
            
            private global::System.Data.DataColumn columnRole;
            
            private global::System.Data.DataColumn columnAgreement;
            
            private global::System.Data.DataColumn columnIssues;
            
            private global::System.Data.DataColumn columnPurchaseOrder;
            
            private global::System.Data.DataColumn columnInsuranceCertificate;
            
            private global::System.Data.DataColumn columnWSIB;
            
            private global::System.Data.DataColumn columnMOLForm1000;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnRoyalties;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SUBCONTRACTORDataTable() {
                this.TableName = "LFS_PROJECT_SUBCONTRACTOR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_SUBCONTRACTORDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_SUBCONTRACTORDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubcontractorIDColumn {
                get {
                    return this.columnSubcontractorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WrittenQuoteColumn {
                get {
                    return this.columnWrittenQuote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SurveyedSiteColumn {
                get {
                    return this.columnSurveyedSite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkedBeforeColumn {
                get {
                    return this.columnWorkedBefore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoleColumn {
                get {
                    return this.columnRole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgreementColumn {
                get {
                    return this.columnAgreement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuesColumn {
                get {
                    return this.columnIssues;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchaseOrderColumn {
                get {
                    return this.columnPurchaseOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsuranceCertificateColumn {
                get {
                    return this.columnInsuranceCertificate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WSIBColumn {
                get {
                    return this.columnWSIB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOLForm1000Column {
                get {
                    return this.columnMOLForm1000;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoyaltiesColumn {
                get {
                    return this.columnRoyalties;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SUBCONTRACTORRow this[int index] {
                get {
                    return ((LFS_PROJECT_SUBCONTRACTORRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_SUBCONTRACTORRowChangeEventHandler LFS_PROJECT_SUBCONTRACTORRowChanging;
            
            public event LFS_PROJECT_SUBCONTRACTORRowChangeEventHandler LFS_PROJECT_SUBCONTRACTORRowChanged;
            
            public event LFS_PROJECT_SUBCONTRACTORRowChangeEventHandler LFS_PROJECT_SUBCONTRACTORRowDeleting;
            
            public event LFS_PROJECT_SUBCONTRACTORRowChangeEventHandler LFS_PROJECT_SUBCONTRACTORRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_SUBCONTRACTORRow(LFS_PROJECT_SUBCONTRACTORRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SUBCONTRACTORRow AddLFS_PROJECT_SUBCONTRACTORRow(
                        int ProjectID, 
                        int RefID, 
                        int SubcontractorID, 
                        bool WrittenQuote, 
                        bool SurveyedSite, 
                        bool WorkedBefore, 
                        string Role, 
                        bool Agreement, 
                        string Issues, 
                        bool PurchaseOrder, 
                        bool InsuranceCertificate, 
                        bool WSIB, 
                        string MOLForm1000, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        int Royalties) {
                LFS_PROJECT_SUBCONTRACTORRow rowLFS_PROJECT_SUBCONTRACTORRow = ((LFS_PROJECT_SUBCONTRACTORRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProjectID,
                        RefID,
                        SubcontractorID,
                        WrittenQuote,
                        SurveyedSite,
                        WorkedBefore,
                        Role,
                        Agreement,
                        Issues,
                        PurchaseOrder,
                        InsuranceCertificate,
                        WSIB,
                        MOLForm1000,
                        Deleted,
                        COMPANY_ID,
                        Royalties};
                rowLFS_PROJECT_SUBCONTRACTORRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_SUBCONTRACTORRow);
                return rowLFS_PROJECT_SUBCONTRACTORRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SUBCONTRACTORRow FindByProjectIDRefID(int ProjectID, int RefID) {
                return ((LFS_PROJECT_SUBCONTRACTORRow)(this.Rows.Find(new object[] {
                            ProjectID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_SUBCONTRACTORDataTable cln = ((LFS_PROJECT_SUBCONTRACTORDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_SUBCONTRACTORDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnSubcontractorID = base.Columns["SubcontractorID"];
                this.columnWrittenQuote = base.Columns["WrittenQuote"];
                this.columnSurveyedSite = base.Columns["SurveyedSite"];
                this.columnWorkedBefore = base.Columns["WorkedBefore"];
                this.columnRole = base.Columns["Role"];
                this.columnAgreement = base.Columns["Agreement"];
                this.columnIssues = base.Columns["Issues"];
                this.columnPurchaseOrder = base.Columns["PurchaseOrder"];
                this.columnInsuranceCertificate = base.Columns["InsuranceCertificate"];
                this.columnWSIB = base.Columns["WSIB"];
                this.columnMOLForm1000 = base.Columns["MOLForm1000"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnRoyalties = base.Columns["Royalties"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnSubcontractorID = new global::System.Data.DataColumn("SubcontractorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubcontractorID);
                this.columnWrittenQuote = new global::System.Data.DataColumn("WrittenQuote", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWrittenQuote);
                this.columnSurveyedSite = new global::System.Data.DataColumn("SurveyedSite", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyedSite);
                this.columnWorkedBefore = new global::System.Data.DataColumn("WorkedBefore", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkedBefore);
                this.columnRole = new global::System.Data.DataColumn("Role", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRole);
                this.columnAgreement = new global::System.Data.DataColumn("Agreement", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgreement);
                this.columnIssues = new global::System.Data.DataColumn("Issues", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssues);
                this.columnPurchaseOrder = new global::System.Data.DataColumn("PurchaseOrder", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseOrder);
                this.columnInsuranceCertificate = new global::System.Data.DataColumn("InsuranceCertificate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsuranceCertificate);
                this.columnWSIB = new global::System.Data.DataColumn("WSIB", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWSIB);
                this.columnMOLForm1000 = new global::System.Data.DataColumn("MOLForm1000", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOLForm1000);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnRoyalties = new global::System.Data.DataColumn("Royalties", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoyalties);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID,
                                this.columnRefID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnSubcontractorID.AllowDBNull = false;
                this.columnWrittenQuote.AllowDBNull = false;
                this.columnSurveyedSite.AllowDBNull = false;
                this.columnWorkedBefore.AllowDBNull = false;
                this.columnRole.MaxLength = 1073741823;
                this.columnAgreement.AllowDBNull = false;
                this.columnIssues.MaxLength = 1073741823;
                this.columnPurchaseOrder.AllowDBNull = false;
                this.columnInsuranceCertificate.AllowDBNull = false;
                this.columnWSIB.AllowDBNull = false;
                this.columnMOLForm1000.MaxLength = 5;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SUBCONTRACTORRow NewLFS_PROJECT_SUBCONTRACTORRow() {
                return ((LFS_PROJECT_SUBCONTRACTORRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_SUBCONTRACTORRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_SUBCONTRACTORRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_SUBCONTRACTORRowChanged != null)) {
                    this.LFS_PROJECT_SUBCONTRACTORRowChanged(this, new LFS_PROJECT_SUBCONTRACTORRowChangeEvent(((LFS_PROJECT_SUBCONTRACTORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_SUBCONTRACTORRowChanging != null)) {
                    this.LFS_PROJECT_SUBCONTRACTORRowChanging(this, new LFS_PROJECT_SUBCONTRACTORRowChangeEvent(((LFS_PROJECT_SUBCONTRACTORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_SUBCONTRACTORRowDeleted != null)) {
                    this.LFS_PROJECT_SUBCONTRACTORRowDeleted(this, new LFS_PROJECT_SUBCONTRACTORRowChangeEvent(((LFS_PROJECT_SUBCONTRACTORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_SUBCONTRACTORRowDeleting != null)) {
                    this.LFS_PROJECT_SUBCONTRACTORRowDeleting(this, new LFS_PROJECT_SUBCONTRACTORRowChangeEvent(((LFS_PROJECT_SUBCONTRACTORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_SUBCONTRACTORRow(LFS_PROJECT_SUBCONTRACTORRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_SUBCONTRACTORDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_REVENUEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnRevenue;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_REVENUEDataTable() {
                this.TableName = "LFS_PROJECT_REVENUE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_REVENUEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_REVENUEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RevenueColumn {
                get {
                    return this.columnRevenue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_REVENUERow this[int index] {
                get {
                    return ((LFS_PROJECT_REVENUERow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_REVENUERowChangeEventHandler LFS_PROJECT_REVENUERowChanging;
            
            public event LFS_PROJECT_REVENUERowChangeEventHandler LFS_PROJECT_REVENUERowChanged;
            
            public event LFS_PROJECT_REVENUERowChangeEventHandler LFS_PROJECT_REVENUERowDeleting;
            
            public event LFS_PROJECT_REVENUERowChangeEventHandler LFS_PROJECT_REVENUERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_REVENUERow(LFS_PROJECT_REVENUERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_REVENUERow AddLFS_PROJECT_REVENUERow(LFS_PROJECTRow parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_REVENUE, int RefID, System.DateTime Date, decimal Revenue, string Comment, bool Deleted, int COMPANY_ID) {
                LFS_PROJECT_REVENUERow rowLFS_PROJECT_REVENUERow = ((LFS_PROJECT_REVENUERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RefID,
                        Date,
                        Revenue,
                        Comment,
                        Deleted,
                        COMPANY_ID};
                if ((parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_REVENUE != null)) {
                    columnValuesArray[0] = parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_REVENUE[0];
                }
                rowLFS_PROJECT_REVENUERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_REVENUERow);
                return rowLFS_PROJECT_REVENUERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_REVENUERow FindByProjectIDRefID(int ProjectID, int RefID) {
                return ((LFS_PROJECT_REVENUERow)(this.Rows.Find(new object[] {
                            ProjectID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_REVENUEDataTable cln = ((LFS_PROJECT_REVENUEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_REVENUEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnDate = base.Columns["Date"];
                this.columnRevenue = base.Columns["Revenue"];
                this.columnComment = base.Columns["Comment"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnRevenue = new global::System.Data.DataColumn("Revenue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRevenue);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID,
                                this.columnRefID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnDate.AllowDBNull = false;
                this.columnRevenue.AllowDBNull = false;
                this.columnComment.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_REVENUERow NewLFS_PROJECT_REVENUERow() {
                return ((LFS_PROJECT_REVENUERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_REVENUERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_REVENUERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_REVENUERowChanged != null)) {
                    this.LFS_PROJECT_REVENUERowChanged(this, new LFS_PROJECT_REVENUERowChangeEvent(((LFS_PROJECT_REVENUERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_REVENUERowChanging != null)) {
                    this.LFS_PROJECT_REVENUERowChanging(this, new LFS_PROJECT_REVENUERowChangeEvent(((LFS_PROJECT_REVENUERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_REVENUERowDeleted != null)) {
                    this.LFS_PROJECT_REVENUERowDeleted(this, new LFS_PROJECT_REVENUERowChangeEvent(((LFS_PROJECT_REVENUERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_REVENUERowDeleting != null)) {
                    this.LFS_PROJECT_REVENUERowDeleting(this, new LFS_PROJECT_REVENUERowChangeEvent(((LFS_PROJECT_REVENUERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_REVENUERow(LFS_PROJECT_REVENUERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_REVENUEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_WORK_FUNCTION_BUDGETDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnWork_;
            
            private global::System.Data.DataColumn columnFunction_;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnBudget;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnBudget_;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_WORK_FUNCTION_BUDGETDataTable() {
                this.TableName = "LFS_PROJECT_WORK_FUNCTION_BUDGET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_WORK_FUNCTION_BUDGETDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_WORK_FUNCTION_BUDGETDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Work_Column {
                get {
                    return this.columnWork_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Function_Column {
                get {
                    return this.columnFunction_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BudgetColumn {
                get {
                    return this.columnBudget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Budget_Column {
                get {
                    return this.columnBudget_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_WORK_FUNCTION_BUDGETRow this[int index] {
                get {
                    return ((LFS_PROJECT_WORK_FUNCTION_BUDGETRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_WORK_FUNCTION_BUDGETRowChangeEventHandler LFS_PROJECT_WORK_FUNCTION_BUDGETRowChanging;
            
            public event LFS_PROJECT_WORK_FUNCTION_BUDGETRowChangeEventHandler LFS_PROJECT_WORK_FUNCTION_BUDGETRowChanged;
            
            public event LFS_PROJECT_WORK_FUNCTION_BUDGETRowChangeEventHandler LFS_PROJECT_WORK_FUNCTION_BUDGETRowDeleting;
            
            public event LFS_PROJECT_WORK_FUNCTION_BUDGETRowChangeEventHandler LFS_PROJECT_WORK_FUNCTION_BUDGETRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_WORK_FUNCTION_BUDGETRow(LFS_PROJECT_WORK_FUNCTION_BUDGETRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_WORK_FUNCTION_BUDGETRow AddLFS_PROJECT_WORK_FUNCTION_BUDGETRow(int ProjectID, string Work_, string Function_, int RefID, decimal Budget, bool Deleted, int COMPANY_ID, decimal Budget_) {
                LFS_PROJECT_WORK_FUNCTION_BUDGETRow rowLFS_PROJECT_WORK_FUNCTION_BUDGETRow = ((LFS_PROJECT_WORK_FUNCTION_BUDGETRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProjectID,
                        Work_,
                        Function_,
                        RefID,
                        Budget,
                        Deleted,
                        COMPANY_ID,
                        Budget_};
                rowLFS_PROJECT_WORK_FUNCTION_BUDGETRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_WORK_FUNCTION_BUDGETRow);
                return rowLFS_PROJECT_WORK_FUNCTION_BUDGETRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_WORK_FUNCTION_BUDGETRow FindByProjectIDWork_Function_RefID(int ProjectID, string Work_, string Function_, int RefID) {
                return ((LFS_PROJECT_WORK_FUNCTION_BUDGETRow)(this.Rows.Find(new object[] {
                            ProjectID,
                            Work_,
                            Function_,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_WORK_FUNCTION_BUDGETDataTable cln = ((LFS_PROJECT_WORK_FUNCTION_BUDGETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_WORK_FUNCTION_BUDGETDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnWork_ = base.Columns["Work_"];
                this.columnFunction_ = base.Columns["Function_"];
                this.columnRefID = base.Columns["RefID"];
                this.columnBudget = base.Columns["Budget"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnBudget_ = base.Columns["Budget_"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnWork_ = new global::System.Data.DataColumn("Work_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWork_);
                this.columnFunction_ = new global::System.Data.DataColumn("Function_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunction_);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnBudget = new global::System.Data.DataColumn("Budget", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudget);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnBudget_ = new global::System.Data.DataColumn("Budget_", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudget_);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID,
                                this.columnWork_,
                                this.columnFunction_,
                                this.columnRefID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnWork_.AllowDBNull = false;
                this.columnWork_.MaxLength = 50;
                this.columnFunction_.AllowDBNull = false;
                this.columnFunction_.MaxLength = 50;
                this.columnRefID.AllowDBNull = false;
                this.columnBudget.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnBudget_.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_WORK_FUNCTION_BUDGETRow NewLFS_PROJECT_WORK_FUNCTION_BUDGETRow() {
                return ((LFS_PROJECT_WORK_FUNCTION_BUDGETRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_WORK_FUNCTION_BUDGETRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_WORK_FUNCTION_BUDGETRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_WORK_FUNCTION_BUDGETRowChanged != null)) {
                    this.LFS_PROJECT_WORK_FUNCTION_BUDGETRowChanged(this, new LFS_PROJECT_WORK_FUNCTION_BUDGETRowChangeEvent(((LFS_PROJECT_WORK_FUNCTION_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_WORK_FUNCTION_BUDGETRowChanging != null)) {
                    this.LFS_PROJECT_WORK_FUNCTION_BUDGETRowChanging(this, new LFS_PROJECT_WORK_FUNCTION_BUDGETRowChangeEvent(((LFS_PROJECT_WORK_FUNCTION_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_WORK_FUNCTION_BUDGETRowDeleted != null)) {
                    this.LFS_PROJECT_WORK_FUNCTION_BUDGETRowDeleted(this, new LFS_PROJECT_WORK_FUNCTION_BUDGETRowChangeEvent(((LFS_PROJECT_WORK_FUNCTION_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_WORK_FUNCTION_BUDGETRowDeleting != null)) {
                    this.LFS_PROJECT_WORK_FUNCTION_BUDGETRowDeleting(this, new LFS_PROJECT_WORK_FUNCTION_BUDGETRowChangeEvent(((LFS_PROJECT_WORK_FUNCTION_BUDGETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_WORK_FUNCTION_BUDGETRow(LFS_PROJECT_WORK_FUNCTION_BUDGETRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_WORK_FUNCTION_BUDGETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_TERMSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnLiquidatedDamage;
            
            private global::System.Data.DataColumn columnLiquidatedRate;
            
            private global::System.Data.DataColumn columnLiquidatedUnit;
            
            private global::System.Data.DataColumn columnRelationshipClientWorkedBefore;
            
            private global::System.Data.DataColumn columnRelationshipClientQuirks;
            
            private global::System.Data.DataColumn columnRelationshipClientPromises;
            
            private global::System.Data.DataColumn columnRelationshipClientPromisesNotes;
            
            private global::System.Data.DataColumn columnRelationshipWaterObtain;
            
            private global::System.Data.DataColumn columnRelationshipMaterialDispose;
            
            private global::System.Data.DataColumn columnRelationshipRequireRPZ;
            
            private global::System.Data.DataColumn columnRelationshipStandardHydrantFitting;
            
            private global::System.Data.DataColumn columnRelationshipPreConstructionMeeting;
            
            private global::System.Data.DataColumn columnRelationshipSpecificMeetingLocation;
            
            private global::System.Data.DataColumn columnRelationshipSpecificMeetingLocationNotes;
            
            private global::System.Data.DataColumn columnRelationshipVehicleAccess;
            
            private global::System.Data.DataColumn columnRelationshipVehicleAccessNotes;
            
            private global::System.Data.DataColumn columnRelationshipProjectOutcome;
            
            private global::System.Data.DataColumn columnRelationshipSpecificReportingNeeds;
            
            private global::System.Data.DataColumn columnPurchaseOrderNumber;
            
            private global::System.Data.DataColumn columnPurchaseOrderAttached;
            
            private global::System.Data.DataColumn columnPurchaseOrderNotes;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnVehicleAccessRoad;
            
            private global::System.Data.DataColumn columnVehicleAccessEasement;
            
            private global::System.Data.DataColumn columnVehicleAccessOther;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TERMSDataTable() {
                this.TableName = "LFS_PROJECT_TERMS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_TERMSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_TERMSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LiquidatedDamageColumn {
                get {
                    return this.columnLiquidatedDamage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LiquidatedRateColumn {
                get {
                    return this.columnLiquidatedRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LiquidatedUnitColumn {
                get {
                    return this.columnLiquidatedUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipClientWorkedBeforeColumn {
                get {
                    return this.columnRelationshipClientWorkedBefore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipClientQuirksColumn {
                get {
                    return this.columnRelationshipClientQuirks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipClientPromisesColumn {
                get {
                    return this.columnRelationshipClientPromises;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipClientPromisesNotesColumn {
                get {
                    return this.columnRelationshipClientPromisesNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipWaterObtainColumn {
                get {
                    return this.columnRelationshipWaterObtain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipMaterialDisposeColumn {
                get {
                    return this.columnRelationshipMaterialDispose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipRequireRPZColumn {
                get {
                    return this.columnRelationshipRequireRPZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipStandardHydrantFittingColumn {
                get {
                    return this.columnRelationshipStandardHydrantFitting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipPreConstructionMeetingColumn {
                get {
                    return this.columnRelationshipPreConstructionMeeting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipSpecificMeetingLocationColumn {
                get {
                    return this.columnRelationshipSpecificMeetingLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipSpecificMeetingLocationNotesColumn {
                get {
                    return this.columnRelationshipSpecificMeetingLocationNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipVehicleAccessColumn {
                get {
                    return this.columnRelationshipVehicleAccess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipVehicleAccessNotesColumn {
                get {
                    return this.columnRelationshipVehicleAccessNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipProjectOutcomeColumn {
                get {
                    return this.columnRelationshipProjectOutcome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipSpecificReportingNeedsColumn {
                get {
                    return this.columnRelationshipSpecificReportingNeeds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchaseOrderNumberColumn {
                get {
                    return this.columnPurchaseOrderNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchaseOrderAttachedColumn {
                get {
                    return this.columnPurchaseOrderAttached;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchaseOrderNotesColumn {
                get {
                    return this.columnPurchaseOrderNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicleAccessRoadColumn {
                get {
                    return this.columnVehicleAccessRoad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicleAccessEasementColumn {
                get {
                    return this.columnVehicleAccessEasement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicleAccessOtherColumn {
                get {
                    return this.columnVehicleAccessOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TERMSRow this[int index] {
                get {
                    return ((LFS_PROJECT_TERMSRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_TERMSRowChangeEventHandler LFS_PROJECT_TERMSRowChanging;
            
            public event LFS_PROJECT_TERMSRowChangeEventHandler LFS_PROJECT_TERMSRowChanged;
            
            public event LFS_PROJECT_TERMSRowChangeEventHandler LFS_PROJECT_TERMSRowDeleting;
            
            public event LFS_PROJECT_TERMSRowChangeEventHandler LFS_PROJECT_TERMSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_TERMSRow(LFS_PROJECT_TERMSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TERMSRow AddLFS_PROJECT_TERMSRow(
                        LFS_PROJECTRow parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_TERMS, 
                        bool LiquidatedDamage, 
                        decimal LiquidatedRate, 
                        string LiquidatedUnit, 
                        bool RelationshipClientWorkedBefore, 
                        string RelationshipClientQuirks, 
                        bool RelationshipClientPromises, 
                        string RelationshipClientPromisesNotes, 
                        string RelationshipWaterObtain, 
                        string RelationshipMaterialDispose, 
                        bool RelationshipRequireRPZ, 
                        string RelationshipStandardHydrantFitting, 
                        bool RelationshipPreConstructionMeeting, 
                        bool RelationshipSpecificMeetingLocation, 
                        string RelationshipSpecificMeetingLocationNotes, 
                        string RelationshipVehicleAccess, 
                        string RelationshipVehicleAccessNotes, 
                        string RelationshipProjectOutcome, 
                        string RelationshipSpecificReportingNeeds, 
                        string PurchaseOrderNumber, 
                        bool PurchaseOrderAttached, 
                        string PurchaseOrderNotes, 
                        int COMPANY_ID, 
                        bool VehicleAccessRoad, 
                        bool VehicleAccessEasement, 
                        bool VehicleAccessOther) {
                LFS_PROJECT_TERMSRow rowLFS_PROJECT_TERMSRow = ((LFS_PROJECT_TERMSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        LiquidatedDamage,
                        LiquidatedRate,
                        LiquidatedUnit,
                        RelationshipClientWorkedBefore,
                        RelationshipClientQuirks,
                        RelationshipClientPromises,
                        RelationshipClientPromisesNotes,
                        RelationshipWaterObtain,
                        RelationshipMaterialDispose,
                        RelationshipRequireRPZ,
                        RelationshipStandardHydrantFitting,
                        RelationshipPreConstructionMeeting,
                        RelationshipSpecificMeetingLocation,
                        RelationshipSpecificMeetingLocationNotes,
                        RelationshipVehicleAccess,
                        RelationshipVehicleAccessNotes,
                        RelationshipProjectOutcome,
                        RelationshipSpecificReportingNeeds,
                        PurchaseOrderNumber,
                        PurchaseOrderAttached,
                        PurchaseOrderNotes,
                        COMPANY_ID,
                        VehicleAccessRoad,
                        VehicleAccessEasement,
                        VehicleAccessOther};
                if ((parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_TERMS != null)) {
                    columnValuesArray[0] = parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_TERMS[0];
                }
                rowLFS_PROJECT_TERMSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_TERMSRow);
                return rowLFS_PROJECT_TERMSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TERMSRow FindByProjectID(int ProjectID) {
                return ((LFS_PROJECT_TERMSRow)(this.Rows.Find(new object[] {
                            ProjectID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_TERMSDataTable cln = ((LFS_PROJECT_TERMSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_TERMSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnLiquidatedDamage = base.Columns["LiquidatedDamage"];
                this.columnLiquidatedRate = base.Columns["LiquidatedRate"];
                this.columnLiquidatedUnit = base.Columns["LiquidatedUnit"];
                this.columnRelationshipClientWorkedBefore = base.Columns["RelationshipClientWorkedBefore"];
                this.columnRelationshipClientQuirks = base.Columns["RelationshipClientQuirks"];
                this.columnRelationshipClientPromises = base.Columns["RelationshipClientPromises"];
                this.columnRelationshipClientPromisesNotes = base.Columns["RelationshipClientPromisesNotes"];
                this.columnRelationshipWaterObtain = base.Columns["RelationshipWaterObtain"];
                this.columnRelationshipMaterialDispose = base.Columns["RelationshipMaterialDispose"];
                this.columnRelationshipRequireRPZ = base.Columns["RelationshipRequireRPZ"];
                this.columnRelationshipStandardHydrantFitting = base.Columns["RelationshipStandardHydrantFitting"];
                this.columnRelationshipPreConstructionMeeting = base.Columns["RelationshipPreConstructionMeeting"];
                this.columnRelationshipSpecificMeetingLocation = base.Columns["RelationshipSpecificMeetingLocation"];
                this.columnRelationshipSpecificMeetingLocationNotes = base.Columns["RelationshipSpecificMeetingLocationNotes"];
                this.columnRelationshipVehicleAccess = base.Columns["RelationshipVehicleAccess"];
                this.columnRelationshipVehicleAccessNotes = base.Columns["RelationshipVehicleAccessNotes"];
                this.columnRelationshipProjectOutcome = base.Columns["RelationshipProjectOutcome"];
                this.columnRelationshipSpecificReportingNeeds = base.Columns["RelationshipSpecificReportingNeeds"];
                this.columnPurchaseOrderNumber = base.Columns["PurchaseOrderNumber"];
                this.columnPurchaseOrderAttached = base.Columns["PurchaseOrderAttached"];
                this.columnPurchaseOrderNotes = base.Columns["PurchaseOrderNotes"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnVehicleAccessRoad = base.Columns["VehicleAccessRoad"];
                this.columnVehicleAccessEasement = base.Columns["VehicleAccessEasement"];
                this.columnVehicleAccessOther = base.Columns["VehicleAccessOther"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnLiquidatedDamage = new global::System.Data.DataColumn("LiquidatedDamage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiquidatedDamage);
                this.columnLiquidatedRate = new global::System.Data.DataColumn("LiquidatedRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiquidatedRate);
                this.columnLiquidatedUnit = new global::System.Data.DataColumn("LiquidatedUnit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiquidatedUnit);
                this.columnRelationshipClientWorkedBefore = new global::System.Data.DataColumn("RelationshipClientWorkedBefore", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationshipClientWorkedBefore);
                this.columnRelationshipClientQuirks = new global::System.Data.DataColumn("RelationshipClientQuirks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationshipClientQuirks);
                this.columnRelationshipClientPromises = new global::System.Data.DataColumn("RelationshipClientPromises", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationshipClientPromises);
                this.columnRelationshipClientPromisesNotes = new global::System.Data.DataColumn("RelationshipClientPromisesNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationshipClientPromisesNotes);
                this.columnRelationshipWaterObtain = new global::System.Data.DataColumn("RelationshipWaterObtain", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationshipWaterObtain);
                this.columnRelationshipMaterialDispose = new global::System.Data.DataColumn("RelationshipMaterialDispose", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationshipMaterialDispose);
                this.columnRelationshipRequireRPZ = new global::System.Data.DataColumn("RelationshipRequireRPZ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationshipRequireRPZ);
                this.columnRelationshipStandardHydrantFitting = new global::System.Data.DataColumn("RelationshipStandardHydrantFitting", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationshipStandardHydrantFitting);
                this.columnRelationshipPreConstructionMeeting = new global::System.Data.DataColumn("RelationshipPreConstructionMeeting", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationshipPreConstructionMeeting);
                this.columnRelationshipSpecificMeetingLocation = new global::System.Data.DataColumn("RelationshipSpecificMeetingLocation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationshipSpecificMeetingLocation);
                this.columnRelationshipSpecificMeetingLocationNotes = new global::System.Data.DataColumn("RelationshipSpecificMeetingLocationNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationshipSpecificMeetingLocationNotes);
                this.columnRelationshipVehicleAccess = new global::System.Data.DataColumn("RelationshipVehicleAccess", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationshipVehicleAccess);
                this.columnRelationshipVehicleAccessNotes = new global::System.Data.DataColumn("RelationshipVehicleAccessNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationshipVehicleAccessNotes);
                this.columnRelationshipProjectOutcome = new global::System.Data.DataColumn("RelationshipProjectOutcome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationshipProjectOutcome);
                this.columnRelationshipSpecificReportingNeeds = new global::System.Data.DataColumn("RelationshipSpecificReportingNeeds", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationshipSpecificReportingNeeds);
                this.columnPurchaseOrderNumber = new global::System.Data.DataColumn("PurchaseOrderNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseOrderNumber);
                this.columnPurchaseOrderAttached = new global::System.Data.DataColumn("PurchaseOrderAttached", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseOrderAttached);
                this.columnPurchaseOrderNotes = new global::System.Data.DataColumn("PurchaseOrderNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseOrderNotes);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnVehicleAccessRoad = new global::System.Data.DataColumn("VehicleAccessRoad", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleAccessRoad);
                this.columnVehicleAccessEasement = new global::System.Data.DataColumn("VehicleAccessEasement", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleAccessEasement);
                this.columnVehicleAccessOther = new global::System.Data.DataColumn("VehicleAccessOther", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleAccessOther);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnProjectID.Unique = true;
                this.columnLiquidatedDamage.AllowDBNull = false;
                this.columnLiquidatedUnit.MaxLength = 25;
                this.columnRelationshipClientWorkedBefore.AllowDBNull = false;
                this.columnRelationshipClientQuirks.MaxLength = 1073741823;
                this.columnRelationshipClientPromises.AllowDBNull = false;
                this.columnRelationshipClientPromisesNotes.MaxLength = 1073741823;
                this.columnRelationshipWaterObtain.MaxLength = 100;
                this.columnRelationshipMaterialDispose.MaxLength = 100;
                this.columnRelationshipRequireRPZ.AllowDBNull = false;
                this.columnRelationshipStandardHydrantFitting.MaxLength = 50;
                this.columnRelationshipPreConstructionMeeting.AllowDBNull = false;
                this.columnRelationshipSpecificMeetingLocation.AllowDBNull = false;
                this.columnRelationshipSpecificMeetingLocationNotes.MaxLength = 1073741823;
                this.columnRelationshipVehicleAccess.MaxLength = 25;
                this.columnRelationshipVehicleAccessNotes.MaxLength = 1073741823;
                this.columnRelationshipProjectOutcome.MaxLength = 1073741823;
                this.columnRelationshipSpecificReportingNeeds.MaxLength = 1073741823;
                this.columnPurchaseOrderNumber.MaxLength = 25;
                this.columnPurchaseOrderAttached.AllowDBNull = false;
                this.columnPurchaseOrderNotes.MaxLength = 1073741823;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnVehicleAccessRoad.AllowDBNull = false;
                this.columnVehicleAccessEasement.AllowDBNull = false;
                this.columnVehicleAccessOther.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TERMSRow NewLFS_PROJECT_TERMSRow() {
                return ((LFS_PROJECT_TERMSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_TERMSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_TERMSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_TERMSRowChanged != null)) {
                    this.LFS_PROJECT_TERMSRowChanged(this, new LFS_PROJECT_TERMSRowChangeEvent(((LFS_PROJECT_TERMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_TERMSRowChanging != null)) {
                    this.LFS_PROJECT_TERMSRowChanging(this, new LFS_PROJECT_TERMSRowChangeEvent(((LFS_PROJECT_TERMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_TERMSRowDeleted != null)) {
                    this.LFS_PROJECT_TERMSRowDeleted(this, new LFS_PROJECT_TERMSRowChangeEvent(((LFS_PROJECT_TERMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_TERMSRowDeleting != null)) {
                    this.LFS_PROJECT_TERMSRowDeleting(this, new LFS_PROJECT_TERMSRowChangeEvent(((LFS_PROJECT_TERMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_TERMSRow(LFS_PROJECT_TERMSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_TERMSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_JOB_INFODataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnTypeOfWorkMhRehab;
            
            private global::System.Data.DataColumn columnTypeOfWorkJuntionLining;
            
            private global::System.Data.DataColumn columnTypeOfWorkProjectmanagement;
            
            private global::System.Data.DataColumn columnTypeOfWorkFullLenghtLining;
            
            private global::System.Data.DataColumn columnTypeOfWorkPointRepairs;
            
            private global::System.Data.DataColumn columnTypeOfWorkRehabAssessment;
            
            private global::System.Data.DataColumn columnTypeOfWorkGrout;
            
            private global::System.Data.DataColumn columnTypeOfWorkOther;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnAgreement;
            
            private global::System.Data.DataColumn columnWrittenQuote;
            
            private global::System.Data.DataColumn columnRole;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_JOB_INFODataTable() {
                this.TableName = "LFS_PROJECT_JOB_INFO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_JOB_INFODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_JOB_INFODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeOfWorkMhRehabColumn {
                get {
                    return this.columnTypeOfWorkMhRehab;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeOfWorkJuntionLiningColumn {
                get {
                    return this.columnTypeOfWorkJuntionLining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeOfWorkProjectmanagementColumn {
                get {
                    return this.columnTypeOfWorkProjectmanagement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeOfWorkFullLenghtLiningColumn {
                get {
                    return this.columnTypeOfWorkFullLenghtLining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeOfWorkPointRepairsColumn {
                get {
                    return this.columnTypeOfWorkPointRepairs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeOfWorkRehabAssessmentColumn {
                get {
                    return this.columnTypeOfWorkRehabAssessment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeOfWorkGroutColumn {
                get {
                    return this.columnTypeOfWorkGrout;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeOfWorkOtherColumn {
                get {
                    return this.columnTypeOfWorkOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgreementColumn {
                get {
                    return this.columnAgreement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WrittenQuoteColumn {
                get {
                    return this.columnWrittenQuote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoleColumn {
                get {
                    return this.columnRole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_JOB_INFORow this[int index] {
                get {
                    return ((LFS_PROJECT_JOB_INFORow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_JOB_INFORowChangeEventHandler LFS_PROJECT_JOB_INFORowChanging;
            
            public event LFS_PROJECT_JOB_INFORowChangeEventHandler LFS_PROJECT_JOB_INFORowChanged;
            
            public event LFS_PROJECT_JOB_INFORowChangeEventHandler LFS_PROJECT_JOB_INFORowDeleting;
            
            public event LFS_PROJECT_JOB_INFORowChangeEventHandler LFS_PROJECT_JOB_INFORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_JOB_INFORow(LFS_PROJECT_JOB_INFORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_JOB_INFORow AddLFS_PROJECT_JOB_INFORow(LFS_PROJECTRow parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_JOB_INFO, bool TypeOfWorkMhRehab, bool TypeOfWorkJuntionLining, bool TypeOfWorkProjectmanagement, bool TypeOfWorkFullLenghtLining, bool TypeOfWorkPointRepairs, bool TypeOfWorkRehabAssessment, bool TypeOfWorkGrout, bool TypeOfWorkOther, int COMPANY_ID, bool Agreement, bool WrittenQuote, string Role) {
                LFS_PROJECT_JOB_INFORow rowLFS_PROJECT_JOB_INFORow = ((LFS_PROJECT_JOB_INFORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TypeOfWorkMhRehab,
                        TypeOfWorkJuntionLining,
                        TypeOfWorkProjectmanagement,
                        TypeOfWorkFullLenghtLining,
                        TypeOfWorkPointRepairs,
                        TypeOfWorkRehabAssessment,
                        TypeOfWorkGrout,
                        TypeOfWorkOther,
                        COMPANY_ID,
                        Agreement,
                        WrittenQuote,
                        Role};
                if ((parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_JOB_INFO != null)) {
                    columnValuesArray[0] = parentLFS_PROJECTRowByLFS_PROJECT_LFS_PROJECT_JOB_INFO[0];
                }
                rowLFS_PROJECT_JOB_INFORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_JOB_INFORow);
                return rowLFS_PROJECT_JOB_INFORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_JOB_INFORow FindByProjectID(int ProjectID) {
                return ((LFS_PROJECT_JOB_INFORow)(this.Rows.Find(new object[] {
                            ProjectID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_JOB_INFODataTable cln = ((LFS_PROJECT_JOB_INFODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_JOB_INFODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnTypeOfWorkMhRehab = base.Columns["TypeOfWorkMhRehab"];
                this.columnTypeOfWorkJuntionLining = base.Columns["TypeOfWorkJuntionLining"];
                this.columnTypeOfWorkProjectmanagement = base.Columns["TypeOfWorkProjectmanagement"];
                this.columnTypeOfWorkFullLenghtLining = base.Columns["TypeOfWorkFullLenghtLining"];
                this.columnTypeOfWorkPointRepairs = base.Columns["TypeOfWorkPointRepairs"];
                this.columnTypeOfWorkRehabAssessment = base.Columns["TypeOfWorkRehabAssessment"];
                this.columnTypeOfWorkGrout = base.Columns["TypeOfWorkGrout"];
                this.columnTypeOfWorkOther = base.Columns["TypeOfWorkOther"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnAgreement = base.Columns["Agreement"];
                this.columnWrittenQuote = base.Columns["WrittenQuote"];
                this.columnRole = base.Columns["Role"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnTypeOfWorkMhRehab = new global::System.Data.DataColumn("TypeOfWorkMhRehab", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeOfWorkMhRehab);
                this.columnTypeOfWorkJuntionLining = new global::System.Data.DataColumn("TypeOfWorkJuntionLining", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeOfWorkJuntionLining);
                this.columnTypeOfWorkProjectmanagement = new global::System.Data.DataColumn("TypeOfWorkProjectmanagement", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeOfWorkProjectmanagement);
                this.columnTypeOfWorkFullLenghtLining = new global::System.Data.DataColumn("TypeOfWorkFullLenghtLining", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeOfWorkFullLenghtLining);
                this.columnTypeOfWorkPointRepairs = new global::System.Data.DataColumn("TypeOfWorkPointRepairs", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeOfWorkPointRepairs);
                this.columnTypeOfWorkRehabAssessment = new global::System.Data.DataColumn("TypeOfWorkRehabAssessment", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeOfWorkRehabAssessment);
                this.columnTypeOfWorkGrout = new global::System.Data.DataColumn("TypeOfWorkGrout", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeOfWorkGrout);
                this.columnTypeOfWorkOther = new global::System.Data.DataColumn("TypeOfWorkOther", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeOfWorkOther);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnAgreement = new global::System.Data.DataColumn("Agreement", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgreement);
                this.columnWrittenQuote = new global::System.Data.DataColumn("WrittenQuote", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWrittenQuote);
                this.columnRole = new global::System.Data.DataColumn("Role", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRole);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID}, true));
                this.columnProjectID.AllowDBNull = false;
                this.columnProjectID.Unique = true;
                this.columnTypeOfWorkMhRehab.AllowDBNull = false;
                this.columnTypeOfWorkJuntionLining.AllowDBNull = false;
                this.columnTypeOfWorkProjectmanagement.AllowDBNull = false;
                this.columnTypeOfWorkFullLenghtLining.AllowDBNull = false;
                this.columnTypeOfWorkPointRepairs.AllowDBNull = false;
                this.columnTypeOfWorkRehabAssessment.AllowDBNull = false;
                this.columnTypeOfWorkGrout.AllowDBNull = false;
                this.columnTypeOfWorkOther.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnAgreement.AllowDBNull = false;
                this.columnWrittenQuote.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_JOB_INFORow NewLFS_PROJECT_JOB_INFORow() {
                return ((LFS_PROJECT_JOB_INFORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_JOB_INFORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_JOB_INFORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_JOB_INFORowChanged != null)) {
                    this.LFS_PROJECT_JOB_INFORowChanged(this, new LFS_PROJECT_JOB_INFORowChangeEvent(((LFS_PROJECT_JOB_INFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_JOB_INFORowChanging != null)) {
                    this.LFS_PROJECT_JOB_INFORowChanging(this, new LFS_PROJECT_JOB_INFORowChangeEvent(((LFS_PROJECT_JOB_INFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_JOB_INFORowDeleted != null)) {
                    this.LFS_PROJECT_JOB_INFORowDeleted(this, new LFS_PROJECT_JOB_INFORowChangeEvent(((LFS_PROJECT_JOB_INFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_JOB_INFORowDeleting != null)) {
                    this.LFS_PROJECT_JOB_INFORowDeleting(this, new LFS_PROJECT_JOB_INFORowChangeEvent(((LFS_PROJECT_JOB_INFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_JOB_INFORow(LFS_PROJECT_JOB_INFORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTDS ds = new ProjectTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_JOB_INFODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_BONDINGS_BUDGETRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_BONDINGS_BUDGETDataTable tableLFS_PROJECT_BONDINGS_BUDGET;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_BONDINGS_BUDGETRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_BONDINGS_BUDGET = ((LFS_PROJECT_BONDINGS_BUDGETDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_BONDINGS_BUDGET.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_BONDINGS_BUDGET.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BondingCompanyID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_BONDINGS_BUDGET.BondingCompanyIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_BONDINGS_BUDGET.BondingCompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_BONDINGS_BUDGET.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_BONDINGS_BUDGET.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Budget {
                get {
                    return ((decimal)(this[this.tableLFS_PROJECT_BONDINGS_BUDGET.BudgetColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_BONDINGS_BUDGET.BudgetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_BONDINGS_BUDGET.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_BONDINGS_BUDGET.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_BONDINGS_BUDGET.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_BONDINGS_BUDGET.COMPANY_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_HOTELS_BUDGETRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_HOTELS_BUDGETDataTable tableLFS_PROJECT_HOTELS_BUDGET;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_HOTELS_BUDGETRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_HOTELS_BUDGET = ((LFS_PROJECT_HOTELS_BUDGETDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_HOTELS_BUDGET.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_HOTELS_BUDGET.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HolelID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_HOTELS_BUDGET.HolelIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_HOTELS_BUDGET.HolelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_HOTELS_BUDGET.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_HOTELS_BUDGET.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Budget {
                get {
                    return ((decimal)(this[this.tableLFS_PROJECT_HOTELS_BUDGET.BudgetColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_HOTELS_BUDGET.BudgetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_HOTELS_BUDGET.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_HOTELS_BUDGET.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_HOTELS_BUDGET.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_HOTELS_BUDGET.COMPANY_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_INSURANCES_BUDGETRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_INSURANCES_BUDGETDataTable tableLFS_PROJECT_INSURANCES_BUDGET;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_INSURANCES_BUDGETRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_INSURANCES_BUDGET = ((LFS_PROJECT_INSURANCES_BUDGETDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_INSURANCES_BUDGET.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_INSURANCES_BUDGET.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsuranceCompanyID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_INSURANCES_BUDGET.InsuranceCompanyIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_INSURANCES_BUDGET.InsuranceCompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_INSURANCES_BUDGET.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_INSURANCES_BUDGET.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Budget {
                get {
                    return ((decimal)(this[this.tableLFS_PROJECT_INSURANCES_BUDGET.BudgetColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_INSURANCES_BUDGET.BudgetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_INSURANCES_BUDGET.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_INSURANCES_BUDGET.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_INSURANCES_BUDGET.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_INSURANCES_BUDGET.COMPANY_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_OTHER_COSTS_BUDGETRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_OTHER_COSTS_BUDGETDataTable tableLFS_PROJECT_OTHER_COSTS_BUDGET;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_OTHER_COSTS_BUDGETRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_OTHER_COSTS_BUDGET = ((LFS_PROJECT_OTHER_COSTS_BUDGETDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_OTHER_COSTS_BUDGET.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_OTHER_COSTS_BUDGET.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category {
                get {
                    return ((string)(this[this.tableLFS_PROJECT_OTHER_COSTS_BUDGET.CategoryColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_OTHER_COSTS_BUDGET.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_OTHER_COSTS_BUDGET.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_OTHER_COSTS_BUDGET.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Budget {
                get {
                    return ((decimal)(this[this.tableLFS_PROJECT_OTHER_COSTS_BUDGET.BudgetColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_OTHER_COSTS_BUDGET.BudgetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_OTHER_COSTS_BUDGET.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_OTHER_COSTS_BUDGET.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_OTHER_COSTS_BUDGET.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_OTHER_COSTS_BUDGET.COMPANY_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_MATERIALS_BUDGETRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_MATERIALS_BUDGETDataTable tableLFS_PROJECT_MATERIALS_BUDGET;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_MATERIALS_BUDGETRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_MATERIALS_BUDGET = ((LFS_PROJECT_MATERIALS_BUDGETDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_MATERIALS_BUDGET.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_MATERIALS_BUDGET.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Budget {
                get {
                    return ((decimal)(this[this.tableLFS_PROJECT_MATERIALS_BUDGET.BudgetColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_MATERIALS_BUDGET.BudgetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_MATERIALS_BUDGET.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_MATERIALS_BUDGET.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_MATERIALS_BUDGET.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_MATERIALS_BUDGET.COMPANY_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_SUBCONTRACTORS_BUDGETRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable tableLFS_PROJECT_SUBCONTRACTORS_BUDGET;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_SUBCONTRACTORS_BUDGETRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET = ((LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubcontractorID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET.SubcontractorIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET.SubcontractorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Budget {
                get {
                    return ((decimal)(this[this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET.BudgetColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET.BudgetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTORS_BUDGET.COMPANY_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_UNITS_BUDGETRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_UNITS_BUDGETDataTable tableLFS_PROJECT_UNITS_BUDGET;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_UNITS_BUDGETRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_UNITS_BUDGET = ((LFS_PROJECT_UNITS_BUDGETDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_UNITS_BUDGET.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_UNITS_BUDGET.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Budget {
                get {
                    return ((decimal)(this[this.tableLFS_PROJECT_UNITS_BUDGET.BudgetColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_UNITS_BUDGET.BudgetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_UNITS_BUDGET.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_UNITS_BUDGET.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_UNITS_BUDGET.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_UNITS_BUDGET.COMPANY_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_COSTING_UPDATESRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_COSTING_UPDATESDataTable tableLFS_PROJECT_COSTING_UPDATES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_COSTING_UPDATESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_COSTING_UPDATES = ((LFS_PROJECT_COSTING_UPDATESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_COSTING_UPDATES.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_COSTING_UPDATES.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExtrasToDate {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_PROJECT_COSTING_UPDATES.ExtrasToDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtrasToDate\' in table \'LFS_PROJECT_COSTING_UPDATES\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_COSTING_UPDATES.ExtrasToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CostsIncurred {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_PROJECT_COSTING_UPDATES.CostsIncurredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostsIncurred\' in table \'LFS_PROJECT_COSTING_UPDATES\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_COSTING_UPDATES.CostsIncurredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CostToComplete {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_PROJECT_COSTING_UPDATES.CostToCompleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostToComplete\' in table \'LFS_PROJECT_COSTING_UPDATES\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_COSTING_UPDATES.CostToCompleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OriginalProfitEstimated {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_PROJECT_COSTING_UPDATES.OriginalProfitEstimatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalProfitEstimated\' in table \'LFS_PROJECT_COSTING_UPDA" +
                                "TES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_COSTING_UPDATES.OriginalProfitEstimatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal InvoicedToDate {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_PROJECT_COSTING_UPDATES.InvoicedToDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoicedToDate\' in table \'LFS_PROJECT_COSTING_UPDATES\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_COSTING_UPDATES.InvoicedToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_COSTING_UPDATES.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_COSTING_UPDATES.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRow LFS_PROJECTRow {
                get {
                    return ((LFS_PROJECTRow)(this.GetParentRow(this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_COSTING_UPDATES"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_COSTING_UPDATES"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtrasToDateNull() {
                return this.IsNull(this.tableLFS_PROJECT_COSTING_UPDATES.ExtrasToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtrasToDateNull() {
                this[this.tableLFS_PROJECT_COSTING_UPDATES.ExtrasToDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostsIncurredNull() {
                return this.IsNull(this.tableLFS_PROJECT_COSTING_UPDATES.CostsIncurredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostsIncurredNull() {
                this[this.tableLFS_PROJECT_COSTING_UPDATES.CostsIncurredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostToCompleteNull() {
                return this.IsNull(this.tableLFS_PROJECT_COSTING_UPDATES.CostToCompleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostToCompleteNull() {
                this[this.tableLFS_PROJECT_COSTING_UPDATES.CostToCompleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOriginalProfitEstimatedNull() {
                return this.IsNull(this.tableLFS_PROJECT_COSTING_UPDATES.OriginalProfitEstimatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOriginalProfitEstimatedNull() {
                this[this.tableLFS_PROJECT_COSTING_UPDATES.OriginalProfitEstimatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoicedToDateNull() {
                return this.IsNull(this.tableLFS_PROJECT_COSTING_UPDATES.InvoicedToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoicedToDateNull() {
                this[this.tableLFS_PROJECT_COSTING_UPDATES.InvoicedToDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_SALE_BILLING_PRICINGRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_SALE_BILLING_PRICINGDataTable tableLFS_PROJECT_SALE_BILLING_PRICING;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_SALE_BILLING_PRICINGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_SALE_BILLING_PRICING = ((LFS_PROJECT_SALE_BILLING_PRICINGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SaleBidProject {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleBidProjectColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleBidProjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SaleRFP {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleRFPColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleRFPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SaleSoleSource {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleSoleSourceColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleSoleSourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SaleTermContract {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleTermContractColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleTermContractColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaleTermContractDetail {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleTermContractDetailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleTermContractDetail\' in table \'LFS_PROJECT_SALE_BILLING_" +
                                "PRICING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleTermContractDetailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SaleOther {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleOtherColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaleOtherDetail {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleOtherDetailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleOtherDetail\' in table \'LFS_PROJECT_SALE_BILLING_PRICING" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleOtherDetailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SaleGettingJob {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleGettingJobColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleGettingJob\' in table \'LFS_PROJECT_SALE_BILLING_PRICING\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleGettingJobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BillPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillPrice\' in table \'LFS_PROJECT_SALE_BILLING_PRICING\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillMoney {
                get {
                    return ((string)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillMoneyColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillMoneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillBidHardDollar {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillBidHardDollarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillBidHardDollar\' in table \'LFS_PROJECT_SALE_BILLING_PRICI" +
                                "NG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillBidHardDollarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BillPerUnit {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillPerUnitColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillPerUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BillHourly {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillHourlyColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillHourlyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillExpectExtras {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillExpectExtrasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillExpectExtras\' in table \'LFS_PROJECT_SALE_BILLING_PRICIN" +
                                "G\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillExpectExtrasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BillSubcontractorAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillSubcontractorAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillSubcontractorAmount\' in table \'LFS_PROJECT_SALE_BILLING" +
                                "_PRICING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillSubcontractorAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ChargesWater {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.ChargesWaterColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.ChargesWaterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ChargesWaterAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.ChargesWaterAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChargesWaterAmount\' in table \'LFS_PROJECT_SALE_BILLING_PRIC" +
                                "ING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.ChargesWaterAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ChargesDisposal {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.ChargesDisposalColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.ChargesDisposalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ChargesDisposalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.ChargesDisposalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChargesDisposalAmount\' in table \'LFS_PROJECT_SALE_BILLING_P" +
                                "RICING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.ChargesDisposalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRow LFS_PROJECTRow {
                get {
                    return ((LFS_PROJECTRow)(this.GetParentRow(this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_SALE_BILLING_PRICING"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_SALE_BILLING_PRICING"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleTermContractDetailNull() {
                return this.IsNull(this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleTermContractDetailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleTermContractDetailNull() {
                this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleTermContractDetailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleOtherDetailNull() {
                return this.IsNull(this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleOtherDetailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleOtherDetailNull() {
                this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleOtherDetailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleGettingJobNull() {
                return this.IsNull(this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleGettingJobColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleGettingJobNull() {
                this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.SaleGettingJobColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillPriceNull() {
                return this.IsNull(this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillPriceNull() {
                this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillBidHardDollarNull() {
                return this.IsNull(this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillBidHardDollarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillBidHardDollarNull() {
                this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillBidHardDollarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillExpectExtrasNull() {
                return this.IsNull(this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillExpectExtrasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillExpectExtrasNull() {
                this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillExpectExtrasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillSubcontractorAmountNull() {
                return this.IsNull(this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillSubcontractorAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillSubcontractorAmountNull() {
                this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.BillSubcontractorAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChargesWaterAmountNull() {
                return this.IsNull(this.tableLFS_PROJECT_SALE_BILLING_PRICING.ChargesWaterAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChargesWaterAmountNull() {
                this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.ChargesWaterAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChargesDisposalAmountNull() {
                return this.IsNull(this.tableLFS_PROJECT_SALE_BILLING_PRICING.ChargesDisposalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChargesDisposalAmountNull() {
                this[this.tableLFS_PROJECT_SALE_BILLING_PRICING.ChargesDisposalAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_SERVICERow : global::System.Data.DataRow {
            
            private LFS_PROJECT_SERVICEDataTable tableLFS_PROJECT_SERVICE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_SERVICERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_SERVICE = ((LFS_PROJECT_SERVICEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_SERVICE.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SERVICE.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_SERVICE.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SERVICE.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ServiceID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT_SERVICE.ServiceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceID\' in table \'LFS_PROJECT_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_SERVICE.ServiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_SERVICE.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'LFS_PROJECT_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_SERVICE.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AverageSize {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_SERVICE.AverageSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AverageSize\' in table \'LFS_PROJECT_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_SERVICE.AverageSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AveragePrice {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_PROJECT_SERVICE.AveragePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AveragePrice\' in table \'LFS_PROJECT_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_SERVICE.AveragePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Quantity {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_SERVICE.QuantityColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SERVICE.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SERVICE.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SERVICE.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_PROJECT_SERVICE.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'LFS_PROJECT_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_SERVICE.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_SERVICE.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SERVICE.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRow LFS_PROJECTRow {
                get {
                    return ((LFS_PROJECTRow)(this.GetParentRow(this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_SERVICE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_SERVICE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceIDNull() {
                return this.IsNull(this.tableLFS_PROJECT_SERVICE.ServiceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceIDNull() {
                this[this.tableLFS_PROJECT_SERVICE.ServiceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableLFS_PROJECT_SERVICE.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableLFS_PROJECT_SERVICE.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAverageSizeNull() {
                return this.IsNull(this.tableLFS_PROJECT_SERVICE.AverageSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAverageSizeNull() {
                this[this.tableLFS_PROJECT_SERVICE.AverageSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAveragePriceNull() {
                return this.IsNull(this.tableLFS_PROJECT_SERVICE.AveragePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAveragePriceNull() {
                this[this.tableLFS_PROJECT_SERVICE.AveragePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tableLFS_PROJECT_SERVICE.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tableLFS_PROJECT_SERVICE.TotalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_TECHNICALRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_TECHNICALDataTable tableLFS_PROJECT_TECHNICAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_TECHNICALRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_TECHNICAL = ((LFS_PROJECT_TECHNICALDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TECHNICAL.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TECHNICAL.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Drawings {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TECHNICAL.DrawingsColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TECHNICAL.DrawingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Video {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TECHNICAL.VideoColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TECHNICAL.VideoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool GroundConditions {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TECHNICAL.GroundConditionsColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TECHNICAL.GroundConditionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GrounConditionsNotes {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TECHNICAL.GrounConditionsNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrounConditionsNotes\' in table \'LFS_PROJECT_TECHNICAL\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TECHNICAL.GrounConditionsNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ReviewVideo {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TECHNICAL.ReviewVideoColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TECHNICAL.ReviewVideoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool StrangeConfigurations {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TECHNICAL.StrangeConfigurationsColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TECHNICAL.StrangeConfigurationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StrangeConfigurationsNotes {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TECHNICAL.StrangeConfigurationsNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StrangeConfigurationsNotes\' in table \'LFS_PROJECT_TECHNICAL" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TECHNICAL.StrangeConfigurationsNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FurtherObservations {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TECHNICAL.FurtherObservationsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FurtherObservations\' in table \'LFS_PROJECT_TECHNICAL\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TECHNICAL.FurtherObservationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RestrictiveFactors {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TECHNICAL.RestrictiveFactorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RestrictiveFactors\' in table \'LFS_PROJECT_TECHNICAL\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TECHNICAL.RestrictiveFactorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TECHNICAL.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TECHNICAL.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRow LFS_PROJECTRow {
                get {
                    return ((LFS_PROJECTRow)(this.GetParentRow(this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_TECHNICAL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_TECHNICAL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrounConditionsNotesNull() {
                return this.IsNull(this.tableLFS_PROJECT_TECHNICAL.GrounConditionsNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrounConditionsNotesNull() {
                this[this.tableLFS_PROJECT_TECHNICAL.GrounConditionsNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStrangeConfigurationsNotesNull() {
                return this.IsNull(this.tableLFS_PROJECT_TECHNICAL.StrangeConfigurationsNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStrangeConfigurationsNotesNull() {
                this[this.tableLFS_PROJECT_TECHNICAL.StrangeConfigurationsNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFurtherObservationsNull() {
                return this.IsNull(this.tableLFS_PROJECT_TECHNICAL.FurtherObservationsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFurtherObservationsNull() {
                this[this.tableLFS_PROJECT_TECHNICAL.FurtherObservationsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestrictiveFactorsNull() {
                return this.IsNull(this.tableLFS_PROJECT_TECHNICAL.RestrictiveFactorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestrictiveFactorsNull() {
                this[this.tableLFS_PROJECT_TECHNICAL.RestrictiveFactorsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_NUMBERRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_NUMBERDataTable tableLFS_PROJECT_NUMBER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_NUMBERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_NUMBER = ((LFS_PROJECT_NUMBERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int YearCode {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_NUMBER.YearCodeColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_NUMBER.YearCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectIncrement {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_NUMBER.ProjectIncrementColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_NUMBER.ProjectIncrementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_NUMBER.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_NUMBER.COMPANY_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_HISTORYRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_HISTORYDataTable tableLFS_PROJECT_HISTORY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_HISTORYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_HISTORY = ((LFS_PROJECT_HISTORYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_HISTORY.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_HISTORY.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_HISTORY.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_HISTORY.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProjectState {
                get {
                    return ((string)(this[this.tableLFS_PROJECT_HISTORY.ProjectStateColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_HISTORY.ProjectStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date_ {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_PROJECT_HISTORY.Date_Column]));
                }
                set {
                    this[this.tableLFS_PROJECT_HISTORY.Date_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LoginID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT_HISTORY.LoginIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoginID\' in table \'LFS_PROJECT_HISTORY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_HISTORY.LoginIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_HISTORY.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_HISTORY.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRow LFS_PROJECTRow {
                get {
                    return ((LFS_PROJECTRow)(this.GetParentRow(this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_HISTORY"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_HISTORY"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoginIDNull() {
                return this.IsNull(this.tableLFS_PROJECT_HISTORY.LoginIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoginIDNull() {
                this[this.tableLFS_PROJECT_HISTORY.LoginIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_NOTERow : global::System.Data.DataRow {
            
            private LFS_PROJECT_NOTEDataTable tableLFS_PROJECT_NOTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_NOTERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_NOTE = ((LFS_PROJECT_NOTEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_NOTE.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_NOTE.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_NOTE.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_NOTE.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Subject {
                get {
                    return ((string)(this[this.tableLFS_PROJECT_NOTE.SubjectColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_NOTE.SubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_PROJECT_NOTE.DateTimeColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_NOTE.DateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LoginID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_NOTE.LoginIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_NOTE.LoginIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Note {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_NOTE.NoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Note\' in table \'LFS_PROJECT_NOTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_NOTE.NoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_NOTE.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_NOTE.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LIBRARY_FILES_ID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT_NOTE.LIBRARY_FILES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LIBRARY_FILES_ID\' in table \'LFS_PROJECT_NOTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_NOTE.LIBRARY_FILES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_NOTE.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_NOTE.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserFullName {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_NOTE.UserFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserFullName\' in table \'LFS_PROJECT_NOTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_NOTE.UserFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreationDateTime {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_NOTE.CreationDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDateTime\' in table \'LFS_PROJECT_NOTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_NOTE.CreationDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORIGINAL_FILENAME {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_NOTE.ORIGINAL_FILENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORIGINAL_FILENAME\' in table \'LFS_PROJECT_NOTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_NOTE.ORIGINAL_FILENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FILENAME {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_NOTE.FILENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FILENAME\' in table \'LFS_PROJECT_NOTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_NOTE.FILENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRow LFS_PROJECTRow {
                get {
                    return ((LFS_PROJECTRow)(this.GetParentRow(this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_NOTE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_NOTE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoteNull() {
                return this.IsNull(this.tableLFS_PROJECT_NOTE.NoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoteNull() {
                this[this.tableLFS_PROJECT_NOTE.NoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIBRARY_FILES_IDNull() {
                return this.IsNull(this.tableLFS_PROJECT_NOTE.LIBRARY_FILES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIBRARY_FILES_IDNull() {
                this[this.tableLFS_PROJECT_NOTE.LIBRARY_FILES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserFullNameNull() {
                return this.IsNull(this.tableLFS_PROJECT_NOTE.UserFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserFullNameNull() {
                this[this.tableLFS_PROJECT_NOTE.UserFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreationDateTimeNull() {
                return this.IsNull(this.tableLFS_PROJECT_NOTE.CreationDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreationDateTimeNull() {
                this[this.tableLFS_PROJECT_NOTE.CreationDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORIGINAL_FILENAMENull() {
                return this.IsNull(this.tableLFS_PROJECT_NOTE.ORIGINAL_FILENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORIGINAL_FILENAMENull() {
                this[this.tableLFS_PROJECT_NOTE.ORIGINAL_FILENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFILENAMENull() {
                return this.IsNull(this.tableLFS_PROJECT_NOTE.FILENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFILENAMENull() {
                this[this.tableLFS_PROJECT_NOTE.FILENAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_ENGINEER_SUBCONTRACTORSDataTable tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS = ((LFS_PROJECT_ENGINEER_SUBCONTRACTORSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool GeneralContractor {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.GeneralContractorColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.GeneralContractorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool GeneralWSIB {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.GeneralWSIBColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.GeneralWSIBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool GeneralInsuranceCertificate {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.GeneralInsuranceCertificateColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.GeneralInsuranceCertificateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GeneralBondingSupplied {
                get {
                    return ((string)(this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.GeneralBondingSuppliedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.GeneralBondingSuppliedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GeneralMOLForm {
                get {
                    return ((string)(this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.GeneralMOLFormColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.GeneralMOLFormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool GeneralNoticeProject {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.GeneralNoticeProjectColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.GeneralNoticeProjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool GeneralForm1000 {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.GeneralForm1000Column]));
                }
                set {
                    this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.GeneralForm1000Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EngineeringFirmID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.EngineeringFirmIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngineeringFirmID\' in table \'LFS_PROJECT_ENGINEER_SUBCONTRA" +
                                "CTORS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.EngineeringFirmIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EngineerID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.EngineerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngineerID\' in table \'LFS_PROJECT_ENGINEER_SUBCONTRACTORS\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.EngineerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EngineerNumber {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.EngineerNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngineerNumber\' in table \'LFS_PROJECT_ENGINEER_SUBCONTRACTO" +
                                "RS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.EngineerNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SubcontractorUsed {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.SubcontractorUsedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.SubcontractorUsedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BondNumber {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.BondNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BondNumber\' in table \'LFS_PROJECT_ENGINEER_SUBCONTRACTORS\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.BondNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRow LFS_PROJECTRow {
                get {
                    return ((LFS_PROJECTRow)(this.GetParentRow(this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_ENGINEER_SUBCONTRACTORS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_ENGINEER_SUBCONTRACTORS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEngineeringFirmIDNull() {
                return this.IsNull(this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.EngineeringFirmIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEngineeringFirmIDNull() {
                this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.EngineeringFirmIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEngineerIDNull() {
                return this.IsNull(this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.EngineerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEngineerIDNull() {
                this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.EngineerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEngineerNumberNull() {
                return this.IsNull(this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.EngineerNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEngineerNumberNull() {
                this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.EngineerNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBondNumberNull() {
                return this.IsNull(this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.BondNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBondNumberNull() {
                this[this.tableLFS_PROJECT_ENGINEER_SUBCONTRACTORS.BondNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_LASTLOGINRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_LASTLOGINDataTable tableLFS_PROJECT_LASTLOGIN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_LASTLOGINRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_LASTLOGIN = ((LFS_PROJECT_LASTLOGINDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_LASTLOGIN.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_LASTLOGIN.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_LASTLOGIN.UserIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_LASTLOGIN.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastLoggedInDate {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_PROJECT_LASTLOGIN.LastLoggedInDateColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_LASTLOGIN.LastLoggedInDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_LASTLOGIN.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_LASTLOGIN.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_LASTLOGIN.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_LASTLOGIN.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRow LFS_PROJECTRow {
                get {
                    return ((LFS_PROJECTRow)(this.GetParentRow(this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_LASTLOGIN"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_LASTLOGIN"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow : global::System.Data.DataRow {
            
            private LFS_PROJECT_WORK_FUNCTION_FAIR_WAGEDataTable tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE = ((LFS_PROJECT_WORK_FUNCTION_FAIR_WAGEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Work_ {
                get {
                    return ((string)(this[this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE.Work_Column]));
                }
                set {
                    this[this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE.Work_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Function_ {
                get {
                    return ((string)(this[this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE.Function_Column]));
                }
                set {
                    this[this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE.Function_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFairWage {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE.IsFairWageColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE.IsFairWageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_WORK_FUNCTION_FAIR_WAGE.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRow LFS_PROJECTRow {
                get {
                    return ((LFS_PROJECTRow)(this.GetParentRow(this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECTRow : global::System.Data.DataRow {
            
            private LFS_PROJECTDataTable tableLFS_PROJECT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT = ((LFS_PROJECTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CountryID {
                get {
                    return ((long)(this[this.tableLFS_PROJECT.CountryIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT.CountryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OfficeID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT.OfficeIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT.OfficeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectLeadID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT.ProjectLeadIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectLeadID\' in table \'LFS_PROJECT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT.ProjectLeadIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesmanID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT.SalesmanIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT.SalesmanIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProjectNumber {
                get {
                    return ((string)(this[this.tableLFS_PROJECT.ProjectNumberColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT.ProjectNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProjectType {
                get {
                    return ((string)(this[this.tableLFS_PROJECT.ProjectTypeColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT.ProjectTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProjectState {
                get {
                    return ((string)(this[this.tableLFS_PROJECT.ProjectStateColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT.ProjectStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'LFS_PROJECT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'LFS_PROJECT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ProposalDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_PROJECT.ProposalDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProposalDate\' in table \'LFS_PROJECT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT.ProposalDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_PROJECT.StartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartDate\' in table \'LFS_PROJECT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_PROJECT.EndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndDate\' in table \'LFS_PROJECT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClientID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT.ClientIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT.ClientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientProjectNumber {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT.ClientProjectNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientProjectNumber\' in table \'LFS_PROJECT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT.ClientProjectNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClientPrimaryContactID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT.ClientPrimaryContactIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientPrimaryContactID\' in table \'LFS_PROJECT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT.ClientPrimaryContactIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClientSecondaryContactID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT.ClientSecondaryContactIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientSecondaryContactID\' in table \'LFS_PROJECT\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT.ClientSecondaryContactIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OriginalProjectID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT.OriginalProjectIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalProjectID\' in table \'LFS_PROJECT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT.OriginalProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectNumberCopy {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT.ProjectNumberCopyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectNumberCopy\' in table \'LFS_PROJECT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT.ProjectNumberCopyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LIBRARY_CATEGORIES_ID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT.LIBRARY_CATEGORIES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LIBRARY_CATEGORIES_ID\' in table \'LFS_PROJECT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT.LIBRARY_CATEGORIES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ProvinceID {
                get {
                    try {
                        return ((long)(this[this.tableLFS_PROJECT.ProvinceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProvinceID\' in table \'LFS_PROJECT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT.ProvinceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CityID {
                get {
                    try {
                        return ((long)(this[this.tableLFS_PROJECT.CityIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityID\' in table \'LFS_PROJECT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT.CityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CountyID {
                get {
                    try {
                        return ((long)(this[this.tableLFS_PROJECT.CountyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountyID\' in table \'LFS_PROJECT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT.CountyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FairWageApplies {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT.FairWageAppliesColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT.FairWageAppliesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectLeadIDNull() {
                return this.IsNull(this.tableLFS_PROJECT.ProjectLeadIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectLeadIDNull() {
                this[this.tableLFS_PROJECT.ProjectLeadIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableLFS_PROJECT.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableLFS_PROJECT.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableLFS_PROJECT.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableLFS_PROJECT.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProposalDateNull() {
                return this.IsNull(this.tableLFS_PROJECT.ProposalDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProposalDateNull() {
                this[this.tableLFS_PROJECT.ProposalDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartDateNull() {
                return this.IsNull(this.tableLFS_PROJECT.StartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartDateNull() {
                this[this.tableLFS_PROJECT.StartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndDateNull() {
                return this.IsNull(this.tableLFS_PROJECT.EndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndDateNull() {
                this[this.tableLFS_PROJECT.EndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientProjectNumberNull() {
                return this.IsNull(this.tableLFS_PROJECT.ClientProjectNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientProjectNumberNull() {
                this[this.tableLFS_PROJECT.ClientProjectNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientPrimaryContactIDNull() {
                return this.IsNull(this.tableLFS_PROJECT.ClientPrimaryContactIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientPrimaryContactIDNull() {
                this[this.tableLFS_PROJECT.ClientPrimaryContactIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientSecondaryContactIDNull() {
                return this.IsNull(this.tableLFS_PROJECT.ClientSecondaryContactIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientSecondaryContactIDNull() {
                this[this.tableLFS_PROJECT.ClientSecondaryContactIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOriginalProjectIDNull() {
                return this.IsNull(this.tableLFS_PROJECT.OriginalProjectIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOriginalProjectIDNull() {
                this[this.tableLFS_PROJECT.OriginalProjectIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectNumberCopyNull() {
                return this.IsNull(this.tableLFS_PROJECT.ProjectNumberCopyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectNumberCopyNull() {
                this[this.tableLFS_PROJECT.ProjectNumberCopyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIBRARY_CATEGORIES_IDNull() {
                return this.IsNull(this.tableLFS_PROJECT.LIBRARY_CATEGORIES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIBRARY_CATEGORIES_IDNull() {
                this[this.tableLFS_PROJECT.LIBRARY_CATEGORIES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProvinceIDNull() {
                return this.IsNull(this.tableLFS_PROJECT.ProvinceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProvinceIDNull() {
                this[this.tableLFS_PROJECT.ProvinceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityIDNull() {
                return this.IsNull(this.tableLFS_PROJECT.CityIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityIDNull() {
                this[this.tableLFS_PROJECT.CityIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountyIDNull() {
                return this.IsNull(this.tableLFS_PROJECT.CountyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountyIDNull() {
                this[this.tableLFS_PROJECT.CountyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SALE_BILLING_PRICINGRow[] GetLFS_PROJECT_SALE_BILLING_PRICINGRows() {
                if ((this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_SALE_BILLING_PRICING"] == null)) {
                    return new LFS_PROJECT_SALE_BILLING_PRICINGRow[0];
                }
                else {
                    return ((LFS_PROJECT_SALE_BILLING_PRICINGRow[])(base.GetChildRows(this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_SALE_BILLING_PRICING"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SERVICERow[] GetLFS_PROJECT_SERVICERows() {
                if ((this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_SERVICE"] == null)) {
                    return new LFS_PROJECT_SERVICERow[0];
                }
                else {
                    return ((LFS_PROJECT_SERVICERow[])(base.GetChildRows(this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_SERVICE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow[] GetLFS_PROJECT_WORK_FUNCTION_FAIR_WAGERows() {
                if ((this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE"] == null)) {
                    return new LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow[0];
                }
                else {
                    return ((LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow[])(base.GetChildRows(this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_WORK_FUNCTION_FAIR_WAGE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TECHNICALRow[] GetLFS_PROJECT_TECHNICALRows() {
                if ((this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_TECHNICAL"] == null)) {
                    return new LFS_PROJECT_TECHNICALRow[0];
                }
                else {
                    return ((LFS_PROJECT_TECHNICALRow[])(base.GetChildRows(this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_TECHNICAL"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_NOTERow[] GetLFS_PROJECT_NOTERows() {
                if ((this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_NOTE"] == null)) {
                    return new LFS_PROJECT_NOTERow[0];
                }
                else {
                    return ((LFS_PROJECT_NOTERow[])(base.GetChildRows(this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_NOTE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_HISTORYRow[] GetLFS_PROJECT_HISTORYRows() {
                if ((this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_HISTORY"] == null)) {
                    return new LFS_PROJECT_HISTORYRow[0];
                }
                else {
                    return ((LFS_PROJECT_HISTORYRow[])(base.GetChildRows(this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_HISTORY"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow[] GetLFS_PROJECT_ENGINEER_SUBCONTRACTORSRows() {
                if ((this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_ENGINEER_SUBCONTRACTORS"] == null)) {
                    return new LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow[0];
                }
                else {
                    return ((LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow[])(base.GetChildRows(this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_ENGINEER_SUBCONTRACTORS"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_COSTING_UPDATESRow[] GetLFS_PROJECT_COSTING_UPDATESRows() {
                if ((this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_COSTING_UPDATES"] == null)) {
                    return new LFS_PROJECT_COSTING_UPDATESRow[0];
                }
                else {
                    return ((LFS_PROJECT_COSTING_UPDATESRow[])(base.GetChildRows(this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_COSTING_UPDATES"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_LASTLOGINRow[] GetLFS_PROJECT_LASTLOGINRows() {
                if ((this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_LASTLOGIN"] == null)) {
                    return new LFS_PROJECT_LASTLOGINRow[0];
                }
                else {
                    return ((LFS_PROJECT_LASTLOGINRow[])(base.GetChildRows(this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_LASTLOGIN"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_JOB_CLASS_TYPE_RATERow[] GetLFS_PROJECT_JOB_CLASS_TYPE_RATERows() {
                if ((this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_JOB_CLASS_TYPE_RATE"] == null)) {
                    return new LFS_PROJECT_JOB_CLASS_TYPE_RATERow[0];
                }
                else {
                    return ((LFS_PROJECT_JOB_CLASS_TYPE_RATERow[])(base.GetChildRows(this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_JOB_CLASS_TYPE_RATE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_REVENUERow[] GetLFS_PROJECT_REVENUERows() {
                if ((this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_REVENUE"] == null)) {
                    return new LFS_PROJECT_REVENUERow[0];
                }
                else {
                    return ((LFS_PROJECT_REVENUERow[])(base.GetChildRows(this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_REVENUE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TERMSRow[] GetLFS_PROJECT_TERMSRows() {
                if ((this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_TERMS"] == null)) {
                    return new LFS_PROJECT_TERMSRow[0];
                }
                else {
                    return ((LFS_PROJECT_TERMSRow[])(base.GetChildRows(this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_TERMS"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_JOB_INFORow[] GetLFS_PROJECT_JOB_INFORows() {
                if ((this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_JOB_INFO"] == null)) {
                    return new LFS_PROJECT_JOB_INFORow[0];
                }
                else {
                    return ((LFS_PROJECT_JOB_INFORow[])(base.GetChildRows(this.Table.ChildRelations["LFS_PROJECT_LFS_PROJECT_JOB_INFO"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_JOB_CLASS_TYPE_RATERow : global::System.Data.DataRow {
            
            private LFS_PROJECT_JOB_CLASS_TYPE_RATEDataTable tableLFS_PROJECT_JOB_CLASS_TYPE_RATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_JOB_CLASS_TYPE_RATERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE = ((LFS_PROJECT_JOB_CLASS_TYPE_RATEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobClassType {
                get {
                    return ((string)(this[this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE.JobClassTypeColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE.JobClassTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    return ((decimal)(this[this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE.RateColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FringeRate {
                get {
                    return ((decimal)(this[this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE.FringeRateColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_CLASS_TYPE_RATE.FringeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRow LFS_PROJECTRow {
                get {
                    return ((LFS_PROJECTRow)(this.GetParentRow(this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_JOB_CLASS_TYPE_RATE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_JOB_CLASS_TYPE_RATE"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_SUBCONTRACTORRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_SUBCONTRACTORDataTable tableLFS_PROJECT_SUBCONTRACTOR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_SUBCONTRACTORRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_SUBCONTRACTOR = ((LFS_PROJECT_SUBCONTRACTORDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_SUBCONTRACTOR.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTOR.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_SUBCONTRACTOR.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTOR.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubcontractorID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_SUBCONTRACTOR.SubcontractorIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTOR.SubcontractorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WrittenQuote {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SUBCONTRACTOR.WrittenQuoteColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTOR.WrittenQuoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SurveyedSite {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SUBCONTRACTOR.SurveyedSiteColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTOR.SurveyedSiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WorkedBefore {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SUBCONTRACTOR.WorkedBeforeColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTOR.WorkedBeforeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Role {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_SUBCONTRACTOR.RoleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Role\' in table \'LFS_PROJECT_SUBCONTRACTOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTOR.RoleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Agreement {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SUBCONTRACTOR.AgreementColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTOR.AgreementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issues {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_SUBCONTRACTOR.IssuesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issues\' in table \'LFS_PROJECT_SUBCONTRACTOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTOR.IssuesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PurchaseOrder {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SUBCONTRACTOR.PurchaseOrderColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTOR.PurchaseOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InsuranceCertificate {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SUBCONTRACTOR.InsuranceCertificateColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTOR.InsuranceCertificateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WSIB {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SUBCONTRACTOR.WSIBColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTOR.WSIBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MOLForm1000 {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_SUBCONTRACTOR.MOLForm1000Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOLForm1000\' in table \'LFS_PROJECT_SUBCONTRACTOR\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTOR.MOLForm1000Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_SUBCONTRACTOR.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTOR.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_SUBCONTRACTOR.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTOR.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Royalties {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT_SUBCONTRACTOR.RoyaltiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Royalties\' in table \'LFS_PROJECT_SUBCONTRACTOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_SUBCONTRACTOR.RoyaltiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoleNull() {
                return this.IsNull(this.tableLFS_PROJECT_SUBCONTRACTOR.RoleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoleNull() {
                this[this.tableLFS_PROJECT_SUBCONTRACTOR.RoleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuesNull() {
                return this.IsNull(this.tableLFS_PROJECT_SUBCONTRACTOR.IssuesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuesNull() {
                this[this.tableLFS_PROJECT_SUBCONTRACTOR.IssuesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOLForm1000Null() {
                return this.IsNull(this.tableLFS_PROJECT_SUBCONTRACTOR.MOLForm1000Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOLForm1000Null() {
                this[this.tableLFS_PROJECT_SUBCONTRACTOR.MOLForm1000Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoyaltiesNull() {
                return this.IsNull(this.tableLFS_PROJECT_SUBCONTRACTOR.RoyaltiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoyaltiesNull() {
                this[this.tableLFS_PROJECT_SUBCONTRACTOR.RoyaltiesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_REVENUERow : global::System.Data.DataRow {
            
            private LFS_PROJECT_REVENUEDataTable tableLFS_PROJECT_REVENUE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_REVENUERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_REVENUE = ((LFS_PROJECT_REVENUEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_REVENUE.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_REVENUE.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_REVENUE.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_REVENUE.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_PROJECT_REVENUE.DateColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_REVENUE.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Revenue {
                get {
                    return ((decimal)(this[this.tableLFS_PROJECT_REVENUE.RevenueColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_REVENUE.RevenueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_REVENUE.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'LFS_PROJECT_REVENUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_REVENUE.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_REVENUE.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_REVENUE.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_REVENUE.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_REVENUE.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRow LFS_PROJECTRow {
                get {
                    return ((LFS_PROJECTRow)(this.GetParentRow(this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_REVENUE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_REVENUE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableLFS_PROJECT_REVENUE.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableLFS_PROJECT_REVENUE.CommentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_WORK_FUNCTION_BUDGETRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_WORK_FUNCTION_BUDGETDataTable tableLFS_PROJECT_WORK_FUNCTION_BUDGET;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_WORK_FUNCTION_BUDGETRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET = ((LFS_PROJECT_WORK_FUNCTION_BUDGETDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Work_ {
                get {
                    return ((string)(this[this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET.Work_Column]));
                }
                set {
                    this[this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET.Work_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Function_ {
                get {
                    return ((string)(this[this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET.Function_Column]));
                }
                set {
                    this[this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET.Function_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Budget {
                get {
                    return ((decimal)(this[this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET.BudgetColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET.BudgetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Budget_ {
                get {
                    return ((decimal)(this[this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET.Budget_Column]));
                }
                set {
                    this[this.tableLFS_PROJECT_WORK_FUNCTION_BUDGET.Budget_Column] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_TERMSRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_TERMSDataTable tableLFS_PROJECT_TERMS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_TERMSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_TERMS = ((LFS_PROJECT_TERMSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TERMS.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LiquidatedDamage {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TERMS.LiquidatedDamageColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.LiquidatedDamageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LiquidatedRate {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_PROJECT_TERMS.LiquidatedRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LiquidatedRate\' in table \'LFS_PROJECT_TERMS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.LiquidatedRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LiquidatedUnit {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TERMS.LiquidatedUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LiquidatedUnit\' in table \'LFS_PROJECT_TERMS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.LiquidatedUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RelationshipClientWorkedBefore {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TERMS.RelationshipClientWorkedBeforeColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.RelationshipClientWorkedBeforeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RelationshipClientQuirks {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TERMS.RelationshipClientQuirksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RelationshipClientQuirks\' in table \'LFS_PROJECT_TERMS\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.RelationshipClientQuirksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RelationshipClientPromises {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TERMS.RelationshipClientPromisesColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.RelationshipClientPromisesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RelationshipClientPromisesNotes {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TERMS.RelationshipClientPromisesNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RelationshipClientPromisesNotes\' in table \'LFS_PROJECT_TERM" +
                                "S\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.RelationshipClientPromisesNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RelationshipWaterObtain {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TERMS.RelationshipWaterObtainColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RelationshipWaterObtain\' in table \'LFS_PROJECT_TERMS\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.RelationshipWaterObtainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RelationshipMaterialDispose {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TERMS.RelationshipMaterialDisposeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RelationshipMaterialDispose\' in table \'LFS_PROJECT_TERMS\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.RelationshipMaterialDisposeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RelationshipRequireRPZ {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TERMS.RelationshipRequireRPZColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.RelationshipRequireRPZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RelationshipStandardHydrantFitting {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TERMS.RelationshipStandardHydrantFittingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RelationshipStandardHydrantFitting\' in table \'LFS_PROJECT_T" +
                                "ERMS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.RelationshipStandardHydrantFittingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RelationshipPreConstructionMeeting {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TERMS.RelationshipPreConstructionMeetingColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.RelationshipPreConstructionMeetingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RelationshipSpecificMeetingLocation {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TERMS.RelationshipSpecificMeetingLocationColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.RelationshipSpecificMeetingLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RelationshipSpecificMeetingLocationNotes {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TERMS.RelationshipSpecificMeetingLocationNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RelationshipSpecificMeetingLocationNotes\' in table \'LFS_PRO" +
                                "JECT_TERMS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.RelationshipSpecificMeetingLocationNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RelationshipVehicleAccess {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TERMS.RelationshipVehicleAccessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RelationshipVehicleAccess\' in table \'LFS_PROJECT_TERMS\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.RelationshipVehicleAccessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RelationshipVehicleAccessNotes {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TERMS.RelationshipVehicleAccessNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RelationshipVehicleAccessNotes\' in table \'LFS_PROJECT_TERMS" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.RelationshipVehicleAccessNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RelationshipProjectOutcome {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TERMS.RelationshipProjectOutcomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RelationshipProjectOutcome\' in table \'LFS_PROJECT_TERMS\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.RelationshipProjectOutcomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RelationshipSpecificReportingNeeds {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TERMS.RelationshipSpecificReportingNeedsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RelationshipSpecificReportingNeeds\' in table \'LFS_PROJECT_T" +
                                "ERMS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.RelationshipSpecificReportingNeedsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PurchaseOrderNumber {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TERMS.PurchaseOrderNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseOrderNumber\' in table \'LFS_PROJECT_TERMS\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.PurchaseOrderNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PurchaseOrderAttached {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TERMS.PurchaseOrderAttachedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.PurchaseOrderAttachedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PurchaseOrderNotes {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TERMS.PurchaseOrderNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseOrderNotes\' in table \'LFS_PROJECT_TERMS\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.PurchaseOrderNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TERMS.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VehicleAccessRoad {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TERMS.VehicleAccessRoadColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.VehicleAccessRoadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VehicleAccessEasement {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TERMS.VehicleAccessEasementColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.VehicleAccessEasementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VehicleAccessOther {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TERMS.VehicleAccessOtherColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TERMS.VehicleAccessOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRow LFS_PROJECTRow {
                get {
                    return ((LFS_PROJECTRow)(this.GetParentRow(this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_TERMS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_TERMS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLiquidatedRateNull() {
                return this.IsNull(this.tableLFS_PROJECT_TERMS.LiquidatedRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLiquidatedRateNull() {
                this[this.tableLFS_PROJECT_TERMS.LiquidatedRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLiquidatedUnitNull() {
                return this.IsNull(this.tableLFS_PROJECT_TERMS.LiquidatedUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLiquidatedUnitNull() {
                this[this.tableLFS_PROJECT_TERMS.LiquidatedUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRelationshipClientQuirksNull() {
                return this.IsNull(this.tableLFS_PROJECT_TERMS.RelationshipClientQuirksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRelationshipClientQuirksNull() {
                this[this.tableLFS_PROJECT_TERMS.RelationshipClientQuirksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRelationshipClientPromisesNotesNull() {
                return this.IsNull(this.tableLFS_PROJECT_TERMS.RelationshipClientPromisesNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRelationshipClientPromisesNotesNull() {
                this[this.tableLFS_PROJECT_TERMS.RelationshipClientPromisesNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRelationshipWaterObtainNull() {
                return this.IsNull(this.tableLFS_PROJECT_TERMS.RelationshipWaterObtainColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRelationshipWaterObtainNull() {
                this[this.tableLFS_PROJECT_TERMS.RelationshipWaterObtainColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRelationshipMaterialDisposeNull() {
                return this.IsNull(this.tableLFS_PROJECT_TERMS.RelationshipMaterialDisposeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRelationshipMaterialDisposeNull() {
                this[this.tableLFS_PROJECT_TERMS.RelationshipMaterialDisposeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRelationshipStandardHydrantFittingNull() {
                return this.IsNull(this.tableLFS_PROJECT_TERMS.RelationshipStandardHydrantFittingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRelationshipStandardHydrantFittingNull() {
                this[this.tableLFS_PROJECT_TERMS.RelationshipStandardHydrantFittingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRelationshipSpecificMeetingLocationNotesNull() {
                return this.IsNull(this.tableLFS_PROJECT_TERMS.RelationshipSpecificMeetingLocationNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRelationshipSpecificMeetingLocationNotesNull() {
                this[this.tableLFS_PROJECT_TERMS.RelationshipSpecificMeetingLocationNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRelationshipVehicleAccessNull() {
                return this.IsNull(this.tableLFS_PROJECT_TERMS.RelationshipVehicleAccessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRelationshipVehicleAccessNull() {
                this[this.tableLFS_PROJECT_TERMS.RelationshipVehicleAccessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRelationshipVehicleAccessNotesNull() {
                return this.IsNull(this.tableLFS_PROJECT_TERMS.RelationshipVehicleAccessNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRelationshipVehicleAccessNotesNull() {
                this[this.tableLFS_PROJECT_TERMS.RelationshipVehicleAccessNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRelationshipProjectOutcomeNull() {
                return this.IsNull(this.tableLFS_PROJECT_TERMS.RelationshipProjectOutcomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRelationshipProjectOutcomeNull() {
                this[this.tableLFS_PROJECT_TERMS.RelationshipProjectOutcomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRelationshipSpecificReportingNeedsNull() {
                return this.IsNull(this.tableLFS_PROJECT_TERMS.RelationshipSpecificReportingNeedsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRelationshipSpecificReportingNeedsNull() {
                this[this.tableLFS_PROJECT_TERMS.RelationshipSpecificReportingNeedsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchaseOrderNumberNull() {
                return this.IsNull(this.tableLFS_PROJECT_TERMS.PurchaseOrderNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchaseOrderNumberNull() {
                this[this.tableLFS_PROJECT_TERMS.PurchaseOrderNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchaseOrderNotesNull() {
                return this.IsNull(this.tableLFS_PROJECT_TERMS.PurchaseOrderNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchaseOrderNotesNull() {
                this[this.tableLFS_PROJECT_TERMS.PurchaseOrderNotesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_JOB_INFORow : global::System.Data.DataRow {
            
            private LFS_PROJECT_JOB_INFODataTable tableLFS_PROJECT_JOB_INFO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_JOB_INFORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_JOB_INFO = ((LFS_PROJECT_JOB_INFODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_JOB_INFO.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_INFO.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TypeOfWorkMhRehab {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_JOB_INFO.TypeOfWorkMhRehabColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_INFO.TypeOfWorkMhRehabColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TypeOfWorkJuntionLining {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_JOB_INFO.TypeOfWorkJuntionLiningColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_INFO.TypeOfWorkJuntionLiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TypeOfWorkProjectmanagement {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_JOB_INFO.TypeOfWorkProjectmanagementColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_INFO.TypeOfWorkProjectmanagementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TypeOfWorkFullLenghtLining {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_JOB_INFO.TypeOfWorkFullLenghtLiningColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_INFO.TypeOfWorkFullLenghtLiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TypeOfWorkPointRepairs {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_JOB_INFO.TypeOfWorkPointRepairsColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_INFO.TypeOfWorkPointRepairsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TypeOfWorkRehabAssessment {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_JOB_INFO.TypeOfWorkRehabAssessmentColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_INFO.TypeOfWorkRehabAssessmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TypeOfWorkGrout {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_JOB_INFO.TypeOfWorkGroutColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_INFO.TypeOfWorkGroutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TypeOfWorkOther {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_JOB_INFO.TypeOfWorkOtherColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_INFO.TypeOfWorkOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_JOB_INFO.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_INFO.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Agreement {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_JOB_INFO.AgreementColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_INFO.AgreementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WrittenQuote {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_JOB_INFO.WrittenQuoteColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_INFO.WrittenQuoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Role {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_JOB_INFO.RoleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Role\' in table \'LFS_PROJECT_JOB_INFO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_JOB_INFO.RoleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRow LFS_PROJECTRow {
                get {
                    return ((LFS_PROJECTRow)(this.GetParentRow(this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_JOB_INFO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_PROJECT_LFS_PROJECT_JOB_INFO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoleNull() {
                return this.IsNull(this.tableLFS_PROJECT_JOB_INFO.RoleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoleNull() {
                this[this.tableLFS_PROJECT_JOB_INFO.RoleColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_BONDINGS_BUDGETRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_BONDINGS_BUDGETRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_BONDINGS_BUDGETRowChangeEvent(LFS_PROJECT_BONDINGS_BUDGETRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_BONDINGS_BUDGETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_HOTELS_BUDGETRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_HOTELS_BUDGETRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_HOTELS_BUDGETRowChangeEvent(LFS_PROJECT_HOTELS_BUDGETRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_HOTELS_BUDGETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_INSURANCES_BUDGETRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_INSURANCES_BUDGETRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_INSURANCES_BUDGETRowChangeEvent(LFS_PROJECT_INSURANCES_BUDGETRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_INSURANCES_BUDGETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_OTHER_COSTS_BUDGETRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_OTHER_COSTS_BUDGETRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_OTHER_COSTS_BUDGETRowChangeEvent(LFS_PROJECT_OTHER_COSTS_BUDGETRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_OTHER_COSTS_BUDGETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_MATERIALS_BUDGETRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_MATERIALS_BUDGETRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_MATERIALS_BUDGETRowChangeEvent(LFS_PROJECT_MATERIALS_BUDGETRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_MATERIALS_BUDGETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_SUBCONTRACTORS_BUDGETRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_SUBCONTRACTORS_BUDGETRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SUBCONTRACTORS_BUDGETRowChangeEvent(LFS_PROJECT_SUBCONTRACTORS_BUDGETRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SUBCONTRACTORS_BUDGETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_UNITS_BUDGETRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_UNITS_BUDGETRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_UNITS_BUDGETRowChangeEvent(LFS_PROJECT_UNITS_BUDGETRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_UNITS_BUDGETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_COSTING_UPDATESRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_COSTING_UPDATESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_COSTING_UPDATESRowChangeEvent(LFS_PROJECT_COSTING_UPDATESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_COSTING_UPDATESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_SALE_BILLING_PRICINGRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_SALE_BILLING_PRICINGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SALE_BILLING_PRICINGRowChangeEvent(LFS_PROJECT_SALE_BILLING_PRICINGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SALE_BILLING_PRICINGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_SERVICERowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_SERVICERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SERVICERowChangeEvent(LFS_PROJECT_SERVICERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SERVICERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_TECHNICALRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_TECHNICALRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TECHNICALRowChangeEvent(LFS_PROJECT_TECHNICALRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TECHNICALRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_NUMBERRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_NUMBERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_NUMBERRowChangeEvent(LFS_PROJECT_NUMBERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_NUMBERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_HISTORYRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_HISTORYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_HISTORYRowChangeEvent(LFS_PROJECT_HISTORYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_HISTORYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_NOTERowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_NOTERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_NOTERowChangeEvent(LFS_PROJECT_NOTERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_NOTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_ENGINEER_SUBCONTRACTORSRowChangeEvent(LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_ENGINEER_SUBCONTRACTORSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_LASTLOGINRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_LASTLOGINRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_LASTLOGINRowChangeEvent(LFS_PROJECT_LASTLOGINRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_LASTLOGINRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERowChangeEvent(LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_WORK_FUNCTION_FAIR_WAGERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECTRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRowChangeEvent(LFS_PROJECTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_JOB_CLASS_TYPE_RATERowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_JOB_CLASS_TYPE_RATERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_JOB_CLASS_TYPE_RATERowChangeEvent(LFS_PROJECT_JOB_CLASS_TYPE_RATERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_JOB_CLASS_TYPE_RATERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_SUBCONTRACTORRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_SUBCONTRACTORRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SUBCONTRACTORRowChangeEvent(LFS_PROJECT_SUBCONTRACTORRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_SUBCONTRACTORRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_REVENUERowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_REVENUERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_REVENUERowChangeEvent(LFS_PROJECT_REVENUERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_REVENUERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_WORK_FUNCTION_BUDGETRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_WORK_FUNCTION_BUDGETRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_WORK_FUNCTION_BUDGETRowChangeEvent(LFS_PROJECT_WORK_FUNCTION_BUDGETRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_WORK_FUNCTION_BUDGETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_TERMSRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_TERMSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TERMSRowChangeEvent(LFS_PROJECT_TERMSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TERMSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_JOB_INFORowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_JOB_INFORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_JOB_INFORowChangeEvent(LFS_PROJECT_JOB_INFORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_JOB_INFORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace LiquiForce.LFSLive.DA.Projects.Projects.ProjectTDSTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LFS_PROJECT_BONDINGS_BUDGETTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LFS_PROJECT_BONDINGS_BUDGETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LFS_PROJECT_BONDINGS_BUDGET";
            tableMapping.ColumnMappings.Add("ProjectID", "ProjectID");
            tableMapping.ColumnMappings.Add("BondingCompanyID", "BondingCompanyID");
            tableMapping.ColumnMappings.Add("RefID", "RefID");
            tableMapping.ColumnMappings.Add("Budget", "Budget");
            tableMapping.ColumnMappings.Add("Deleted", "Deleted");
            tableMapping.ColumnMappings.Add("COMPANY_ID", "COMPANY_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[LFS_PROJECT_BONDINGS_BUDGET] WHERE (([ProjectID] = @Original_ProjectID) AND ([BondingCompanyID] = @Original_BondingCompanyID) AND ([RefID] = @Original_RefID) AND ([Budget] = @Original_Budget) AND ([Deleted] = @Original_Deleted) AND ([COMPANY_ID] = @Original_COMPANY_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BondingCompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BondingCompanyID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[LFS_PROJECT_BONDINGS_BUDGET] ([ProjectID], [BondingCompanyID], [RefID], [Budget], [Deleted], [COMPANY_ID]) VALUES (@ProjectID, @BondingCompanyID, @RefID, @Budget, @Deleted, @COMPANY_ID);
SELECT ProjectID, BondingCompanyID, RefID, Budget, Deleted, COMPANY_ID FROM LFS_PROJECT_BONDINGS_BUDGET WHERE (BondingCompanyID = @BondingCompanyID) AND (ProjectID = @ProjectID) AND (RefID = @RefID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BondingCompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BondingCompanyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LFS_PROJECT_BONDINGS_BUDGET] SET [ProjectID] = @ProjectID, [BondingCompanyID] = @BondingCompanyID, [RefID] = @RefID, [Budget] = @Budget, [Deleted] = @Deleted, [COMPANY_ID] = @COMPANY_ID WHERE (([ProjectID] = @Original_ProjectID) AND ([BondingCompanyID] = @Original_BondingCompanyID) AND ([RefID] = @Original_RefID) AND ([Budget] = @Original_Budget) AND ([Deleted] = @Original_Deleted) AND ([COMPANY_ID] = @Original_COMPANY_ID));
SELECT ProjectID, BondingCompanyID, RefID, Budget, Deleted, COMPANY_ID FROM LFS_PROJECT_BONDINGS_BUDGET WHERE (BondingCompanyID = @BondingCompanyID) AND (ProjectID = @ProjectID) AND (RefID = @RefID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BondingCompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BondingCompanyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BondingCompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BondingCompanyID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LiquiForce.LFSLive.DA.Projects.Properties.Settings.Default.Live1ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ProjectID, BondingCompanyID, RefID, Budget, Deleted, COMPANY_ID FROM dbo.L" +
                "FS_PROJECT_BONDINGS_BUDGET";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ProjectTDS.LFS_PROJECT_BONDINGS_BUDGETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ProjectTDS.LFS_PROJECT_BONDINGS_BUDGETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ProjectTDS.LFS_PROJECT_BONDINGS_BUDGETDataTable dataTable = new ProjectTDS.LFS_PROJECT_BONDINGS_BUDGETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ProjectTDS.LFS_PROJECT_BONDINGS_BUDGETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ProjectTDS dataSet) {
            return this.Adapter.Update(dataSet, "LFS_PROJECT_BONDINGS_BUDGET");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ProjectID, int Original_BondingCompanyID, int Original_RefID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ProjectID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_BondingCompanyID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_RefID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_Budget));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_Deleted));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ProjectID, int BondingCompanyID, int RefID, decimal Budget, bool Deleted, int COMPANY_ID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ProjectID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(BondingCompanyID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(RefID));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Budget));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(Deleted));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ProjectID, int BondingCompanyID, int RefID, decimal Budget, bool Deleted, int COMPANY_ID, int Original_ProjectID, int Original_BondingCompanyID, int Original_RefID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ProjectID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(BondingCompanyID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(RefID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Budget));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Deleted));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(COMPANY_ID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ProjectID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_BondingCompanyID));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_RefID));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_Budget));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_Deleted));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Budget, bool Deleted, int COMPANY_ID, int Original_ProjectID, int Original_BondingCompanyID, int Original_RefID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            return this.Update(Original_ProjectID, Original_BondingCompanyID, Original_RefID, Budget, Deleted, COMPANY_ID, Original_ProjectID, Original_BondingCompanyID, Original_RefID, Original_Budget, Original_Deleted, Original_COMPANY_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LFS_PROJECT_HOTELS_BUDGETTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LFS_PROJECT_HOTELS_BUDGETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LFS_PROJECT_HOTELS_BUDGET";
            tableMapping.ColumnMappings.Add("ProjectID", "ProjectID");
            tableMapping.ColumnMappings.Add("HolelID", "HolelID");
            tableMapping.ColumnMappings.Add("RefID", "RefID");
            tableMapping.ColumnMappings.Add("Budget", "Budget");
            tableMapping.ColumnMappings.Add("Deleted", "Deleted");
            tableMapping.ColumnMappings.Add("COMPANY_ID", "COMPANY_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[LFS_PROJECT_HOTELS_BUDGET] WHERE (([ProjectID] = @Original_ProjectID) AND ([HolelID] = @Original_HolelID) AND ([RefID] = @Original_RefID) AND ([Budget] = @Original_Budget) AND ([Deleted] = @Original_Deleted) AND ([COMPANY_ID] = @Original_COMPANY_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HolelID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HolelID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[LFS_PROJECT_HOTELS_BUDGET] ([ProjectID], [HolelID], [RefID], [Budget], [Deleted], [COMPANY_ID]) VALUES (@ProjectID, @HolelID, @RefID, @Budget, @Deleted, @COMPANY_ID);
SELECT ProjectID, HolelID, RefID, Budget, Deleted, COMPANY_ID FROM LFS_PROJECT_HOTELS_BUDGET WHERE (HolelID = @HolelID) AND (ProjectID = @ProjectID) AND (RefID = @RefID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HolelID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HolelID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LFS_PROJECT_HOTELS_BUDGET] SET [ProjectID] = @ProjectID, [HolelID] = @HolelID, [RefID] = @RefID, [Budget] = @Budget, [Deleted] = @Deleted, [COMPANY_ID] = @COMPANY_ID WHERE (([ProjectID] = @Original_ProjectID) AND ([HolelID] = @Original_HolelID) AND ([RefID] = @Original_RefID) AND ([Budget] = @Original_Budget) AND ([Deleted] = @Original_Deleted) AND ([COMPANY_ID] = @Original_COMPANY_ID));
SELECT ProjectID, HolelID, RefID, Budget, Deleted, COMPANY_ID FROM LFS_PROJECT_HOTELS_BUDGET WHERE (HolelID = @HolelID) AND (ProjectID = @ProjectID) AND (RefID = @RefID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HolelID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HolelID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HolelID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HolelID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LiquiForce.LFSLive.DA.Projects.Properties.Settings.Default.Live1ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ProjectID, HolelID, RefID, Budget, Deleted, COMPANY_ID FROM dbo.LFS_PROJEC" +
                "T_HOTELS_BUDGET";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ProjectTDS.LFS_PROJECT_HOTELS_BUDGETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ProjectTDS.LFS_PROJECT_HOTELS_BUDGETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ProjectTDS.LFS_PROJECT_HOTELS_BUDGETDataTable dataTable = new ProjectTDS.LFS_PROJECT_HOTELS_BUDGETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ProjectTDS.LFS_PROJECT_HOTELS_BUDGETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ProjectTDS dataSet) {
            return this.Adapter.Update(dataSet, "LFS_PROJECT_HOTELS_BUDGET");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ProjectID, int Original_HolelID, int Original_RefID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ProjectID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_HolelID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_RefID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_Budget));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_Deleted));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ProjectID, int HolelID, int RefID, decimal Budget, bool Deleted, int COMPANY_ID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ProjectID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(HolelID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(RefID));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Budget));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(Deleted));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ProjectID, int HolelID, int RefID, decimal Budget, bool Deleted, int COMPANY_ID, int Original_ProjectID, int Original_HolelID, int Original_RefID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ProjectID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(HolelID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(RefID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Budget));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Deleted));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(COMPANY_ID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ProjectID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_HolelID));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_RefID));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_Budget));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_Deleted));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Budget, bool Deleted, int COMPANY_ID, int Original_ProjectID, int Original_HolelID, int Original_RefID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            return this.Update(Original_ProjectID, Original_HolelID, Original_RefID, Budget, Deleted, COMPANY_ID, Original_ProjectID, Original_HolelID, Original_RefID, Original_Budget, Original_Deleted, Original_COMPANY_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LFS_PROJECT_INSURANCES_BUDGETTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LFS_PROJECT_INSURANCES_BUDGETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LFS_PROJECT_INSURANCES_BUDGET";
            tableMapping.ColumnMappings.Add("ProjectID", "ProjectID");
            tableMapping.ColumnMappings.Add("InsuranceCompanyID", "InsuranceCompanyID");
            tableMapping.ColumnMappings.Add("RefID", "RefID");
            tableMapping.ColumnMappings.Add("Budget", "Budget");
            tableMapping.ColumnMappings.Add("Deleted", "Deleted");
            tableMapping.ColumnMappings.Add("COMPANY_ID", "COMPANY_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[LFS_PROJECT_INSURANCES_BUDGET] WHERE (([ProjectID] = @Original_ProjectID) AND ([InsuranceCompanyID] = @Original_InsuranceCompanyID) AND ([RefID] = @Original_RefID) AND ([Budget] = @Original_Budget) AND ([Deleted] = @Original_Deleted) AND ([COMPANY_ID] = @Original_COMPANY_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsuranceCompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsuranceCompanyID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[LFS_PROJECT_INSURANCES_BUDGET] ([ProjectID], [InsuranceCompanyID], [RefID], [Budget], [Deleted], [COMPANY_ID]) VALUES (@ProjectID, @InsuranceCompanyID, @RefID, @Budget, @Deleted, @COMPANY_ID);
SELECT ProjectID, InsuranceCompanyID, RefID, Budget, Deleted, COMPANY_ID FROM LFS_PROJECT_INSURANCES_BUDGET WHERE (InsuranceCompanyID = @InsuranceCompanyID) AND (ProjectID = @ProjectID) AND (RefID = @RefID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsuranceCompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsuranceCompanyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LFS_PROJECT_INSURANCES_BUDGET] SET [ProjectID] = @ProjectID, [InsuranceCompanyID] = @InsuranceCompanyID, [RefID] = @RefID, [Budget] = @Budget, [Deleted] = @Deleted, [COMPANY_ID] = @COMPANY_ID WHERE (([ProjectID] = @Original_ProjectID) AND ([InsuranceCompanyID] = @Original_InsuranceCompanyID) AND ([RefID] = @Original_RefID) AND ([Budget] = @Original_Budget) AND ([Deleted] = @Original_Deleted) AND ([COMPANY_ID] = @Original_COMPANY_ID));
SELECT ProjectID, InsuranceCompanyID, RefID, Budget, Deleted, COMPANY_ID FROM LFS_PROJECT_INSURANCES_BUDGET WHERE (InsuranceCompanyID = @InsuranceCompanyID) AND (ProjectID = @ProjectID) AND (RefID = @RefID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsuranceCompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsuranceCompanyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsuranceCompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsuranceCompanyID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LiquiForce.LFSLive.DA.Projects.Properties.Settings.Default.Live1ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ProjectID, InsuranceCompanyID, RefID, Budget, Deleted, COMPANY_ID FROM dbo" +
                ".LFS_PROJECT_INSURANCES_BUDGET";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ProjectTDS.LFS_PROJECT_INSURANCES_BUDGETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ProjectTDS.LFS_PROJECT_INSURANCES_BUDGETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ProjectTDS.LFS_PROJECT_INSURANCES_BUDGETDataTable dataTable = new ProjectTDS.LFS_PROJECT_INSURANCES_BUDGETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ProjectTDS.LFS_PROJECT_INSURANCES_BUDGETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ProjectTDS dataSet) {
            return this.Adapter.Update(dataSet, "LFS_PROJECT_INSURANCES_BUDGET");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ProjectID, int Original_InsuranceCompanyID, int Original_RefID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ProjectID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_InsuranceCompanyID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_RefID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_Budget));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_Deleted));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ProjectID, int InsuranceCompanyID, int RefID, decimal Budget, bool Deleted, int COMPANY_ID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ProjectID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(InsuranceCompanyID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(RefID));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Budget));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(Deleted));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ProjectID, int InsuranceCompanyID, int RefID, decimal Budget, bool Deleted, int COMPANY_ID, int Original_ProjectID, int Original_InsuranceCompanyID, int Original_RefID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ProjectID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(InsuranceCompanyID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(RefID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Budget));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Deleted));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(COMPANY_ID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ProjectID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_InsuranceCompanyID));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_RefID));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_Budget));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_Deleted));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Budget, bool Deleted, int COMPANY_ID, int Original_ProjectID, int Original_InsuranceCompanyID, int Original_RefID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            return this.Update(Original_ProjectID, Original_InsuranceCompanyID, Original_RefID, Budget, Deleted, COMPANY_ID, Original_ProjectID, Original_InsuranceCompanyID, Original_RefID, Original_Budget, Original_Deleted, Original_COMPANY_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LFS_PROJECT_OTHER_COSTS_BUDGETTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LFS_PROJECT_OTHER_COSTS_BUDGETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LFS_PROJECT_OTHER_COSTS_BUDGET";
            tableMapping.ColumnMappings.Add("ProjectID", "ProjectID");
            tableMapping.ColumnMappings.Add("Category", "Category");
            tableMapping.ColumnMappings.Add("RefID", "RefID");
            tableMapping.ColumnMappings.Add("Budget", "Budget");
            tableMapping.ColumnMappings.Add("Deleted", "Deleted");
            tableMapping.ColumnMappings.Add("COMPANY_ID", "COMPANY_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[LFS_PROJECT_OTHER_COSTS_BUDGET] WHERE (([ProjectID] = @Original_ProjectID) AND ([Category] = @Original_Category) AND ([RefID] = @Original_RefID) AND ([Budget] = @Original_Budget) AND ([Deleted] = @Original_Deleted) AND ([COMPANY_ID] = @Original_COMPANY_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Category", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Category", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[LFS_PROJECT_OTHER_COSTS_BUDGET] ([ProjectID], [Category], [RefID], [Budget], [Deleted], [COMPANY_ID]) VALUES (@ProjectID, @Category, @RefID, @Budget, @Deleted, @COMPANY_ID);
SELECT ProjectID, Category, RefID, Budget, Deleted, COMPANY_ID FROM LFS_PROJECT_OTHER_COSTS_BUDGET WHERE (Category = @Category) AND (ProjectID = @ProjectID) AND (RefID = @RefID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Category", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Category", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LFS_PROJECT_OTHER_COSTS_BUDGET] SET [ProjectID] = @ProjectID, [Category] = @Category, [RefID] = @RefID, [Budget] = @Budget, [Deleted] = @Deleted, [COMPANY_ID] = @COMPANY_ID WHERE (([ProjectID] = @Original_ProjectID) AND ([Category] = @Original_Category) AND ([RefID] = @Original_RefID) AND ([Budget] = @Original_Budget) AND ([Deleted] = @Original_Deleted) AND ([COMPANY_ID] = @Original_COMPANY_ID));
SELECT ProjectID, Category, RefID, Budget, Deleted, COMPANY_ID FROM LFS_PROJECT_OTHER_COSTS_BUDGET WHERE (Category = @Category) AND (ProjectID = @ProjectID) AND (RefID = @RefID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Category", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Category", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Category", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Category", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LiquiForce.LFSLive.DA.Projects.Properties.Settings.Default.Live1ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ProjectID, Category, RefID, Budget, Deleted, COMPANY_ID FROM dbo.LFS_PROJE" +
                "CT_OTHER_COSTS_BUDGET";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ProjectTDS.LFS_PROJECT_OTHER_COSTS_BUDGETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ProjectTDS.LFS_PROJECT_OTHER_COSTS_BUDGETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ProjectTDS.LFS_PROJECT_OTHER_COSTS_BUDGETDataTable dataTable = new ProjectTDS.LFS_PROJECT_OTHER_COSTS_BUDGETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ProjectTDS.LFS_PROJECT_OTHER_COSTS_BUDGETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ProjectTDS dataSet) {
            return this.Adapter.Update(dataSet, "LFS_PROJECT_OTHER_COSTS_BUDGET");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ProjectID, string Original_Category, int Original_RefID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ProjectID));
            if ((Original_Category == null)) {
                throw new global::System.ArgumentNullException("Original_Category");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Category));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_RefID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_Budget));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_Deleted));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ProjectID, string Category, int RefID, decimal Budget, bool Deleted, int COMPANY_ID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ProjectID));
            if ((Category == null)) {
                throw new global::System.ArgumentNullException("Category");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Category));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(RefID));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Budget));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(Deleted));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ProjectID, string Category, int RefID, decimal Budget, bool Deleted, int COMPANY_ID, int Original_ProjectID, string Original_Category, int Original_RefID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ProjectID));
            if ((Category == null)) {
                throw new global::System.ArgumentNullException("Category");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Category));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(RefID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Budget));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Deleted));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(COMPANY_ID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ProjectID));
            if ((Original_Category == null)) {
                throw new global::System.ArgumentNullException("Original_Category");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Category));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_RefID));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_Budget));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_Deleted));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Budget, bool Deleted, int COMPANY_ID, int Original_ProjectID, string Original_Category, int Original_RefID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            return this.Update(Original_ProjectID, Original_Category, Original_RefID, Budget, Deleted, COMPANY_ID, Original_ProjectID, Original_Category, Original_RefID, Original_Budget, Original_Deleted, Original_COMPANY_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LFS_PROJECT_MATERIALS_BUDGETTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LFS_PROJECT_MATERIALS_BUDGETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LFS_PROJECT_MATERIALS_BUDGET";
            tableMapping.ColumnMappings.Add("ProjectID", "ProjectID");
            tableMapping.ColumnMappings.Add("Budget", "Budget");
            tableMapping.ColumnMappings.Add("Deleted", "Deleted");
            tableMapping.ColumnMappings.Add("COMPANY_ID", "COMPANY_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[LFS_PROJECT_MATERIALS_BUDGET] WHERE (([ProjectID] = @Original_" +
                "ProjectID) AND ([Budget] = @Original_Budget) AND ([Deleted] = @Original_Deleted)" +
                " AND ([COMPANY_ID] = @Original_COMPANY_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[LFS_PROJECT_MATERIALS_BUDGET] ([ProjectID], [Budget], [Deleted], [COMPANY_ID]) VALUES (@ProjectID, @Budget, @Deleted, @COMPANY_ID);
SELECT ProjectID, Budget, Deleted, COMPANY_ID FROM LFS_PROJECT_MATERIALS_BUDGET WHERE (ProjectID = @ProjectID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LFS_PROJECT_MATERIALS_BUDGET] SET [ProjectID] = @ProjectID, [Budget] = @Budget, [Deleted] = @Deleted, [COMPANY_ID] = @COMPANY_ID WHERE (([ProjectID] = @Original_ProjectID) AND ([Budget] = @Original_Budget) AND ([Deleted] = @Original_Deleted) AND ([COMPANY_ID] = @Original_COMPANY_ID));
SELECT ProjectID, Budget, Deleted, COMPANY_ID FROM LFS_PROJECT_MATERIALS_BUDGET WHERE (ProjectID = @ProjectID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LiquiForce.LFSLive.DA.Projects.Properties.Settings.Default.Live1ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ProjectID, Budget, Deleted, COMPANY_ID FROM dbo.LFS_PROJECT_MATERIALS_BUDG" +
                "ET";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ProjectTDS.LFS_PROJECT_MATERIALS_BUDGETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ProjectTDS.LFS_PROJECT_MATERIALS_BUDGETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ProjectTDS.LFS_PROJECT_MATERIALS_BUDGETDataTable dataTable = new ProjectTDS.LFS_PROJECT_MATERIALS_BUDGETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ProjectTDS.LFS_PROJECT_MATERIALS_BUDGETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ProjectTDS dataSet) {
            return this.Adapter.Update(dataSet, "LFS_PROJECT_MATERIALS_BUDGET");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ProjectID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ProjectID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_Budget));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_Deleted));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ProjectID, decimal Budget, bool Deleted, int COMPANY_ID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ProjectID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(Budget));
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(Deleted));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ProjectID, decimal Budget, bool Deleted, int COMPANY_ID, int Original_ProjectID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ProjectID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Budget));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(Deleted));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(COMPANY_ID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ProjectID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_Budget));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(Original_Deleted));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Budget, bool Deleted, int COMPANY_ID, int Original_ProjectID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            return this.Update(Original_ProjectID, Budget, Deleted, COMPANY_ID, Original_ProjectID, Original_Budget, Original_Deleted, Original_COMPANY_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LFS_PROJECT_SUBCONTRACTORS_BUDGETTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LFS_PROJECT_SUBCONTRACTORS_BUDGETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LFS_PROJECT_SUBCONTRACTORS_BUDGET";
            tableMapping.ColumnMappings.Add("ProjectID", "ProjectID");
            tableMapping.ColumnMappings.Add("SubcontractorID", "SubcontractorID");
            tableMapping.ColumnMappings.Add("RefID", "RefID");
            tableMapping.ColumnMappings.Add("Budget", "Budget");
            tableMapping.ColumnMappings.Add("Deleted", "Deleted");
            tableMapping.ColumnMappings.Add("COMPANY_ID", "COMPANY_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[LFS_PROJECT_SUBCONTRACTORS_BUDGET] WHERE (([ProjectID] = @Original_ProjectID) AND ([SubcontractorID] = @Original_SubcontractorID) AND ([RefID] = @Original_RefID) AND ([Budget] = @Original_Budget) AND ([Deleted] = @Original_Deleted) AND ([COMPANY_ID] = @Original_COMPANY_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubcontractorID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubcontractorID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[LFS_PROJECT_SUBCONTRACTORS_BUDGET] ([ProjectID], [SubcontractorID], [RefID], [Budget], [Deleted], [COMPANY_ID]) VALUES (@ProjectID, @SubcontractorID, @RefID, @Budget, @Deleted, @COMPANY_ID);
SELECT ProjectID, SubcontractorID, RefID, Budget, Deleted, COMPANY_ID FROM LFS_PROJECT_SUBCONTRACTORS_BUDGET WHERE (ProjectID = @ProjectID) AND (RefID = @RefID) AND (SubcontractorID = @SubcontractorID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubcontractorID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubcontractorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LFS_PROJECT_SUBCONTRACTORS_BUDGET] SET [ProjectID] = @ProjectID, [SubcontractorID] = @SubcontractorID, [RefID] = @RefID, [Budget] = @Budget, [Deleted] = @Deleted, [COMPANY_ID] = @COMPANY_ID WHERE (([ProjectID] = @Original_ProjectID) AND ([SubcontractorID] = @Original_SubcontractorID) AND ([RefID] = @Original_RefID) AND ([Budget] = @Original_Budget) AND ([Deleted] = @Original_Deleted) AND ([COMPANY_ID] = @Original_COMPANY_ID));
SELECT ProjectID, SubcontractorID, RefID, Budget, Deleted, COMPANY_ID FROM LFS_PROJECT_SUBCONTRACTORS_BUDGET WHERE (ProjectID = @ProjectID) AND (RefID = @RefID) AND (SubcontractorID = @SubcontractorID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubcontractorID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubcontractorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubcontractorID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubcontractorID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RefID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LiquiForce.LFSLive.DA.Projects.Properties.Settings.Default.Live1ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ProjectID, SubcontractorID, RefID, Budget, Deleted, COMPANY_ID FROM dbo.LF" +
                "S_PROJECT_SUBCONTRACTORS_BUDGET";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ProjectTDS.LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ProjectTDS.LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ProjectTDS.LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable dataTable = new ProjectTDS.LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ProjectTDS.LFS_PROJECT_SUBCONTRACTORS_BUDGETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ProjectTDS dataSet) {
            return this.Adapter.Update(dataSet, "LFS_PROJECT_SUBCONTRACTORS_BUDGET");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ProjectID, int Original_SubcontractorID, int Original_RefID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ProjectID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_SubcontractorID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_RefID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_Budget));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_Deleted));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ProjectID, int SubcontractorID, int RefID, decimal Budget, bool Deleted, int COMPANY_ID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ProjectID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(SubcontractorID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(RefID));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Budget));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(Deleted));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ProjectID, int SubcontractorID, int RefID, decimal Budget, bool Deleted, int COMPANY_ID, int Original_ProjectID, int Original_SubcontractorID, int Original_RefID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ProjectID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(SubcontractorID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(RefID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Budget));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Deleted));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(COMPANY_ID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ProjectID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_SubcontractorID));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_RefID));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_Budget));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_Deleted));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Budget, bool Deleted, int COMPANY_ID, int Original_ProjectID, int Original_SubcontractorID, int Original_RefID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            return this.Update(Original_ProjectID, Original_SubcontractorID, Original_RefID, Budget, Deleted, COMPANY_ID, Original_ProjectID, Original_SubcontractorID, Original_RefID, Original_Budget, Original_Deleted, Original_COMPANY_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LFS_PROJECT_UNITS_BUDGETTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LFS_PROJECT_UNITS_BUDGETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LFS_PROJECT_UNITS_BUDGET";
            tableMapping.ColumnMappings.Add("ProjectID", "ProjectID");
            tableMapping.ColumnMappings.Add("Budget", "Budget");
            tableMapping.ColumnMappings.Add("Deleted", "Deleted");
            tableMapping.ColumnMappings.Add("COMPANY_ID", "COMPANY_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[LFS_PROJECT_UNITS_BUDGET] WHERE (([ProjectID] = @Original_Proj" +
                "ectID) AND ([Budget] = @Original_Budget) AND ([Deleted] = @Original_Deleted) AND" +
                " ([COMPANY_ID] = @Original_COMPANY_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[LFS_PROJECT_UNITS_BUDGET] ([ProjectID], [Budget], [Deleted], [" +
                "COMPANY_ID]) VALUES (@ProjectID, @Budget, @Deleted, @COMPANY_ID);\r\nSELECT Projec" +
                "tID, Budget, Deleted, COMPANY_ID FROM LFS_PROJECT_UNITS_BUDGET WHERE (ProjectID " +
                "= @ProjectID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LFS_PROJECT_UNITS_BUDGET] SET [ProjectID] = @ProjectID, [Budget] = @Budget, [Deleted] = @Deleted, [COMPANY_ID] = @COMPANY_ID WHERE (([ProjectID] = @Original_ProjectID) AND ([Budget] = @Original_Budget) AND ([Deleted] = @Original_Deleted) AND ([COMPANY_ID] = @Original_COMPANY_ID));
SELECT ProjectID, Budget, Deleted, COMPANY_ID FROM LFS_PROJECT_UNITS_BUDGET WHERE (ProjectID = @ProjectID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Budget", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Budget", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LiquiForce.LFSLive.DA.Projects.Properties.Settings.Default.Live1ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ProjectID, Budget, Deleted, COMPANY_ID FROM dbo.LFS_PROJECT_UNITS_BUDGET";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ProjectTDS.LFS_PROJECT_UNITS_BUDGETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ProjectTDS.LFS_PROJECT_UNITS_BUDGETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ProjectTDS.LFS_PROJECT_UNITS_BUDGETDataTable dataTable = new ProjectTDS.LFS_PROJECT_UNITS_BUDGETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ProjectTDS.LFS_PROJECT_UNITS_BUDGETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ProjectTDS dataSet) {
            return this.Adapter.Update(dataSet, "LFS_PROJECT_UNITS_BUDGET");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ProjectID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ProjectID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_Budget));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_Deleted));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ProjectID, decimal Budget, bool Deleted, int COMPANY_ID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ProjectID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(Budget));
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(Deleted));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ProjectID, decimal Budget, bool Deleted, int COMPANY_ID, int Original_ProjectID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ProjectID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Budget));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(Deleted));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(COMPANY_ID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ProjectID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_Budget));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(Original_Deleted));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_COMPANY_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Budget, bool Deleted, int COMPANY_ID, int Original_ProjectID, decimal Original_Budget, bool Original_Deleted, int Original_COMPANY_ID) {
            return this.Update(Original_ProjectID, Budget, Deleted, COMPANY_ID, Original_ProjectID, Original_Budget, Original_Deleted, Original_COMPANY_ID);
        }
    }
}

#pragma warning restore 1591