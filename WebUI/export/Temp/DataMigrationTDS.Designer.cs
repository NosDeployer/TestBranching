//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3625
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.WebUI.export.Temp {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataMigrationTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataMigrationTDS : global::System.Data.DataSet {
        
        private DataMigrationDataTable tableDataMigration;
        
        private DataMigrationProjectDataTable tableDataMigrationProject;
        
        private JlDataMigrationDataTable tableJlDataMigration;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataMigrationTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataMigrationTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DataMigration"] != null)) {
                    base.Tables.Add(new DataMigrationDataTable(ds.Tables["DataMigration"]));
                }
                if ((ds.Tables["DataMigrationProject"] != null)) {
                    base.Tables.Add(new DataMigrationProjectDataTable(ds.Tables["DataMigrationProject"]));
                }
                if ((ds.Tables["JlDataMigration"] != null)) {
                    base.Tables.Add(new JlDataMigrationDataTable(ds.Tables["JlDataMigration"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataMigrationDataTable DataMigration {
            get {
                return this.tableDataMigration;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataMigrationProjectDataTable DataMigrationProject {
            get {
                return this.tableDataMigrationProject;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public JlDataMigrationDataTable JlDataMigration {
            get {
                return this.tableJlDataMigration;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataMigrationTDS cln = ((DataMigrationTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DataMigration"] != null)) {
                    base.Tables.Add(new DataMigrationDataTable(ds.Tables["DataMigration"]));
                }
                if ((ds.Tables["DataMigrationProject"] != null)) {
                    base.Tables.Add(new DataMigrationProjectDataTable(ds.Tables["DataMigrationProject"]));
                }
                if ((ds.Tables["JlDataMigration"] != null)) {
                    base.Tables.Add(new JlDataMigrationDataTable(ds.Tables["JlDataMigration"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDataMigration = ((DataMigrationDataTable)(base.Tables["DataMigration"]));
            if ((initTable == true)) {
                if ((this.tableDataMigration != null)) {
                    this.tableDataMigration.InitVars();
                }
            }
            this.tableDataMigrationProject = ((DataMigrationProjectDataTable)(base.Tables["DataMigrationProject"]));
            if ((initTable == true)) {
                if ((this.tableDataMigrationProject != null)) {
                    this.tableDataMigrationProject.InitVars();
                }
            }
            this.tableJlDataMigration = ((JlDataMigrationDataTable)(base.Tables["JlDataMigration"]));
            if ((initTable == true)) {
                if ((this.tableJlDataMigration != null)) {
                    this.tableJlDataMigration.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataMigrationTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataMigrationTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDataMigration = new DataMigrationDataTable();
            base.Tables.Add(this.tableDataMigration);
            this.tableDataMigrationProject = new DataMigrationProjectDataTable();
            base.Tables.Add(this.tableDataMigrationProject);
            this.tableJlDataMigration = new JlDataMigrationDataTable();
            base.Tables.Add(this.tableJlDataMigration);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataMigration() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataMigrationProject() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeJlDataMigration() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataMigrationTDS ds = new DataMigrationTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DataMigrationRowChangeEventHandler(object sender, DataMigrationRowChangeEvent e);
        
        public delegate void DataMigrationProjectRowChangeEventHandler(object sender, DataMigrationProjectRowChangeEvent e);
        
        public delegate void JlDataMigrationRowChangeEventHandler(object sender, JlDataMigrationRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataMigrationDataTable : global::System.Data.TypedTableBase<DataMigrationRow> {
            
            private global::System.Data.DataColumn columnOriginalID;
            
            private global::System.Data.DataColumn columnOriginalSectionID;
            
            private global::System.Data.DataColumn columnClientID;
            
            private global::System.Data.DataColumn columnCOMPANIES_ID;
            
            private global::System.Data.DataColumn columnClient;
            
            private global::System.Data.DataColumn columnSubArea;
            
            private global::System.Data.DataColumn columnStreet;
            
            private global::System.Data.DataColumn columnUSMH;
            
            private global::System.Data.DataColumn columnDSMH;
            
            private global::System.Data.DataColumn columnSize_;
            
            private global::System.Data.DataColumn columnScaledLength;
            
            private global::System.Data.DataColumn columnP1Date;
            
            private global::System.Data.DataColumn columnActualLength;
            
            private global::System.Data.DataColumn columnCXIsRemoved;
            
            private global::System.Data.DataColumn columnM1Date;
            
            private global::System.Data.DataColumn columnM2Date;
            
            private global::System.Data.DataColumn columnInstallDate;
            
            private global::System.Data.DataColumn columnFinalVideo;
            
            private global::System.Data.DataColumn columnIssueIdentified;
            
            private global::System.Data.DataColumn columnIssueResolved;
            
            private global::System.Data.DataColumn columnFullLengthLining;
            
            private global::System.Data.DataColumn columnIssueGivenToBayCity;
            
            private global::System.Data.DataColumn columnConfirmedSize;
            
            private global::System.Data.DataColumn columnInstallRate;
            
            private global::System.Data.DataColumn columnDeadlineDate;
            
            private global::System.Data.DataColumn columnProposedLiningDate;
            
            private global::System.Data.DataColumn columnSalesIssue;
            
            private global::System.Data.DataColumn columnLFSIssue;
            
            private global::System.Data.DataColumn columnClientIssue;
            
            private global::System.Data.DataColumn columnInvestigationIssue;
            
            private global::System.Data.DataColumn columnJLiner;
            
            private global::System.Data.DataColumn columnRehabAssessment;
            
            private global::System.Data.DataColumn columnPreFlushDate;
            
            private global::System.Data.DataColumn columnPreVideoDate;
            
            private global::System.Data.DataColumn columnUSMHMN;
            
            private global::System.Data.DataColumn columnDSMHMN;
            
            private global::System.Data.DataColumn columnUSMHDepth;
            
            private global::System.Data.DataColumn columnDSMHDepth;
            
            private global::System.Data.DataColumn columnMeasurementsTakenBy;
            
            private global::System.Data.DataColumn columnSteelTapeThruPipe;
            
            private global::System.Data.DataColumn columnUSMHAtMouth1200;
            
            private global::System.Data.DataColumn columnUSMHAtMouth100;
            
            private global::System.Data.DataColumn columnUSMHAtMouth200;
            
            private global::System.Data.DataColumn columnUSMHAtMouth300;
            
            private global::System.Data.DataColumn columnUSMHAtMouth400;
            
            private global::System.Data.DataColumn columnUSMHAtMouth500;
            
            private global::System.Data.DataColumn columnDSMHAtMouth1200;
            
            private global::System.Data.DataColumn columnDSMHAtMouth100;
            
            private global::System.Data.DataColumn columnDSMHAtMouth200;
            
            private global::System.Data.DataColumn columnDSMHAtMouth300;
            
            private global::System.Data.DataColumn columnDSMHAtMouth400;
            
            private global::System.Data.DataColumn columnDSMHAtMouth500;
            
            private global::System.Data.DataColumn columnHydrantAddress;
            
            private global::System.Data.DataColumn columnDistanceToInversionMH;
            
            private global::System.Data.DataColumn columnRampsRequired;
            
            private global::System.Data.DataColumn columnDegreeOfTrafficControl;
            
            private global::System.Data.DataColumn columnStandarBypass;
            
            private global::System.Data.DataColumn columnHydroWireDetails;
            
            private global::System.Data.DataColumn columnPipeMaterialType;
            
            private global::System.Data.DataColumn columnCappedLaterals;
            
            private global::System.Data.DataColumn columnRoboticPrepRequired;
            
            private global::System.Data.DataColumn columnPipeSizeChange;
            
            private global::System.Data.DataColumn columnVideoDoneFrom;
            
            private global::System.Data.DataColumn columnToManhole;
            
            private global::System.Data.DataColumn columnCutterDescriptionDuringMeasuring;
            
            private global::System.Data.DataColumn columnLineWithID;
            
            private global::System.Data.DataColumn columnSchoolZone;
            
            private global::System.Data.DataColumn columnRestaurantArea;
            
            private global::System.Data.DataColumn columnCarwashLaundromat;
            
            private global::System.Data.DataColumn columnHydroPulley;
            
            private global::System.Data.DataColumn columnFridgeCart;
            
            private global::System.Data.DataColumn columnTwoInchPump;
            
            private global::System.Data.DataColumn columnSixInchBypass;
            
            private global::System.Data.DataColumn columnScaffolding;
            
            private global::System.Data.DataColumn columnWinchExtension;
            
            private global::System.Data.DataColumn columnExtraGenerator;
            
            private global::System.Data.DataColumn columnGreyCableExtension;
            
            private global::System.Data.DataColumn columnEasementMats;
            
            private global::System.Data.DataColumn columnMeasurementType;
            
            private global::System.Data.DataColumn columnDropPipe;
            
            private global::System.Data.DataColumn columnDropPipeInvertDepth;
            
            private global::System.Data.DataColumn columnMeasuredFromManhole;
            
            private global::System.Data.DataColumn columnThickness;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataMigrationDataTable() {
                this.TableName = "DataMigration";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataMigrationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataMigrationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OriginalIDColumn {
                get {
                    return this.columnOriginalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OriginalSectionIDColumn {
                get {
                    return this.columnOriginalSectionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANIES_IDColumn {
                get {
                    return this.columnCOMPANIES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientColumn {
                get {
                    return this.columnClient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubAreaColumn {
                get {
                    return this.columnSubArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHColumn {
                get {
                    return this.columnUSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHColumn {
                get {
                    return this.columnDSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Size_Column {
                get {
                    return this.columnSize_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScaledLengthColumn {
                get {
                    return this.columnScaledLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P1DateColumn {
                get {
                    return this.columnP1Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActualLengthColumn {
                get {
                    return this.columnActualLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CXIsRemovedColumn {
                get {
                    return this.columnCXIsRemoved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M1DateColumn {
                get {
                    return this.columnM1Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M2DateColumn {
                get {
                    return this.columnM2Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallDateColumn {
                get {
                    return this.columnInstallDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinalVideoColumn {
                get {
                    return this.columnFinalVideo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueIdentifiedColumn {
                get {
                    return this.columnIssueIdentified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueResolvedColumn {
                get {
                    return this.columnIssueResolved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullLengthLiningColumn {
                get {
                    return this.columnFullLengthLining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueGivenToBayCityColumn {
                get {
                    return this.columnIssueGivenToBayCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConfirmedSizeColumn {
                get {
                    return this.columnConfirmedSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallRateColumn {
                get {
                    return this.columnInstallRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeadlineDateColumn {
                get {
                    return this.columnDeadlineDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProposedLiningDateColumn {
                get {
                    return this.columnProposedLiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesIssueColumn {
                get {
                    return this.columnSalesIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LFSIssueColumn {
                get {
                    return this.columnLFSIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIssueColumn {
                get {
                    return this.columnClientIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvestigationIssueColumn {
                get {
                    return this.columnInvestigationIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JLinerColumn {
                get {
                    return this.columnJLiner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RehabAssessmentColumn {
                get {
                    return this.columnRehabAssessment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreFlushDateColumn {
                get {
                    return this.columnPreFlushDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreVideoDateColumn {
                get {
                    return this.columnPreVideoDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMNColumn {
                get {
                    return this.columnUSMHMN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMNColumn {
                get {
                    return this.columnDSMHMN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHDepthColumn {
                get {
                    return this.columnUSMHDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHDepthColumn {
                get {
                    return this.columnDSMHDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementsTakenByColumn {
                get {
                    return this.columnMeasurementsTakenBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SteelTapeThruPipeColumn {
                get {
                    return this.columnSteelTapeThruPipe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth1200Column {
                get {
                    return this.columnUSMHAtMouth1200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth100Column {
                get {
                    return this.columnUSMHAtMouth100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth200Column {
                get {
                    return this.columnUSMHAtMouth200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth300Column {
                get {
                    return this.columnUSMHAtMouth300;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth400Column {
                get {
                    return this.columnUSMHAtMouth400;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth500Column {
                get {
                    return this.columnUSMHAtMouth500;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth1200Column {
                get {
                    return this.columnDSMHAtMouth1200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth100Column {
                get {
                    return this.columnDSMHAtMouth100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth200Column {
                get {
                    return this.columnDSMHAtMouth200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth300Column {
                get {
                    return this.columnDSMHAtMouth300;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth400Column {
                get {
                    return this.columnDSMHAtMouth400;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth500Column {
                get {
                    return this.columnDSMHAtMouth500;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HydrantAddressColumn {
                get {
                    return this.columnHydrantAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceToInversionMHColumn {
                get {
                    return this.columnDistanceToInversionMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RampsRequiredColumn {
                get {
                    return this.columnRampsRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DegreeOfTrafficControlColumn {
                get {
                    return this.columnDegreeOfTrafficControl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandarBypassColumn {
                get {
                    return this.columnStandarBypass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HydroWireDetailsColumn {
                get {
                    return this.columnHydroWireDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PipeMaterialTypeColumn {
                get {
                    return this.columnPipeMaterialType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CappedLateralsColumn {
                get {
                    return this.columnCappedLaterals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoboticPrepRequiredColumn {
                get {
                    return this.columnRoboticPrepRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PipeSizeChangeColumn {
                get {
                    return this.columnPipeSizeChange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoDoneFromColumn {
                get {
                    return this.columnVideoDoneFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToManholeColumn {
                get {
                    return this.columnToManhole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CutterDescriptionDuringMeasuringColumn {
                get {
                    return this.columnCutterDescriptionDuringMeasuring;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineWithIDColumn {
                get {
                    return this.columnLineWithID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchoolZoneColumn {
                get {
                    return this.columnSchoolZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RestaurantAreaColumn {
                get {
                    return this.columnRestaurantArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarwashLaundromatColumn {
                get {
                    return this.columnCarwashLaundromat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HydroPulleyColumn {
                get {
                    return this.columnHydroPulley;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FridgeCartColumn {
                get {
                    return this.columnFridgeCart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TwoInchPumpColumn {
                get {
                    return this.columnTwoInchPump;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SixInchBypassColumn {
                get {
                    return this.columnSixInchBypass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScaffoldingColumn {
                get {
                    return this.columnScaffolding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WinchExtensionColumn {
                get {
                    return this.columnWinchExtension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraGeneratorColumn {
                get {
                    return this.columnExtraGenerator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GreyCableExtensionColumn {
                get {
                    return this.columnGreyCableExtension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EasementMatsColumn {
                get {
                    return this.columnEasementMats;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementTypeColumn {
                get {
                    return this.columnMeasurementType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DropPipeColumn {
                get {
                    return this.columnDropPipe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DropPipeInvertDepthColumn {
                get {
                    return this.columnDropPipeInvertDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasuredFromManholeColumn {
                get {
                    return this.columnMeasuredFromManhole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThicknessColumn {
                get {
                    return this.columnThickness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataMigrationRow this[int index] {
                get {
                    return ((DataMigrationRow)(this.Rows[index]));
                }
            }
            
            public event DataMigrationRowChangeEventHandler DataMigrationRowChanging;
            
            public event DataMigrationRowChangeEventHandler DataMigrationRowChanged;
            
            public event DataMigrationRowChangeEventHandler DataMigrationRowDeleting;
            
            public event DataMigrationRowChangeEventHandler DataMigrationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataMigrationRow(DataMigrationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataMigrationRow AddDataMigrationRow(
                        System.Guid OriginalID, 
                        string OriginalSectionID, 
                        string ClientID, 
                        int COMPANIES_ID, 
                        string Client, 
                        string SubArea, 
                        string Street, 
                        string USMH, 
                        string DSMH, 
                        string Size_, 
                        string ScaledLength, 
                        System.DateTime P1Date, 
                        string ActualLength, 
                        string CXIsRemoved, 
                        System.DateTime M1Date, 
                        System.DateTime M2Date, 
                        System.DateTime InstallDate, 
                        System.DateTime FinalVideo, 
                        bool IssueIdentified, 
                        bool IssueResolved, 
                        bool FullLengthLining, 
                        bool IssueGivenToBayCity, 
                        string ConfirmedSize, 
                        decimal InstallRate, 
                        System.DateTime DeadlineDate, 
                        System.DateTime ProposedLiningDate, 
                        bool SalesIssue, 
                        bool LFSIssue, 
                        bool ClientIssue, 
                        bool InvestigationIssue, 
                        bool JLiner, 
                        bool RehabAssessment, 
                        System.DateTime PreFlushDate, 
                        System.DateTime PreVideoDate, 
                        string USMHMN, 
                        string DSMHMN, 
                        string USMHDepth, 
                        string DSMHDepth, 
                        string MeasurementsTakenBy, 
                        string SteelTapeThruPipe, 
                        string USMHAtMouth1200, 
                        string USMHAtMouth100, 
                        string USMHAtMouth200, 
                        string USMHAtMouth300, 
                        string USMHAtMouth400, 
                        string USMHAtMouth500, 
                        string DSMHAtMouth1200, 
                        string DSMHAtMouth100, 
                        string DSMHAtMouth200, 
                        string DSMHAtMouth300, 
                        string DSMHAtMouth400, 
                        string DSMHAtMouth500, 
                        string HydrantAddress, 
                        string DistanceToInversionMH, 
                        bool RampsRequired, 
                        string DegreeOfTrafficControl, 
                        bool StandarBypass, 
                        string HydroWireDetails, 
                        string PipeMaterialType, 
                        int CappedLaterals, 
                        bool RoboticPrepRequired, 
                        bool PipeSizeChange, 
                        string VideoDoneFrom, 
                        string ToManhole, 
                        string CutterDescriptionDuringMeasuring, 
                        string LineWithID, 
                        bool SchoolZone, 
                        bool RestaurantArea, 
                        bool CarwashLaundromat, 
                        bool HydroPulley, 
                        bool FridgeCart, 
                        bool TwoInchPump, 
                        bool SixInchBypass, 
                        bool Scaffolding, 
                        bool WinchExtension, 
                        bool ExtraGenerator, 
                        bool GreyCableExtension, 
                        bool EasementMats, 
                        string MeasurementType, 
                        bool DropPipe, 
                        string DropPipeInvertDepth, 
                        string MeasuredFromManhole, 
                        string Thickness) {
                DataMigrationRow rowDataMigrationRow = ((DataMigrationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OriginalID,
                        OriginalSectionID,
                        ClientID,
                        COMPANIES_ID,
                        Client,
                        SubArea,
                        Street,
                        USMH,
                        DSMH,
                        Size_,
                        ScaledLength,
                        P1Date,
                        ActualLength,
                        CXIsRemoved,
                        M1Date,
                        M2Date,
                        InstallDate,
                        FinalVideo,
                        IssueIdentified,
                        IssueResolved,
                        FullLengthLining,
                        IssueGivenToBayCity,
                        ConfirmedSize,
                        InstallRate,
                        DeadlineDate,
                        ProposedLiningDate,
                        SalesIssue,
                        LFSIssue,
                        ClientIssue,
                        InvestigationIssue,
                        JLiner,
                        RehabAssessment,
                        PreFlushDate,
                        PreVideoDate,
                        USMHMN,
                        DSMHMN,
                        USMHDepth,
                        DSMHDepth,
                        MeasurementsTakenBy,
                        SteelTapeThruPipe,
                        USMHAtMouth1200,
                        USMHAtMouth100,
                        USMHAtMouth200,
                        USMHAtMouth300,
                        USMHAtMouth400,
                        USMHAtMouth500,
                        DSMHAtMouth1200,
                        DSMHAtMouth100,
                        DSMHAtMouth200,
                        DSMHAtMouth300,
                        DSMHAtMouth400,
                        DSMHAtMouth500,
                        HydrantAddress,
                        DistanceToInversionMH,
                        RampsRequired,
                        DegreeOfTrafficControl,
                        StandarBypass,
                        HydroWireDetails,
                        PipeMaterialType,
                        CappedLaterals,
                        RoboticPrepRequired,
                        PipeSizeChange,
                        VideoDoneFrom,
                        ToManhole,
                        CutterDescriptionDuringMeasuring,
                        LineWithID,
                        SchoolZone,
                        RestaurantArea,
                        CarwashLaundromat,
                        HydroPulley,
                        FridgeCart,
                        TwoInchPump,
                        SixInchBypass,
                        Scaffolding,
                        WinchExtension,
                        ExtraGenerator,
                        GreyCableExtension,
                        EasementMats,
                        MeasurementType,
                        DropPipe,
                        DropPipeInvertDepth,
                        MeasuredFromManhole,
                        Thickness};
                rowDataMigrationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataMigrationRow);
                return rowDataMigrationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataMigrationRow FindByOriginalSectionID(string OriginalSectionID) {
                return ((DataMigrationRow)(this.Rows.Find(new object[] {
                            OriginalSectionID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataMigrationDataTable cln = ((DataMigrationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataMigrationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOriginalID = base.Columns["OriginalID"];
                this.columnOriginalSectionID = base.Columns["OriginalSectionID"];
                this.columnClientID = base.Columns["ClientID"];
                this.columnCOMPANIES_ID = base.Columns["COMPANIES_ID"];
                this.columnClient = base.Columns["Client"];
                this.columnSubArea = base.Columns["SubArea"];
                this.columnStreet = base.Columns["Street"];
                this.columnUSMH = base.Columns["USMH"];
                this.columnDSMH = base.Columns["DSMH"];
                this.columnSize_ = base.Columns["Size_"];
                this.columnScaledLength = base.Columns["ScaledLength"];
                this.columnP1Date = base.Columns["P1Date"];
                this.columnActualLength = base.Columns["ActualLength"];
                this.columnCXIsRemoved = base.Columns["CXIsRemoved"];
                this.columnM1Date = base.Columns["M1Date"];
                this.columnM2Date = base.Columns["M2Date"];
                this.columnInstallDate = base.Columns["InstallDate"];
                this.columnFinalVideo = base.Columns["FinalVideo"];
                this.columnIssueIdentified = base.Columns["IssueIdentified"];
                this.columnIssueResolved = base.Columns["IssueResolved"];
                this.columnFullLengthLining = base.Columns["FullLengthLining"];
                this.columnIssueGivenToBayCity = base.Columns["IssueGivenToBayCity"];
                this.columnConfirmedSize = base.Columns["ConfirmedSize"];
                this.columnInstallRate = base.Columns["InstallRate"];
                this.columnDeadlineDate = base.Columns["DeadlineDate"];
                this.columnProposedLiningDate = base.Columns["ProposedLiningDate"];
                this.columnSalesIssue = base.Columns["SalesIssue"];
                this.columnLFSIssue = base.Columns["LFSIssue"];
                this.columnClientIssue = base.Columns["ClientIssue"];
                this.columnInvestigationIssue = base.Columns["InvestigationIssue"];
                this.columnJLiner = base.Columns["JLiner"];
                this.columnRehabAssessment = base.Columns["RehabAssessment"];
                this.columnPreFlushDate = base.Columns["PreFlushDate"];
                this.columnPreVideoDate = base.Columns["PreVideoDate"];
                this.columnUSMHMN = base.Columns["USMHMN"];
                this.columnDSMHMN = base.Columns["DSMHMN"];
                this.columnUSMHDepth = base.Columns["USMHDepth"];
                this.columnDSMHDepth = base.Columns["DSMHDepth"];
                this.columnMeasurementsTakenBy = base.Columns["MeasurementsTakenBy"];
                this.columnSteelTapeThruPipe = base.Columns["SteelTapeThruPipe"];
                this.columnUSMHAtMouth1200 = base.Columns["USMHAtMouth1200"];
                this.columnUSMHAtMouth100 = base.Columns["USMHAtMouth100"];
                this.columnUSMHAtMouth200 = base.Columns["USMHAtMouth200"];
                this.columnUSMHAtMouth300 = base.Columns["USMHAtMouth300"];
                this.columnUSMHAtMouth400 = base.Columns["USMHAtMouth400"];
                this.columnUSMHAtMouth500 = base.Columns["USMHAtMouth500"];
                this.columnDSMHAtMouth1200 = base.Columns["DSMHAtMouth1200"];
                this.columnDSMHAtMouth100 = base.Columns["DSMHAtMouth100"];
                this.columnDSMHAtMouth200 = base.Columns["DSMHAtMouth200"];
                this.columnDSMHAtMouth300 = base.Columns["DSMHAtMouth300"];
                this.columnDSMHAtMouth400 = base.Columns["DSMHAtMouth400"];
                this.columnDSMHAtMouth500 = base.Columns["DSMHAtMouth500"];
                this.columnHydrantAddress = base.Columns["HydrantAddress"];
                this.columnDistanceToInversionMH = base.Columns["DistanceToInversionMH"];
                this.columnRampsRequired = base.Columns["RampsRequired"];
                this.columnDegreeOfTrafficControl = base.Columns["DegreeOfTrafficControl"];
                this.columnStandarBypass = base.Columns["StandarBypass"];
                this.columnHydroWireDetails = base.Columns["HydroWireDetails"];
                this.columnPipeMaterialType = base.Columns["PipeMaterialType"];
                this.columnCappedLaterals = base.Columns["CappedLaterals"];
                this.columnRoboticPrepRequired = base.Columns["RoboticPrepRequired"];
                this.columnPipeSizeChange = base.Columns["PipeSizeChange"];
                this.columnVideoDoneFrom = base.Columns["VideoDoneFrom"];
                this.columnToManhole = base.Columns["ToManhole"];
                this.columnCutterDescriptionDuringMeasuring = base.Columns["CutterDescriptionDuringMeasuring"];
                this.columnLineWithID = base.Columns["LineWithID"];
                this.columnSchoolZone = base.Columns["SchoolZone"];
                this.columnRestaurantArea = base.Columns["RestaurantArea"];
                this.columnCarwashLaundromat = base.Columns["CarwashLaundromat"];
                this.columnHydroPulley = base.Columns["HydroPulley"];
                this.columnFridgeCart = base.Columns["FridgeCart"];
                this.columnTwoInchPump = base.Columns["TwoInchPump"];
                this.columnSixInchBypass = base.Columns["SixInchBypass"];
                this.columnScaffolding = base.Columns["Scaffolding"];
                this.columnWinchExtension = base.Columns["WinchExtension"];
                this.columnExtraGenerator = base.Columns["ExtraGenerator"];
                this.columnGreyCableExtension = base.Columns["GreyCableExtension"];
                this.columnEasementMats = base.Columns["EasementMats"];
                this.columnMeasurementType = base.Columns["MeasurementType"];
                this.columnDropPipe = base.Columns["DropPipe"];
                this.columnDropPipeInvertDepth = base.Columns["DropPipeInvertDepth"];
                this.columnMeasuredFromManhole = base.Columns["MeasuredFromManhole"];
                this.columnThickness = base.Columns["Thickness"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOriginalID = new global::System.Data.DataColumn("OriginalID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalID);
                this.columnOriginalSectionID = new global::System.Data.DataColumn("OriginalSectionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalSectionID);
                this.columnClientID = new global::System.Data.DataColumn("ClientID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnCOMPANIES_ID = new global::System.Data.DataColumn("COMPANIES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANIES_ID);
                this.columnClient = new global::System.Data.DataColumn("Client", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClient);
                this.columnSubArea = new global::System.Data.DataColumn("SubArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubArea);
                this.columnStreet = new global::System.Data.DataColumn("Street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnUSMH = new global::System.Data.DataColumn("USMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMH);
                this.columnDSMH = new global::System.Data.DataColumn("DSMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMH);
                this.columnSize_ = new global::System.Data.DataColumn("Size_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_);
                this.columnScaledLength = new global::System.Data.DataColumn("ScaledLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaledLength);
                this.columnP1Date = new global::System.Data.DataColumn("P1Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP1Date);
                this.columnActualLength = new global::System.Data.DataColumn("ActualLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualLength);
                this.columnCXIsRemoved = new global::System.Data.DataColumn("CXIsRemoved", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXIsRemoved);
                this.columnM1Date = new global::System.Data.DataColumn("M1Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM1Date);
                this.columnM2Date = new global::System.Data.DataColumn("M2Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM2Date);
                this.columnInstallDate = new global::System.Data.DataColumn("InstallDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallDate);
                this.columnFinalVideo = new global::System.Data.DataColumn("FinalVideo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalVideo);
                this.columnIssueIdentified = new global::System.Data.DataColumn("IssueIdentified", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueIdentified);
                this.columnIssueResolved = new global::System.Data.DataColumn("IssueResolved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueResolved);
                this.columnFullLengthLining = new global::System.Data.DataColumn("FullLengthLining", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullLengthLining);
                this.columnIssueGivenToBayCity = new global::System.Data.DataColumn("IssueGivenToBayCity", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueGivenToBayCity);
                this.columnConfirmedSize = new global::System.Data.DataColumn("ConfirmedSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmedSize);
                this.columnInstallRate = new global::System.Data.DataColumn("InstallRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallRate);
                this.columnDeadlineDate = new global::System.Data.DataColumn("DeadlineDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeadlineDate);
                this.columnProposedLiningDate = new global::System.Data.DataColumn("ProposedLiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProposedLiningDate);
                this.columnSalesIssue = new global::System.Data.DataColumn("SalesIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesIssue);
                this.columnLFSIssue = new global::System.Data.DataColumn("LFSIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLFSIssue);
                this.columnClientIssue = new global::System.Data.DataColumn("ClientIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientIssue);
                this.columnInvestigationIssue = new global::System.Data.DataColumn("InvestigationIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestigationIssue);
                this.columnJLiner = new global::System.Data.DataColumn("JLiner", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJLiner);
                this.columnRehabAssessment = new global::System.Data.DataColumn("RehabAssessment", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRehabAssessment);
                this.columnPreFlushDate = new global::System.Data.DataColumn("PreFlushDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreFlushDate);
                this.columnPreVideoDate = new global::System.Data.DataColumn("PreVideoDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreVideoDate);
                this.columnUSMHMN = new global::System.Data.DataColumn("USMHMN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMN);
                this.columnDSMHMN = new global::System.Data.DataColumn("DSMHMN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMN);
                this.columnUSMHDepth = new global::System.Data.DataColumn("USMHDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHDepth);
                this.columnDSMHDepth = new global::System.Data.DataColumn("DSMHDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHDepth);
                this.columnMeasurementsTakenBy = new global::System.Data.DataColumn("MeasurementsTakenBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementsTakenBy);
                this.columnSteelTapeThruPipe = new global::System.Data.DataColumn("SteelTapeThruPipe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSteelTapeThruPipe);
                this.columnUSMHAtMouth1200 = new global::System.Data.DataColumn("USMHAtMouth1200", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth1200);
                this.columnUSMHAtMouth100 = new global::System.Data.DataColumn("USMHAtMouth100", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth100);
                this.columnUSMHAtMouth200 = new global::System.Data.DataColumn("USMHAtMouth200", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth200);
                this.columnUSMHAtMouth300 = new global::System.Data.DataColumn("USMHAtMouth300", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth300);
                this.columnUSMHAtMouth400 = new global::System.Data.DataColumn("USMHAtMouth400", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth400);
                this.columnUSMHAtMouth500 = new global::System.Data.DataColumn("USMHAtMouth500", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth500);
                this.columnDSMHAtMouth1200 = new global::System.Data.DataColumn("DSMHAtMouth1200", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth1200);
                this.columnDSMHAtMouth100 = new global::System.Data.DataColumn("DSMHAtMouth100", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth100);
                this.columnDSMHAtMouth200 = new global::System.Data.DataColumn("DSMHAtMouth200", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth200);
                this.columnDSMHAtMouth300 = new global::System.Data.DataColumn("DSMHAtMouth300", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth300);
                this.columnDSMHAtMouth400 = new global::System.Data.DataColumn("DSMHAtMouth400", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth400);
                this.columnDSMHAtMouth500 = new global::System.Data.DataColumn("DSMHAtMouth500", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth500);
                this.columnHydrantAddress = new global::System.Data.DataColumn("HydrantAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydrantAddress);
                this.columnDistanceToInversionMH = new global::System.Data.DataColumn("DistanceToInversionMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceToInversionMH);
                this.columnRampsRequired = new global::System.Data.DataColumn("RampsRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRampsRequired);
                this.columnDegreeOfTrafficControl = new global::System.Data.DataColumn("DegreeOfTrafficControl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDegreeOfTrafficControl);
                this.columnStandarBypass = new global::System.Data.DataColumn("StandarBypass", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandarBypass);
                this.columnHydroWireDetails = new global::System.Data.DataColumn("HydroWireDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydroWireDetails);
                this.columnPipeMaterialType = new global::System.Data.DataColumn("PipeMaterialType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeMaterialType);
                this.columnCappedLaterals = new global::System.Data.DataColumn("CappedLaterals", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCappedLaterals);
                this.columnRoboticPrepRequired = new global::System.Data.DataColumn("RoboticPrepRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticPrepRequired);
                this.columnPipeSizeChange = new global::System.Data.DataColumn("PipeSizeChange", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeSizeChange);
                this.columnVideoDoneFrom = new global::System.Data.DataColumn("VideoDoneFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoDoneFrom);
                this.columnToManhole = new global::System.Data.DataColumn("ToManhole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToManhole);
                this.columnCutterDescriptionDuringMeasuring = new global::System.Data.DataColumn("CutterDescriptionDuringMeasuring", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCutterDescriptionDuringMeasuring);
                this.columnLineWithID = new global::System.Data.DataColumn("LineWithID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineWithID);
                this.columnSchoolZone = new global::System.Data.DataColumn("SchoolZone", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchoolZone);
                this.columnRestaurantArea = new global::System.Data.DataColumn("RestaurantArea", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestaurantArea);
                this.columnCarwashLaundromat = new global::System.Data.DataColumn("CarwashLaundromat", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarwashLaundromat);
                this.columnHydroPulley = new global::System.Data.DataColumn("HydroPulley", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydroPulley);
                this.columnFridgeCart = new global::System.Data.DataColumn("FridgeCart", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFridgeCart);
                this.columnTwoInchPump = new global::System.Data.DataColumn("TwoInchPump", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTwoInchPump);
                this.columnSixInchBypass = new global::System.Data.DataColumn("SixInchBypass", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSixInchBypass);
                this.columnScaffolding = new global::System.Data.DataColumn("Scaffolding", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffolding);
                this.columnWinchExtension = new global::System.Data.DataColumn("WinchExtension", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWinchExtension);
                this.columnExtraGenerator = new global::System.Data.DataColumn("ExtraGenerator", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraGenerator);
                this.columnGreyCableExtension = new global::System.Data.DataColumn("GreyCableExtension", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGreyCableExtension);
                this.columnEasementMats = new global::System.Data.DataColumn("EasementMats", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEasementMats);
                this.columnMeasurementType = new global::System.Data.DataColumn("MeasurementType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementType);
                this.columnDropPipe = new global::System.Data.DataColumn("DropPipe", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropPipe);
                this.columnDropPipeInvertDepth = new global::System.Data.DataColumn("DropPipeInvertDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropPipeInvertDepth);
                this.columnMeasuredFromManhole = new global::System.Data.DataColumn("MeasuredFromManhole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasuredFromManhole);
                this.columnThickness = new global::System.Data.DataColumn("Thickness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThickness);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOriginalSectionID}, true));
                this.columnOriginalSectionID.AllowDBNull = false;
                this.columnOriginalSectionID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataMigrationRow NewDataMigrationRow() {
                return ((DataMigrationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataMigrationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataMigrationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataMigrationRowChanged != null)) {
                    this.DataMigrationRowChanged(this, new DataMigrationRowChangeEvent(((DataMigrationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataMigrationRowChanging != null)) {
                    this.DataMigrationRowChanging(this, new DataMigrationRowChangeEvent(((DataMigrationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataMigrationRowDeleted != null)) {
                    this.DataMigrationRowDeleted(this, new DataMigrationRowChangeEvent(((DataMigrationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataMigrationRowDeleting != null)) {
                    this.DataMigrationRowDeleting(this, new DataMigrationRowChangeEvent(((DataMigrationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataMigrationRow(DataMigrationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataMigrationTDS ds = new DataMigrationTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataMigrationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataMigrationProjectDataTable : global::System.Data.TypedTableBase<DataMigrationProjectRow> {
            
            private global::System.Data.DataColumn columnCountryID;
            
            private global::System.Data.DataColumn columnOfficeID;
            
            private global::System.Data.DataColumn columnProjectLeadID;
            
            private global::System.Data.DataColumn columnSalesmanID;
            
            private global::System.Data.DataColumn columnCOMPANIES_ID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnProvinceID;
            
            private global::System.Data.DataColumn columnCityID;
            
            private global::System.Data.DataColumn columnCountyID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataMigrationProjectDataTable() {
                this.TableName = "DataMigrationProject";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataMigrationProjectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataMigrationProjectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryIDColumn {
                get {
                    return this.columnCountryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfficeIDColumn {
                get {
                    return this.columnOfficeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectLeadIDColumn {
                get {
                    return this.columnProjectLeadID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesmanIDColumn {
                get {
                    return this.columnSalesmanID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANIES_IDColumn {
                get {
                    return this.columnCOMPANIES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProvinceIDColumn {
                get {
                    return this.columnProvinceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityIDColumn {
                get {
                    return this.columnCityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountyIDColumn {
                get {
                    return this.columnCountyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataMigrationProjectRow this[int index] {
                get {
                    return ((DataMigrationProjectRow)(this.Rows[index]));
                }
            }
            
            public event DataMigrationProjectRowChangeEventHandler DataMigrationProjectRowChanging;
            
            public event DataMigrationProjectRowChangeEventHandler DataMigrationProjectRowChanged;
            
            public event DataMigrationProjectRowChangeEventHandler DataMigrationProjectRowDeleting;
            
            public event DataMigrationProjectRowChangeEventHandler DataMigrationProjectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataMigrationProjectRow(DataMigrationProjectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataMigrationProjectRow AddDataMigrationProjectRow(long CountryID, int OfficeID, int ProjectLeadID, int SalesmanID, int COMPANIES_ID, string Name, long ProvinceID, long CityID, long CountyID) {
                DataMigrationProjectRow rowDataMigrationProjectRow = ((DataMigrationProjectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CountryID,
                        OfficeID,
                        ProjectLeadID,
                        SalesmanID,
                        COMPANIES_ID,
                        Name,
                        ProvinceID,
                        CityID,
                        CountyID};
                rowDataMigrationProjectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataMigrationProjectRow);
                return rowDataMigrationProjectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataMigrationProjectDataTable cln = ((DataMigrationProjectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataMigrationProjectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCountryID = base.Columns["CountryID"];
                this.columnOfficeID = base.Columns["OfficeID"];
                this.columnProjectLeadID = base.Columns["ProjectLeadID"];
                this.columnSalesmanID = base.Columns["SalesmanID"];
                this.columnCOMPANIES_ID = base.Columns["COMPANIES_ID"];
                this.columnName = base.Columns["Name"];
                this.columnProvinceID = base.Columns["ProvinceID"];
                this.columnCityID = base.Columns["CityID"];
                this.columnCountyID = base.Columns["CountyID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCountryID = new global::System.Data.DataColumn("CountryID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryID);
                this.columnOfficeID = new global::System.Data.DataColumn("OfficeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficeID);
                this.columnProjectLeadID = new global::System.Data.DataColumn("ProjectLeadID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectLeadID);
                this.columnSalesmanID = new global::System.Data.DataColumn("SalesmanID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesmanID);
                this.columnCOMPANIES_ID = new global::System.Data.DataColumn("COMPANIES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANIES_ID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnProvinceID = new global::System.Data.DataColumn("ProvinceID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvinceID);
                this.columnCityID = new global::System.Data.DataColumn("CityID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityID);
                this.columnCountyID = new global::System.Data.DataColumn("CountyID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountyID);
                this.columnCountryID.AllowDBNull = false;
                this.columnOfficeID.AllowDBNull = false;
                this.columnSalesmanID.AllowDBNull = false;
                this.columnName.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataMigrationProjectRow NewDataMigrationProjectRow() {
                return ((DataMigrationProjectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataMigrationProjectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataMigrationProjectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataMigrationProjectRowChanged != null)) {
                    this.DataMigrationProjectRowChanged(this, new DataMigrationProjectRowChangeEvent(((DataMigrationProjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataMigrationProjectRowChanging != null)) {
                    this.DataMigrationProjectRowChanging(this, new DataMigrationProjectRowChangeEvent(((DataMigrationProjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataMigrationProjectRowDeleted != null)) {
                    this.DataMigrationProjectRowDeleted(this, new DataMigrationProjectRowChangeEvent(((DataMigrationProjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataMigrationProjectRowDeleting != null)) {
                    this.DataMigrationProjectRowDeleting(this, new DataMigrationProjectRowChangeEvent(((DataMigrationProjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataMigrationProjectRow(DataMigrationProjectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataMigrationTDS ds = new DataMigrationTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataMigrationProjectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class JlDataMigrationDataTable : global::System.Data.TypedTableBase<JlDataMigrationRow> {
            
            private global::System.Data.DataColumn columnOriginalID;
            
            private global::System.Data.DataColumn columnOriginalSectionID;
            
            private global::System.Data.DataColumn columnCOMPANIES_ID;
            
            private global::System.Data.DataColumn columnClient;
            
            private global::System.Data.DataColumn columnSubArea;
            
            private global::System.Data.DataColumn columnStreet;
            
            private global::System.Data.DataColumn columnUSMH;
            
            private global::System.Data.DataColumn columnDSMH;
            
            private global::System.Data.DataColumn columnSize_;
            
            private global::System.Data.DataColumn columnScaledLength;
            
            private global::System.Data.DataColumn columnActualLength;
            
            private global::System.Data.DataColumn columnConfirmedSize;
            
            private global::System.Data.DataColumn columnJLiner;
            
            private global::System.Data.DataColumn columnUSMHMN;
            
            private global::System.Data.DataColumn columnDSMHMN;
            
            private global::System.Data.DataColumn columnUSMHDepth;
            
            private global::System.Data.DataColumn columnDSMHDepth;
            
            private global::System.Data.DataColumn columnSteelTapeThruPipe;
            
            private global::System.Data.DataColumn columnUSMHAtMouth1200;
            
            private global::System.Data.DataColumn columnUSMHAtMouth100;
            
            private global::System.Data.DataColumn columnUSMHAtMouth200;
            
            private global::System.Data.DataColumn columnUSMHAtMouth300;
            
            private global::System.Data.DataColumn columnUSMHAtMouth400;
            
            private global::System.Data.DataColumn columnUSMHAtMouth500;
            
            private global::System.Data.DataColumn columnDSMHAtMouth1200;
            
            private global::System.Data.DataColumn columnDSMHAtMouth100;
            
            private global::System.Data.DataColumn columnDSMHAtMouth200;
            
            private global::System.Data.DataColumn columnDSMHAtMouth300;
            
            private global::System.Data.DataColumn columnDSMHAtMouth400;
            
            private global::System.Data.DataColumn columnDSMHAtMouth500;
            
            private global::System.Data.DataColumn columnNumLats;
            
            private global::System.Data.DataColumn columnNotLinedYet;
            
            private global::System.Data.DataColumn columnAllMeasured;
            
            private global::System.Data.DataColumn columnIssueWithLaterals;
            
            private global::System.Data.DataColumn columnNotMeasuredYet;
            
            private global::System.Data.DataColumn columnNotDeliveredYet;
            
            private global::System.Data.DataColumn columnThickness;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JlDataMigrationDataTable() {
                this.TableName = "JlDataMigration";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal JlDataMigrationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected JlDataMigrationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OriginalIDColumn {
                get {
                    return this.columnOriginalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OriginalSectionIDColumn {
                get {
                    return this.columnOriginalSectionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANIES_IDColumn {
                get {
                    return this.columnCOMPANIES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientColumn {
                get {
                    return this.columnClient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubAreaColumn {
                get {
                    return this.columnSubArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHColumn {
                get {
                    return this.columnUSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHColumn {
                get {
                    return this.columnDSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Size_Column {
                get {
                    return this.columnSize_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScaledLengthColumn {
                get {
                    return this.columnScaledLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActualLengthColumn {
                get {
                    return this.columnActualLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConfirmedSizeColumn {
                get {
                    return this.columnConfirmedSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JLinerColumn {
                get {
                    return this.columnJLiner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMNColumn {
                get {
                    return this.columnUSMHMN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMNColumn {
                get {
                    return this.columnDSMHMN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHDepthColumn {
                get {
                    return this.columnUSMHDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHDepthColumn {
                get {
                    return this.columnDSMHDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SteelTapeThruPipeColumn {
                get {
                    return this.columnSteelTapeThruPipe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth1200Column {
                get {
                    return this.columnUSMHAtMouth1200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth100Column {
                get {
                    return this.columnUSMHAtMouth100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth200Column {
                get {
                    return this.columnUSMHAtMouth200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth300Column {
                get {
                    return this.columnUSMHAtMouth300;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth400Column {
                get {
                    return this.columnUSMHAtMouth400;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth500Column {
                get {
                    return this.columnUSMHAtMouth500;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth1200Column {
                get {
                    return this.columnDSMHAtMouth1200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth100Column {
                get {
                    return this.columnDSMHAtMouth100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth200Column {
                get {
                    return this.columnDSMHAtMouth200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth300Column {
                get {
                    return this.columnDSMHAtMouth300;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth400Column {
                get {
                    return this.columnDSMHAtMouth400;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth500Column {
                get {
                    return this.columnDSMHAtMouth500;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumLatsColumn {
                get {
                    return this.columnNumLats;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotLinedYetColumn {
                get {
                    return this.columnNotLinedYet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllMeasuredColumn {
                get {
                    return this.columnAllMeasured;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueWithLateralsColumn {
                get {
                    return this.columnIssueWithLaterals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotMeasuredYetColumn {
                get {
                    return this.columnNotMeasuredYet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotDeliveredYetColumn {
                get {
                    return this.columnNotDeliveredYet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThicknessColumn {
                get {
                    return this.columnThickness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JlDataMigrationRow this[int index] {
                get {
                    return ((JlDataMigrationRow)(this.Rows[index]));
                }
            }
            
            public event JlDataMigrationRowChangeEventHandler JlDataMigrationRowChanging;
            
            public event JlDataMigrationRowChangeEventHandler JlDataMigrationRowChanged;
            
            public event JlDataMigrationRowChangeEventHandler JlDataMigrationRowDeleting;
            
            public event JlDataMigrationRowChangeEventHandler JlDataMigrationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddJlDataMigrationRow(JlDataMigrationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JlDataMigrationRow AddJlDataMigrationRow(
                        System.Guid OriginalID, 
                        string OriginalSectionID, 
                        int COMPANIES_ID, 
                        string Client, 
                        string SubArea, 
                        string Street, 
                        string USMH, 
                        string DSMH, 
                        string Size_, 
                        string ScaledLength, 
                        string ActualLength, 
                        string ConfirmedSize, 
                        bool JLiner, 
                        string USMHMN, 
                        string DSMHMN, 
                        string USMHDepth, 
                        string DSMHDepth, 
                        string SteelTapeThruPipe, 
                        string USMHAtMouth1200, 
                        string USMHAtMouth100, 
                        string USMHAtMouth200, 
                        string USMHAtMouth300, 
                        string USMHAtMouth400, 
                        string USMHAtMouth500, 
                        string DSMHAtMouth1200, 
                        string DSMHAtMouth100, 
                        string DSMHAtMouth200, 
                        string DSMHAtMouth300, 
                        string DSMHAtMouth400, 
                        string DSMHAtMouth500, 
                        int NumLats, 
                        int NotLinedYet, 
                        bool AllMeasured, 
                        string IssueWithLaterals, 
                        int NotMeasuredYet, 
                        int NotDeliveredYet, 
                        string Thickness) {
                JlDataMigrationRow rowJlDataMigrationRow = ((JlDataMigrationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OriginalID,
                        OriginalSectionID,
                        COMPANIES_ID,
                        Client,
                        SubArea,
                        Street,
                        USMH,
                        DSMH,
                        Size_,
                        ScaledLength,
                        ActualLength,
                        ConfirmedSize,
                        JLiner,
                        USMHMN,
                        DSMHMN,
                        USMHDepth,
                        DSMHDepth,
                        SteelTapeThruPipe,
                        USMHAtMouth1200,
                        USMHAtMouth100,
                        USMHAtMouth200,
                        USMHAtMouth300,
                        USMHAtMouth400,
                        USMHAtMouth500,
                        DSMHAtMouth1200,
                        DSMHAtMouth100,
                        DSMHAtMouth200,
                        DSMHAtMouth300,
                        DSMHAtMouth400,
                        DSMHAtMouth500,
                        NumLats,
                        NotLinedYet,
                        AllMeasured,
                        IssueWithLaterals,
                        NotMeasuredYet,
                        NotDeliveredYet,
                        Thickness};
                rowJlDataMigrationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowJlDataMigrationRow);
                return rowJlDataMigrationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JlDataMigrationRow FindByOriginalSectionID(string OriginalSectionID) {
                return ((JlDataMigrationRow)(this.Rows.Find(new object[] {
                            OriginalSectionID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                JlDataMigrationDataTable cln = ((JlDataMigrationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new JlDataMigrationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOriginalID = base.Columns["OriginalID"];
                this.columnOriginalSectionID = base.Columns["OriginalSectionID"];
                this.columnCOMPANIES_ID = base.Columns["COMPANIES_ID"];
                this.columnClient = base.Columns["Client"];
                this.columnSubArea = base.Columns["SubArea"];
                this.columnStreet = base.Columns["Street"];
                this.columnUSMH = base.Columns["USMH"];
                this.columnDSMH = base.Columns["DSMH"];
                this.columnSize_ = base.Columns["Size_"];
                this.columnScaledLength = base.Columns["ScaledLength"];
                this.columnActualLength = base.Columns["ActualLength"];
                this.columnConfirmedSize = base.Columns["ConfirmedSize"];
                this.columnJLiner = base.Columns["JLiner"];
                this.columnUSMHMN = base.Columns["USMHMN"];
                this.columnDSMHMN = base.Columns["DSMHMN"];
                this.columnUSMHDepth = base.Columns["USMHDepth"];
                this.columnDSMHDepth = base.Columns["DSMHDepth"];
                this.columnSteelTapeThruPipe = base.Columns["SteelTapeThruPipe"];
                this.columnUSMHAtMouth1200 = base.Columns["USMHAtMouth1200"];
                this.columnUSMHAtMouth100 = base.Columns["USMHAtMouth100"];
                this.columnUSMHAtMouth200 = base.Columns["USMHAtMouth200"];
                this.columnUSMHAtMouth300 = base.Columns["USMHAtMouth300"];
                this.columnUSMHAtMouth400 = base.Columns["USMHAtMouth400"];
                this.columnUSMHAtMouth500 = base.Columns["USMHAtMouth500"];
                this.columnDSMHAtMouth1200 = base.Columns["DSMHAtMouth1200"];
                this.columnDSMHAtMouth100 = base.Columns["DSMHAtMouth100"];
                this.columnDSMHAtMouth200 = base.Columns["DSMHAtMouth200"];
                this.columnDSMHAtMouth300 = base.Columns["DSMHAtMouth300"];
                this.columnDSMHAtMouth400 = base.Columns["DSMHAtMouth400"];
                this.columnDSMHAtMouth500 = base.Columns["DSMHAtMouth500"];
                this.columnNumLats = base.Columns["NumLats"];
                this.columnNotLinedYet = base.Columns["NotLinedYet"];
                this.columnAllMeasured = base.Columns["AllMeasured"];
                this.columnIssueWithLaterals = base.Columns["IssueWithLaterals"];
                this.columnNotMeasuredYet = base.Columns["NotMeasuredYet"];
                this.columnNotDeliveredYet = base.Columns["NotDeliveredYet"];
                this.columnThickness = base.Columns["Thickness"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOriginalID = new global::System.Data.DataColumn("OriginalID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalID);
                this.columnOriginalSectionID = new global::System.Data.DataColumn("OriginalSectionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalSectionID);
                this.columnCOMPANIES_ID = new global::System.Data.DataColumn("COMPANIES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANIES_ID);
                this.columnClient = new global::System.Data.DataColumn("Client", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClient);
                this.columnSubArea = new global::System.Data.DataColumn("SubArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubArea);
                this.columnStreet = new global::System.Data.DataColumn("Street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnUSMH = new global::System.Data.DataColumn("USMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMH);
                this.columnDSMH = new global::System.Data.DataColumn("DSMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMH);
                this.columnSize_ = new global::System.Data.DataColumn("Size_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_);
                this.columnScaledLength = new global::System.Data.DataColumn("ScaledLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaledLength);
                this.columnActualLength = new global::System.Data.DataColumn("ActualLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualLength);
                this.columnConfirmedSize = new global::System.Data.DataColumn("ConfirmedSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmedSize);
                this.columnJLiner = new global::System.Data.DataColumn("JLiner", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJLiner);
                this.columnUSMHMN = new global::System.Data.DataColumn("USMHMN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMN);
                this.columnDSMHMN = new global::System.Data.DataColumn("DSMHMN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMN);
                this.columnUSMHDepth = new global::System.Data.DataColumn("USMHDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHDepth);
                this.columnDSMHDepth = new global::System.Data.DataColumn("DSMHDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHDepth);
                this.columnSteelTapeThruPipe = new global::System.Data.DataColumn("SteelTapeThruPipe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSteelTapeThruPipe);
                this.columnUSMHAtMouth1200 = new global::System.Data.DataColumn("USMHAtMouth1200", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth1200);
                this.columnUSMHAtMouth100 = new global::System.Data.DataColumn("USMHAtMouth100", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth100);
                this.columnUSMHAtMouth200 = new global::System.Data.DataColumn("USMHAtMouth200", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth200);
                this.columnUSMHAtMouth300 = new global::System.Data.DataColumn("USMHAtMouth300", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth300);
                this.columnUSMHAtMouth400 = new global::System.Data.DataColumn("USMHAtMouth400", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth400);
                this.columnUSMHAtMouth500 = new global::System.Data.DataColumn("USMHAtMouth500", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth500);
                this.columnDSMHAtMouth1200 = new global::System.Data.DataColumn("DSMHAtMouth1200", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth1200);
                this.columnDSMHAtMouth100 = new global::System.Data.DataColumn("DSMHAtMouth100", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth100);
                this.columnDSMHAtMouth200 = new global::System.Data.DataColumn("DSMHAtMouth200", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth200);
                this.columnDSMHAtMouth300 = new global::System.Data.DataColumn("DSMHAtMouth300", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth300);
                this.columnDSMHAtMouth400 = new global::System.Data.DataColumn("DSMHAtMouth400", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth400);
                this.columnDSMHAtMouth500 = new global::System.Data.DataColumn("DSMHAtMouth500", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth500);
                this.columnNumLats = new global::System.Data.DataColumn("NumLats", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumLats);
                this.columnNotLinedYet = new global::System.Data.DataColumn("NotLinedYet", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotLinedYet);
                this.columnAllMeasured = new global::System.Data.DataColumn("AllMeasured", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllMeasured);
                this.columnIssueWithLaterals = new global::System.Data.DataColumn("IssueWithLaterals", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueWithLaterals);
                this.columnNotMeasuredYet = new global::System.Data.DataColumn("NotMeasuredYet", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotMeasuredYet);
                this.columnNotDeliveredYet = new global::System.Data.DataColumn("NotDeliveredYet", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotDeliveredYet);
                this.columnThickness = new global::System.Data.DataColumn("Thickness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThickness);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOriginalSectionID}, true));
                this.columnOriginalSectionID.AllowDBNull = false;
                this.columnOriginalSectionID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JlDataMigrationRow NewJlDataMigrationRow() {
                return ((JlDataMigrationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new JlDataMigrationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(JlDataMigrationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.JlDataMigrationRowChanged != null)) {
                    this.JlDataMigrationRowChanged(this, new JlDataMigrationRowChangeEvent(((JlDataMigrationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.JlDataMigrationRowChanging != null)) {
                    this.JlDataMigrationRowChanging(this, new JlDataMigrationRowChangeEvent(((JlDataMigrationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.JlDataMigrationRowDeleted != null)) {
                    this.JlDataMigrationRowDeleted(this, new JlDataMigrationRowChangeEvent(((JlDataMigrationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.JlDataMigrationRowDeleting != null)) {
                    this.JlDataMigrationRowDeleting(this, new JlDataMigrationRowChangeEvent(((JlDataMigrationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveJlDataMigrationRow(JlDataMigrationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataMigrationTDS ds = new DataMigrationTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "JlDataMigrationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataMigrationRow : global::System.Data.DataRow {
            
            private DataMigrationDataTable tableDataMigration;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataMigrationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataMigration = ((DataMigrationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid OriginalID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableDataMigration.OriginalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalID\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.OriginalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OriginalSectionID {
                get {
                    return ((string)(this[this.tableDataMigration.OriginalSectionIDColumn]));
                }
                set {
                    this[this.tableDataMigration.OriginalSectionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientID {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.ClientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientID\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.ClientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANIES_ID {
                get {
                    try {
                        return ((int)(this[this.tableDataMigration.COMPANIES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPANIES_ID\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.COMPANIES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Client {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.ClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Client\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubArea {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.SubAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubArea\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.SubAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Street {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.StreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Street\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.StreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMH {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.USMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMH\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.USMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMH {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.DSMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMH\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.DSMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size_ {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.Size_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size_\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.Size_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScaledLength {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.ScaledLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaledLength\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.ScaledLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime P1Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataMigration.P1DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P1Date\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.P1DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ActualLength {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.ActualLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualLength\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.ActualLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CXIsRemoved {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.CXIsRemovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CXIsRemoved\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.CXIsRemovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime M1Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataMigration.M1DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M1Date\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.M1DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime M2Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataMigration.M2DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M2Date\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.M2DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InstallDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataMigration.InstallDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallDate\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.InstallDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FinalVideo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataMigration.FinalVideoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalVideo\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.FinalVideoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueIdentified {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.IssueIdentifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueIdentified\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.IssueIdentifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueResolved {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.IssueResolvedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueResolved\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.IssueResolvedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FullLengthLining {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.FullLengthLiningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullLengthLining\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.FullLengthLiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueGivenToBayCity {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.IssueGivenToBayCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueGivenToBayCity\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.IssueGivenToBayCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConfirmedSize {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.ConfirmedSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfirmedSize\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.ConfirmedSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal InstallRate {
                get {
                    try {
                        return ((decimal)(this[this.tableDataMigration.InstallRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallRate\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.InstallRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeadlineDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataMigration.DeadlineDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeadlineDate\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.DeadlineDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ProposedLiningDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataMigration.ProposedLiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProposedLiningDate\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.ProposedLiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SalesIssue {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.SalesIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesIssue\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.SalesIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LFSIssue {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.LFSIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LFSIssue\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.LFSIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ClientIssue {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.ClientIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientIssue\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.ClientIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InvestigationIssue {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.InvestigationIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvestigationIssue\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.InvestigationIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool JLiner {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.JLinerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JLiner\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.JLinerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RehabAssessment {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.RehabAssessmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RehabAssessment\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.RehabAssessmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreFlushDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataMigration.PreFlushDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreFlushDate\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.PreFlushDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreVideoDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataMigration.PreVideoDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreVideoDate\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.PreVideoDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMN {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.USMHMNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMN\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.USMHMNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMN {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.DSMHMNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMN\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.DSMHMNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.USMHDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHDepth\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.USMHDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.DSMHDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHDepth\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.DSMHDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementsTakenBy {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.MeasurementsTakenByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementsTakenBy\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.MeasurementsTakenByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SteelTapeThruPipe {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.SteelTapeThruPipeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SteelTapeThruPipe\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.SteelTapeThruPipeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHAtMouth1200 {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.USMHAtMouth1200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth1200\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.USMHAtMouth1200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHAtMouth100 {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.USMHAtMouth100Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth100\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.USMHAtMouth100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHAtMouth200 {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.USMHAtMouth200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth200\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.USMHAtMouth200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHAtMouth300 {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.USMHAtMouth300Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth300\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.USMHAtMouth300Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHAtMouth400 {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.USMHAtMouth400Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth400\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.USMHAtMouth400Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHAtMouth500 {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.USMHAtMouth500Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth500\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.USMHAtMouth500Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHAtMouth1200 {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.DSMHAtMouth1200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth1200\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.DSMHAtMouth1200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHAtMouth100 {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.DSMHAtMouth100Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth100\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.DSMHAtMouth100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHAtMouth200 {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.DSMHAtMouth200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth200\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.DSMHAtMouth200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHAtMouth300 {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.DSMHAtMouth300Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth300\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.DSMHAtMouth300Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHAtMouth400 {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.DSMHAtMouth400Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth400\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.DSMHAtMouth400Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHAtMouth500 {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.DSMHAtMouth500Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth500\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.DSMHAtMouth500Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HydrantAddress {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.HydrantAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HydrantAddress\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.HydrantAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistanceToInversionMH {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.DistanceToInversionMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceToInversionMH\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.DistanceToInversionMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RampsRequired {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.RampsRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RampsRequired\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.RampsRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DegreeOfTrafficControl {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.DegreeOfTrafficControlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DegreeOfTrafficControl\' in table \'DataMigration\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDataMigration.DegreeOfTrafficControlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool StandarBypass {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.StandarBypassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandarBypass\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.StandarBypassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HydroWireDetails {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.HydroWireDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HydroWireDetails\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.HydroWireDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PipeMaterialType {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.PipeMaterialTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PipeMaterialType\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.PipeMaterialTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CappedLaterals {
                get {
                    try {
                        return ((int)(this[this.tableDataMigration.CappedLateralsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CappedLaterals\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.CappedLateralsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RoboticPrepRequired {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.RoboticPrepRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoboticPrepRequired\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.RoboticPrepRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PipeSizeChange {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.PipeSizeChangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PipeSizeChange\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.PipeSizeChangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoDoneFrom {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.VideoDoneFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoDoneFrom\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.VideoDoneFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToManhole {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.ToManholeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToManhole\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.ToManholeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CutterDescriptionDuringMeasuring {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.CutterDescriptionDuringMeasuringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CutterDescriptionDuringMeasuring\' in table \'DataMigration\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.CutterDescriptionDuringMeasuringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LineWithID {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.LineWithIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineWithID\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.LineWithIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SchoolZone {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.SchoolZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchoolZone\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.SchoolZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RestaurantArea {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.RestaurantAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RestaurantArea\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.RestaurantAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CarwashLaundromat {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.CarwashLaundromatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarwashLaundromat\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.CarwashLaundromatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HydroPulley {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.HydroPulleyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HydroPulley\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.HydroPulleyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FridgeCart {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.FridgeCartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FridgeCart\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.FridgeCartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TwoInchPump {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.TwoInchPumpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TwoInchPump\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.TwoInchPumpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SixInchBypass {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.SixInchBypassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SixInchBypass\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.SixInchBypassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Scaffolding {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.ScaffoldingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Scaffolding\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.ScaffoldingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WinchExtension {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.WinchExtensionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WinchExtension\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.WinchExtensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ExtraGenerator {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.ExtraGeneratorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraGenerator\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.ExtraGeneratorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool GreyCableExtension {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.GreyCableExtensionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GreyCableExtension\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.GreyCableExtensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EasementMats {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.EasementMatsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EasementMats\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.EasementMatsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementType {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.MeasurementTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementType\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.MeasurementTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DropPipe {
                get {
                    try {
                        return ((bool)(this[this.tableDataMigration.DropPipeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropPipe\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.DropPipeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DropPipeInvertDepth {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.DropPipeInvertDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropPipeInvertDepth\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.DropPipeInvertDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasuredFromManhole {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.MeasuredFromManholeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasuredFromManhole\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.MeasuredFromManholeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Thickness {
                get {
                    try {
                        return ((string)(this[this.tableDataMigration.ThicknessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Thickness\' in table \'DataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigration.ThicknessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOriginalIDNull() {
                return this.IsNull(this.tableDataMigration.OriginalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOriginalIDNull() {
                this[this.tableDataMigration.OriginalIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientIDNull() {
                return this.IsNull(this.tableDataMigration.ClientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientIDNull() {
                this[this.tableDataMigration.ClientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANIES_IDNull() {
                return this.IsNull(this.tableDataMigration.COMPANIES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANIES_IDNull() {
                this[this.tableDataMigration.COMPANIES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNull() {
                return this.IsNull(this.tableDataMigration.ClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNull() {
                this[this.tableDataMigration.ClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubAreaNull() {
                return this.IsNull(this.tableDataMigration.SubAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubAreaNull() {
                this[this.tableDataMigration.SubAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNull() {
                return this.IsNull(this.tableDataMigration.StreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNull() {
                this[this.tableDataMigration.StreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHNull() {
                return this.IsNull(this.tableDataMigration.USMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHNull() {
                this[this.tableDataMigration.USMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHNull() {
                return this.IsNull(this.tableDataMigration.DSMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHNull() {
                this[this.tableDataMigration.DSMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSize_Null() {
                return this.IsNull(this.tableDataMigration.Size_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSize_Null() {
                this[this.tableDataMigration.Size_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScaledLengthNull() {
                return this.IsNull(this.tableDataMigration.ScaledLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScaledLengthNull() {
                this[this.tableDataMigration.ScaledLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP1DateNull() {
                return this.IsNull(this.tableDataMigration.P1DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP1DateNull() {
                this[this.tableDataMigration.P1DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActualLengthNull() {
                return this.IsNull(this.tableDataMigration.ActualLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActualLengthNull() {
                this[this.tableDataMigration.ActualLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCXIsRemovedNull() {
                return this.IsNull(this.tableDataMigration.CXIsRemovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCXIsRemovedNull() {
                this[this.tableDataMigration.CXIsRemovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM1DateNull() {
                return this.IsNull(this.tableDataMigration.M1DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM1DateNull() {
                this[this.tableDataMigration.M1DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM2DateNull() {
                return this.IsNull(this.tableDataMigration.M2DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM2DateNull() {
                this[this.tableDataMigration.M2DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallDateNull() {
                return this.IsNull(this.tableDataMigration.InstallDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallDateNull() {
                this[this.tableDataMigration.InstallDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalVideoNull() {
                return this.IsNull(this.tableDataMigration.FinalVideoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalVideoNull() {
                this[this.tableDataMigration.FinalVideoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueIdentifiedNull() {
                return this.IsNull(this.tableDataMigration.IssueIdentifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueIdentifiedNull() {
                this[this.tableDataMigration.IssueIdentifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueResolvedNull() {
                return this.IsNull(this.tableDataMigration.IssueResolvedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueResolvedNull() {
                this[this.tableDataMigration.IssueResolvedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullLengthLiningNull() {
                return this.IsNull(this.tableDataMigration.FullLengthLiningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullLengthLiningNull() {
                this[this.tableDataMigration.FullLengthLiningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueGivenToBayCityNull() {
                return this.IsNull(this.tableDataMigration.IssueGivenToBayCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueGivenToBayCityNull() {
                this[this.tableDataMigration.IssueGivenToBayCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConfirmedSizeNull() {
                return this.IsNull(this.tableDataMigration.ConfirmedSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConfirmedSizeNull() {
                this[this.tableDataMigration.ConfirmedSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallRateNull() {
                return this.IsNull(this.tableDataMigration.InstallRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallRateNull() {
                this[this.tableDataMigration.InstallRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeadlineDateNull() {
                return this.IsNull(this.tableDataMigration.DeadlineDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeadlineDateNull() {
                this[this.tableDataMigration.DeadlineDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProposedLiningDateNull() {
                return this.IsNull(this.tableDataMigration.ProposedLiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProposedLiningDateNull() {
                this[this.tableDataMigration.ProposedLiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesIssueNull() {
                return this.IsNull(this.tableDataMigration.SalesIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesIssueNull() {
                this[this.tableDataMigration.SalesIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLFSIssueNull() {
                return this.IsNull(this.tableDataMigration.LFSIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLFSIssueNull() {
                this[this.tableDataMigration.LFSIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientIssueNull() {
                return this.IsNull(this.tableDataMigration.ClientIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientIssueNull() {
                this[this.tableDataMigration.ClientIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestigationIssueNull() {
                return this.IsNull(this.tableDataMigration.InvestigationIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestigationIssueNull() {
                this[this.tableDataMigration.InvestigationIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJLinerNull() {
                return this.IsNull(this.tableDataMigration.JLinerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJLinerNull() {
                this[this.tableDataMigration.JLinerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRehabAssessmentNull() {
                return this.IsNull(this.tableDataMigration.RehabAssessmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRehabAssessmentNull() {
                this[this.tableDataMigration.RehabAssessmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreFlushDateNull() {
                return this.IsNull(this.tableDataMigration.PreFlushDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreFlushDateNull() {
                this[this.tableDataMigration.PreFlushDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreVideoDateNull() {
                return this.IsNull(this.tableDataMigration.PreVideoDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreVideoDateNull() {
                this[this.tableDataMigration.PreVideoDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMNNull() {
                return this.IsNull(this.tableDataMigration.USMHMNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMNNull() {
                this[this.tableDataMigration.USMHMNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMNNull() {
                return this.IsNull(this.tableDataMigration.DSMHMNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMNNull() {
                this[this.tableDataMigration.DSMHMNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHDepthNull() {
                return this.IsNull(this.tableDataMigration.USMHDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHDepthNull() {
                this[this.tableDataMigration.USMHDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHDepthNull() {
                return this.IsNull(this.tableDataMigration.DSMHDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHDepthNull() {
                this[this.tableDataMigration.DSMHDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementsTakenByNull() {
                return this.IsNull(this.tableDataMigration.MeasurementsTakenByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementsTakenByNull() {
                this[this.tableDataMigration.MeasurementsTakenByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSteelTapeThruPipeNull() {
                return this.IsNull(this.tableDataMigration.SteelTapeThruPipeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSteelTapeThruPipeNull() {
                this[this.tableDataMigration.SteelTapeThruPipeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth1200Null() {
                return this.IsNull(this.tableDataMigration.USMHAtMouth1200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth1200Null() {
                this[this.tableDataMigration.USMHAtMouth1200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth100Null() {
                return this.IsNull(this.tableDataMigration.USMHAtMouth100Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth100Null() {
                this[this.tableDataMigration.USMHAtMouth100Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth200Null() {
                return this.IsNull(this.tableDataMigration.USMHAtMouth200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth200Null() {
                this[this.tableDataMigration.USMHAtMouth200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth300Null() {
                return this.IsNull(this.tableDataMigration.USMHAtMouth300Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth300Null() {
                this[this.tableDataMigration.USMHAtMouth300Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth400Null() {
                return this.IsNull(this.tableDataMigration.USMHAtMouth400Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth400Null() {
                this[this.tableDataMigration.USMHAtMouth400Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth500Null() {
                return this.IsNull(this.tableDataMigration.USMHAtMouth500Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth500Null() {
                this[this.tableDataMigration.USMHAtMouth500Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth1200Null() {
                return this.IsNull(this.tableDataMigration.DSMHAtMouth1200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth1200Null() {
                this[this.tableDataMigration.DSMHAtMouth1200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth100Null() {
                return this.IsNull(this.tableDataMigration.DSMHAtMouth100Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth100Null() {
                this[this.tableDataMigration.DSMHAtMouth100Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth200Null() {
                return this.IsNull(this.tableDataMigration.DSMHAtMouth200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth200Null() {
                this[this.tableDataMigration.DSMHAtMouth200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth300Null() {
                return this.IsNull(this.tableDataMigration.DSMHAtMouth300Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth300Null() {
                this[this.tableDataMigration.DSMHAtMouth300Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth400Null() {
                return this.IsNull(this.tableDataMigration.DSMHAtMouth400Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth400Null() {
                this[this.tableDataMigration.DSMHAtMouth400Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth500Null() {
                return this.IsNull(this.tableDataMigration.DSMHAtMouth500Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth500Null() {
                this[this.tableDataMigration.DSMHAtMouth500Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydrantAddressNull() {
                return this.IsNull(this.tableDataMigration.HydrantAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydrantAddressNull() {
                this[this.tableDataMigration.HydrantAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceToInversionMHNull() {
                return this.IsNull(this.tableDataMigration.DistanceToInversionMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceToInversionMHNull() {
                this[this.tableDataMigration.DistanceToInversionMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRampsRequiredNull() {
                return this.IsNull(this.tableDataMigration.RampsRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRampsRequiredNull() {
                this[this.tableDataMigration.RampsRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDegreeOfTrafficControlNull() {
                return this.IsNull(this.tableDataMigration.DegreeOfTrafficControlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDegreeOfTrafficControlNull() {
                this[this.tableDataMigration.DegreeOfTrafficControlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandarBypassNull() {
                return this.IsNull(this.tableDataMigration.StandarBypassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandarBypassNull() {
                this[this.tableDataMigration.StandarBypassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydroWireDetailsNull() {
                return this.IsNull(this.tableDataMigration.HydroWireDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydroWireDetailsNull() {
                this[this.tableDataMigration.HydroWireDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPipeMaterialTypeNull() {
                return this.IsNull(this.tableDataMigration.PipeMaterialTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPipeMaterialTypeNull() {
                this[this.tableDataMigration.PipeMaterialTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCappedLateralsNull() {
                return this.IsNull(this.tableDataMigration.CappedLateralsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCappedLateralsNull() {
                this[this.tableDataMigration.CappedLateralsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoboticPrepRequiredNull() {
                return this.IsNull(this.tableDataMigration.RoboticPrepRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoboticPrepRequiredNull() {
                this[this.tableDataMigration.RoboticPrepRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPipeSizeChangeNull() {
                return this.IsNull(this.tableDataMigration.PipeSizeChangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPipeSizeChangeNull() {
                this[this.tableDataMigration.PipeSizeChangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoDoneFromNull() {
                return this.IsNull(this.tableDataMigration.VideoDoneFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoDoneFromNull() {
                this[this.tableDataMigration.VideoDoneFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToManholeNull() {
                return this.IsNull(this.tableDataMigration.ToManholeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToManholeNull() {
                this[this.tableDataMigration.ToManholeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCutterDescriptionDuringMeasuringNull() {
                return this.IsNull(this.tableDataMigration.CutterDescriptionDuringMeasuringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCutterDescriptionDuringMeasuringNull() {
                this[this.tableDataMigration.CutterDescriptionDuringMeasuringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineWithIDNull() {
                return this.IsNull(this.tableDataMigration.LineWithIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineWithIDNull() {
                this[this.tableDataMigration.LineWithIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchoolZoneNull() {
                return this.IsNull(this.tableDataMigration.SchoolZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchoolZoneNull() {
                this[this.tableDataMigration.SchoolZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestaurantAreaNull() {
                return this.IsNull(this.tableDataMigration.RestaurantAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestaurantAreaNull() {
                this[this.tableDataMigration.RestaurantAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarwashLaundromatNull() {
                return this.IsNull(this.tableDataMigration.CarwashLaundromatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarwashLaundromatNull() {
                this[this.tableDataMigration.CarwashLaundromatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydroPulleyNull() {
                return this.IsNull(this.tableDataMigration.HydroPulleyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydroPulleyNull() {
                this[this.tableDataMigration.HydroPulleyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFridgeCartNull() {
                return this.IsNull(this.tableDataMigration.FridgeCartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFridgeCartNull() {
                this[this.tableDataMigration.FridgeCartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTwoInchPumpNull() {
                return this.IsNull(this.tableDataMigration.TwoInchPumpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTwoInchPumpNull() {
                this[this.tableDataMigration.TwoInchPumpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSixInchBypassNull() {
                return this.IsNull(this.tableDataMigration.SixInchBypassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSixInchBypassNull() {
                this[this.tableDataMigration.SixInchBypassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScaffoldingNull() {
                return this.IsNull(this.tableDataMigration.ScaffoldingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScaffoldingNull() {
                this[this.tableDataMigration.ScaffoldingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWinchExtensionNull() {
                return this.IsNull(this.tableDataMigration.WinchExtensionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWinchExtensionNull() {
                this[this.tableDataMigration.WinchExtensionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraGeneratorNull() {
                return this.IsNull(this.tableDataMigration.ExtraGeneratorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraGeneratorNull() {
                this[this.tableDataMigration.ExtraGeneratorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGreyCableExtensionNull() {
                return this.IsNull(this.tableDataMigration.GreyCableExtensionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGreyCableExtensionNull() {
                this[this.tableDataMigration.GreyCableExtensionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEasementMatsNull() {
                return this.IsNull(this.tableDataMigration.EasementMatsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEasementMatsNull() {
                this[this.tableDataMigration.EasementMatsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementTypeNull() {
                return this.IsNull(this.tableDataMigration.MeasurementTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementTypeNull() {
                this[this.tableDataMigration.MeasurementTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDropPipeNull() {
                return this.IsNull(this.tableDataMigration.DropPipeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDropPipeNull() {
                this[this.tableDataMigration.DropPipeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDropPipeInvertDepthNull() {
                return this.IsNull(this.tableDataMigration.DropPipeInvertDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDropPipeInvertDepthNull() {
                this[this.tableDataMigration.DropPipeInvertDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasuredFromManholeNull() {
                return this.IsNull(this.tableDataMigration.MeasuredFromManholeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasuredFromManholeNull() {
                this[this.tableDataMigration.MeasuredFromManholeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThicknessNull() {
                return this.IsNull(this.tableDataMigration.ThicknessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThicknessNull() {
                this[this.tableDataMigration.ThicknessColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataMigrationProjectRow : global::System.Data.DataRow {
            
            private DataMigrationProjectDataTable tableDataMigrationProject;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataMigrationProjectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataMigrationProject = ((DataMigrationProjectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CountryID {
                get {
                    return ((long)(this[this.tableDataMigrationProject.CountryIDColumn]));
                }
                set {
                    this[this.tableDataMigrationProject.CountryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OfficeID {
                get {
                    return ((int)(this[this.tableDataMigrationProject.OfficeIDColumn]));
                }
                set {
                    this[this.tableDataMigrationProject.OfficeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectLeadID {
                get {
                    try {
                        return ((int)(this[this.tableDataMigrationProject.ProjectLeadIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectLeadID\' in table \'DataMigrationProject\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigrationProject.ProjectLeadIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesmanID {
                get {
                    return ((int)(this[this.tableDataMigrationProject.SalesmanIDColumn]));
                }
                set {
                    this[this.tableDataMigrationProject.SalesmanIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANIES_ID {
                get {
                    try {
                        return ((int)(this[this.tableDataMigrationProject.COMPANIES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPANIES_ID\' in table \'DataMigrationProject\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigrationProject.COMPANIES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableDataMigrationProject.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'DataMigrationProject\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigrationProject.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ProvinceID {
                get {
                    try {
                        return ((long)(this[this.tableDataMigrationProject.ProvinceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProvinceID\' in table \'DataMigrationProject\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigrationProject.ProvinceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CityID {
                get {
                    try {
                        return ((long)(this[this.tableDataMigrationProject.CityIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityID\' in table \'DataMigrationProject\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigrationProject.CityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CountyID {
                get {
                    try {
                        return ((long)(this[this.tableDataMigrationProject.CountyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountyID\' in table \'DataMigrationProject\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataMigrationProject.CountyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectLeadIDNull() {
                return this.IsNull(this.tableDataMigrationProject.ProjectLeadIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectLeadIDNull() {
                this[this.tableDataMigrationProject.ProjectLeadIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANIES_IDNull() {
                return this.IsNull(this.tableDataMigrationProject.COMPANIES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANIES_IDNull() {
                this[this.tableDataMigrationProject.COMPANIES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableDataMigrationProject.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableDataMigrationProject.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProvinceIDNull() {
                return this.IsNull(this.tableDataMigrationProject.ProvinceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProvinceIDNull() {
                this[this.tableDataMigrationProject.ProvinceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityIDNull() {
                return this.IsNull(this.tableDataMigrationProject.CityIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityIDNull() {
                this[this.tableDataMigrationProject.CityIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountyIDNull() {
                return this.IsNull(this.tableDataMigrationProject.CountyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountyIDNull() {
                this[this.tableDataMigrationProject.CountyIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class JlDataMigrationRow : global::System.Data.DataRow {
            
            private JlDataMigrationDataTable tableJlDataMigration;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal JlDataMigrationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableJlDataMigration = ((JlDataMigrationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid OriginalID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableJlDataMigration.OriginalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalID\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.OriginalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OriginalSectionID {
                get {
                    return ((string)(this[this.tableJlDataMigration.OriginalSectionIDColumn]));
                }
                set {
                    this[this.tableJlDataMigration.OriginalSectionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANIES_ID {
                get {
                    try {
                        return ((int)(this[this.tableJlDataMigration.COMPANIES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPANIES_ID\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.COMPANIES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Client {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.ClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Client\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubArea {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.SubAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubArea\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.SubAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Street {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.StreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Street\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.StreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMH {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.USMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMH\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.USMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMH {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.DSMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMH\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.DSMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size_ {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.Size_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size_\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.Size_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScaledLength {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.ScaledLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaledLength\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.ScaledLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ActualLength {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.ActualLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualLength\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.ActualLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConfirmedSize {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.ConfirmedSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfirmedSize\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.ConfirmedSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool JLiner {
                get {
                    try {
                        return ((bool)(this[this.tableJlDataMigration.JLinerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JLiner\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.JLinerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMN {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.USMHMNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMN\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.USMHMNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMN {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.DSMHMNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMN\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.DSMHMNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.USMHDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHDepth\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.USMHDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.DSMHDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHDepth\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.DSMHDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SteelTapeThruPipe {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.SteelTapeThruPipeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SteelTapeThruPipe\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.SteelTapeThruPipeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHAtMouth1200 {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.USMHAtMouth1200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth1200\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.USMHAtMouth1200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHAtMouth100 {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.USMHAtMouth100Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth100\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.USMHAtMouth100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHAtMouth200 {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.USMHAtMouth200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth200\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.USMHAtMouth200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHAtMouth300 {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.USMHAtMouth300Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth300\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.USMHAtMouth300Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHAtMouth400 {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.USMHAtMouth400Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth400\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.USMHAtMouth400Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHAtMouth500 {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.USMHAtMouth500Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth500\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.USMHAtMouth500Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHAtMouth1200 {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.DSMHAtMouth1200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth1200\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.DSMHAtMouth1200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHAtMouth100 {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.DSMHAtMouth100Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth100\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.DSMHAtMouth100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHAtMouth200 {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.DSMHAtMouth200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth200\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.DSMHAtMouth200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHAtMouth300 {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.DSMHAtMouth300Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth300\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.DSMHAtMouth300Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHAtMouth400 {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.DSMHAtMouth400Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth400\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.DSMHAtMouth400Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHAtMouth500 {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.DSMHAtMouth500Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth500\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.DSMHAtMouth500Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumLats {
                get {
                    try {
                        return ((int)(this[this.tableJlDataMigration.NumLatsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumLats\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.NumLatsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NotLinedYet {
                get {
                    try {
                        return ((int)(this[this.tableJlDataMigration.NotLinedYetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotLinedYet\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.NotLinedYetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AllMeasured {
                get {
                    try {
                        return ((bool)(this[this.tableJlDataMigration.AllMeasuredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AllMeasured\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.AllMeasuredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssueWithLaterals {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.IssueWithLateralsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueWithLaterals\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.IssueWithLateralsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NotMeasuredYet {
                get {
                    try {
                        return ((int)(this[this.tableJlDataMigration.NotMeasuredYetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotMeasuredYet\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.NotMeasuredYetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NotDeliveredYet {
                get {
                    try {
                        return ((int)(this[this.tableJlDataMigration.NotDeliveredYetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotDeliveredYet\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.NotDeliveredYetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Thickness {
                get {
                    try {
                        return ((string)(this[this.tableJlDataMigration.ThicknessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Thickness\' in table \'JlDataMigration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJlDataMigration.ThicknessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOriginalIDNull() {
                return this.IsNull(this.tableJlDataMigration.OriginalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOriginalIDNull() {
                this[this.tableJlDataMigration.OriginalIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANIES_IDNull() {
                return this.IsNull(this.tableJlDataMigration.COMPANIES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANIES_IDNull() {
                this[this.tableJlDataMigration.COMPANIES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNull() {
                return this.IsNull(this.tableJlDataMigration.ClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNull() {
                this[this.tableJlDataMigration.ClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubAreaNull() {
                return this.IsNull(this.tableJlDataMigration.SubAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubAreaNull() {
                this[this.tableJlDataMigration.SubAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNull() {
                return this.IsNull(this.tableJlDataMigration.StreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNull() {
                this[this.tableJlDataMigration.StreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHNull() {
                return this.IsNull(this.tableJlDataMigration.USMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHNull() {
                this[this.tableJlDataMigration.USMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHNull() {
                return this.IsNull(this.tableJlDataMigration.DSMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHNull() {
                this[this.tableJlDataMigration.DSMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSize_Null() {
                return this.IsNull(this.tableJlDataMigration.Size_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSize_Null() {
                this[this.tableJlDataMigration.Size_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScaledLengthNull() {
                return this.IsNull(this.tableJlDataMigration.ScaledLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScaledLengthNull() {
                this[this.tableJlDataMigration.ScaledLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActualLengthNull() {
                return this.IsNull(this.tableJlDataMigration.ActualLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActualLengthNull() {
                this[this.tableJlDataMigration.ActualLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConfirmedSizeNull() {
                return this.IsNull(this.tableJlDataMigration.ConfirmedSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConfirmedSizeNull() {
                this[this.tableJlDataMigration.ConfirmedSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJLinerNull() {
                return this.IsNull(this.tableJlDataMigration.JLinerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJLinerNull() {
                this[this.tableJlDataMigration.JLinerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMNNull() {
                return this.IsNull(this.tableJlDataMigration.USMHMNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMNNull() {
                this[this.tableJlDataMigration.USMHMNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMNNull() {
                return this.IsNull(this.tableJlDataMigration.DSMHMNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMNNull() {
                this[this.tableJlDataMigration.DSMHMNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHDepthNull() {
                return this.IsNull(this.tableJlDataMigration.USMHDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHDepthNull() {
                this[this.tableJlDataMigration.USMHDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHDepthNull() {
                return this.IsNull(this.tableJlDataMigration.DSMHDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHDepthNull() {
                this[this.tableJlDataMigration.DSMHDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSteelTapeThruPipeNull() {
                return this.IsNull(this.tableJlDataMigration.SteelTapeThruPipeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSteelTapeThruPipeNull() {
                this[this.tableJlDataMigration.SteelTapeThruPipeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth1200Null() {
                return this.IsNull(this.tableJlDataMigration.USMHAtMouth1200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth1200Null() {
                this[this.tableJlDataMigration.USMHAtMouth1200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth100Null() {
                return this.IsNull(this.tableJlDataMigration.USMHAtMouth100Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth100Null() {
                this[this.tableJlDataMigration.USMHAtMouth100Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth200Null() {
                return this.IsNull(this.tableJlDataMigration.USMHAtMouth200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth200Null() {
                this[this.tableJlDataMigration.USMHAtMouth200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth300Null() {
                return this.IsNull(this.tableJlDataMigration.USMHAtMouth300Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth300Null() {
                this[this.tableJlDataMigration.USMHAtMouth300Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth400Null() {
                return this.IsNull(this.tableJlDataMigration.USMHAtMouth400Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth400Null() {
                this[this.tableJlDataMigration.USMHAtMouth400Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth500Null() {
                return this.IsNull(this.tableJlDataMigration.USMHAtMouth500Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth500Null() {
                this[this.tableJlDataMigration.USMHAtMouth500Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth1200Null() {
                return this.IsNull(this.tableJlDataMigration.DSMHAtMouth1200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth1200Null() {
                this[this.tableJlDataMigration.DSMHAtMouth1200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth100Null() {
                return this.IsNull(this.tableJlDataMigration.DSMHAtMouth100Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth100Null() {
                this[this.tableJlDataMigration.DSMHAtMouth100Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth200Null() {
                return this.IsNull(this.tableJlDataMigration.DSMHAtMouth200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth200Null() {
                this[this.tableJlDataMigration.DSMHAtMouth200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth300Null() {
                return this.IsNull(this.tableJlDataMigration.DSMHAtMouth300Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth300Null() {
                this[this.tableJlDataMigration.DSMHAtMouth300Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth400Null() {
                return this.IsNull(this.tableJlDataMigration.DSMHAtMouth400Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth400Null() {
                this[this.tableJlDataMigration.DSMHAtMouth400Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth500Null() {
                return this.IsNull(this.tableJlDataMigration.DSMHAtMouth500Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth500Null() {
                this[this.tableJlDataMigration.DSMHAtMouth500Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumLatsNull() {
                return this.IsNull(this.tableJlDataMigration.NumLatsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumLatsNull() {
                this[this.tableJlDataMigration.NumLatsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotLinedYetNull() {
                return this.IsNull(this.tableJlDataMigration.NotLinedYetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotLinedYetNull() {
                this[this.tableJlDataMigration.NotLinedYetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAllMeasuredNull() {
                return this.IsNull(this.tableJlDataMigration.AllMeasuredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAllMeasuredNull() {
                this[this.tableJlDataMigration.AllMeasuredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueWithLateralsNull() {
                return this.IsNull(this.tableJlDataMigration.IssueWithLateralsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueWithLateralsNull() {
                this[this.tableJlDataMigration.IssueWithLateralsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotMeasuredYetNull() {
                return this.IsNull(this.tableJlDataMigration.NotMeasuredYetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotMeasuredYetNull() {
                this[this.tableJlDataMigration.NotMeasuredYetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotDeliveredYetNull() {
                return this.IsNull(this.tableJlDataMigration.NotDeliveredYetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotDeliveredYetNull() {
                this[this.tableJlDataMigration.NotDeliveredYetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThicknessNull() {
                return this.IsNull(this.tableJlDataMigration.ThicknessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThicknessNull() {
                this[this.tableJlDataMigration.ThicknessColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataMigrationRowChangeEvent : global::System.EventArgs {
            
            private DataMigrationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataMigrationRowChangeEvent(DataMigrationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataMigrationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataMigrationProjectRowChangeEvent : global::System.EventArgs {
            
            private DataMigrationProjectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataMigrationProjectRowChangeEvent(DataMigrationProjectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataMigrationProjectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class JlDataMigrationRowChangeEvent : global::System.EventArgs {
            
            private JlDataMigrationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JlDataMigrationRowChangeEvent(JlDataMigrationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JlDataMigrationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591