//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3620
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.Resources.Employees {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("EmployeeStandardCostsSetupTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class EmployeeStandardCostsSetupTDS : global::System.Data.DataSet {
        
        private StandardCostsSetupDataTable tableStandardCostsSetup;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EmployeeStandardCostsSetupTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected EmployeeStandardCostsSetupTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["StandardCostsSetup"] != null)) {
                    base.Tables.Add(new StandardCostsSetupDataTable(ds.Tables["StandardCostsSetup"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StandardCostsSetupDataTable StandardCostsSetup {
            get {
                return this.tableStandardCostsSetup;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            EmployeeStandardCostsSetupTDS cln = ((EmployeeStandardCostsSetupTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["StandardCostsSetup"] != null)) {
                    base.Tables.Add(new StandardCostsSetupDataTable(ds.Tables["StandardCostsSetup"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableStandardCostsSetup = ((StandardCostsSetupDataTable)(base.Tables["StandardCostsSetup"]));
            if ((initTable == true)) {
                if ((this.tableStandardCostsSetup != null)) {
                    this.tableStandardCostsSetup.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "EmployeeStandardCostsSetupTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/EmployeeStandardCostsSetupTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableStandardCostsSetup = new StandardCostsSetupDataTable();
            base.Tables.Add(this.tableStandardCostsSetup);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStandardCostsSetup() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            EmployeeStandardCostsSetupTDS ds = new EmployeeStandardCostsSetupTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void StandardCostsSetupRowChangeEventHandler(object sender, StandardCostsSetupRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StandardCostsSetupDataTable : global::System.Data.TypedTableBase<StandardCostsSetupRow> {
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnLoginID;
            
            private global::System.Data.DataColumn columnContactsID;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnMiddleInitial;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnIsSalesman;
            
            private global::System.Data.DataColumn columnRequestProjectTime;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnSalaried;
            
            private global::System.Data.DataColumn columneMail;
            
            private global::System.Data.DataColumn columnAssignableSRS;
            
            private global::System.Data.DataColumn columnJobClassType;
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnPersonalAgencyName;
            
            private global::System.Data.DataColumn columnIsVacationsManager;
            
            private global::System.Data.DataColumn columnApproveTimesheets;
            
            private global::System.Data.DataColumn columnBourdenFactor;
            
            private global::System.Data.DataColumn columnUSHealthBenefitFactor;
            
            private global::System.Data.DataColumn columnBenefitFactorCad;
            
            private global::System.Data.DataColumn columnBenefitFactorUsd;
            
            private global::System.Data.DataColumn columnCrew;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StandardCostsSetupDataTable() {
                this.TableName = "StandardCostsSetup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StandardCostsSetupDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StandardCostsSetupDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LoginIDColumn {
                get {
                    return this.columnLoginID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactsIDColumn {
                get {
                    return this.columnContactsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiddleInitialColumn {
                get {
                    return this.columnMiddleInitial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsSalesmanColumn {
                get {
                    return this.columnIsSalesman;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestProjectTimeColumn {
                get {
                    return this.columnRequestProjectTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalariedColumn {
                get {
                    return this.columnSalaried;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn eMailColumn {
                get {
                    return this.columneMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssignableSRSColumn {
                get {
                    return this.columnAssignableSRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobClassTypeColumn {
                get {
                    return this.columnJobClassType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PersonalAgencyNameColumn {
                get {
                    return this.columnPersonalAgencyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsVacationsManagerColumn {
                get {
                    return this.columnIsVacationsManager;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApproveTimesheetsColumn {
                get {
                    return this.columnApproveTimesheets;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BourdenFactorColumn {
                get {
                    return this.columnBourdenFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USHealthBenefitFactorColumn {
                get {
                    return this.columnUSHealthBenefitFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BenefitFactorCadColumn {
                get {
                    return this.columnBenefitFactorCad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BenefitFactorUsdColumn {
                get {
                    return this.columnBenefitFactorUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CrewColumn {
                get {
                    return this.columnCrew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StandardCostsSetupRow this[int index] {
                get {
                    return ((StandardCostsSetupRow)(this.Rows[index]));
                }
            }
            
            public event StandardCostsSetupRowChangeEventHandler StandardCostsSetupRowChanging;
            
            public event StandardCostsSetupRowChangeEventHandler StandardCostsSetupRowChanged;
            
            public event StandardCostsSetupRowChangeEventHandler StandardCostsSetupRowDeleting;
            
            public event StandardCostsSetupRowChangeEventHandler StandardCostsSetupRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStandardCostsSetupRow(StandardCostsSetupRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StandardCostsSetupRow AddStandardCostsSetupRow(
                        int LoginID, 
                        int ContactsID, 
                        string FullName, 
                        string FirstName, 
                        string MiddleInitial, 
                        string LastName, 
                        string Type, 
                        string State, 
                        bool IsSalesman, 
                        bool RequestProjectTime, 
                        bool Deleted, 
                        bool Salaried, 
                        string eMail, 
                        bool AssignableSRS, 
                        string JobClassType, 
                        string Category, 
                        string PersonalAgencyName, 
                        bool IsVacationsManager, 
                        bool ApproveTimesheets, 
                        decimal BourdenFactor, 
                        decimal USHealthBenefitFactor, 
                        decimal BenefitFactorCad, 
                        decimal BenefitFactorUsd, 
                        string Crew) {
                StandardCostsSetupRow rowStandardCostsSetupRow = ((StandardCostsSetupRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        LoginID,
                        ContactsID,
                        FullName,
                        FirstName,
                        MiddleInitial,
                        LastName,
                        Type,
                        State,
                        IsSalesman,
                        RequestProjectTime,
                        Deleted,
                        Salaried,
                        eMail,
                        AssignableSRS,
                        JobClassType,
                        Category,
                        PersonalAgencyName,
                        IsVacationsManager,
                        ApproveTimesheets,
                        BourdenFactor,
                        USHealthBenefitFactor,
                        BenefitFactorCad,
                        BenefitFactorUsd,
                        Crew};
                rowStandardCostsSetupRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStandardCostsSetupRow);
                return rowStandardCostsSetupRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StandardCostsSetupRow FindByEmployeeID(int EmployeeID) {
                return ((StandardCostsSetupRow)(this.Rows.Find(new object[] {
                            EmployeeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StandardCostsSetupDataTable cln = ((StandardCostsSetupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StandardCostsSetupDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnLoginID = base.Columns["LoginID"];
                this.columnContactsID = base.Columns["ContactsID"];
                this.columnFullName = base.Columns["FullName"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnMiddleInitial = base.Columns["MiddleInitial"];
                this.columnLastName = base.Columns["LastName"];
                this.columnType = base.Columns["Type"];
                this.columnState = base.Columns["State"];
                this.columnIsSalesman = base.Columns["IsSalesman"];
                this.columnRequestProjectTime = base.Columns["RequestProjectTime"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnSalaried = base.Columns["Salaried"];
                this.columneMail = base.Columns["eMail"];
                this.columnAssignableSRS = base.Columns["AssignableSRS"];
                this.columnJobClassType = base.Columns["JobClassType"];
                this.columnCategory = base.Columns["Category"];
                this.columnPersonalAgencyName = base.Columns["PersonalAgencyName"];
                this.columnIsVacationsManager = base.Columns["IsVacationsManager"];
                this.columnApproveTimesheets = base.Columns["ApproveTimesheets"];
                this.columnBourdenFactor = base.Columns["BourdenFactor"];
                this.columnUSHealthBenefitFactor = base.Columns["USHealthBenefitFactor"];
                this.columnBenefitFactorCad = base.Columns["BenefitFactorCad"];
                this.columnBenefitFactorUsd = base.Columns["BenefitFactorUsd"];
                this.columnCrew = base.Columns["Crew"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnLoginID = new global::System.Data.DataColumn("LoginID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoginID);
                this.columnContactsID = new global::System.Data.DataColumn("ContactsID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactsID);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnMiddleInitial = new global::System.Data.DataColumn("MiddleInitial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiddleInitial);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnIsSalesman = new global::System.Data.DataColumn("IsSalesman", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSalesman);
                this.columnRequestProjectTime = new global::System.Data.DataColumn("RequestProjectTime", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestProjectTime);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnSalaried = new global::System.Data.DataColumn("Salaried", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaried);
                this.columneMail = new global::System.Data.DataColumn("eMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneMail);
                this.columnAssignableSRS = new global::System.Data.DataColumn("AssignableSRS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssignableSRS);
                this.columnJobClassType = new global::System.Data.DataColumn("JobClassType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobClassType);
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnPersonalAgencyName = new global::System.Data.DataColumn("PersonalAgencyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonalAgencyName);
                this.columnIsVacationsManager = new global::System.Data.DataColumn("IsVacationsManager", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsVacationsManager);
                this.columnApproveTimesheets = new global::System.Data.DataColumn("ApproveTimesheets", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApproveTimesheets);
                this.columnBourdenFactor = new global::System.Data.DataColumn("BourdenFactor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBourdenFactor);
                this.columnUSHealthBenefitFactor = new global::System.Data.DataColumn("USHealthBenefitFactor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSHealthBenefitFactor);
                this.columnBenefitFactorCad = new global::System.Data.DataColumn("BenefitFactorCad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenefitFactorCad);
                this.columnBenefitFactorUsd = new global::System.Data.DataColumn("BenefitFactorUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenefitFactorUsd);
                this.columnCrew = new global::System.Data.DataColumn("Crew", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrew);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEmployeeID}, true));
                this.columnEmployeeID.AutoIncrement = true;
                this.columnEmployeeID.AutoIncrementSeed = -1;
                this.columnEmployeeID.AutoIncrementStep = -1;
                this.columnEmployeeID.AllowDBNull = false;
                this.columnEmployeeID.ReadOnly = true;
                this.columnEmployeeID.Unique = true;
                this.columnFullName.AllowDBNull = false;
                this.columnFullName.MaxLength = 100;
                this.columnFirstName.AllowDBNull = false;
                this.columnFirstName.MaxLength = 50;
                this.columnMiddleInitial.MaxLength = 1;
                this.columnLastName.AllowDBNull = false;
                this.columnLastName.MaxLength = 50;
                this.columnType.AllowDBNull = false;
                this.columnType.MaxLength = 25;
                this.columnState.AllowDBNull = false;
                this.columnState.MaxLength = 25;
                this.columnIsSalesman.AllowDBNull = false;
                this.columnRequestProjectTime.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnSalaried.AllowDBNull = false;
                this.columneMail.MaxLength = 100;
                this.columnAssignableSRS.AllowDBNull = false;
                this.columnJobClassType.MaxLength = 50;
                this.columnCategory.AllowDBNull = false;
                this.columnCategory.MaxLength = 25;
                this.columnPersonalAgencyName.MaxLength = 255;
                this.columnIsVacationsManager.AllowDBNull = false;
                this.columnApproveTimesheets.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StandardCostsSetupRow NewStandardCostsSetupRow() {
                return ((StandardCostsSetupRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StandardCostsSetupRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StandardCostsSetupRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StandardCostsSetupRowChanged != null)) {
                    this.StandardCostsSetupRowChanged(this, new StandardCostsSetupRowChangeEvent(((StandardCostsSetupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StandardCostsSetupRowChanging != null)) {
                    this.StandardCostsSetupRowChanging(this, new StandardCostsSetupRowChangeEvent(((StandardCostsSetupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StandardCostsSetupRowDeleted != null)) {
                    this.StandardCostsSetupRowDeleted(this, new StandardCostsSetupRowChangeEvent(((StandardCostsSetupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StandardCostsSetupRowDeleting != null)) {
                    this.StandardCostsSetupRowDeleting(this, new StandardCostsSetupRowChangeEvent(((StandardCostsSetupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStandardCostsSetupRow(StandardCostsSetupRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EmployeeStandardCostsSetupTDS ds = new EmployeeStandardCostsSetupTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StandardCostsSetupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StandardCostsSetupRow : global::System.Data.DataRow {
            
            private StandardCostsSetupDataTable tableStandardCostsSetup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StandardCostsSetupRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStandardCostsSetup = ((StandardCostsSetupDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableStandardCostsSetup.EmployeeIDColumn]));
                }
                set {
                    this[this.tableStandardCostsSetup.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LoginID {
                get {
                    try {
                        return ((int)(this[this.tableStandardCostsSetup.LoginIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoginID\' in table \'StandardCostsSetup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStandardCostsSetup.LoginIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContactsID {
                get {
                    try {
                        return ((int)(this[this.tableStandardCostsSetup.ContactsIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactsID\' in table \'StandardCostsSetup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStandardCostsSetup.ContactsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FullName {
                get {
                    return ((string)(this[this.tableStandardCostsSetup.FullNameColumn]));
                }
                set {
                    this[this.tableStandardCostsSetup.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    return ((string)(this[this.tableStandardCostsSetup.FirstNameColumn]));
                }
                set {
                    this[this.tableStandardCostsSetup.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MiddleInitial {
                get {
                    try {
                        return ((string)(this[this.tableStandardCostsSetup.MiddleInitialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiddleInitial\' in table \'StandardCostsSetup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStandardCostsSetup.MiddleInitialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastName {
                get {
                    return ((string)(this[this.tableStandardCostsSetup.LastNameColumn]));
                }
                set {
                    this[this.tableStandardCostsSetup.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    return ((string)(this[this.tableStandardCostsSetup.TypeColumn]));
                }
                set {
                    this[this.tableStandardCostsSetup.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    return ((string)(this[this.tableStandardCostsSetup.StateColumn]));
                }
                set {
                    this[this.tableStandardCostsSetup.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesman {
                get {
                    return ((bool)(this[this.tableStandardCostsSetup.IsSalesmanColumn]));
                }
                set {
                    this[this.tableStandardCostsSetup.IsSalesmanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RequestProjectTime {
                get {
                    return ((bool)(this[this.tableStandardCostsSetup.RequestProjectTimeColumn]));
                }
                set {
                    this[this.tableStandardCostsSetup.RequestProjectTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableStandardCostsSetup.DeletedColumn]));
                }
                set {
                    this[this.tableStandardCostsSetup.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Salaried {
                get {
                    return ((bool)(this[this.tableStandardCostsSetup.SalariedColumn]));
                }
                set {
                    this[this.tableStandardCostsSetup.SalariedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string eMail {
                get {
                    try {
                        return ((string)(this[this.tableStandardCostsSetup.eMailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'eMail\' in table \'StandardCostsSetup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStandardCostsSetup.eMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AssignableSRS {
                get {
                    return ((bool)(this[this.tableStandardCostsSetup.AssignableSRSColumn]));
                }
                set {
                    this[this.tableStandardCostsSetup.AssignableSRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobClassType {
                get {
                    try {
                        return ((string)(this[this.tableStandardCostsSetup.JobClassTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobClassType\' in table \'StandardCostsSetup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStandardCostsSetup.JobClassTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category {
                get {
                    return ((string)(this[this.tableStandardCostsSetup.CategoryColumn]));
                }
                set {
                    this[this.tableStandardCostsSetup.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PersonalAgencyName {
                get {
                    try {
                        return ((string)(this[this.tableStandardCostsSetup.PersonalAgencyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PersonalAgencyName\' in table \'StandardCostsSetup\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableStandardCostsSetup.PersonalAgencyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacationsManager {
                get {
                    return ((bool)(this[this.tableStandardCostsSetup.IsVacationsManagerColumn]));
                }
                set {
                    this[this.tableStandardCostsSetup.IsVacationsManagerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ApproveTimesheets {
                get {
                    return ((bool)(this[this.tableStandardCostsSetup.ApproveTimesheetsColumn]));
                }
                set {
                    this[this.tableStandardCostsSetup.ApproveTimesheetsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BourdenFactor {
                get {
                    try {
                        return ((decimal)(this[this.tableStandardCostsSetup.BourdenFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BourdenFactor\' in table \'StandardCostsSetup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStandardCostsSetup.BourdenFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USHealthBenefitFactor {
                get {
                    try {
                        return ((decimal)(this[this.tableStandardCostsSetup.USHealthBenefitFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USHealthBenefitFactor\' in table \'StandardCostsSetup\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableStandardCostsSetup.USHealthBenefitFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BenefitFactorCad {
                get {
                    try {
                        return ((decimal)(this[this.tableStandardCostsSetup.BenefitFactorCadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BenefitFactorCad\' in table \'StandardCostsSetup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStandardCostsSetup.BenefitFactorCadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BenefitFactorUsd {
                get {
                    try {
                        return ((decimal)(this[this.tableStandardCostsSetup.BenefitFactorUsdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BenefitFactorUsd\' in table \'StandardCostsSetup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStandardCostsSetup.BenefitFactorUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Crew {
                get {
                    try {
                        return ((string)(this[this.tableStandardCostsSetup.CrewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Crew\' in table \'StandardCostsSetup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStandardCostsSetup.CrewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoginIDNull() {
                return this.IsNull(this.tableStandardCostsSetup.LoginIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoginIDNull() {
                this[this.tableStandardCostsSetup.LoginIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactsIDNull() {
                return this.IsNull(this.tableStandardCostsSetup.ContactsIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactsIDNull() {
                this[this.tableStandardCostsSetup.ContactsIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiddleInitialNull() {
                return this.IsNull(this.tableStandardCostsSetup.MiddleInitialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiddleInitialNull() {
                this[this.tableStandardCostsSetup.MiddleInitialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IseMailNull() {
                return this.IsNull(this.tableStandardCostsSetup.eMailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeteMailNull() {
                this[this.tableStandardCostsSetup.eMailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobClassTypeNull() {
                return this.IsNull(this.tableStandardCostsSetup.JobClassTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobClassTypeNull() {
                this[this.tableStandardCostsSetup.JobClassTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonalAgencyNameNull() {
                return this.IsNull(this.tableStandardCostsSetup.PersonalAgencyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPersonalAgencyNameNull() {
                this[this.tableStandardCostsSetup.PersonalAgencyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBourdenFactorNull() {
                return this.IsNull(this.tableStandardCostsSetup.BourdenFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBourdenFactorNull() {
                this[this.tableStandardCostsSetup.BourdenFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSHealthBenefitFactorNull() {
                return this.IsNull(this.tableStandardCostsSetup.USHealthBenefitFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSHealthBenefitFactorNull() {
                this[this.tableStandardCostsSetup.USHealthBenefitFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBenefitFactorCadNull() {
                return this.IsNull(this.tableStandardCostsSetup.BenefitFactorCadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBenefitFactorCadNull() {
                this[this.tableStandardCostsSetup.BenefitFactorCadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBenefitFactorUsdNull() {
                return this.IsNull(this.tableStandardCostsSetup.BenefitFactorUsdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBenefitFactorUsdNull() {
                this[this.tableStandardCostsSetup.BenefitFactorUsdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCrewNull() {
                return this.IsNull(this.tableStandardCostsSetup.CrewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCrewNull() {
                this[this.tableStandardCostsSetup.CrewColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StandardCostsSetupRowChangeEvent : global::System.EventArgs {
            
            private StandardCostsSetupRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StandardCostsSetupRowChangeEvent(StandardCostsSetupRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StandardCostsSetupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591