//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3643
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.Resources.Employees {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("EmployeesAddTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class EmployeesAddTDS : global::System.Data.DataSet {
        
        private EmployeeAddDataTable tableEmployeeAdd;
        
        private EmployeeAddTypeHistoryDataTable tableEmployeeAddTypeHistory;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EmployeesAddTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected EmployeesAddTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["EmployeeAdd"] != null)) {
                    base.Tables.Add(new EmployeeAddDataTable(ds.Tables["EmployeeAdd"]));
                }
                if ((ds.Tables["EmployeeAddTypeHistory"] != null)) {
                    base.Tables.Add(new EmployeeAddTypeHistoryDataTable(ds.Tables["EmployeeAddTypeHistory"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EmployeeAddDataTable EmployeeAdd {
            get {
                return this.tableEmployeeAdd;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EmployeeAddTypeHistoryDataTable EmployeeAddTypeHistory {
            get {
                return this.tableEmployeeAddTypeHistory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            EmployeesAddTDS cln = ((EmployeesAddTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["EmployeeAdd"] != null)) {
                    base.Tables.Add(new EmployeeAddDataTable(ds.Tables["EmployeeAdd"]));
                }
                if ((ds.Tables["EmployeeAddTypeHistory"] != null)) {
                    base.Tables.Add(new EmployeeAddTypeHistoryDataTable(ds.Tables["EmployeeAddTypeHistory"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableEmployeeAdd = ((EmployeeAddDataTable)(base.Tables["EmployeeAdd"]));
            if ((initTable == true)) {
                if ((this.tableEmployeeAdd != null)) {
                    this.tableEmployeeAdd.InitVars();
                }
            }
            this.tableEmployeeAddTypeHistory = ((EmployeeAddTypeHistoryDataTable)(base.Tables["EmployeeAddTypeHistory"]));
            if ((initTable == true)) {
                if ((this.tableEmployeeAddTypeHistory != null)) {
                    this.tableEmployeeAddTypeHistory.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "EmployeesAddTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/EmployeesAddTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEmployeeAdd = new EmployeeAddDataTable();
            base.Tables.Add(this.tableEmployeeAdd);
            this.tableEmployeeAddTypeHistory = new EmployeeAddTypeHistoryDataTable();
            base.Tables.Add(this.tableEmployeeAddTypeHistory);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEmployeeAdd() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEmployeeAddTypeHistory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            EmployeesAddTDS ds = new EmployeesAddTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void EmployeeAddRowChangeEventHandler(object sender, EmployeeAddRowChangeEvent e);
        
        public delegate void EmployeeAddTypeHistoryRowChangeEventHandler(object sender, EmployeeAddTypeHistoryRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EmployeeAddDataTable : global::System.Data.TypedTableBase<EmployeeAddRow> {
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnLoginID;
            
            private global::System.Data.DataColumn columnContactsID;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnMiddleInitial;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnIsSalesman;
            
            private global::System.Data.DataColumn columnRequestProjectTime;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnSalaried;
            
            private global::System.Data.DataColumn columneMail;
            
            private global::System.Data.DataColumn columnAssignableSRS;
            
            private global::System.Data.DataColumn columnInDatabase;
            
            private global::System.Data.DataColumn columnJobClassType;
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnPersonalAgencyName;
            
            private global::System.Data.DataColumn columnIsVacationsManager;
            
            private global::System.Data.DataColumn columnApproveTimesheets;
            
            private global::System.Data.DataColumn columnBourdenFactor;
            
            private global::System.Data.DataColumn columnUSHealthBenefitFactor;
            
            private global::System.Data.DataColumn columnBenefitFactorCad;
            
            private global::System.Data.DataColumn columnBenefitFactorUsd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAddDataTable() {
                this.TableName = "EmployeeAdd";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EmployeeAddDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EmployeeAddDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LoginIDColumn {
                get {
                    return this.columnLoginID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactsIDColumn {
                get {
                    return this.columnContactsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiddleInitialColumn {
                get {
                    return this.columnMiddleInitial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsSalesmanColumn {
                get {
                    return this.columnIsSalesman;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestProjectTimeColumn {
                get {
                    return this.columnRequestProjectTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalariedColumn {
                get {
                    return this.columnSalaried;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn eMailColumn {
                get {
                    return this.columneMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssignableSRSColumn {
                get {
                    return this.columnAssignableSRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InDatabaseColumn {
                get {
                    return this.columnInDatabase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobClassTypeColumn {
                get {
                    return this.columnJobClassType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PersonalAgencyNameColumn {
                get {
                    return this.columnPersonalAgencyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsVacationsManagerColumn {
                get {
                    return this.columnIsVacationsManager;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApproveTimesheetsColumn {
                get {
                    return this.columnApproveTimesheets;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BourdenFactorColumn {
                get {
                    return this.columnBourdenFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USHealthBenefitFactorColumn {
                get {
                    return this.columnUSHealthBenefitFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BenefitFactorCadColumn {
                get {
                    return this.columnBenefitFactorCad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BenefitFactorUsdColumn {
                get {
                    return this.columnBenefitFactorUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAddRow this[int index] {
                get {
                    return ((EmployeeAddRow)(this.Rows[index]));
                }
            }
            
            public event EmployeeAddRowChangeEventHandler EmployeeAddRowChanging;
            
            public event EmployeeAddRowChangeEventHandler EmployeeAddRowChanged;
            
            public event EmployeeAddRowChangeEventHandler EmployeeAddRowDeleting;
            
            public event EmployeeAddRowChangeEventHandler EmployeeAddRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEmployeeAddRow(EmployeeAddRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAddRow AddEmployeeAddRow(
                        int LoginID, 
                        int ContactsID, 
                        string FullName, 
                        string FirstName, 
                        string MiddleInitial, 
                        string LastName, 
                        string Type, 
                        string State, 
                        bool IsSalesman, 
                        bool RequestProjectTime, 
                        bool Deleted, 
                        bool Salaried, 
                        string eMail, 
                        bool AssignableSRS, 
                        bool InDatabase, 
                        string JobClassType, 
                        string Category, 
                        string PersonalAgencyName, 
                        bool IsVacationsManager, 
                        bool ApproveTimesheets, 
                        decimal BourdenFactor, 
                        decimal USHealthBenefitFactor, 
                        decimal BenefitFactorCad, 
                        decimal BenefitFactorUsd) {
                EmployeeAddRow rowEmployeeAddRow = ((EmployeeAddRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        LoginID,
                        ContactsID,
                        FullName,
                        FirstName,
                        MiddleInitial,
                        LastName,
                        Type,
                        State,
                        IsSalesman,
                        RequestProjectTime,
                        Deleted,
                        Salaried,
                        eMail,
                        AssignableSRS,
                        InDatabase,
                        JobClassType,
                        Category,
                        PersonalAgencyName,
                        IsVacationsManager,
                        ApproveTimesheets,
                        BourdenFactor,
                        USHealthBenefitFactor,
                        BenefitFactorCad,
                        BenefitFactorUsd};
                rowEmployeeAddRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEmployeeAddRow);
                return rowEmployeeAddRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAddRow FindByEmployeeID(int EmployeeID) {
                return ((EmployeeAddRow)(this.Rows.Find(new object[] {
                            EmployeeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EmployeeAddDataTable cln = ((EmployeeAddDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EmployeeAddDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnLoginID = base.Columns["LoginID"];
                this.columnContactsID = base.Columns["ContactsID"];
                this.columnFullName = base.Columns["FullName"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnMiddleInitial = base.Columns["MiddleInitial"];
                this.columnLastName = base.Columns["LastName"];
                this.columnType = base.Columns["Type"];
                this.columnState = base.Columns["State"];
                this.columnIsSalesman = base.Columns["IsSalesman"];
                this.columnRequestProjectTime = base.Columns["RequestProjectTime"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnSalaried = base.Columns["Salaried"];
                this.columneMail = base.Columns["eMail"];
                this.columnAssignableSRS = base.Columns["AssignableSRS"];
                this.columnInDatabase = base.Columns["InDatabase"];
                this.columnJobClassType = base.Columns["JobClassType"];
                this.columnCategory = base.Columns["Category"];
                this.columnPersonalAgencyName = base.Columns["PersonalAgencyName"];
                this.columnIsVacationsManager = base.Columns["IsVacationsManager"];
                this.columnApproveTimesheets = base.Columns["ApproveTimesheets"];
                this.columnBourdenFactor = base.Columns["BourdenFactor"];
                this.columnUSHealthBenefitFactor = base.Columns["USHealthBenefitFactor"];
                this.columnBenefitFactorCad = base.Columns["BenefitFactorCad"];
                this.columnBenefitFactorUsd = base.Columns["BenefitFactorUsd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnLoginID = new global::System.Data.DataColumn("LoginID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoginID);
                this.columnContactsID = new global::System.Data.DataColumn("ContactsID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactsID);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnMiddleInitial = new global::System.Data.DataColumn("MiddleInitial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiddleInitial);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnIsSalesman = new global::System.Data.DataColumn("IsSalesman", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSalesman);
                this.columnRequestProjectTime = new global::System.Data.DataColumn("RequestProjectTime", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestProjectTime);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnSalaried = new global::System.Data.DataColumn("Salaried", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaried);
                this.columneMail = new global::System.Data.DataColumn("eMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneMail);
                this.columnAssignableSRS = new global::System.Data.DataColumn("AssignableSRS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssignableSRS);
                this.columnInDatabase = new global::System.Data.DataColumn("InDatabase", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInDatabase);
                this.columnJobClassType = new global::System.Data.DataColumn("JobClassType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobClassType);
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnPersonalAgencyName = new global::System.Data.DataColumn("PersonalAgencyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonalAgencyName);
                this.columnIsVacationsManager = new global::System.Data.DataColumn("IsVacationsManager", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsVacationsManager);
                this.columnApproveTimesheets = new global::System.Data.DataColumn("ApproveTimesheets", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApproveTimesheets);
                this.columnBourdenFactor = new global::System.Data.DataColumn("BourdenFactor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBourdenFactor);
                this.columnUSHealthBenefitFactor = new global::System.Data.DataColumn("USHealthBenefitFactor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSHealthBenefitFactor);
                this.columnBenefitFactorCad = new global::System.Data.DataColumn("BenefitFactorCad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenefitFactorCad);
                this.columnBenefitFactorUsd = new global::System.Data.DataColumn("BenefitFactorUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenefitFactorUsd);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEmployeeID}, true));
                this.columnEmployeeID.AutoIncrement = true;
                this.columnEmployeeID.AutoIncrementSeed = -1;
                this.columnEmployeeID.AutoIncrementStep = -1;
                this.columnEmployeeID.AllowDBNull = false;
                this.columnEmployeeID.ReadOnly = true;
                this.columnEmployeeID.Unique = true;
                this.columnFullName.AllowDBNull = false;
                this.columnFullName.MaxLength = 100;
                this.columnFirstName.AllowDBNull = false;
                this.columnFirstName.MaxLength = 50;
                this.columnMiddleInitial.MaxLength = 1;
                this.columnLastName.AllowDBNull = false;
                this.columnLastName.MaxLength = 50;
                this.columnType.AllowDBNull = false;
                this.columnType.MaxLength = 25;
                this.columnState.AllowDBNull = false;
                this.columnState.MaxLength = 25;
                this.columnIsSalesman.AllowDBNull = false;
                this.columnRequestProjectTime.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnSalaried.AllowDBNull = false;
                this.columneMail.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAddRow NewEmployeeAddRow() {
                return ((EmployeeAddRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EmployeeAddRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EmployeeAddRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EmployeeAddRowChanged != null)) {
                    this.EmployeeAddRowChanged(this, new EmployeeAddRowChangeEvent(((EmployeeAddRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EmployeeAddRowChanging != null)) {
                    this.EmployeeAddRowChanging(this, new EmployeeAddRowChangeEvent(((EmployeeAddRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EmployeeAddRowDeleted != null)) {
                    this.EmployeeAddRowDeleted(this, new EmployeeAddRowChangeEvent(((EmployeeAddRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EmployeeAddRowDeleting != null)) {
                    this.EmployeeAddRowDeleting(this, new EmployeeAddRowChangeEvent(((EmployeeAddRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEmployeeAddRow(EmployeeAddRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EmployeesAddTDS ds = new EmployeesAddTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EmployeeAddDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EmployeeAddTypeHistoryDataTable : global::System.Data.TypedTableBase<EmployeeAddTypeHistoryRow> {
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnInDatabase;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAddTypeHistoryDataTable() {
                this.TableName = "EmployeeAddTypeHistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EmployeeAddTypeHistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EmployeeAddTypeHistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InDatabaseColumn {
                get {
                    return this.columnInDatabase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAddTypeHistoryRow this[int index] {
                get {
                    return ((EmployeeAddTypeHistoryRow)(this.Rows[index]));
                }
            }
            
            public event EmployeeAddTypeHistoryRowChangeEventHandler EmployeeAddTypeHistoryRowChanging;
            
            public event EmployeeAddTypeHistoryRowChangeEventHandler EmployeeAddTypeHistoryRowChanged;
            
            public event EmployeeAddTypeHistoryRowChangeEventHandler EmployeeAddTypeHistoryRowDeleting;
            
            public event EmployeeAddTypeHistoryRowChangeEventHandler EmployeeAddTypeHistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEmployeeAddTypeHistoryRow(EmployeeAddTypeHistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAddTypeHistoryRow AddEmployeeAddTypeHistoryRow(int EmployeeID, int RefID, System.DateTime Date, string Type, bool Deleted, int COMPANY_ID, bool InDatabase) {
                EmployeeAddTypeHistoryRow rowEmployeeAddTypeHistoryRow = ((EmployeeAddTypeHistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmployeeID,
                        RefID,
                        Date,
                        Type,
                        Deleted,
                        COMPANY_ID,
                        InDatabase};
                rowEmployeeAddTypeHistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEmployeeAddTypeHistoryRow);
                return rowEmployeeAddTypeHistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAddTypeHistoryRow FindByEmployeeIDRefID(int EmployeeID, int RefID) {
                return ((EmployeeAddTypeHistoryRow)(this.Rows.Find(new object[] {
                            EmployeeID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EmployeeAddTypeHistoryDataTable cln = ((EmployeeAddTypeHistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EmployeeAddTypeHistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnDate = base.Columns["Date"];
                this.columnType = base.Columns["Type"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnInDatabase = base.Columns["InDatabase"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnInDatabase = new global::System.Data.DataColumn("InDatabase", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInDatabase);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEmployeeID,
                                this.columnRefID}, true));
                this.columnEmployeeID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnDate.AllowDBNull = false;
                this.columnType.AllowDBNull = false;
                this.columnType.MaxLength = 25;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAddTypeHistoryRow NewEmployeeAddTypeHistoryRow() {
                return ((EmployeeAddTypeHistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EmployeeAddTypeHistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EmployeeAddTypeHistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EmployeeAddTypeHistoryRowChanged != null)) {
                    this.EmployeeAddTypeHistoryRowChanged(this, new EmployeeAddTypeHistoryRowChangeEvent(((EmployeeAddTypeHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EmployeeAddTypeHistoryRowChanging != null)) {
                    this.EmployeeAddTypeHistoryRowChanging(this, new EmployeeAddTypeHistoryRowChangeEvent(((EmployeeAddTypeHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EmployeeAddTypeHistoryRowDeleted != null)) {
                    this.EmployeeAddTypeHistoryRowDeleted(this, new EmployeeAddTypeHistoryRowChangeEvent(((EmployeeAddTypeHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EmployeeAddTypeHistoryRowDeleting != null)) {
                    this.EmployeeAddTypeHistoryRowDeleting(this, new EmployeeAddTypeHistoryRowChangeEvent(((EmployeeAddTypeHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEmployeeAddTypeHistoryRow(EmployeeAddTypeHistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EmployeesAddTDS ds = new EmployeesAddTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EmployeeAddTypeHistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EmployeeAddRow : global::System.Data.DataRow {
            
            private EmployeeAddDataTable tableEmployeeAdd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EmployeeAddRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEmployeeAdd = ((EmployeeAddDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableEmployeeAdd.EmployeeIDColumn]));
                }
                set {
                    this[this.tableEmployeeAdd.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LoginID {
                get {
                    try {
                        return ((int)(this[this.tableEmployeeAdd.LoginIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoginID\' in table \'EmployeeAdd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeAdd.LoginIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContactsID {
                get {
                    try {
                        return ((int)(this[this.tableEmployeeAdd.ContactsIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactsID\' in table \'EmployeeAdd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeAdd.ContactsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FullName {
                get {
                    return ((string)(this[this.tableEmployeeAdd.FullNameColumn]));
                }
                set {
                    this[this.tableEmployeeAdd.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    return ((string)(this[this.tableEmployeeAdd.FirstNameColumn]));
                }
                set {
                    this[this.tableEmployeeAdd.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MiddleInitial {
                get {
                    try {
                        return ((string)(this[this.tableEmployeeAdd.MiddleInitialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiddleInitial\' in table \'EmployeeAdd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeAdd.MiddleInitialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastName {
                get {
                    return ((string)(this[this.tableEmployeeAdd.LastNameColumn]));
                }
                set {
                    this[this.tableEmployeeAdd.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    return ((string)(this[this.tableEmployeeAdd.TypeColumn]));
                }
                set {
                    this[this.tableEmployeeAdd.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    return ((string)(this[this.tableEmployeeAdd.StateColumn]));
                }
                set {
                    this[this.tableEmployeeAdd.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesman {
                get {
                    return ((bool)(this[this.tableEmployeeAdd.IsSalesmanColumn]));
                }
                set {
                    this[this.tableEmployeeAdd.IsSalesmanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RequestProjectTime {
                get {
                    return ((bool)(this[this.tableEmployeeAdd.RequestProjectTimeColumn]));
                }
                set {
                    this[this.tableEmployeeAdd.RequestProjectTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableEmployeeAdd.DeletedColumn]));
                }
                set {
                    this[this.tableEmployeeAdd.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Salaried {
                get {
                    return ((bool)(this[this.tableEmployeeAdd.SalariedColumn]));
                }
                set {
                    this[this.tableEmployeeAdd.SalariedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string eMail {
                get {
                    try {
                        return ((string)(this[this.tableEmployeeAdd.eMailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'eMail\' in table \'EmployeeAdd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeAdd.eMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AssignableSRS {
                get {
                    try {
                        return ((bool)(this[this.tableEmployeeAdd.AssignableSRSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssignableSRS\' in table \'EmployeeAdd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeAdd.AssignableSRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InDatabase {
                get {
                    try {
                        return ((bool)(this[this.tableEmployeeAdd.InDatabaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InDatabase\' in table \'EmployeeAdd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeAdd.InDatabaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobClassType {
                get {
                    try {
                        return ((string)(this[this.tableEmployeeAdd.JobClassTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobClassType\' in table \'EmployeeAdd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeAdd.JobClassTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category {
                get {
                    try {
                        return ((string)(this[this.tableEmployeeAdd.CategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category\' in table \'EmployeeAdd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeAdd.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PersonalAgencyName {
                get {
                    try {
                        return ((string)(this[this.tableEmployeeAdd.PersonalAgencyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PersonalAgencyName\' in table \'EmployeeAdd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeAdd.PersonalAgencyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacationsManager {
                get {
                    try {
                        return ((bool)(this[this.tableEmployeeAdd.IsVacationsManagerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsVacationsManager\' in table \'EmployeeAdd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeAdd.IsVacationsManagerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ApproveTimesheets {
                get {
                    try {
                        return ((bool)(this[this.tableEmployeeAdd.ApproveTimesheetsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApproveTimesheets\' in table \'EmployeeAdd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeAdd.ApproveTimesheetsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BourdenFactor {
                get {
                    try {
                        return ((decimal)(this[this.tableEmployeeAdd.BourdenFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BourdenFactor\' in table \'EmployeeAdd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeAdd.BourdenFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USHealthBenefitFactor {
                get {
                    try {
                        return ((decimal)(this[this.tableEmployeeAdd.USHealthBenefitFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USHealthBenefitFactor\' in table \'EmployeeAdd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeAdd.USHealthBenefitFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BenefitFactorCad {
                get {
                    try {
                        return ((decimal)(this[this.tableEmployeeAdd.BenefitFactorCadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BenefitFactorCad\' in table \'EmployeeAdd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeAdd.BenefitFactorCadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BenefitFactorUsd {
                get {
                    try {
                        return ((decimal)(this[this.tableEmployeeAdd.BenefitFactorUsdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BenefitFactorUsd\' in table \'EmployeeAdd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeAdd.BenefitFactorUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoginIDNull() {
                return this.IsNull(this.tableEmployeeAdd.LoginIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoginIDNull() {
                this[this.tableEmployeeAdd.LoginIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactsIDNull() {
                return this.IsNull(this.tableEmployeeAdd.ContactsIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactsIDNull() {
                this[this.tableEmployeeAdd.ContactsIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiddleInitialNull() {
                return this.IsNull(this.tableEmployeeAdd.MiddleInitialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiddleInitialNull() {
                this[this.tableEmployeeAdd.MiddleInitialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IseMailNull() {
                return this.IsNull(this.tableEmployeeAdd.eMailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeteMailNull() {
                this[this.tableEmployeeAdd.eMailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssignableSRSNull() {
                return this.IsNull(this.tableEmployeeAdd.AssignableSRSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssignableSRSNull() {
                this[this.tableEmployeeAdd.AssignableSRSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInDatabaseNull() {
                return this.IsNull(this.tableEmployeeAdd.InDatabaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInDatabaseNull() {
                this[this.tableEmployeeAdd.InDatabaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobClassTypeNull() {
                return this.IsNull(this.tableEmployeeAdd.JobClassTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobClassTypeNull() {
                this[this.tableEmployeeAdd.JobClassTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNull() {
                return this.IsNull(this.tableEmployeeAdd.CategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNull() {
                this[this.tableEmployeeAdd.CategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonalAgencyNameNull() {
                return this.IsNull(this.tableEmployeeAdd.PersonalAgencyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPersonalAgencyNameNull() {
                this[this.tableEmployeeAdd.PersonalAgencyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsVacationsManagerNull() {
                return this.IsNull(this.tableEmployeeAdd.IsVacationsManagerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsVacationsManagerNull() {
                this[this.tableEmployeeAdd.IsVacationsManagerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApproveTimesheetsNull() {
                return this.IsNull(this.tableEmployeeAdd.ApproveTimesheetsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApproveTimesheetsNull() {
                this[this.tableEmployeeAdd.ApproveTimesheetsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBourdenFactorNull() {
                return this.IsNull(this.tableEmployeeAdd.BourdenFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBourdenFactorNull() {
                this[this.tableEmployeeAdd.BourdenFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSHealthBenefitFactorNull() {
                return this.IsNull(this.tableEmployeeAdd.USHealthBenefitFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSHealthBenefitFactorNull() {
                this[this.tableEmployeeAdd.USHealthBenefitFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBenefitFactorCadNull() {
                return this.IsNull(this.tableEmployeeAdd.BenefitFactorCadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBenefitFactorCadNull() {
                this[this.tableEmployeeAdd.BenefitFactorCadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBenefitFactorUsdNull() {
                return this.IsNull(this.tableEmployeeAdd.BenefitFactorUsdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBenefitFactorUsdNull() {
                this[this.tableEmployeeAdd.BenefitFactorUsdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EmployeeAddTypeHistoryRow : global::System.Data.DataRow {
            
            private EmployeeAddTypeHistoryDataTable tableEmployeeAddTypeHistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EmployeeAddTypeHistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEmployeeAddTypeHistory = ((EmployeeAddTypeHistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableEmployeeAddTypeHistory.EmployeeIDColumn]));
                }
                set {
                    this[this.tableEmployeeAddTypeHistory.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableEmployeeAddTypeHistory.RefIDColumn]));
                }
                set {
                    this[this.tableEmployeeAddTypeHistory.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    return ((global::System.DateTime)(this[this.tableEmployeeAddTypeHistory.DateColumn]));
                }
                set {
                    this[this.tableEmployeeAddTypeHistory.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    return ((string)(this[this.tableEmployeeAddTypeHistory.TypeColumn]));
                }
                set {
                    this[this.tableEmployeeAddTypeHistory.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableEmployeeAddTypeHistory.DeletedColumn]));
                }
                set {
                    this[this.tableEmployeeAddTypeHistory.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableEmployeeAddTypeHistory.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableEmployeeAddTypeHistory.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InDatabase {
                get {
                    try {
                        return ((bool)(this[this.tableEmployeeAddTypeHistory.InDatabaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InDatabase\' in table \'EmployeeAddTypeHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeAddTypeHistory.InDatabaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInDatabaseNull() {
                return this.IsNull(this.tableEmployeeAddTypeHistory.InDatabaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInDatabaseNull() {
                this[this.tableEmployeeAddTypeHistory.InDatabaseColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EmployeeAddRowChangeEvent : global::System.EventArgs {
            
            private EmployeeAddRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAddRowChangeEvent(EmployeeAddRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAddRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EmployeeAddTypeHistoryRowChangeEvent : global::System.EventArgs {
            
            private EmployeeAddTypeHistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAddTypeHistoryRowChangeEvent(EmployeeAddTypeHistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAddTypeHistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591