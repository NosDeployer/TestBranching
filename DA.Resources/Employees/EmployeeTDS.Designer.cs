//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3643
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.Resources.Employees {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("EmployeeTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class EmployeeTDS : global::System.Data.DataSet {
        
        private LFS_SALESMANDataTable tableLFS_SALESMAN;
        
        private LFS_RESOURCES_EMPLOYEE_NOTESDataTable tableLFS_RESOURCES_EMPLOYEE_NOTES;
        
        private LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESDataTable tableLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES;
        
        private LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSDataTable tableLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS;
        
        private LFS_RESOURCES_EMPLOYEE_COST_HISTORYDataTable tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY;
        
        private LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSDataTable tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS;
        
        private LFS_RESOURCES_EMPLOYEEDataTable tableLFS_RESOURCES_EMPLOYEE;
        
        private LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYDataTable tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EmployeeTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected EmployeeTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LFS_SALESMAN"] != null)) {
                    base.Tables.Add(new LFS_SALESMANDataTable(ds.Tables["LFS_SALESMAN"]));
                }
                if ((ds.Tables["LFS_RESOURCES_EMPLOYEE_NOTES"] != null)) {
                    base.Tables.Add(new LFS_RESOURCES_EMPLOYEE_NOTESDataTable(ds.Tables["LFS_RESOURCES_EMPLOYEE_NOTES"]));
                }
                if ((ds.Tables["LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES"] != null)) {
                    base.Tables.Add(new LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESDataTable(ds.Tables["LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES"]));
                }
                if ((ds.Tables["LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS"] != null)) {
                    base.Tables.Add(new LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSDataTable(ds.Tables["LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS"]));
                }
                if ((ds.Tables["LFS_RESOURCES_EMPLOYEE_COST_HISTORY"] != null)) {
                    base.Tables.Add(new LFS_RESOURCES_EMPLOYEE_COST_HISTORYDataTable(ds.Tables["LFS_RESOURCES_EMPLOYEE_COST_HISTORY"]));
                }
                if ((ds.Tables["LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS"] != null)) {
                    base.Tables.Add(new LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSDataTable(ds.Tables["LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS"]));
                }
                if ((ds.Tables["LFS_RESOURCES_EMPLOYEE"] != null)) {
                    base.Tables.Add(new LFS_RESOURCES_EMPLOYEEDataTable(ds.Tables["LFS_RESOURCES_EMPLOYEE"]));
                }
                if ((ds.Tables["LFS_RESOURCES_EMPLOYEE_TYPE_HISTORY"] != null)) {
                    base.Tables.Add(new LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYDataTable(ds.Tables["LFS_RESOURCES_EMPLOYEE_TYPE_HISTORY"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_SALESMANDataTable LFS_SALESMAN {
            get {
                return this.tableLFS_SALESMAN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_RESOURCES_EMPLOYEE_NOTESDataTable LFS_RESOURCES_EMPLOYEE_NOTES {
            get {
                return this.tableLFS_RESOURCES_EMPLOYEE_NOTES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESDataTable LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES {
            get {
                return this.tableLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSDataTable LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS {
            get {
                return this.tableLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_RESOURCES_EMPLOYEE_COST_HISTORYDataTable LFS_RESOURCES_EMPLOYEE_COST_HISTORY {
            get {
                return this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSDataTable LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS {
            get {
                return this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_RESOURCES_EMPLOYEEDataTable LFS_RESOURCES_EMPLOYEE {
            get {
                return this.tableLFS_RESOURCES_EMPLOYEE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYDataTable LFS_RESOURCES_EMPLOYEE_TYPE_HISTORY {
            get {
                return this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            EmployeeTDS cln = ((EmployeeTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LFS_SALESMAN"] != null)) {
                    base.Tables.Add(new LFS_SALESMANDataTable(ds.Tables["LFS_SALESMAN"]));
                }
                if ((ds.Tables["LFS_RESOURCES_EMPLOYEE_NOTES"] != null)) {
                    base.Tables.Add(new LFS_RESOURCES_EMPLOYEE_NOTESDataTable(ds.Tables["LFS_RESOURCES_EMPLOYEE_NOTES"]));
                }
                if ((ds.Tables["LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES"] != null)) {
                    base.Tables.Add(new LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESDataTable(ds.Tables["LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES"]));
                }
                if ((ds.Tables["LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS"] != null)) {
                    base.Tables.Add(new LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSDataTable(ds.Tables["LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS"]));
                }
                if ((ds.Tables["LFS_RESOURCES_EMPLOYEE_COST_HISTORY"] != null)) {
                    base.Tables.Add(new LFS_RESOURCES_EMPLOYEE_COST_HISTORYDataTable(ds.Tables["LFS_RESOURCES_EMPLOYEE_COST_HISTORY"]));
                }
                if ((ds.Tables["LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS"] != null)) {
                    base.Tables.Add(new LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSDataTable(ds.Tables["LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS"]));
                }
                if ((ds.Tables["LFS_RESOURCES_EMPLOYEE"] != null)) {
                    base.Tables.Add(new LFS_RESOURCES_EMPLOYEEDataTable(ds.Tables["LFS_RESOURCES_EMPLOYEE"]));
                }
                if ((ds.Tables["LFS_RESOURCES_EMPLOYEE_TYPE_HISTORY"] != null)) {
                    base.Tables.Add(new LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYDataTable(ds.Tables["LFS_RESOURCES_EMPLOYEE_TYPE_HISTORY"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableLFS_SALESMAN = ((LFS_SALESMANDataTable)(base.Tables["LFS_SALESMAN"]));
            if ((initTable == true)) {
                if ((this.tableLFS_SALESMAN != null)) {
                    this.tableLFS_SALESMAN.InitVars();
                }
            }
            this.tableLFS_RESOURCES_EMPLOYEE_NOTES = ((LFS_RESOURCES_EMPLOYEE_NOTESDataTable)(base.Tables["LFS_RESOURCES_EMPLOYEE_NOTES"]));
            if ((initTable == true)) {
                if ((this.tableLFS_RESOURCES_EMPLOYEE_NOTES != null)) {
                    this.tableLFS_RESOURCES_EMPLOYEE_NOTES.InitVars();
                }
            }
            this.tableLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES = ((LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESDataTable)(base.Tables["LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES"]));
            if ((initTable == true)) {
                if ((this.tableLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES != null)) {
                    this.tableLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES.InitVars();
                }
            }
            this.tableLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS = ((LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSDataTable)(base.Tables["LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS"]));
            if ((initTable == true)) {
                if ((this.tableLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS != null)) {
                    this.tableLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS.InitVars();
                }
            }
            this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY = ((LFS_RESOURCES_EMPLOYEE_COST_HISTORYDataTable)(base.Tables["LFS_RESOURCES_EMPLOYEE_COST_HISTORY"]));
            if ((initTable == true)) {
                if ((this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY != null)) {
                    this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.InitVars();
                }
            }
            this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS = ((LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSDataTable)(base.Tables["LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS"]));
            if ((initTable == true)) {
                if ((this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS != null)) {
                    this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.InitVars();
                }
            }
            this.tableLFS_RESOURCES_EMPLOYEE = ((LFS_RESOURCES_EMPLOYEEDataTable)(base.Tables["LFS_RESOURCES_EMPLOYEE"]));
            if ((initTable == true)) {
                if ((this.tableLFS_RESOURCES_EMPLOYEE != null)) {
                    this.tableLFS_RESOURCES_EMPLOYEE.InitVars();
                }
            }
            this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY = ((LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYDataTable)(base.Tables["LFS_RESOURCES_EMPLOYEE_TYPE_HISTORY"]));
            if ((initTable == true)) {
                if ((this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY != null)) {
                    this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "EmployeeTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/EmployeeTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLFS_SALESMAN = new LFS_SALESMANDataTable();
            base.Tables.Add(this.tableLFS_SALESMAN);
            this.tableLFS_RESOURCES_EMPLOYEE_NOTES = new LFS_RESOURCES_EMPLOYEE_NOTESDataTable();
            base.Tables.Add(this.tableLFS_RESOURCES_EMPLOYEE_NOTES);
            this.tableLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES = new LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESDataTable();
            base.Tables.Add(this.tableLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES);
            this.tableLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS = new LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSDataTable();
            base.Tables.Add(this.tableLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS);
            this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY = new LFS_RESOURCES_EMPLOYEE_COST_HISTORYDataTable();
            base.Tables.Add(this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY);
            this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS = new LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSDataTable();
            base.Tables.Add(this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS);
            this.tableLFS_RESOURCES_EMPLOYEE = new LFS_RESOURCES_EMPLOYEEDataTable();
            base.Tables.Add(this.tableLFS_RESOURCES_EMPLOYEE);
            this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY = new LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYDataTable();
            base.Tables.Add(this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_SALESMAN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_RESOURCES_EMPLOYEE_NOTES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_RESOURCES_EMPLOYEE_COST_HISTORY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_RESOURCES_EMPLOYEE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            EmployeeTDS ds = new EmployeeTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void LFS_SALESMANRowChangeEventHandler(object sender, LFS_SALESMANRowChangeEvent e);
        
        public delegate void LFS_RESOURCES_EMPLOYEE_NOTESRowChangeEventHandler(object sender, LFS_RESOURCES_EMPLOYEE_NOTESRowChangeEvent e);
        
        public delegate void LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowChangeEventHandler(object sender, LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowChangeEvent e);
        
        public delegate void LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowChangeEventHandler(object sender, LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowChangeEvent e);
        
        public delegate void LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowChangeEventHandler(object sender, LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowChangeEvent e);
        
        public delegate void LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowChangeEventHandler(object sender, LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowChangeEvent e);
        
        public delegate void LFS_RESOURCES_EMPLOYEERowChangeEventHandler(object sender, LFS_RESOURCES_EMPLOYEERowChangeEvent e);
        
        public delegate void LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowChangeEventHandler(object sender, LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_SALESMANDataTable : global::System.Data.TypedTableBase<LFS_SALESMANRow> {
            
            private global::System.Data.DataColumn columnSalesmanID;
            
            private global::System.Data.DataColumn columnIdForProjects;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_SALESMANDataTable() {
                this.TableName = "LFS_SALESMAN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_SALESMANDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_SALESMANDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesmanIDColumn {
                get {
                    return this.columnSalesmanID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdForProjectsColumn {
                get {
                    return this.columnIdForProjects;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_SALESMANRow this[int index] {
                get {
                    return ((LFS_SALESMANRow)(this.Rows[index]));
                }
            }
            
            public event LFS_SALESMANRowChangeEventHandler LFS_SALESMANRowChanging;
            
            public event LFS_SALESMANRowChangeEventHandler LFS_SALESMANRowChanged;
            
            public event LFS_SALESMANRowChangeEventHandler LFS_SALESMANRowDeleting;
            
            public event LFS_SALESMANRowChangeEventHandler LFS_SALESMANRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_SALESMANRow(LFS_SALESMANRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_SALESMANRow AddLFS_SALESMANRow(int SalesmanID, string IdForProjects) {
                LFS_SALESMANRow rowLFS_SALESMANRow = ((LFS_SALESMANRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SalesmanID,
                        IdForProjects};
                rowLFS_SALESMANRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_SALESMANRow);
                return rowLFS_SALESMANRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_SALESMANRow FindBySalesmanID(int SalesmanID) {
                return ((LFS_SALESMANRow)(this.Rows.Find(new object[] {
                            SalesmanID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_SALESMANDataTable cln = ((LFS_SALESMANDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_SALESMANDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSalesmanID = base.Columns["SalesmanID"];
                this.columnIdForProjects = base.Columns["IdForProjects"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSalesmanID = new global::System.Data.DataColumn("SalesmanID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesmanID);
                this.columnIdForProjects = new global::System.Data.DataColumn("IdForProjects", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdForProjects);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSalesmanID}, true));
                this.columnSalesmanID.AllowDBNull = false;
                this.columnSalesmanID.Unique = true;
                this.columnIdForProjects.AllowDBNull = false;
                this.columnIdForProjects.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_SALESMANRow NewLFS_SALESMANRow() {
                return ((LFS_SALESMANRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_SALESMANRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_SALESMANRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_SALESMANRowChanged != null)) {
                    this.LFS_SALESMANRowChanged(this, new LFS_SALESMANRowChangeEvent(((LFS_SALESMANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_SALESMANRowChanging != null)) {
                    this.LFS_SALESMANRowChanging(this, new LFS_SALESMANRowChangeEvent(((LFS_SALESMANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_SALESMANRowDeleted != null)) {
                    this.LFS_SALESMANRowDeleted(this, new LFS_SALESMANRowChangeEvent(((LFS_SALESMANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_SALESMANRowDeleting != null)) {
                    this.LFS_SALESMANRowDeleting(this, new LFS_SALESMANRowChangeEvent(((LFS_SALESMANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_SALESMANRow(LFS_SALESMANRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EmployeeTDS ds = new EmployeeTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_SALESMANDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_RESOURCES_EMPLOYEE_NOTESDataTable : global::System.Data.TypedTableBase<LFS_RESOURCES_EMPLOYEE_NOTESRow> {
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnSubject;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnDateTime_;
            
            private global::System.Data.DataColumn columnNote;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_NOTESDataTable() {
                this.TableName = "LFS_RESOURCES_EMPLOYEE_NOTES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_RESOURCES_EMPLOYEE_NOTESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_RESOURCES_EMPLOYEE_NOTESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTime_Column {
                get {
                    return this.columnDateTime_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoteColumn {
                get {
                    return this.columnNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_NOTESRow this[int index] {
                get {
                    return ((LFS_RESOURCES_EMPLOYEE_NOTESRow)(this.Rows[index]));
                }
            }
            
            public event LFS_RESOURCES_EMPLOYEE_NOTESRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_NOTESRowChanging;
            
            public event LFS_RESOURCES_EMPLOYEE_NOTESRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_NOTESRowChanged;
            
            public event LFS_RESOURCES_EMPLOYEE_NOTESRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_NOTESRowDeleting;
            
            public event LFS_RESOURCES_EMPLOYEE_NOTESRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_NOTESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_RESOURCES_EMPLOYEE_NOTESRow(LFS_RESOURCES_EMPLOYEE_NOTESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_NOTESRow AddLFS_RESOURCES_EMPLOYEE_NOTESRow(int EmployeeID, int RefID, string Subject, int UserID, System.DateTime DateTime_, string Note, bool Deleted, int COMPANY_ID) {
                LFS_RESOURCES_EMPLOYEE_NOTESRow rowLFS_RESOURCES_EMPLOYEE_NOTESRow = ((LFS_RESOURCES_EMPLOYEE_NOTESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmployeeID,
                        RefID,
                        Subject,
                        UserID,
                        DateTime_,
                        Note,
                        Deleted,
                        COMPANY_ID};
                rowLFS_RESOURCES_EMPLOYEE_NOTESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_RESOURCES_EMPLOYEE_NOTESRow);
                return rowLFS_RESOURCES_EMPLOYEE_NOTESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_NOTESRow FindByEmployeeIDRefID(int EmployeeID, int RefID) {
                return ((LFS_RESOURCES_EMPLOYEE_NOTESRow)(this.Rows.Find(new object[] {
                            EmployeeID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_RESOURCES_EMPLOYEE_NOTESDataTable cln = ((LFS_RESOURCES_EMPLOYEE_NOTESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_RESOURCES_EMPLOYEE_NOTESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnSubject = base.Columns["Subject"];
                this.columnUserID = base.Columns["UserID"];
                this.columnDateTime_ = base.Columns["DateTime_"];
                this.columnNote = base.Columns["Note"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnSubject = new global::System.Data.DataColumn("Subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnDateTime_ = new global::System.Data.DataColumn("DateTime_", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTime_);
                this.columnNote = new global::System.Data.DataColumn("Note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNote);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEmployeeID,
                                this.columnRefID}, true));
                this.columnEmployeeID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnSubject.AllowDBNull = false;
                this.columnSubject.MaxLength = 255;
                this.columnUserID.AllowDBNull = false;
                this.columnDateTime_.AllowDBNull = false;
                this.columnNote.AllowDBNull = false;
                this.columnNote.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_NOTESRow NewLFS_RESOURCES_EMPLOYEE_NOTESRow() {
                return ((LFS_RESOURCES_EMPLOYEE_NOTESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_RESOURCES_EMPLOYEE_NOTESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_RESOURCES_EMPLOYEE_NOTESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_NOTESRowChanged != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_NOTESRowChanged(this, new LFS_RESOURCES_EMPLOYEE_NOTESRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_NOTESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_NOTESRowChanging != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_NOTESRowChanging(this, new LFS_RESOURCES_EMPLOYEE_NOTESRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_NOTESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_NOTESRowDeleted != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_NOTESRowDeleted(this, new LFS_RESOURCES_EMPLOYEE_NOTESRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_NOTESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_NOTESRowDeleting != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_NOTESRowDeleting(this, new LFS_RESOURCES_EMPLOYEE_NOTESRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_NOTESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_RESOURCES_EMPLOYEE_NOTESRow(LFS_RESOURCES_EMPLOYEE_NOTESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EmployeeTDS ds = new EmployeeTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_RESOURCES_EMPLOYEE_NOTESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESDataTable : global::System.Data.TypedTableBase<LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow> {
            
            private global::System.Data.DataColumn columnPersonalAgencyName;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESDataTable() {
                this.TableName = "LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PersonalAgencyNameColumn {
                get {
                    return this.columnPersonalAgencyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow this[int index] {
                get {
                    return ((LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow)(this.Rows[index]));
                }
            }
            
            public event LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowChanging;
            
            public event LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowChanged;
            
            public event LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowDeleting;
            
            public event LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow(LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow AddLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow(string PersonalAgencyName, bool Deleted, int COMPANY_ID) {
                LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow rowLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow = ((LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PersonalAgencyName,
                        Deleted,
                        COMPANY_ID};
                rowLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow);
                return rowLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow FindByPersonalAgencyName(string PersonalAgencyName) {
                return ((LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow)(this.Rows.Find(new object[] {
                            PersonalAgencyName})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESDataTable cln = ((LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPersonalAgencyName = base.Columns["PersonalAgencyName"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPersonalAgencyName = new global::System.Data.DataColumn("PersonalAgencyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonalAgencyName);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPersonalAgencyName}, true));
                this.columnPersonalAgencyName.AllowDBNull = false;
                this.columnPersonalAgencyName.Unique = true;
                this.columnPersonalAgencyName.MaxLength = 255;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow NewLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow() {
                return ((LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowChanged != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowChanged(this, new LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowChanging != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowChanging(this, new LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowDeleted != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowDeleted(this, new LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowDeleting != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowDeleting(this, new LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow(LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EmployeeTDS ds = new EmployeeTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSDataTable : global::System.Data.TypedTableBase<LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow> {
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnApproveTimesheets;
            
            private global::System.Data.DataColumn columnDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSDataTable() {
                this.TableName = "LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApproveTimesheetsColumn {
                get {
                    return this.columnApproveTimesheets;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow this[int index] {
                get {
                    return ((LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow)(this.Rows[index]));
                }
            }
            
            public event LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowChanging;
            
            public event LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowChanged;
            
            public event LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowDeleting;
            
            public event LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow(LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow AddLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow(int EmployeeID, string Category, bool ApproveTimesheets, bool Deleted) {
                LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow rowLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow = ((LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmployeeID,
                        Category,
                        ApproveTimesheets,
                        Deleted};
                rowLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow);
                return rowLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow FindByEmployeeIDCategory(int EmployeeID, string Category) {
                return ((LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow)(this.Rows.Find(new object[] {
                            EmployeeID,
                            Category})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSDataTable cln = ((LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnCategory = base.Columns["Category"];
                this.columnApproveTimesheets = base.Columns["ApproveTimesheets"];
                this.columnDeleted = base.Columns["Deleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnApproveTimesheets = new global::System.Data.DataColumn("ApproveTimesheets", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApproveTimesheets);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEmployeeID,
                                this.columnCategory}, true));
                this.columnEmployeeID.AllowDBNull = false;
                this.columnCategory.AllowDBNull = false;
                this.columnCategory.MaxLength = 25;
                this.columnApproveTimesheets.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow NewLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow() {
                return ((LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowChanged != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowChanged(this, new LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowChanging != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowChanging(this, new LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowDeleted != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowDeleted(this, new LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowDeleting != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowDeleting(this, new LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow(LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EmployeeTDS ds = new EmployeeTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_RESOURCES_EMPLOYEE_COST_HISTORYDataTable : global::System.Data.TypedTableBase<LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow> {
            
            private global::System.Data.DataColumn columnCostID;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnUnitOfMeasurement;
            
            private global::System.Data.DataColumn columnPayRateCad;
            
            private global::System.Data.DataColumn columnBurdenRateCad;
            
            private global::System.Data.DataColumn columnTotalCostCad;
            
            private global::System.Data.DataColumn columnPayRateUsd;
            
            private global::System.Data.DataColumn columnBurdenRateUsd;
            
            private global::System.Data.DataColumn columnTotalCostUsd;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnBenefitFactorCad;
            
            private global::System.Data.DataColumn columnBenefitFactorUsd;
            
            private global::System.Data.DataColumn columnHealthBenefitUsd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_COST_HISTORYDataTable() {
                this.TableName = "LFS_RESOURCES_EMPLOYEE_COST_HISTORY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_RESOURCES_EMPLOYEE_COST_HISTORYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_RESOURCES_EMPLOYEE_COST_HISTORYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostIDColumn {
                get {
                    return this.columnCostID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitOfMeasurementColumn {
                get {
                    return this.columnUnitOfMeasurement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayRateCadColumn {
                get {
                    return this.columnPayRateCad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BurdenRateCadColumn {
                get {
                    return this.columnBurdenRateCad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalCostCadColumn {
                get {
                    return this.columnTotalCostCad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayRateUsdColumn {
                get {
                    return this.columnPayRateUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BurdenRateUsdColumn {
                get {
                    return this.columnBurdenRateUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalCostUsdColumn {
                get {
                    return this.columnTotalCostUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BenefitFactorCadColumn {
                get {
                    return this.columnBenefitFactorCad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BenefitFactorUsdColumn {
                get {
                    return this.columnBenefitFactorUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HealthBenefitUsdColumn {
                get {
                    return this.columnHealthBenefitUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow this[int index] {
                get {
                    return ((LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow)(this.Rows[index]));
                }
            }
            
            public event LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowChanging;
            
            public event LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowChanged;
            
            public event LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowDeleting;
            
            public event LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_RESOURCES_EMPLOYEE_COST_HISTORYRow(LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow AddLFS_RESOURCES_EMPLOYEE_COST_HISTORYRow(int CostID, int EmployeeID, System.DateTime Date, string UnitOfMeasurement, decimal PayRateCad, decimal BurdenRateCad, decimal TotalCostCad, decimal PayRateUsd, decimal BurdenRateUsd, decimal TotalCostUsd, bool Deleted, int COMPANY_ID, decimal BenefitFactorCad, decimal BenefitFactorUsd, decimal HealthBenefitUsd) {
                LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow rowLFS_RESOURCES_EMPLOYEE_COST_HISTORYRow = ((LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CostID,
                        EmployeeID,
                        Date,
                        UnitOfMeasurement,
                        PayRateCad,
                        BurdenRateCad,
                        TotalCostCad,
                        PayRateUsd,
                        BurdenRateUsd,
                        TotalCostUsd,
                        Deleted,
                        COMPANY_ID,
                        BenefitFactorCad,
                        BenefitFactorUsd,
                        HealthBenefitUsd};
                rowLFS_RESOURCES_EMPLOYEE_COST_HISTORYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_RESOURCES_EMPLOYEE_COST_HISTORYRow);
                return rowLFS_RESOURCES_EMPLOYEE_COST_HISTORYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow FindByCostIDEmployeeID(int CostID, int EmployeeID) {
                return ((LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow)(this.Rows.Find(new object[] {
                            CostID,
                            EmployeeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_RESOURCES_EMPLOYEE_COST_HISTORYDataTable cln = ((LFS_RESOURCES_EMPLOYEE_COST_HISTORYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_RESOURCES_EMPLOYEE_COST_HISTORYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCostID = base.Columns["CostID"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnDate = base.Columns["Date"];
                this.columnUnitOfMeasurement = base.Columns["UnitOfMeasurement"];
                this.columnPayRateCad = base.Columns["PayRateCad"];
                this.columnBurdenRateCad = base.Columns["BurdenRateCad"];
                this.columnTotalCostCad = base.Columns["TotalCostCad"];
                this.columnPayRateUsd = base.Columns["PayRateUsd"];
                this.columnBurdenRateUsd = base.Columns["BurdenRateUsd"];
                this.columnTotalCostUsd = base.Columns["TotalCostUsd"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnBenefitFactorCad = base.Columns["BenefitFactorCad"];
                this.columnBenefitFactorUsd = base.Columns["BenefitFactorUsd"];
                this.columnHealthBenefitUsd = base.Columns["HealthBenefitUsd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCostID = new global::System.Data.DataColumn("CostID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostID);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnUnitOfMeasurement = new global::System.Data.DataColumn("UnitOfMeasurement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitOfMeasurement);
                this.columnPayRateCad = new global::System.Data.DataColumn("PayRateCad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayRateCad);
                this.columnBurdenRateCad = new global::System.Data.DataColumn("BurdenRateCad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBurdenRateCad);
                this.columnTotalCostCad = new global::System.Data.DataColumn("TotalCostCad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCostCad);
                this.columnPayRateUsd = new global::System.Data.DataColumn("PayRateUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayRateUsd);
                this.columnBurdenRateUsd = new global::System.Data.DataColumn("BurdenRateUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBurdenRateUsd);
                this.columnTotalCostUsd = new global::System.Data.DataColumn("TotalCostUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCostUsd);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnBenefitFactorCad = new global::System.Data.DataColumn("BenefitFactorCad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenefitFactorCad);
                this.columnBenefitFactorUsd = new global::System.Data.DataColumn("BenefitFactorUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenefitFactorUsd);
                this.columnHealthBenefitUsd = new global::System.Data.DataColumn("HealthBenefitUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHealthBenefitUsd);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCostID,
                                this.columnEmployeeID}, true));
                this.columnCostID.AllowDBNull = false;
                this.columnEmployeeID.AllowDBNull = false;
                this.columnDate.AllowDBNull = false;
                this.columnUnitOfMeasurement.AllowDBNull = false;
                this.columnUnitOfMeasurement.MaxLength = 25;
                this.columnPayRateCad.AllowDBNull = false;
                this.columnBurdenRateCad.AllowDBNull = false;
                this.columnTotalCostCad.AllowDBNull = false;
                this.columnPayRateUsd.AllowDBNull = false;
                this.columnBurdenRateUsd.AllowDBNull = false;
                this.columnTotalCostUsd.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnBenefitFactorCad.AllowDBNull = false;
                this.columnBenefitFactorUsd.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow NewLFS_RESOURCES_EMPLOYEE_COST_HISTORYRow() {
                return ((LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowChanged != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowChanged(this, new LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowChanging != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowChanging(this, new LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowDeleted != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowDeleted(this, new LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowDeleting != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowDeleting(this, new LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_RESOURCES_EMPLOYEE_COST_HISTORYRow(LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EmployeeTDS ds = new EmployeeTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_RESOURCES_EMPLOYEE_COST_HISTORYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSDataTable : global::System.Data.TypedTableBase<LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow> {
            
            private global::System.Data.DataColumn columnCostID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnWork_;
            
            private global::System.Data.DataColumn columnUnitOfMeasurement;
            
            private global::System.Data.DataColumn columnPayRateCad;
            
            private global::System.Data.DataColumn columnBurdenRateCad;
            
            private global::System.Data.DataColumn columnTotalCostCad;
            
            private global::System.Data.DataColumn columnPayRateUsd;
            
            private global::System.Data.DataColumn columnBurdenRateUsd;
            
            private global::System.Data.DataColumn columnTotalCostUsd;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnBenefitFactorCad;
            
            private global::System.Data.DataColumn columnBenefitFactorUsd;
            
            private global::System.Data.DataColumn columnHealthBenefitUsd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSDataTable() {
                this.TableName = "LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostIDColumn {
                get {
                    return this.columnCostID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Work_Column {
                get {
                    return this.columnWork_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitOfMeasurementColumn {
                get {
                    return this.columnUnitOfMeasurement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayRateCadColumn {
                get {
                    return this.columnPayRateCad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BurdenRateCadColumn {
                get {
                    return this.columnBurdenRateCad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalCostCadColumn {
                get {
                    return this.columnTotalCostCad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayRateUsdColumn {
                get {
                    return this.columnPayRateUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BurdenRateUsdColumn {
                get {
                    return this.columnBurdenRateUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalCostUsdColumn {
                get {
                    return this.columnTotalCostUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BenefitFactorCadColumn {
                get {
                    return this.columnBenefitFactorCad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BenefitFactorUsdColumn {
                get {
                    return this.columnBenefitFactorUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HealthBenefitUsdColumn {
                get {
                    return this.columnHealthBenefitUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow this[int index] {
                get {
                    return ((LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow)(this.Rows[index]));
                }
            }
            
            public event LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowChanging;
            
            public event LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowChanged;
            
            public event LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowDeleting;
            
            public event LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow(LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow AddLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow(
                        int CostID, 
                        int RefID, 
                        int EmployeeID, 
                        string Work_, 
                        string UnitOfMeasurement, 
                        decimal PayRateCad, 
                        decimal BurdenRateCad, 
                        decimal TotalCostCad, 
                        decimal PayRateUsd, 
                        decimal BurdenRateUsd, 
                        decimal TotalCostUsd, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        decimal BenefitFactorCad, 
                        decimal BenefitFactorUsd, 
                        decimal HealthBenefitUsd) {
                LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow rowLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow = ((LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CostID,
                        RefID,
                        EmployeeID,
                        Work_,
                        UnitOfMeasurement,
                        PayRateCad,
                        BurdenRateCad,
                        TotalCostCad,
                        PayRateUsd,
                        BurdenRateUsd,
                        TotalCostUsd,
                        Deleted,
                        COMPANY_ID,
                        BenefitFactorCad,
                        BenefitFactorUsd,
                        HealthBenefitUsd};
                rowLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow);
                return rowLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow FindByCostIDRefIDEmployeeID(int CostID, int RefID, int EmployeeID) {
                return ((LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow)(this.Rows.Find(new object[] {
                            CostID,
                            RefID,
                            EmployeeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSDataTable cln = ((LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCostID = base.Columns["CostID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnWork_ = base.Columns["Work_"];
                this.columnUnitOfMeasurement = base.Columns["UnitOfMeasurement"];
                this.columnPayRateCad = base.Columns["PayRateCad"];
                this.columnBurdenRateCad = base.Columns["BurdenRateCad"];
                this.columnTotalCostCad = base.Columns["TotalCostCad"];
                this.columnPayRateUsd = base.Columns["PayRateUsd"];
                this.columnBurdenRateUsd = base.Columns["BurdenRateUsd"];
                this.columnTotalCostUsd = base.Columns["TotalCostUsd"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnBenefitFactorCad = base.Columns["BenefitFactorCad"];
                this.columnBenefitFactorUsd = base.Columns["BenefitFactorUsd"];
                this.columnHealthBenefitUsd = base.Columns["HealthBenefitUsd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCostID = new global::System.Data.DataColumn("CostID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnWork_ = new global::System.Data.DataColumn("Work_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWork_);
                this.columnUnitOfMeasurement = new global::System.Data.DataColumn("UnitOfMeasurement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitOfMeasurement);
                this.columnPayRateCad = new global::System.Data.DataColumn("PayRateCad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayRateCad);
                this.columnBurdenRateCad = new global::System.Data.DataColumn("BurdenRateCad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBurdenRateCad);
                this.columnTotalCostCad = new global::System.Data.DataColumn("TotalCostCad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCostCad);
                this.columnPayRateUsd = new global::System.Data.DataColumn("PayRateUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayRateUsd);
                this.columnBurdenRateUsd = new global::System.Data.DataColumn("BurdenRateUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBurdenRateUsd);
                this.columnTotalCostUsd = new global::System.Data.DataColumn("TotalCostUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCostUsd);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnBenefitFactorCad = new global::System.Data.DataColumn("BenefitFactorCad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenefitFactorCad);
                this.columnBenefitFactorUsd = new global::System.Data.DataColumn("BenefitFactorUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenefitFactorUsd);
                this.columnHealthBenefitUsd = new global::System.Data.DataColumn("HealthBenefitUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHealthBenefitUsd);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCostID,
                                this.columnRefID,
                                this.columnEmployeeID}, true));
                this.columnCostID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnEmployeeID.AllowDBNull = false;
                this.columnWork_.AllowDBNull = false;
                this.columnWork_.MaxLength = 50;
                this.columnUnitOfMeasurement.AllowDBNull = false;
                this.columnUnitOfMeasurement.MaxLength = 25;
                this.columnPayRateCad.AllowDBNull = false;
                this.columnBurdenRateCad.AllowDBNull = false;
                this.columnTotalCostCad.AllowDBNull = false;
                this.columnPayRateUsd.AllowDBNull = false;
                this.columnBurdenRateUsd.AllowDBNull = false;
                this.columnTotalCostUsd.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnBenefitFactorCad.AllowDBNull = false;
                this.columnBenefitFactorUsd.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow NewLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow() {
                return ((LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowChanged != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowChanged(this, new LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowChanging != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowChanging(this, new LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowDeleted != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowDeleted(this, new LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowDeleting != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowDeleting(this, new LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow(LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EmployeeTDS ds = new EmployeeTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_RESOURCES_EMPLOYEEDataTable : global::System.Data.TypedTableBase<LFS_RESOURCES_EMPLOYEERow> {
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnLoginID;
            
            private global::System.Data.DataColumn columnContactsID;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnMiddleInitial;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnIsSalesman;
            
            private global::System.Data.DataColumn columnRequestProjectTime;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnSalaried;
            
            private global::System.Data.DataColumn columneMail;
            
            private global::System.Data.DataColumn columnAssignableSRS;
            
            private global::System.Data.DataColumn columnJobClassType;
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnPersonalAgencyName;
            
            private global::System.Data.DataColumn columnIsVacationsManager;
            
            private global::System.Data.DataColumn columnApproveTimesheets;
            
            private global::System.Data.DataColumn columnBourdenFactor;
            
            private global::System.Data.DataColumn columnUSHealthBenefitFactor;
            
            private global::System.Data.DataColumn columnBenefitFactorCad;
            
            private global::System.Data.DataColumn columnBenefitFactorUsd;
            
            private global::System.Data.DataColumn columnCrew;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEEDataTable() {
                this.TableName = "LFS_RESOURCES_EMPLOYEE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_RESOURCES_EMPLOYEEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_RESOURCES_EMPLOYEEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LoginIDColumn {
                get {
                    return this.columnLoginID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactsIDColumn {
                get {
                    return this.columnContactsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiddleInitialColumn {
                get {
                    return this.columnMiddleInitial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsSalesmanColumn {
                get {
                    return this.columnIsSalesman;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestProjectTimeColumn {
                get {
                    return this.columnRequestProjectTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalariedColumn {
                get {
                    return this.columnSalaried;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn eMailColumn {
                get {
                    return this.columneMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssignableSRSColumn {
                get {
                    return this.columnAssignableSRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobClassTypeColumn {
                get {
                    return this.columnJobClassType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PersonalAgencyNameColumn {
                get {
                    return this.columnPersonalAgencyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsVacationsManagerColumn {
                get {
                    return this.columnIsVacationsManager;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApproveTimesheetsColumn {
                get {
                    return this.columnApproveTimesheets;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BourdenFactorColumn {
                get {
                    return this.columnBourdenFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USHealthBenefitFactorColumn {
                get {
                    return this.columnUSHealthBenefitFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BenefitFactorCadColumn {
                get {
                    return this.columnBenefitFactorCad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BenefitFactorUsdColumn {
                get {
                    return this.columnBenefitFactorUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CrewColumn {
                get {
                    return this.columnCrew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEERow this[int index] {
                get {
                    return ((LFS_RESOURCES_EMPLOYEERow)(this.Rows[index]));
                }
            }
            
            public event LFS_RESOURCES_EMPLOYEERowChangeEventHandler LFS_RESOURCES_EMPLOYEERowChanging;
            
            public event LFS_RESOURCES_EMPLOYEERowChangeEventHandler LFS_RESOURCES_EMPLOYEERowChanged;
            
            public event LFS_RESOURCES_EMPLOYEERowChangeEventHandler LFS_RESOURCES_EMPLOYEERowDeleting;
            
            public event LFS_RESOURCES_EMPLOYEERowChangeEventHandler LFS_RESOURCES_EMPLOYEERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_RESOURCES_EMPLOYEERow(LFS_RESOURCES_EMPLOYEERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEERow AddLFS_RESOURCES_EMPLOYEERow(
                        int LoginID, 
                        int ContactsID, 
                        string FullName, 
                        string FirstName, 
                        string MiddleInitial, 
                        string LastName, 
                        string Type, 
                        string State, 
                        bool IsSalesman, 
                        bool RequestProjectTime, 
                        bool Deleted, 
                        bool Salaried, 
                        string eMail, 
                        bool AssignableSRS, 
                        string JobClassType, 
                        string Category, 
                        string PersonalAgencyName, 
                        bool IsVacationsManager, 
                        bool ApproveTimesheets, 
                        double BourdenFactor, 
                        double USHealthBenefitFactor, 
                        decimal BenefitFactorCad, 
                        decimal BenefitFactorUsd, 
                        string Crew) {
                LFS_RESOURCES_EMPLOYEERow rowLFS_RESOURCES_EMPLOYEERow = ((LFS_RESOURCES_EMPLOYEERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        LoginID,
                        ContactsID,
                        FullName,
                        FirstName,
                        MiddleInitial,
                        LastName,
                        Type,
                        State,
                        IsSalesman,
                        RequestProjectTime,
                        Deleted,
                        Salaried,
                        eMail,
                        AssignableSRS,
                        JobClassType,
                        Category,
                        PersonalAgencyName,
                        IsVacationsManager,
                        ApproveTimesheets,
                        BourdenFactor,
                        USHealthBenefitFactor,
                        BenefitFactorCad,
                        BenefitFactorUsd,
                        Crew};
                rowLFS_RESOURCES_EMPLOYEERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_RESOURCES_EMPLOYEERow);
                return rowLFS_RESOURCES_EMPLOYEERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEERow FindByEmployeeID(int EmployeeID) {
                return ((LFS_RESOURCES_EMPLOYEERow)(this.Rows.Find(new object[] {
                            EmployeeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_RESOURCES_EMPLOYEEDataTable cln = ((LFS_RESOURCES_EMPLOYEEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_RESOURCES_EMPLOYEEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnLoginID = base.Columns["LoginID"];
                this.columnContactsID = base.Columns["ContactsID"];
                this.columnFullName = base.Columns["FullName"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnMiddleInitial = base.Columns["MiddleInitial"];
                this.columnLastName = base.Columns["LastName"];
                this.columnType = base.Columns["Type"];
                this.columnState = base.Columns["State"];
                this.columnIsSalesman = base.Columns["IsSalesman"];
                this.columnRequestProjectTime = base.Columns["RequestProjectTime"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnSalaried = base.Columns["Salaried"];
                this.columneMail = base.Columns["eMail"];
                this.columnAssignableSRS = base.Columns["AssignableSRS"];
                this.columnJobClassType = base.Columns["JobClassType"];
                this.columnCategory = base.Columns["Category"];
                this.columnPersonalAgencyName = base.Columns["PersonalAgencyName"];
                this.columnIsVacationsManager = base.Columns["IsVacationsManager"];
                this.columnApproveTimesheets = base.Columns["ApproveTimesheets"];
                this.columnBourdenFactor = base.Columns["BourdenFactor"];
                this.columnUSHealthBenefitFactor = base.Columns["USHealthBenefitFactor"];
                this.columnBenefitFactorCad = base.Columns["BenefitFactorCad"];
                this.columnBenefitFactorUsd = base.Columns["BenefitFactorUsd"];
                this.columnCrew = base.Columns["Crew"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnLoginID = new global::System.Data.DataColumn("LoginID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoginID);
                this.columnContactsID = new global::System.Data.DataColumn("ContactsID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactsID);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnMiddleInitial = new global::System.Data.DataColumn("MiddleInitial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiddleInitial);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnIsSalesman = new global::System.Data.DataColumn("IsSalesman", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSalesman);
                this.columnRequestProjectTime = new global::System.Data.DataColumn("RequestProjectTime", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestProjectTime);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnSalaried = new global::System.Data.DataColumn("Salaried", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaried);
                this.columneMail = new global::System.Data.DataColumn("eMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneMail);
                this.columnAssignableSRS = new global::System.Data.DataColumn("AssignableSRS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssignableSRS);
                this.columnJobClassType = new global::System.Data.DataColumn("JobClassType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobClassType);
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnPersonalAgencyName = new global::System.Data.DataColumn("PersonalAgencyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonalAgencyName);
                this.columnIsVacationsManager = new global::System.Data.DataColumn("IsVacationsManager", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsVacationsManager);
                this.columnApproveTimesheets = new global::System.Data.DataColumn("ApproveTimesheets", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApproveTimesheets);
                this.columnBourdenFactor = new global::System.Data.DataColumn("BourdenFactor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBourdenFactor);
                this.columnUSHealthBenefitFactor = new global::System.Data.DataColumn("USHealthBenefitFactor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSHealthBenefitFactor);
                this.columnBenefitFactorCad = new global::System.Data.DataColumn("BenefitFactorCad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenefitFactorCad);
                this.columnBenefitFactorUsd = new global::System.Data.DataColumn("BenefitFactorUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenefitFactorUsd);
                this.columnCrew = new global::System.Data.DataColumn("Crew", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrew);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEmployeeID}, true));
                this.columnEmployeeID.AutoIncrement = true;
                this.columnEmployeeID.AutoIncrementSeed = -1;
                this.columnEmployeeID.AutoIncrementStep = -1;
                this.columnEmployeeID.AllowDBNull = false;
                this.columnEmployeeID.ReadOnly = true;
                this.columnEmployeeID.Unique = true;
                this.columnFullName.AllowDBNull = false;
                this.columnFullName.MaxLength = 100;
                this.columnFirstName.AllowDBNull = false;
                this.columnFirstName.MaxLength = 50;
                this.columnMiddleInitial.MaxLength = 1;
                this.columnLastName.AllowDBNull = false;
                this.columnLastName.MaxLength = 50;
                this.columnType.AllowDBNull = false;
                this.columnType.MaxLength = 25;
                this.columnState.AllowDBNull = false;
                this.columnState.MaxLength = 25;
                this.columnIsSalesman.AllowDBNull = false;
                this.columnRequestProjectTime.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnSalaried.AllowDBNull = false;
                this.columneMail.MaxLength = 100;
                this.columnAssignableSRS.AllowDBNull = false;
                this.columnJobClassType.MaxLength = 50;
                this.columnCategory.AllowDBNull = false;
                this.columnCategory.MaxLength = 25;
                this.columnPersonalAgencyName.MaxLength = 255;
                this.columnIsVacationsManager.AllowDBNull = false;
                this.columnApproveTimesheets.AllowDBNull = false;
                this.columnCrew.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEERow NewLFS_RESOURCES_EMPLOYEERow() {
                return ((LFS_RESOURCES_EMPLOYEERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_RESOURCES_EMPLOYEERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_RESOURCES_EMPLOYEERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_RESOURCES_EMPLOYEERowChanged != null)) {
                    this.LFS_RESOURCES_EMPLOYEERowChanged(this, new LFS_RESOURCES_EMPLOYEERowChangeEvent(((LFS_RESOURCES_EMPLOYEERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_RESOURCES_EMPLOYEERowChanging != null)) {
                    this.LFS_RESOURCES_EMPLOYEERowChanging(this, new LFS_RESOURCES_EMPLOYEERowChangeEvent(((LFS_RESOURCES_EMPLOYEERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_RESOURCES_EMPLOYEERowDeleted != null)) {
                    this.LFS_RESOURCES_EMPLOYEERowDeleted(this, new LFS_RESOURCES_EMPLOYEERowChangeEvent(((LFS_RESOURCES_EMPLOYEERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_RESOURCES_EMPLOYEERowDeleting != null)) {
                    this.LFS_RESOURCES_EMPLOYEERowDeleting(this, new LFS_RESOURCES_EMPLOYEERowChangeEvent(((LFS_RESOURCES_EMPLOYEERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_RESOURCES_EMPLOYEERow(LFS_RESOURCES_EMPLOYEERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EmployeeTDS ds = new EmployeeTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_RESOURCES_EMPLOYEEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYDataTable : global::System.Data.TypedTableBase<LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow> {
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYDataTable() {
                this.TableName = "LFS_RESOURCES_EMPLOYEE_TYPE_HISTORY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow this[int index] {
                get {
                    return ((LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow)(this.Rows[index]));
                }
            }
            
            public event LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowChanging;
            
            public event LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowChanged;
            
            public event LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowDeleting;
            
            public event LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowChangeEventHandler LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow(LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow AddLFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow(int EmployeeID, int RefID, System.DateTime Date, string Type, bool Deleted, int COMPANY_ID) {
                LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow rowLFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow = ((LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmployeeID,
                        RefID,
                        Date,
                        Type,
                        Deleted,
                        COMPANY_ID};
                rowLFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow);
                return rowLFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow FindByEmployeeIDRefID(int EmployeeID, int RefID) {
                return ((LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow)(this.Rows.Find(new object[] {
                            EmployeeID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYDataTable cln = ((LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnDate = base.Columns["Date"];
                this.columnType = base.Columns["Type"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEmployeeID,
                                this.columnRefID}, true));
                this.columnEmployeeID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnDate.AllowDBNull = false;
                this.columnType.AllowDBNull = false;
                this.columnType.MaxLength = 25;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow NewLFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow() {
                return ((LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowChanged != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowChanged(this, new LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowChanging != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowChanging(this, new LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowDeleted != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowDeleted(this, new LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowDeleting != null)) {
                    this.LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowDeleting(this, new LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowChangeEvent(((LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow(LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EmployeeTDS ds = new EmployeeTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_SALESMANRow : global::System.Data.DataRow {
            
            private LFS_SALESMANDataTable tableLFS_SALESMAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_SALESMANRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_SALESMAN = ((LFS_SALESMANDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesmanID {
                get {
                    return ((int)(this[this.tableLFS_SALESMAN.SalesmanIDColumn]));
                }
                set {
                    this[this.tableLFS_SALESMAN.SalesmanIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IdForProjects {
                get {
                    return ((string)(this[this.tableLFS_SALESMAN.IdForProjectsColumn]));
                }
                set {
                    this[this.tableLFS_SALESMAN.IdForProjectsColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_RESOURCES_EMPLOYEE_NOTESRow : global::System.Data.DataRow {
            
            private LFS_RESOURCES_EMPLOYEE_NOTESDataTable tableLFS_RESOURCES_EMPLOYEE_NOTES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_RESOURCES_EMPLOYEE_NOTESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_RESOURCES_EMPLOYEE_NOTES = ((LFS_RESOURCES_EMPLOYEE_NOTESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE_NOTES.EmployeeIDColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_NOTES.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE_NOTES.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_NOTES.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Subject {
                get {
                    return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE_NOTES.SubjectColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_NOTES.SubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE_NOTES.UserIDColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_NOTES.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTime_ {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_RESOURCES_EMPLOYEE_NOTES.DateTime_Column]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_NOTES.DateTime_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Note {
                get {
                    return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE_NOTES.NoteColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_NOTES.NoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_RESOURCES_EMPLOYEE_NOTES.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_NOTES.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE_NOTES.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_NOTES.COMPANY_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow : global::System.Data.DataRow {
            
            private LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESDataTable tableLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES = ((LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PersonalAgencyName {
                get {
                    return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES.PersonalAgencyNameColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES.PersonalAgencyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIES.COMPANY_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow : global::System.Data.DataRow {
            
            private LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSDataTable tableLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS = ((LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS.EmployeeIDColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category {
                get {
                    return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS.CategoryColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ApproveTimesheets {
                get {
                    return ((bool)(this[this.tableLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS.ApproveTimesheetsColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS.ApproveTimesheetsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETS.DeletedColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow : global::System.Data.DataRow {
            
            private LFS_RESOURCES_EMPLOYEE_COST_HISTORYDataTable tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY = ((LFS_RESOURCES_EMPLOYEE_COST_HISTORYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CostID {
                get {
                    return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.CostIDColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.CostIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.EmployeeIDColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.DateColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitOfMeasurement {
                get {
                    return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.UnitOfMeasurementColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.UnitOfMeasurementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PayRateCad {
                get {
                    return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.PayRateCadColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.PayRateCadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BurdenRateCad {
                get {
                    return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.BurdenRateCadColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.BurdenRateCadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalCostCad {
                get {
                    return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.TotalCostCadColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.TotalCostCadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PayRateUsd {
                get {
                    return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.PayRateUsdColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.PayRateUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BurdenRateUsd {
                get {
                    return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.BurdenRateUsdColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.BurdenRateUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalCostUsd {
                get {
                    return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.TotalCostUsdColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.TotalCostUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BenefitFactorCad {
                get {
                    return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.BenefitFactorCadColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.BenefitFactorCadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BenefitFactorUsd {
                get {
                    return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.BenefitFactorUsdColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.BenefitFactorUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HealthBenefitUsd {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.HealthBenefitUsdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HealthBenefitUsd\' in table \'LFS_RESOURCES_EMPLOYEE_COST_HIS" +
                                "TORY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.HealthBenefitUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHealthBenefitUsdNull() {
                return this.IsNull(this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.HealthBenefitUsdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHealthBenefitUsdNull() {
                this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY.HealthBenefitUsdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow : global::System.Data.DataRow {
            
            private LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSDataTable tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS = ((LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CostID {
                get {
                    return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.CostIDColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.CostIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.EmployeeIDColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Work_ {
                get {
                    return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.Work_Column]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.Work_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitOfMeasurement {
                get {
                    return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.UnitOfMeasurementColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.UnitOfMeasurementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PayRateCad {
                get {
                    return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.PayRateCadColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.PayRateCadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BurdenRateCad {
                get {
                    return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.BurdenRateCadColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.BurdenRateCadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalCostCad {
                get {
                    return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.TotalCostCadColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.TotalCostCadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PayRateUsd {
                get {
                    return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.PayRateUsdColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.PayRateUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BurdenRateUsd {
                get {
                    return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.BurdenRateUsdColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.BurdenRateUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalCostUsd {
                get {
                    return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.TotalCostUsdColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.TotalCostUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BenefitFactorCad {
                get {
                    return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.BenefitFactorCadColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.BenefitFactorCadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BenefitFactorUsd {
                get {
                    return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.BenefitFactorUsdColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.BenefitFactorUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HealthBenefitUsd {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.HealthBenefitUsdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HealthBenefitUsd\' in table \'LFS_RESOURCES_EMPLOYEE_COST_HIS" +
                                "TORY_EXCEPTIONS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.HealthBenefitUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHealthBenefitUsdNull() {
                return this.IsNull(this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.HealthBenefitUsdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHealthBenefitUsdNull() {
                this[this.tableLFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONS.HealthBenefitUsdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_RESOURCES_EMPLOYEERow : global::System.Data.DataRow {
            
            private LFS_RESOURCES_EMPLOYEEDataTable tableLFS_RESOURCES_EMPLOYEE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_RESOURCES_EMPLOYEERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_RESOURCES_EMPLOYEE = ((LFS_RESOURCES_EMPLOYEEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE.EmployeeIDColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LoginID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE.LoginIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoginID\' in table \'LFS_RESOURCES_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.LoginIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContactsID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE.ContactsIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactsID\' in table \'LFS_RESOURCES_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.ContactsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FullName {
                get {
                    return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE.FullNameColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE.FirstNameColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MiddleInitial {
                get {
                    try {
                        return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE.MiddleInitialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiddleInitial\' in table \'LFS_RESOURCES_EMPLOYEE\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.MiddleInitialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastName {
                get {
                    return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE.LastNameColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE.TypeColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE.StateColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesman {
                get {
                    return ((bool)(this[this.tableLFS_RESOURCES_EMPLOYEE.IsSalesmanColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.IsSalesmanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RequestProjectTime {
                get {
                    return ((bool)(this[this.tableLFS_RESOURCES_EMPLOYEE.RequestProjectTimeColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.RequestProjectTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_RESOURCES_EMPLOYEE.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Salaried {
                get {
                    return ((bool)(this[this.tableLFS_RESOURCES_EMPLOYEE.SalariedColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.SalariedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string eMail {
                get {
                    try {
                        return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE.eMailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'eMail\' in table \'LFS_RESOURCES_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.eMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AssignableSRS {
                get {
                    return ((bool)(this[this.tableLFS_RESOURCES_EMPLOYEE.AssignableSRSColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.AssignableSRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobClassType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE.JobClassTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobClassType\' in table \'LFS_RESOURCES_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.JobClassTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category {
                get {
                    return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE.CategoryColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PersonalAgencyName {
                get {
                    try {
                        return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE.PersonalAgencyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PersonalAgencyName\' in table \'LFS_RESOURCES_EMPLOYEE\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.PersonalAgencyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacationsManager {
                get {
                    return ((bool)(this[this.tableLFS_RESOURCES_EMPLOYEE.IsVacationsManagerColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.IsVacationsManagerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ApproveTimesheets {
                get {
                    return ((bool)(this[this.tableLFS_RESOURCES_EMPLOYEE.ApproveTimesheetsColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.ApproveTimesheetsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BourdenFactor {
                get {
                    try {
                        return ((double)(this[this.tableLFS_RESOURCES_EMPLOYEE.BourdenFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BourdenFactor\' in table \'LFS_RESOURCES_EMPLOYEE\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.BourdenFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USHealthBenefitFactor {
                get {
                    try {
                        return ((double)(this[this.tableLFS_RESOURCES_EMPLOYEE.USHealthBenefitFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USHealthBenefitFactor\' in table \'LFS_RESOURCES_EMPLOYEE\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.USHealthBenefitFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BenefitFactorCad {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE.BenefitFactorCadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BenefitFactorCad\' in table \'LFS_RESOURCES_EMPLOYEE\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.BenefitFactorCadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BenefitFactorUsd {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_RESOURCES_EMPLOYEE.BenefitFactorUsdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BenefitFactorUsd\' in table \'LFS_RESOURCES_EMPLOYEE\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.BenefitFactorUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Crew {
                get {
                    try {
                        return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE.CrewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Crew\' in table \'LFS_RESOURCES_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE.CrewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoginIDNull() {
                return this.IsNull(this.tableLFS_RESOURCES_EMPLOYEE.LoginIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoginIDNull() {
                this[this.tableLFS_RESOURCES_EMPLOYEE.LoginIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactsIDNull() {
                return this.IsNull(this.tableLFS_RESOURCES_EMPLOYEE.ContactsIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactsIDNull() {
                this[this.tableLFS_RESOURCES_EMPLOYEE.ContactsIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiddleInitialNull() {
                return this.IsNull(this.tableLFS_RESOURCES_EMPLOYEE.MiddleInitialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiddleInitialNull() {
                this[this.tableLFS_RESOURCES_EMPLOYEE.MiddleInitialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IseMailNull() {
                return this.IsNull(this.tableLFS_RESOURCES_EMPLOYEE.eMailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeteMailNull() {
                this[this.tableLFS_RESOURCES_EMPLOYEE.eMailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobClassTypeNull() {
                return this.IsNull(this.tableLFS_RESOURCES_EMPLOYEE.JobClassTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobClassTypeNull() {
                this[this.tableLFS_RESOURCES_EMPLOYEE.JobClassTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonalAgencyNameNull() {
                return this.IsNull(this.tableLFS_RESOURCES_EMPLOYEE.PersonalAgencyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPersonalAgencyNameNull() {
                this[this.tableLFS_RESOURCES_EMPLOYEE.PersonalAgencyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBourdenFactorNull() {
                return this.IsNull(this.tableLFS_RESOURCES_EMPLOYEE.BourdenFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBourdenFactorNull() {
                this[this.tableLFS_RESOURCES_EMPLOYEE.BourdenFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSHealthBenefitFactorNull() {
                return this.IsNull(this.tableLFS_RESOURCES_EMPLOYEE.USHealthBenefitFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSHealthBenefitFactorNull() {
                this[this.tableLFS_RESOURCES_EMPLOYEE.USHealthBenefitFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBenefitFactorCadNull() {
                return this.IsNull(this.tableLFS_RESOURCES_EMPLOYEE.BenefitFactorCadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBenefitFactorCadNull() {
                this[this.tableLFS_RESOURCES_EMPLOYEE.BenefitFactorCadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBenefitFactorUsdNull() {
                return this.IsNull(this.tableLFS_RESOURCES_EMPLOYEE.BenefitFactorUsdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBenefitFactorUsdNull() {
                this[this.tableLFS_RESOURCES_EMPLOYEE.BenefitFactorUsdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCrewNull() {
                return this.IsNull(this.tableLFS_RESOURCES_EMPLOYEE.CrewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCrewNull() {
                this[this.tableLFS_RESOURCES_EMPLOYEE.CrewColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow : global::System.Data.DataRow {
            
            private LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYDataTable tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY = ((LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY.EmployeeIDColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY.DateColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    return ((string)(this[this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY.TypeColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_RESOURCES_EMPLOYEE_TYPE_HISTORY.COMPANY_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_SALESMANRowChangeEvent : global::System.EventArgs {
            
            private LFS_SALESMANRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_SALESMANRowChangeEvent(LFS_SALESMANRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_SALESMANRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_RESOURCES_EMPLOYEE_NOTESRowChangeEvent : global::System.EventArgs {
            
            private LFS_RESOURCES_EMPLOYEE_NOTESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_NOTESRowChangeEvent(LFS_RESOURCES_EMPLOYEE_NOTESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_NOTESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowChangeEvent : global::System.EventArgs {
            
            private LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRowChangeEvent(LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_PERSONAL_AGENCIESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowChangeEvent : global::System.EventArgs {
            
            private LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRowChangeEvent(LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_CATEGORY_APPROVE_TIMESHEETSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowChangeEvent : global::System.EventArgs {
            
            private LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_COST_HISTORYRowChangeEvent(LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_COST_HISTORYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowChangeEvent : global::System.EventArgs {
            
            private LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRowChangeEvent(LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_COST_HISTORY_EXCEPTIONSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_RESOURCES_EMPLOYEERowChangeEvent : global::System.EventArgs {
            
            private LFS_RESOURCES_EMPLOYEERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEERowChangeEvent(LFS_RESOURCES_EMPLOYEERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowChangeEvent : global::System.EventArgs {
            
            private LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRowChangeEvent(LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_RESOURCES_EMPLOYEE_TYPE_HISTORYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591