//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3620
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.Resources.Employees {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("EmployeeNavigatorTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class EmployeeNavigatorTDS : global::System.Data.DataSet {
        
        private EmployeeNavigatorDataTable tableEmployeeNavigator;
        
        private SalesmanNavigatorDataTable tableSalesmanNavigator;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EmployeeNavigatorTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected EmployeeNavigatorTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["EmployeeNavigator"] != null)) {
                    base.Tables.Add(new EmployeeNavigatorDataTable(ds.Tables["EmployeeNavigator"]));
                }
                if ((ds.Tables["SalesmanNavigator"] != null)) {
                    base.Tables.Add(new SalesmanNavigatorDataTable(ds.Tables["SalesmanNavigator"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EmployeeNavigatorDataTable EmployeeNavigator {
            get {
                return this.tableEmployeeNavigator;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesmanNavigatorDataTable SalesmanNavigator {
            get {
                return this.tableSalesmanNavigator;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            EmployeeNavigatorTDS cln = ((EmployeeNavigatorTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["EmployeeNavigator"] != null)) {
                    base.Tables.Add(new EmployeeNavigatorDataTable(ds.Tables["EmployeeNavigator"]));
                }
                if ((ds.Tables["SalesmanNavigator"] != null)) {
                    base.Tables.Add(new SalesmanNavigatorDataTable(ds.Tables["SalesmanNavigator"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableEmployeeNavigator = ((EmployeeNavigatorDataTable)(base.Tables["EmployeeNavigator"]));
            if ((initTable == true)) {
                if ((this.tableEmployeeNavigator != null)) {
                    this.tableEmployeeNavigator.InitVars();
                }
            }
            this.tableSalesmanNavigator = ((SalesmanNavigatorDataTable)(base.Tables["SalesmanNavigator"]));
            if ((initTable == true)) {
                if ((this.tableSalesmanNavigator != null)) {
                    this.tableSalesmanNavigator.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "EmployeeNavigatorTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/EmployeeNavigatorTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEmployeeNavigator = new EmployeeNavigatorDataTable();
            base.Tables.Add(this.tableEmployeeNavigator);
            this.tableSalesmanNavigator = new SalesmanNavigatorDataTable();
            base.Tables.Add(this.tableSalesmanNavigator);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEmployeeNavigator() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesmanNavigator() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            EmployeeNavigatorTDS ds = new EmployeeNavigatorTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void EmployeeNavigatorRowChangeEventHandler(object sender, EmployeeNavigatorRowChangeEvent e);
        
        public delegate void SalesmanNavigatorRowChangeEventHandler(object sender, SalesmanNavigatorRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EmployeeNavigatorDataTable : global::System.Data.TypedTableBase<EmployeeNavigatorRow> {
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnLoginID;
            
            private global::System.Data.DataColumn columnContactsID;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnMiddleInitial;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnIsSalesman;
            
            private global::System.Data.DataColumn columnRequestProjectTime;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnSalaried;
            
            private global::System.Data.DataColumn columneMail;
            
            private global::System.Data.DataColumn columnInDatabase;
            
            private global::System.Data.DataColumn columnSelected;
            
            private global::System.Data.DataColumn columnPayRateCad;
            
            private global::System.Data.DataColumn columnBurdenRateCad;
            
            private global::System.Data.DataColumn columnTotalCostCad;
            
            private global::System.Data.DataColumn columnPayRateUsd;
            
            private global::System.Data.DataColumn columnBurdenRateUsd;
            
            private global::System.Data.DataColumn columnTotalCostUsd;
            
            private global::System.Data.DataColumn columnAssignableSRS;
            
            private global::System.Data.DataColumn columnBenefitFactorCad;
            
            private global::System.Data.DataColumn columnBenefitFactorUsd;
            
            private global::System.Data.DataColumn columnJobClassType;
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnPersonalAgencyName;
            
            private global::System.Data.DataColumn columnIsVacationsManager;
            
            private global::System.Data.DataColumn columnApproveTimesheets;
            
            private global::System.Data.DataColumn columnBourdenFactor;
            
            private global::System.Data.DataColumn columnUSHealthBenefitFactor;
            
            private global::System.Data.DataColumn columnStandardBenefitFactorCad;
            
            private global::System.Data.DataColumn columnStandardBenefitFactorUsd;
            
            private global::System.Data.DataColumn columnHealthBenefitUsd;
            
            private global::System.Data.DataColumn columnCrew;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeNavigatorDataTable() {
                this.TableName = "EmployeeNavigator";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EmployeeNavigatorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EmployeeNavigatorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LoginIDColumn {
                get {
                    return this.columnLoginID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactsIDColumn {
                get {
                    return this.columnContactsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiddleInitialColumn {
                get {
                    return this.columnMiddleInitial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsSalesmanColumn {
                get {
                    return this.columnIsSalesman;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestProjectTimeColumn {
                get {
                    return this.columnRequestProjectTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalariedColumn {
                get {
                    return this.columnSalaried;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn eMailColumn {
                get {
                    return this.columneMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InDatabaseColumn {
                get {
                    return this.columnInDatabase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectedColumn {
                get {
                    return this.columnSelected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayRateCadColumn {
                get {
                    return this.columnPayRateCad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BurdenRateCadColumn {
                get {
                    return this.columnBurdenRateCad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalCostCadColumn {
                get {
                    return this.columnTotalCostCad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayRateUsdColumn {
                get {
                    return this.columnPayRateUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BurdenRateUsdColumn {
                get {
                    return this.columnBurdenRateUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalCostUsdColumn {
                get {
                    return this.columnTotalCostUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssignableSRSColumn {
                get {
                    return this.columnAssignableSRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BenefitFactorCadColumn {
                get {
                    return this.columnBenefitFactorCad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BenefitFactorUsdColumn {
                get {
                    return this.columnBenefitFactorUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobClassTypeColumn {
                get {
                    return this.columnJobClassType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PersonalAgencyNameColumn {
                get {
                    return this.columnPersonalAgencyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsVacationsManagerColumn {
                get {
                    return this.columnIsVacationsManager;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApproveTimesheetsColumn {
                get {
                    return this.columnApproveTimesheets;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BourdenFactorColumn {
                get {
                    return this.columnBourdenFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USHealthBenefitFactorColumn {
                get {
                    return this.columnUSHealthBenefitFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardBenefitFactorCadColumn {
                get {
                    return this.columnStandardBenefitFactorCad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardBenefitFactorUsdColumn {
                get {
                    return this.columnStandardBenefitFactorUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HealthBenefitUsdColumn {
                get {
                    return this.columnHealthBenefitUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CrewColumn {
                get {
                    return this.columnCrew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeNavigatorRow this[int index] {
                get {
                    return ((EmployeeNavigatorRow)(this.Rows[index]));
                }
            }
            
            public event EmployeeNavigatorRowChangeEventHandler EmployeeNavigatorRowChanging;
            
            public event EmployeeNavigatorRowChangeEventHandler EmployeeNavigatorRowChanged;
            
            public event EmployeeNavigatorRowChangeEventHandler EmployeeNavigatorRowDeleting;
            
            public event EmployeeNavigatorRowChangeEventHandler EmployeeNavigatorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEmployeeNavigatorRow(EmployeeNavigatorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeNavigatorRow AddEmployeeNavigatorRow(
                        int LoginID, 
                        int ContactsID, 
                        string FullName, 
                        string FirstName, 
                        string MiddleInitial, 
                        string LastName, 
                        string Type, 
                        string State, 
                        bool IsSalesman, 
                        bool RequestProjectTime, 
                        bool Deleted, 
                        bool Salaried, 
                        string eMail, 
                        bool InDatabase, 
                        bool Selected, 
                        decimal PayRateCad, 
                        decimal BurdenRateCad, 
                        decimal TotalCostCad, 
                        decimal PayRateUsd, 
                        decimal BurdenRateUsd, 
                        decimal TotalCostUsd, 
                        bool AssignableSRS, 
                        decimal BenefitFactorCad, 
                        decimal BenefitFactorUsd, 
                        string JobClassType, 
                        string Category, 
                        string PersonalAgencyName, 
                        bool IsVacationsManager, 
                        bool ApproveTimesheets, 
                        decimal BourdenFactor, 
                        decimal USHealthBenefitFactor, 
                        decimal StandardBenefitFactorCad, 
                        decimal StandardBenefitFactorUsd, 
                        decimal HealthBenefitUsd, 
                        string Crew) {
                EmployeeNavigatorRow rowEmployeeNavigatorRow = ((EmployeeNavigatorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        LoginID,
                        ContactsID,
                        FullName,
                        FirstName,
                        MiddleInitial,
                        LastName,
                        Type,
                        State,
                        IsSalesman,
                        RequestProjectTime,
                        Deleted,
                        Salaried,
                        eMail,
                        InDatabase,
                        Selected,
                        PayRateCad,
                        BurdenRateCad,
                        TotalCostCad,
                        PayRateUsd,
                        BurdenRateUsd,
                        TotalCostUsd,
                        AssignableSRS,
                        BenefitFactorCad,
                        BenefitFactorUsd,
                        JobClassType,
                        Category,
                        PersonalAgencyName,
                        IsVacationsManager,
                        ApproveTimesheets,
                        BourdenFactor,
                        USHealthBenefitFactor,
                        StandardBenefitFactorCad,
                        StandardBenefitFactorUsd,
                        HealthBenefitUsd,
                        Crew};
                rowEmployeeNavigatorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEmployeeNavigatorRow);
                return rowEmployeeNavigatorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeNavigatorRow FindByEmployeeID(int EmployeeID) {
                return ((EmployeeNavigatorRow)(this.Rows.Find(new object[] {
                            EmployeeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EmployeeNavigatorDataTable cln = ((EmployeeNavigatorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EmployeeNavigatorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnLoginID = base.Columns["LoginID"];
                this.columnContactsID = base.Columns["ContactsID"];
                this.columnFullName = base.Columns["FullName"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnMiddleInitial = base.Columns["MiddleInitial"];
                this.columnLastName = base.Columns["LastName"];
                this.columnType = base.Columns["Type"];
                this.columnState = base.Columns["State"];
                this.columnIsSalesman = base.Columns["IsSalesman"];
                this.columnRequestProjectTime = base.Columns["RequestProjectTime"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnSalaried = base.Columns["Salaried"];
                this.columneMail = base.Columns["eMail"];
                this.columnInDatabase = base.Columns["InDatabase"];
                this.columnSelected = base.Columns["Selected"];
                this.columnPayRateCad = base.Columns["PayRateCad"];
                this.columnBurdenRateCad = base.Columns["BurdenRateCad"];
                this.columnTotalCostCad = base.Columns["TotalCostCad"];
                this.columnPayRateUsd = base.Columns["PayRateUsd"];
                this.columnBurdenRateUsd = base.Columns["BurdenRateUsd"];
                this.columnTotalCostUsd = base.Columns["TotalCostUsd"];
                this.columnAssignableSRS = base.Columns["AssignableSRS"];
                this.columnBenefitFactorCad = base.Columns["BenefitFactorCad"];
                this.columnBenefitFactorUsd = base.Columns["BenefitFactorUsd"];
                this.columnJobClassType = base.Columns["JobClassType"];
                this.columnCategory = base.Columns["Category"];
                this.columnPersonalAgencyName = base.Columns["PersonalAgencyName"];
                this.columnIsVacationsManager = base.Columns["IsVacationsManager"];
                this.columnApproveTimesheets = base.Columns["ApproveTimesheets"];
                this.columnBourdenFactor = base.Columns["BourdenFactor"];
                this.columnUSHealthBenefitFactor = base.Columns["USHealthBenefitFactor"];
                this.columnStandardBenefitFactorCad = base.Columns["StandardBenefitFactorCad"];
                this.columnStandardBenefitFactorUsd = base.Columns["StandardBenefitFactorUsd"];
                this.columnHealthBenefitUsd = base.Columns["HealthBenefitUsd"];
                this.columnCrew = base.Columns["Crew"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnLoginID = new global::System.Data.DataColumn("LoginID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoginID);
                this.columnContactsID = new global::System.Data.DataColumn("ContactsID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactsID);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnMiddleInitial = new global::System.Data.DataColumn("MiddleInitial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiddleInitial);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnIsSalesman = new global::System.Data.DataColumn("IsSalesman", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSalesman);
                this.columnRequestProjectTime = new global::System.Data.DataColumn("RequestProjectTime", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestProjectTime);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnSalaried = new global::System.Data.DataColumn("Salaried", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaried);
                this.columneMail = new global::System.Data.DataColumn("eMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneMail);
                this.columnInDatabase = new global::System.Data.DataColumn("InDatabase", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInDatabase);
                this.columnSelected = new global::System.Data.DataColumn("Selected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelected);
                this.columnPayRateCad = new global::System.Data.DataColumn("PayRateCad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayRateCad);
                this.columnBurdenRateCad = new global::System.Data.DataColumn("BurdenRateCad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBurdenRateCad);
                this.columnTotalCostCad = new global::System.Data.DataColumn("TotalCostCad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCostCad);
                this.columnPayRateUsd = new global::System.Data.DataColumn("PayRateUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayRateUsd);
                this.columnBurdenRateUsd = new global::System.Data.DataColumn("BurdenRateUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBurdenRateUsd);
                this.columnTotalCostUsd = new global::System.Data.DataColumn("TotalCostUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCostUsd);
                this.columnAssignableSRS = new global::System.Data.DataColumn("AssignableSRS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssignableSRS);
                this.columnBenefitFactorCad = new global::System.Data.DataColumn("BenefitFactorCad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenefitFactorCad);
                this.columnBenefitFactorUsd = new global::System.Data.DataColumn("BenefitFactorUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenefitFactorUsd);
                this.columnJobClassType = new global::System.Data.DataColumn("JobClassType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobClassType);
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnPersonalAgencyName = new global::System.Data.DataColumn("PersonalAgencyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonalAgencyName);
                this.columnIsVacationsManager = new global::System.Data.DataColumn("IsVacationsManager", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsVacationsManager);
                this.columnApproveTimesheets = new global::System.Data.DataColumn("ApproveTimesheets", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApproveTimesheets);
                this.columnBourdenFactor = new global::System.Data.DataColumn("BourdenFactor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBourdenFactor);
                this.columnUSHealthBenefitFactor = new global::System.Data.DataColumn("USHealthBenefitFactor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSHealthBenefitFactor);
                this.columnStandardBenefitFactorCad = new global::System.Data.DataColumn("StandardBenefitFactorCad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardBenefitFactorCad);
                this.columnStandardBenefitFactorUsd = new global::System.Data.DataColumn("StandardBenefitFactorUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardBenefitFactorUsd);
                this.columnHealthBenefitUsd = new global::System.Data.DataColumn("HealthBenefitUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHealthBenefitUsd);
                this.columnCrew = new global::System.Data.DataColumn("Crew", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrew);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEmployeeID}, true));
                this.columnEmployeeID.AutoIncrement = true;
                this.columnEmployeeID.AllowDBNull = false;
                this.columnEmployeeID.ReadOnly = true;
                this.columnEmployeeID.Unique = true;
                this.columnFullName.AllowDBNull = false;
                this.columnFullName.MaxLength = 100;
                this.columnFirstName.AllowDBNull = false;
                this.columnFirstName.MaxLength = 50;
                this.columnMiddleInitial.MaxLength = 1;
                this.columnLastName.AllowDBNull = false;
                this.columnLastName.MaxLength = 50;
                this.columnType.AllowDBNull = false;
                this.columnType.MaxLength = 25;
                this.columnState.AllowDBNull = false;
                this.columnState.MaxLength = 25;
                this.columnIsSalesman.AllowDBNull = false;
                this.columnRequestProjectTime.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnSalaried.AllowDBNull = false;
                this.columneMail.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeNavigatorRow NewEmployeeNavigatorRow() {
                return ((EmployeeNavigatorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EmployeeNavigatorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EmployeeNavigatorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EmployeeNavigatorRowChanged != null)) {
                    this.EmployeeNavigatorRowChanged(this, new EmployeeNavigatorRowChangeEvent(((EmployeeNavigatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EmployeeNavigatorRowChanging != null)) {
                    this.EmployeeNavigatorRowChanging(this, new EmployeeNavigatorRowChangeEvent(((EmployeeNavigatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EmployeeNavigatorRowDeleted != null)) {
                    this.EmployeeNavigatorRowDeleted(this, new EmployeeNavigatorRowChangeEvent(((EmployeeNavigatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EmployeeNavigatorRowDeleting != null)) {
                    this.EmployeeNavigatorRowDeleting(this, new EmployeeNavigatorRowChangeEvent(((EmployeeNavigatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEmployeeNavigatorRow(EmployeeNavigatorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EmployeeNavigatorTDS ds = new EmployeeNavigatorTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EmployeeNavigatorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesmanNavigatorDataTable : global::System.Data.TypedTableBase<SalesmanNavigatorRow> {
            
            private global::System.Data.DataColumn columnSalesmanID;
            
            private global::System.Data.DataColumn columnIdForProjects;
            
            private global::System.Data.DataColumn columnInDatabase;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesmanNavigatorDataTable() {
                this.TableName = "SalesmanNavigator";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesmanNavigatorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesmanNavigatorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesmanIDColumn {
                get {
                    return this.columnSalesmanID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdForProjectsColumn {
                get {
                    return this.columnIdForProjects;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InDatabaseColumn {
                get {
                    return this.columnInDatabase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesmanNavigatorRow this[int index] {
                get {
                    return ((SalesmanNavigatorRow)(this.Rows[index]));
                }
            }
            
            public event SalesmanNavigatorRowChangeEventHandler SalesmanNavigatorRowChanging;
            
            public event SalesmanNavigatorRowChangeEventHandler SalesmanNavigatorRowChanged;
            
            public event SalesmanNavigatorRowChangeEventHandler SalesmanNavigatorRowDeleting;
            
            public event SalesmanNavigatorRowChangeEventHandler SalesmanNavigatorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesmanNavigatorRow(SalesmanNavigatorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesmanNavigatorRow AddSalesmanNavigatorRow(int SalesmanID, string IdForProjects, bool InDatabase) {
                SalesmanNavigatorRow rowSalesmanNavigatorRow = ((SalesmanNavigatorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SalesmanID,
                        IdForProjects,
                        InDatabase};
                rowSalesmanNavigatorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesmanNavigatorRow);
                return rowSalesmanNavigatorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesmanNavigatorRow FindBySalesmanID(int SalesmanID) {
                return ((SalesmanNavigatorRow)(this.Rows.Find(new object[] {
                            SalesmanID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesmanNavigatorDataTable cln = ((SalesmanNavigatorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesmanNavigatorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSalesmanID = base.Columns["SalesmanID"];
                this.columnIdForProjects = base.Columns["IdForProjects"];
                this.columnInDatabase = base.Columns["InDatabase"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSalesmanID = new global::System.Data.DataColumn("SalesmanID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesmanID);
                this.columnIdForProjects = new global::System.Data.DataColumn("IdForProjects", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdForProjects);
                this.columnInDatabase = new global::System.Data.DataColumn("InDatabase", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInDatabase);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSalesmanID}, true));
                this.columnSalesmanID.AllowDBNull = false;
                this.columnSalesmanID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesmanNavigatorRow NewSalesmanNavigatorRow() {
                return ((SalesmanNavigatorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesmanNavigatorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesmanNavigatorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesmanNavigatorRowChanged != null)) {
                    this.SalesmanNavigatorRowChanged(this, new SalesmanNavigatorRowChangeEvent(((SalesmanNavigatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesmanNavigatorRowChanging != null)) {
                    this.SalesmanNavigatorRowChanging(this, new SalesmanNavigatorRowChangeEvent(((SalesmanNavigatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesmanNavigatorRowDeleted != null)) {
                    this.SalesmanNavigatorRowDeleted(this, new SalesmanNavigatorRowChangeEvent(((SalesmanNavigatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesmanNavigatorRowDeleting != null)) {
                    this.SalesmanNavigatorRowDeleting(this, new SalesmanNavigatorRowChangeEvent(((SalesmanNavigatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesmanNavigatorRow(SalesmanNavigatorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EmployeeNavigatorTDS ds = new EmployeeNavigatorTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesmanNavigatorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EmployeeNavigatorRow : global::System.Data.DataRow {
            
            private EmployeeNavigatorDataTable tableEmployeeNavigator;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EmployeeNavigatorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEmployeeNavigator = ((EmployeeNavigatorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableEmployeeNavigator.EmployeeIDColumn]));
                }
                set {
                    this[this.tableEmployeeNavigator.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LoginID {
                get {
                    try {
                        return ((int)(this[this.tableEmployeeNavigator.LoginIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoginID\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.LoginIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContactsID {
                get {
                    try {
                        return ((int)(this[this.tableEmployeeNavigator.ContactsIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactsID\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.ContactsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FullName {
                get {
                    return ((string)(this[this.tableEmployeeNavigator.FullNameColumn]));
                }
                set {
                    this[this.tableEmployeeNavigator.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    return ((string)(this[this.tableEmployeeNavigator.FirstNameColumn]));
                }
                set {
                    this[this.tableEmployeeNavigator.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MiddleInitial {
                get {
                    try {
                        return ((string)(this[this.tableEmployeeNavigator.MiddleInitialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiddleInitial\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.MiddleInitialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastName {
                get {
                    return ((string)(this[this.tableEmployeeNavigator.LastNameColumn]));
                }
                set {
                    this[this.tableEmployeeNavigator.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    return ((string)(this[this.tableEmployeeNavigator.TypeColumn]));
                }
                set {
                    this[this.tableEmployeeNavigator.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    return ((string)(this[this.tableEmployeeNavigator.StateColumn]));
                }
                set {
                    this[this.tableEmployeeNavigator.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesman {
                get {
                    return ((bool)(this[this.tableEmployeeNavigator.IsSalesmanColumn]));
                }
                set {
                    this[this.tableEmployeeNavigator.IsSalesmanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RequestProjectTime {
                get {
                    return ((bool)(this[this.tableEmployeeNavigator.RequestProjectTimeColumn]));
                }
                set {
                    this[this.tableEmployeeNavigator.RequestProjectTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableEmployeeNavigator.DeletedColumn]));
                }
                set {
                    this[this.tableEmployeeNavigator.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Salaried {
                get {
                    return ((bool)(this[this.tableEmployeeNavigator.SalariedColumn]));
                }
                set {
                    this[this.tableEmployeeNavigator.SalariedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string eMail {
                get {
                    try {
                        return ((string)(this[this.tableEmployeeNavigator.eMailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'eMail\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.eMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InDatabase {
                get {
                    try {
                        return ((bool)(this[this.tableEmployeeNavigator.InDatabaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InDatabase\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.InDatabaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Selected {
                get {
                    try {
                        return ((bool)(this[this.tableEmployeeNavigator.SelectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selected\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.SelectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PayRateCad {
                get {
                    try {
                        return ((decimal)(this[this.tableEmployeeNavigator.PayRateCadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayRateCad\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.PayRateCadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BurdenRateCad {
                get {
                    try {
                        return ((decimal)(this[this.tableEmployeeNavigator.BurdenRateCadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BurdenRateCad\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.BurdenRateCadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalCostCad {
                get {
                    try {
                        return ((decimal)(this[this.tableEmployeeNavigator.TotalCostCadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCostCad\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.TotalCostCadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PayRateUsd {
                get {
                    try {
                        return ((decimal)(this[this.tableEmployeeNavigator.PayRateUsdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayRateUsd\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.PayRateUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BurdenRateUsd {
                get {
                    try {
                        return ((decimal)(this[this.tableEmployeeNavigator.BurdenRateUsdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BurdenRateUsd\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.BurdenRateUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalCostUsd {
                get {
                    try {
                        return ((decimal)(this[this.tableEmployeeNavigator.TotalCostUsdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCostUsd\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.TotalCostUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AssignableSRS {
                get {
                    try {
                        return ((bool)(this[this.tableEmployeeNavigator.AssignableSRSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssignableSRS\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.AssignableSRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BenefitFactorCad {
                get {
                    try {
                        return ((decimal)(this[this.tableEmployeeNavigator.BenefitFactorCadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BenefitFactorCad\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.BenefitFactorCadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BenefitFactorUsd {
                get {
                    try {
                        return ((decimal)(this[this.tableEmployeeNavigator.BenefitFactorUsdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BenefitFactorUsd\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.BenefitFactorUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobClassType {
                get {
                    try {
                        return ((string)(this[this.tableEmployeeNavigator.JobClassTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobClassType\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.JobClassTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category {
                get {
                    try {
                        return ((string)(this[this.tableEmployeeNavigator.CategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PersonalAgencyName {
                get {
                    try {
                        return ((string)(this[this.tableEmployeeNavigator.PersonalAgencyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PersonalAgencyName\' in table \'EmployeeNavigator\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.PersonalAgencyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacationsManager {
                get {
                    try {
                        return ((bool)(this[this.tableEmployeeNavigator.IsVacationsManagerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsVacationsManager\' in table \'EmployeeNavigator\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.IsVacationsManagerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ApproveTimesheets {
                get {
                    try {
                        return ((bool)(this[this.tableEmployeeNavigator.ApproveTimesheetsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApproveTimesheets\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.ApproveTimesheetsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BourdenFactor {
                get {
                    try {
                        return ((decimal)(this[this.tableEmployeeNavigator.BourdenFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BourdenFactor\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.BourdenFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USHealthBenefitFactor {
                get {
                    try {
                        return ((decimal)(this[this.tableEmployeeNavigator.USHealthBenefitFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USHealthBenefitFactor\' in table \'EmployeeNavigator\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.USHealthBenefitFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal StandardBenefitFactorCad {
                get {
                    try {
                        return ((decimal)(this[this.tableEmployeeNavigator.StandardBenefitFactorCadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandardBenefitFactorCad\' in table \'EmployeeNavigator\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.StandardBenefitFactorCadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal StandardBenefitFactorUsd {
                get {
                    try {
                        return ((decimal)(this[this.tableEmployeeNavigator.StandardBenefitFactorUsdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandardBenefitFactorUsd\' in table \'EmployeeNavigator\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.StandardBenefitFactorUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HealthBenefitUsd {
                get {
                    try {
                        return ((decimal)(this[this.tableEmployeeNavigator.HealthBenefitUsdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HealthBenefitUsd\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.HealthBenefitUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Crew {
                get {
                    try {
                        return ((string)(this[this.tableEmployeeNavigator.CrewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Crew\' in table \'EmployeeNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployeeNavigator.CrewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoginIDNull() {
                return this.IsNull(this.tableEmployeeNavigator.LoginIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoginIDNull() {
                this[this.tableEmployeeNavigator.LoginIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactsIDNull() {
                return this.IsNull(this.tableEmployeeNavigator.ContactsIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactsIDNull() {
                this[this.tableEmployeeNavigator.ContactsIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiddleInitialNull() {
                return this.IsNull(this.tableEmployeeNavigator.MiddleInitialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiddleInitialNull() {
                this[this.tableEmployeeNavigator.MiddleInitialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IseMailNull() {
                return this.IsNull(this.tableEmployeeNavigator.eMailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeteMailNull() {
                this[this.tableEmployeeNavigator.eMailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInDatabaseNull() {
                return this.IsNull(this.tableEmployeeNavigator.InDatabaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInDatabaseNull() {
                this[this.tableEmployeeNavigator.InDatabaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectedNull() {
                return this.IsNull(this.tableEmployeeNavigator.SelectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectedNull() {
                this[this.tableEmployeeNavigator.SelectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayRateCadNull() {
                return this.IsNull(this.tableEmployeeNavigator.PayRateCadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayRateCadNull() {
                this[this.tableEmployeeNavigator.PayRateCadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBurdenRateCadNull() {
                return this.IsNull(this.tableEmployeeNavigator.BurdenRateCadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBurdenRateCadNull() {
                this[this.tableEmployeeNavigator.BurdenRateCadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalCostCadNull() {
                return this.IsNull(this.tableEmployeeNavigator.TotalCostCadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalCostCadNull() {
                this[this.tableEmployeeNavigator.TotalCostCadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayRateUsdNull() {
                return this.IsNull(this.tableEmployeeNavigator.PayRateUsdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayRateUsdNull() {
                this[this.tableEmployeeNavigator.PayRateUsdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBurdenRateUsdNull() {
                return this.IsNull(this.tableEmployeeNavigator.BurdenRateUsdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBurdenRateUsdNull() {
                this[this.tableEmployeeNavigator.BurdenRateUsdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalCostUsdNull() {
                return this.IsNull(this.tableEmployeeNavigator.TotalCostUsdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalCostUsdNull() {
                this[this.tableEmployeeNavigator.TotalCostUsdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssignableSRSNull() {
                return this.IsNull(this.tableEmployeeNavigator.AssignableSRSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssignableSRSNull() {
                this[this.tableEmployeeNavigator.AssignableSRSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBenefitFactorCadNull() {
                return this.IsNull(this.tableEmployeeNavigator.BenefitFactorCadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBenefitFactorCadNull() {
                this[this.tableEmployeeNavigator.BenefitFactorCadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBenefitFactorUsdNull() {
                return this.IsNull(this.tableEmployeeNavigator.BenefitFactorUsdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBenefitFactorUsdNull() {
                this[this.tableEmployeeNavigator.BenefitFactorUsdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobClassTypeNull() {
                return this.IsNull(this.tableEmployeeNavigator.JobClassTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobClassTypeNull() {
                this[this.tableEmployeeNavigator.JobClassTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNull() {
                return this.IsNull(this.tableEmployeeNavigator.CategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNull() {
                this[this.tableEmployeeNavigator.CategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonalAgencyNameNull() {
                return this.IsNull(this.tableEmployeeNavigator.PersonalAgencyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPersonalAgencyNameNull() {
                this[this.tableEmployeeNavigator.PersonalAgencyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsVacationsManagerNull() {
                return this.IsNull(this.tableEmployeeNavigator.IsVacationsManagerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsVacationsManagerNull() {
                this[this.tableEmployeeNavigator.IsVacationsManagerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApproveTimesheetsNull() {
                return this.IsNull(this.tableEmployeeNavigator.ApproveTimesheetsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApproveTimesheetsNull() {
                this[this.tableEmployeeNavigator.ApproveTimesheetsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBourdenFactorNull() {
                return this.IsNull(this.tableEmployeeNavigator.BourdenFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBourdenFactorNull() {
                this[this.tableEmployeeNavigator.BourdenFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSHealthBenefitFactorNull() {
                return this.IsNull(this.tableEmployeeNavigator.USHealthBenefitFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSHealthBenefitFactorNull() {
                this[this.tableEmployeeNavigator.USHealthBenefitFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandardBenefitFactorCadNull() {
                return this.IsNull(this.tableEmployeeNavigator.StandardBenefitFactorCadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandardBenefitFactorCadNull() {
                this[this.tableEmployeeNavigator.StandardBenefitFactorCadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandardBenefitFactorUsdNull() {
                return this.IsNull(this.tableEmployeeNavigator.StandardBenefitFactorUsdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandardBenefitFactorUsdNull() {
                this[this.tableEmployeeNavigator.StandardBenefitFactorUsdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHealthBenefitUsdNull() {
                return this.IsNull(this.tableEmployeeNavigator.HealthBenefitUsdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHealthBenefitUsdNull() {
                this[this.tableEmployeeNavigator.HealthBenefitUsdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCrewNull() {
                return this.IsNull(this.tableEmployeeNavigator.CrewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCrewNull() {
                this[this.tableEmployeeNavigator.CrewColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesmanNavigatorRow : global::System.Data.DataRow {
            
            private SalesmanNavigatorDataTable tableSalesmanNavigator;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesmanNavigatorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesmanNavigator = ((SalesmanNavigatorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesmanID {
                get {
                    return ((int)(this[this.tableSalesmanNavigator.SalesmanIDColumn]));
                }
                set {
                    this[this.tableSalesmanNavigator.SalesmanIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IdForProjects {
                get {
                    try {
                        return ((string)(this[this.tableSalesmanNavigator.IdForProjectsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdForProjects\' in table \'SalesmanNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesmanNavigator.IdForProjectsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InDatabase {
                get {
                    try {
                        return ((bool)(this[this.tableSalesmanNavigator.InDatabaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InDatabase\' in table \'SalesmanNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesmanNavigator.InDatabaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdForProjectsNull() {
                return this.IsNull(this.tableSalesmanNavigator.IdForProjectsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdForProjectsNull() {
                this[this.tableSalesmanNavigator.IdForProjectsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInDatabaseNull() {
                return this.IsNull(this.tableSalesmanNavigator.InDatabaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInDatabaseNull() {
                this[this.tableSalesmanNavigator.InDatabaseColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EmployeeNavigatorRowChangeEvent : global::System.EventArgs {
            
            private EmployeeNavigatorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeNavigatorRowChangeEvent(EmployeeNavigatorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeNavigatorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesmanNavigatorRowChangeEvent : global::System.EventArgs {
            
            private SalesmanNavigatorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesmanNavigatorRowChangeEvent(SalesmanNavigatorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesmanNavigatorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591