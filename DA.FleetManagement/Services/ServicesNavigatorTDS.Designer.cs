//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.FleetManagement.Services {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ServicesNavigatorTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ServicesNavigatorTDS : global::System.Data.DataSet {
        
        private ServicesNavigatorDataTable tableServicesNavigator;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ServicesNavigatorTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ServicesNavigatorTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ServicesNavigator"] != null)) {
                    base.Tables.Add(new ServicesNavigatorDataTable(ds.Tables["ServicesNavigator"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ServicesNavigatorDataTable ServicesNavigator {
            get {
                return this.tableServicesNavigator;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ServicesNavigatorTDS cln = ((ServicesNavigatorTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ServicesNavigator"] != null)) {
                    base.Tables.Add(new ServicesNavigatorDataTable(ds.Tables["ServicesNavigator"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableServicesNavigator = ((ServicesNavigatorDataTable)(base.Tables["ServicesNavigator"]));
            if ((initTable == true)) {
                if ((this.tableServicesNavigator != null)) {
                    this.tableServicesNavigator.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ServicesNavigatorTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ServicesNavigatorTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableServicesNavigator = new ServicesNavigatorDataTable();
            base.Tables.Add(this.tableServicesNavigator);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeServicesNavigator() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ServicesNavigatorTDS ds = new ServicesNavigatorTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ServicesNavigatorRowChangeEventHandler(object sender, ServicesNavigatorRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ServicesNavigatorDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnServiceID;
            
            private global::System.Data.DataColumn columnServiceNumber;
            
            private global::System.Data.DataColumn columnMTO;
            
            private global::System.Data.DataColumn columnUnitCode;
            
            private global::System.Data.DataColumn columnUnitDescription;
            
            private global::System.Data.DataColumn columnProblemDescription;
            
            private global::System.Data.DataColumn columnChecklistRule;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnAssignedTo;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnCompleteDate;
            
            private global::System.Data.DataColumn columnNotes;
            
            private global::System.Data.DataColumn columnSelected;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnDeadlineDate;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnDateTime_;
            
            private global::System.Data.DataColumn columnVIN;
            
            private global::System.Data.DataColumn columnUnitState;
            
            private global::System.Data.DataColumn columnChecklistState;
            
            private global::System.Data.DataColumn columnMileage;
            
            private global::System.Data.DataColumn columnAssignDateTime;
            
            private global::System.Data.DataColumn columnAcceptDateTime;
            
            private global::System.Data.DataColumn columnStartWorkOutOfServiceDate;
            
            private global::System.Data.DataColumn columnStartWorkOutOfServiceTime;
            
            private global::System.Data.DataColumn columnStartWorkMileage;
            
            private global::System.Data.DataColumn columnCompleteWorkBackToServiceDate;
            
            private global::System.Data.DataColumn columnCompleteWorkBackToServiceTime;
            
            private global::System.Data.DataColumn columnCompleteWorkMileage;
            
            private global::System.Data.DataColumn columnCompleteWorkDetailDescription;
            
            private global::System.Data.DataColumn columnCompleteWorkDetailPreventable;
            
            private global::System.Data.DataColumn columnCompleteWorkDetailTMLabourHours;
            
            private global::System.Data.DataColumn columnWorkingLocation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServicesNavigatorDataTable() {
                this.TableName = "ServicesNavigator";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ServicesNavigatorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ServicesNavigatorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceIDColumn {
                get {
                    return this.columnServiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceNumberColumn {
                get {
                    return this.columnServiceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MTOColumn {
                get {
                    return this.columnMTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitCodeColumn {
                get {
                    return this.columnUnitCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitDescriptionColumn {
                get {
                    return this.columnUnitDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProblemDescriptionColumn {
                get {
                    return this.columnProblemDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChecklistRuleColumn {
                get {
                    return this.columnChecklistRule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssignedToColumn {
                get {
                    return this.columnAssignedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompleteDateColumn {
                get {
                    return this.columnCompleteDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectedColumn {
                get {
                    return this.columnSelected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeadlineDateColumn {
                get {
                    return this.columnDeadlineDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTime_Column {
                get {
                    return this.columnDateTime_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VINColumn {
                get {
                    return this.columnVIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitStateColumn {
                get {
                    return this.columnUnitState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChecklistStateColumn {
                get {
                    return this.columnChecklistState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MileageColumn {
                get {
                    return this.columnMileage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssignDateTimeColumn {
                get {
                    return this.columnAssignDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcceptDateTimeColumn {
                get {
                    return this.columnAcceptDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartWorkOutOfServiceDateColumn {
                get {
                    return this.columnStartWorkOutOfServiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartWorkOutOfServiceTimeColumn {
                get {
                    return this.columnStartWorkOutOfServiceTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartWorkMileageColumn {
                get {
                    return this.columnStartWorkMileage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompleteWorkBackToServiceDateColumn {
                get {
                    return this.columnCompleteWorkBackToServiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompleteWorkBackToServiceTimeColumn {
                get {
                    return this.columnCompleteWorkBackToServiceTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompleteWorkMileageColumn {
                get {
                    return this.columnCompleteWorkMileage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompleteWorkDetailDescriptionColumn {
                get {
                    return this.columnCompleteWorkDetailDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompleteWorkDetailPreventableColumn {
                get {
                    return this.columnCompleteWorkDetailPreventable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompleteWorkDetailTMLabourHoursColumn {
                get {
                    return this.columnCompleteWorkDetailTMLabourHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkingLocationColumn {
                get {
                    return this.columnWorkingLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServicesNavigatorRow this[int index] {
                get {
                    return ((ServicesNavigatorRow)(this.Rows[index]));
                }
            }
            
            public event ServicesNavigatorRowChangeEventHandler ServicesNavigatorRowChanging;
            
            public event ServicesNavigatorRowChangeEventHandler ServicesNavigatorRowChanged;
            
            public event ServicesNavigatorRowChangeEventHandler ServicesNavigatorRowDeleting;
            
            public event ServicesNavigatorRowChangeEventHandler ServicesNavigatorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddServicesNavigatorRow(ServicesNavigatorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServicesNavigatorRow AddServicesNavigatorRow(
                        int ServiceID, 
                        string ServiceNumber, 
                        bool MTO, 
                        string UnitCode, 
                        string UnitDescription, 
                        string ProblemDescription, 
                        string ChecklistRule, 
                        string CreatedBy, 
                        string AssignedTo, 
                        System.DateTime StartDate, 
                        System.DateTime CompleteDate, 
                        string Notes, 
                        bool Selected, 
                        int COMPANY_ID, 
                        bool Deleted, 
                        System.DateTime DeadlineDate, 
                        string State, 
                        System.DateTime DateTime_, 
                        string VIN, 
                        string UnitState, 
                        string ChecklistState, 
                        string Mileage, 
                        System.DateTime AssignDateTime, 
                        System.DateTime AcceptDateTime, 
                        System.DateTime StartWorkOutOfServiceDate, 
                        string StartWorkOutOfServiceTime, 
                        string StartWorkMileage, 
                        System.DateTime CompleteWorkBackToServiceDate, 
                        string CompleteWorkBackToServiceTime, 
                        string CompleteWorkMileage, 
                        string CompleteWorkDetailDescription, 
                        bool CompleteWorkDetailPreventable, 
                        decimal CompleteWorkDetailTMLabourHours, 
                        string WorkingLocation) {
                ServicesNavigatorRow rowServicesNavigatorRow = ((ServicesNavigatorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ServiceID,
                        ServiceNumber,
                        MTO,
                        UnitCode,
                        UnitDescription,
                        ProblemDescription,
                        ChecklistRule,
                        CreatedBy,
                        AssignedTo,
                        StartDate,
                        CompleteDate,
                        Notes,
                        Selected,
                        COMPANY_ID,
                        Deleted,
                        DeadlineDate,
                        State,
                        DateTime_,
                        VIN,
                        UnitState,
                        ChecklistState,
                        Mileage,
                        AssignDateTime,
                        AcceptDateTime,
                        StartWorkOutOfServiceDate,
                        StartWorkOutOfServiceTime,
                        StartWorkMileage,
                        CompleteWorkBackToServiceDate,
                        CompleteWorkBackToServiceTime,
                        CompleteWorkMileage,
                        CompleteWorkDetailDescription,
                        CompleteWorkDetailPreventable,
                        CompleteWorkDetailTMLabourHours,
                        WorkingLocation};
                rowServicesNavigatorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowServicesNavigatorRow);
                return rowServicesNavigatorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServicesNavigatorRow FindByServiceID(int ServiceID) {
                return ((ServicesNavigatorRow)(this.Rows.Find(new object[] {
                            ServiceID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ServicesNavigatorDataTable cln = ((ServicesNavigatorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ServicesNavigatorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnServiceID = base.Columns["ServiceID"];
                this.columnServiceNumber = base.Columns["ServiceNumber"];
                this.columnMTO = base.Columns["MTO"];
                this.columnUnitCode = base.Columns["UnitCode"];
                this.columnUnitDescription = base.Columns["UnitDescription"];
                this.columnProblemDescription = base.Columns["ProblemDescription"];
                this.columnChecklistRule = base.Columns["ChecklistRule"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnAssignedTo = base.Columns["AssignedTo"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnCompleteDate = base.Columns["CompleteDate"];
                this.columnNotes = base.Columns["Notes"];
                this.columnSelected = base.Columns["Selected"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnDeadlineDate = base.Columns["DeadlineDate"];
                this.columnState = base.Columns["State"];
                this.columnDateTime_ = base.Columns["DateTime_"];
                this.columnVIN = base.Columns["VIN"];
                this.columnUnitState = base.Columns["UnitState"];
                this.columnChecklistState = base.Columns["ChecklistState"];
                this.columnMileage = base.Columns["Mileage"];
                this.columnAssignDateTime = base.Columns["AssignDateTime"];
                this.columnAcceptDateTime = base.Columns["AcceptDateTime"];
                this.columnStartWorkOutOfServiceDate = base.Columns["StartWorkOutOfServiceDate"];
                this.columnStartWorkOutOfServiceTime = base.Columns["StartWorkOutOfServiceTime"];
                this.columnStartWorkMileage = base.Columns["StartWorkMileage"];
                this.columnCompleteWorkBackToServiceDate = base.Columns["CompleteWorkBackToServiceDate"];
                this.columnCompleteWorkBackToServiceTime = base.Columns["CompleteWorkBackToServiceTime"];
                this.columnCompleteWorkMileage = base.Columns["CompleteWorkMileage"];
                this.columnCompleteWorkDetailDescription = base.Columns["CompleteWorkDetailDescription"];
                this.columnCompleteWorkDetailPreventable = base.Columns["CompleteWorkDetailPreventable"];
                this.columnCompleteWorkDetailTMLabourHours = base.Columns["CompleteWorkDetailTMLabourHours"];
                this.columnWorkingLocation = base.Columns["WorkingLocation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnServiceID = new global::System.Data.DataColumn("ServiceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceID);
                this.columnServiceNumber = new global::System.Data.DataColumn("ServiceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceNumber);
                this.columnMTO = new global::System.Data.DataColumn("MTO", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTO);
                this.columnUnitCode = new global::System.Data.DataColumn("UnitCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitCode);
                this.columnUnitDescription = new global::System.Data.DataColumn("UnitDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitDescription);
                this.columnProblemDescription = new global::System.Data.DataColumn("ProblemDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProblemDescription);
                this.columnChecklistRule = new global::System.Data.DataColumn("ChecklistRule", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChecklistRule);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnAssignedTo = new global::System.Data.DataColumn("AssignedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssignedTo);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnCompleteDate = new global::System.Data.DataColumn("CompleteDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteDate);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.columnSelected = new global::System.Data.DataColumn("Selected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelected);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnDeadlineDate = new global::System.Data.DataColumn("DeadlineDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeadlineDate);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnDateTime_ = new global::System.Data.DataColumn("DateTime_", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTime_);
                this.columnVIN = new global::System.Data.DataColumn("VIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIN);
                this.columnUnitState = new global::System.Data.DataColumn("UnitState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitState);
                this.columnChecklistState = new global::System.Data.DataColumn("ChecklistState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChecklistState);
                this.columnMileage = new global::System.Data.DataColumn("Mileage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMileage);
                this.columnAssignDateTime = new global::System.Data.DataColumn("AssignDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssignDateTime);
                this.columnAcceptDateTime = new global::System.Data.DataColumn("AcceptDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptDateTime);
                this.columnStartWorkOutOfServiceDate = new global::System.Data.DataColumn("StartWorkOutOfServiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartWorkOutOfServiceDate);
                this.columnStartWorkOutOfServiceTime = new global::System.Data.DataColumn("StartWorkOutOfServiceTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartWorkOutOfServiceTime);
                this.columnStartWorkMileage = new global::System.Data.DataColumn("StartWorkMileage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartWorkMileage);
                this.columnCompleteWorkBackToServiceDate = new global::System.Data.DataColumn("CompleteWorkBackToServiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteWorkBackToServiceDate);
                this.columnCompleteWorkBackToServiceTime = new global::System.Data.DataColumn("CompleteWorkBackToServiceTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteWorkBackToServiceTime);
                this.columnCompleteWorkMileage = new global::System.Data.DataColumn("CompleteWorkMileage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteWorkMileage);
                this.columnCompleteWorkDetailDescription = new global::System.Data.DataColumn("CompleteWorkDetailDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteWorkDetailDescription);
                this.columnCompleteWorkDetailPreventable = new global::System.Data.DataColumn("CompleteWorkDetailPreventable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteWorkDetailPreventable);
                this.columnCompleteWorkDetailTMLabourHours = new global::System.Data.DataColumn("CompleteWorkDetailTMLabourHours", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteWorkDetailTMLabourHours);
                this.columnWorkingLocation = new global::System.Data.DataColumn("WorkingLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkingLocation);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnServiceID}, true));
                this.columnServiceID.AllowDBNull = false;
                this.columnServiceID.Unique = true;
                this.columnUnitCode.AllowDBNull = false;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnSelected.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServicesNavigatorRow NewServicesNavigatorRow() {
                return ((ServicesNavigatorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ServicesNavigatorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ServicesNavigatorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ServicesNavigatorRowChanged != null)) {
                    this.ServicesNavigatorRowChanged(this, new ServicesNavigatorRowChangeEvent(((ServicesNavigatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ServicesNavigatorRowChanging != null)) {
                    this.ServicesNavigatorRowChanging(this, new ServicesNavigatorRowChangeEvent(((ServicesNavigatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ServicesNavigatorRowDeleted != null)) {
                    this.ServicesNavigatorRowDeleted(this, new ServicesNavigatorRowChangeEvent(((ServicesNavigatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ServicesNavigatorRowDeleting != null)) {
                    this.ServicesNavigatorRowDeleting(this, new ServicesNavigatorRowChangeEvent(((ServicesNavigatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveServicesNavigatorRow(ServicesNavigatorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ServicesNavigatorTDS ds = new ServicesNavigatorTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ServicesNavigatorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ServicesNavigatorRow : global::System.Data.DataRow {
            
            private ServicesNavigatorDataTable tableServicesNavigator;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ServicesNavigatorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableServicesNavigator = ((ServicesNavigatorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ServiceID {
                get {
                    return ((int)(this[this.tableServicesNavigator.ServiceIDColumn]));
                }
                set {
                    this[this.tableServicesNavigator.ServiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ServiceNumber {
                get {
                    try {
                        return ((string)(this[this.tableServicesNavigator.ServiceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceNumber\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.ServiceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool MTO {
                get {
                    try {
                        return ((bool)(this[this.tableServicesNavigator.MTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTO\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.MTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitCode {
                get {
                    return ((string)(this[this.tableServicesNavigator.UnitCodeColumn]));
                }
                set {
                    this[this.tableServicesNavigator.UnitCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitDescription {
                get {
                    try {
                        return ((string)(this[this.tableServicesNavigator.UnitDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitDescription\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.UnitDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProblemDescription {
                get {
                    try {
                        return ((string)(this[this.tableServicesNavigator.ProblemDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProblemDescription\' in table \'ServicesNavigator\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.ProblemDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChecklistRule {
                get {
                    try {
                        return ((string)(this[this.tableServicesNavigator.ChecklistRuleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChecklistRule\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.ChecklistRuleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableServicesNavigator.CreatedByColumn]));
                }
                set {
                    this[this.tableServicesNavigator.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssignedTo {
                get {
                    try {
                        return ((string)(this[this.tableServicesNavigator.AssignedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssignedTo\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.AssignedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableServicesNavigator.StartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartDate\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CompleteDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableServicesNavigator.CompleteDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompleteDate\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.CompleteDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tableServicesNavigator.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Notes\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Selected {
                get {
                    return ((bool)(this[this.tableServicesNavigator.SelectedColumn]));
                }
                set {
                    this[this.tableServicesNavigator.SelectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableServicesNavigator.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableServicesNavigator.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableServicesNavigator.DeletedColumn]));
                }
                set {
                    this[this.tableServicesNavigator.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeadlineDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableServicesNavigator.DeadlineDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeadlineDate\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.DeadlineDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableServicesNavigator.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTime_ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableServicesNavigator.DateTime_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTime_\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.DateTime_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VIN {
                get {
                    try {
                        return ((string)(this[this.tableServicesNavigator.VINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VIN\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.VINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitState {
                get {
                    try {
                        return ((string)(this[this.tableServicesNavigator.UnitStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitState\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.UnitStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChecklistState {
                get {
                    try {
                        return ((string)(this[this.tableServicesNavigator.ChecklistStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChecklistState\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.ChecklistStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mileage {
                get {
                    try {
                        return ((string)(this[this.tableServicesNavigator.MileageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mileage\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.MileageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AssignDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableServicesNavigator.AssignDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssignDateTime\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.AssignDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AcceptDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableServicesNavigator.AcceptDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcceptDateTime\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.AcceptDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartWorkOutOfServiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableServicesNavigator.StartWorkOutOfServiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartWorkOutOfServiceDate\' in table \'ServicesNavigator\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.StartWorkOutOfServiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StartWorkOutOfServiceTime {
                get {
                    try {
                        return ((string)(this[this.tableServicesNavigator.StartWorkOutOfServiceTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartWorkOutOfServiceTime\' in table \'ServicesNavigator\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.StartWorkOutOfServiceTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StartWorkMileage {
                get {
                    try {
                        return ((string)(this[this.tableServicesNavigator.StartWorkMileageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartWorkMileage\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.StartWorkMileageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CompleteWorkBackToServiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableServicesNavigator.CompleteWorkBackToServiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompleteWorkBackToServiceDate\' in table \'ServicesNavigator\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.CompleteWorkBackToServiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompleteWorkBackToServiceTime {
                get {
                    try {
                        return ((string)(this[this.tableServicesNavigator.CompleteWorkBackToServiceTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompleteWorkBackToServiceTime\' in table \'ServicesNavigator\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.CompleteWorkBackToServiceTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompleteWorkMileage {
                get {
                    try {
                        return ((string)(this[this.tableServicesNavigator.CompleteWorkMileageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompleteWorkMileage\' in table \'ServicesNavigator\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.CompleteWorkMileageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompleteWorkDetailDescription {
                get {
                    try {
                        return ((string)(this[this.tableServicesNavigator.CompleteWorkDetailDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompleteWorkDetailDescription\' in table \'ServicesNavigator\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.CompleteWorkDetailDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CompleteWorkDetailPreventable {
                get {
                    try {
                        return ((bool)(this[this.tableServicesNavigator.CompleteWorkDetailPreventableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompleteWorkDetailPreventable\' in table \'ServicesNavigator\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.CompleteWorkDetailPreventableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CompleteWorkDetailTMLabourHours {
                get {
                    try {
                        return ((decimal)(this[this.tableServicesNavigator.CompleteWorkDetailTMLabourHoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompleteWorkDetailTMLabourHours\' in table \'ServicesNavigato" +
                                "r\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.CompleteWorkDetailTMLabourHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkingLocation {
                get {
                    try {
                        return ((string)(this[this.tableServicesNavigator.WorkingLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkingLocation\' in table \'ServicesNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServicesNavigator.WorkingLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceNumberNull() {
                return this.IsNull(this.tableServicesNavigator.ServiceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceNumberNull() {
                this[this.tableServicesNavigator.ServiceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMTONull() {
                return this.IsNull(this.tableServicesNavigator.MTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMTONull() {
                this[this.tableServicesNavigator.MTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitDescriptionNull() {
                return this.IsNull(this.tableServicesNavigator.UnitDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitDescriptionNull() {
                this[this.tableServicesNavigator.UnitDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProblemDescriptionNull() {
                return this.IsNull(this.tableServicesNavigator.ProblemDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProblemDescriptionNull() {
                this[this.tableServicesNavigator.ProblemDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChecklistRuleNull() {
                return this.IsNull(this.tableServicesNavigator.ChecklistRuleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChecklistRuleNull() {
                this[this.tableServicesNavigator.ChecklistRuleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssignedToNull() {
                return this.IsNull(this.tableServicesNavigator.AssignedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssignedToNull() {
                this[this.tableServicesNavigator.AssignedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartDateNull() {
                return this.IsNull(this.tableServicesNavigator.StartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartDateNull() {
                this[this.tableServicesNavigator.StartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompleteDateNull() {
                return this.IsNull(this.tableServicesNavigator.CompleteDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompleteDateNull() {
                this[this.tableServicesNavigator.CompleteDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotesNull() {
                return this.IsNull(this.tableServicesNavigator.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotesNull() {
                this[this.tableServicesNavigator.NotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeadlineDateNull() {
                return this.IsNull(this.tableServicesNavigator.DeadlineDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeadlineDateNull() {
                this[this.tableServicesNavigator.DeadlineDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableServicesNavigator.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableServicesNavigator.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTime_Null() {
                return this.IsNull(this.tableServicesNavigator.DateTime_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTime_Null() {
                this[this.tableServicesNavigator.DateTime_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVINNull() {
                return this.IsNull(this.tableServicesNavigator.VINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVINNull() {
                this[this.tableServicesNavigator.VINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitStateNull() {
                return this.IsNull(this.tableServicesNavigator.UnitStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitStateNull() {
                this[this.tableServicesNavigator.UnitStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChecklistStateNull() {
                return this.IsNull(this.tableServicesNavigator.ChecklistStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChecklistStateNull() {
                this[this.tableServicesNavigator.ChecklistStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMileageNull() {
                return this.IsNull(this.tableServicesNavigator.MileageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMileageNull() {
                this[this.tableServicesNavigator.MileageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssignDateTimeNull() {
                return this.IsNull(this.tableServicesNavigator.AssignDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssignDateTimeNull() {
                this[this.tableServicesNavigator.AssignDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcceptDateTimeNull() {
                return this.IsNull(this.tableServicesNavigator.AcceptDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcceptDateTimeNull() {
                this[this.tableServicesNavigator.AcceptDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartWorkOutOfServiceDateNull() {
                return this.IsNull(this.tableServicesNavigator.StartWorkOutOfServiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartWorkOutOfServiceDateNull() {
                this[this.tableServicesNavigator.StartWorkOutOfServiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartWorkOutOfServiceTimeNull() {
                return this.IsNull(this.tableServicesNavigator.StartWorkOutOfServiceTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartWorkOutOfServiceTimeNull() {
                this[this.tableServicesNavigator.StartWorkOutOfServiceTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartWorkMileageNull() {
                return this.IsNull(this.tableServicesNavigator.StartWorkMileageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartWorkMileageNull() {
                this[this.tableServicesNavigator.StartWorkMileageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompleteWorkBackToServiceDateNull() {
                return this.IsNull(this.tableServicesNavigator.CompleteWorkBackToServiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompleteWorkBackToServiceDateNull() {
                this[this.tableServicesNavigator.CompleteWorkBackToServiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompleteWorkBackToServiceTimeNull() {
                return this.IsNull(this.tableServicesNavigator.CompleteWorkBackToServiceTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompleteWorkBackToServiceTimeNull() {
                this[this.tableServicesNavigator.CompleteWorkBackToServiceTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompleteWorkMileageNull() {
                return this.IsNull(this.tableServicesNavigator.CompleteWorkMileageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompleteWorkMileageNull() {
                this[this.tableServicesNavigator.CompleteWorkMileageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompleteWorkDetailDescriptionNull() {
                return this.IsNull(this.tableServicesNavigator.CompleteWorkDetailDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompleteWorkDetailDescriptionNull() {
                this[this.tableServicesNavigator.CompleteWorkDetailDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompleteWorkDetailPreventableNull() {
                return this.IsNull(this.tableServicesNavigator.CompleteWorkDetailPreventableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompleteWorkDetailPreventableNull() {
                this[this.tableServicesNavigator.CompleteWorkDetailPreventableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompleteWorkDetailTMLabourHoursNull() {
                return this.IsNull(this.tableServicesNavigator.CompleteWorkDetailTMLabourHoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompleteWorkDetailTMLabourHoursNull() {
                this[this.tableServicesNavigator.CompleteWorkDetailTMLabourHoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkingLocationNull() {
                return this.IsNull(this.tableServicesNavigator.WorkingLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkingLocationNull() {
                this[this.tableServicesNavigator.WorkingLocationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ServicesNavigatorRowChangeEvent : global::System.EventArgs {
            
            private ServicesNavigatorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServicesNavigatorRowChangeEvent(ServicesNavigatorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServicesNavigatorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591