//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.FleetManagement.Services {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ServicesTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ServicesTDS : global::System.Data.DataSet {
        
        private LFS_FM_SERVICEDataTable tableLFS_FM_SERVICE;
        
        private LFS_FM_SERVICE_COSTDataTable tableLFS_FM_SERVICE_COST;
        
        private LFS_FM_SERVICE_NOTEDataTable tableLFS_FM_SERVICE_NOTE;
        
        private LFS_FM_SERVICE_VEHICLEDataTable tableLFS_FM_SERVICE_VEHICLE;
        
        private global::System.Data.DataRelation relationFK_LFS_FM_SERVICE_COST_LFS_FM_SERVICE;
        
        private global::System.Data.DataRelation relationFK_LFS_FM_SERVICE_NOTE_LFS_FM_SERVICE;
        
        private global::System.Data.DataRelation relationFK_LFS_FM_SERVICE_VEHICLE_LFS_FM_SERVICE;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ServicesTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ServicesTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LFS_FM_SERVICE"] != null)) {
                    base.Tables.Add(new LFS_FM_SERVICEDataTable(ds.Tables["LFS_FM_SERVICE"]));
                }
                if ((ds.Tables["LFS_FM_SERVICE_COST"] != null)) {
                    base.Tables.Add(new LFS_FM_SERVICE_COSTDataTable(ds.Tables["LFS_FM_SERVICE_COST"]));
                }
                if ((ds.Tables["LFS_FM_SERVICE_NOTE"] != null)) {
                    base.Tables.Add(new LFS_FM_SERVICE_NOTEDataTable(ds.Tables["LFS_FM_SERVICE_NOTE"]));
                }
                if ((ds.Tables["LFS_FM_SERVICE_VEHICLE"] != null)) {
                    base.Tables.Add(new LFS_FM_SERVICE_VEHICLEDataTable(ds.Tables["LFS_FM_SERVICE_VEHICLE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_FM_SERVICEDataTable LFS_FM_SERVICE {
            get {
                return this.tableLFS_FM_SERVICE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_FM_SERVICE_COSTDataTable LFS_FM_SERVICE_COST {
            get {
                return this.tableLFS_FM_SERVICE_COST;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_FM_SERVICE_NOTEDataTable LFS_FM_SERVICE_NOTE {
            get {
                return this.tableLFS_FM_SERVICE_NOTE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_FM_SERVICE_VEHICLEDataTable LFS_FM_SERVICE_VEHICLE {
            get {
                return this.tableLFS_FM_SERVICE_VEHICLE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ServicesTDS cln = ((ServicesTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LFS_FM_SERVICE"] != null)) {
                    base.Tables.Add(new LFS_FM_SERVICEDataTable(ds.Tables["LFS_FM_SERVICE"]));
                }
                if ((ds.Tables["LFS_FM_SERVICE_COST"] != null)) {
                    base.Tables.Add(new LFS_FM_SERVICE_COSTDataTable(ds.Tables["LFS_FM_SERVICE_COST"]));
                }
                if ((ds.Tables["LFS_FM_SERVICE_NOTE"] != null)) {
                    base.Tables.Add(new LFS_FM_SERVICE_NOTEDataTable(ds.Tables["LFS_FM_SERVICE_NOTE"]));
                }
                if ((ds.Tables["LFS_FM_SERVICE_VEHICLE"] != null)) {
                    base.Tables.Add(new LFS_FM_SERVICE_VEHICLEDataTable(ds.Tables["LFS_FM_SERVICE_VEHICLE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableLFS_FM_SERVICE = ((LFS_FM_SERVICEDataTable)(base.Tables["LFS_FM_SERVICE"]));
            if ((initTable == true)) {
                if ((this.tableLFS_FM_SERVICE != null)) {
                    this.tableLFS_FM_SERVICE.InitVars();
                }
            }
            this.tableLFS_FM_SERVICE_COST = ((LFS_FM_SERVICE_COSTDataTable)(base.Tables["LFS_FM_SERVICE_COST"]));
            if ((initTable == true)) {
                if ((this.tableLFS_FM_SERVICE_COST != null)) {
                    this.tableLFS_FM_SERVICE_COST.InitVars();
                }
            }
            this.tableLFS_FM_SERVICE_NOTE = ((LFS_FM_SERVICE_NOTEDataTable)(base.Tables["LFS_FM_SERVICE_NOTE"]));
            if ((initTable == true)) {
                if ((this.tableLFS_FM_SERVICE_NOTE != null)) {
                    this.tableLFS_FM_SERVICE_NOTE.InitVars();
                }
            }
            this.tableLFS_FM_SERVICE_VEHICLE = ((LFS_FM_SERVICE_VEHICLEDataTable)(base.Tables["LFS_FM_SERVICE_VEHICLE"]));
            if ((initTable == true)) {
                if ((this.tableLFS_FM_SERVICE_VEHICLE != null)) {
                    this.tableLFS_FM_SERVICE_VEHICLE.InitVars();
                }
            }
            this.relationFK_LFS_FM_SERVICE_COST_LFS_FM_SERVICE = this.Relations["FK_LFS_FM_SERVICE_COST_LFS_FM_SERVICE"];
            this.relationFK_LFS_FM_SERVICE_NOTE_LFS_FM_SERVICE = this.Relations["FK_LFS_FM_SERVICE_NOTE_LFS_FM_SERVICE"];
            this.relationFK_LFS_FM_SERVICE_VEHICLE_LFS_FM_SERVICE = this.Relations["FK_LFS_FM_SERVICE_VEHICLE_LFS_FM_SERVICE"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ServicesTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ServicesTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLFS_FM_SERVICE = new LFS_FM_SERVICEDataTable();
            base.Tables.Add(this.tableLFS_FM_SERVICE);
            this.tableLFS_FM_SERVICE_COST = new LFS_FM_SERVICE_COSTDataTable();
            base.Tables.Add(this.tableLFS_FM_SERVICE_COST);
            this.tableLFS_FM_SERVICE_NOTE = new LFS_FM_SERVICE_NOTEDataTable();
            base.Tables.Add(this.tableLFS_FM_SERVICE_NOTE);
            this.tableLFS_FM_SERVICE_VEHICLE = new LFS_FM_SERVICE_VEHICLEDataTable();
            base.Tables.Add(this.tableLFS_FM_SERVICE_VEHICLE);
            this.relationFK_LFS_FM_SERVICE_COST_LFS_FM_SERVICE = new global::System.Data.DataRelation("FK_LFS_FM_SERVICE_COST_LFS_FM_SERVICE", new global::System.Data.DataColumn[] {
                        this.tableLFS_FM_SERVICE.ServiceIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_FM_SERVICE_COST.ServiceIDColumn}, false);
            this.Relations.Add(this.relationFK_LFS_FM_SERVICE_COST_LFS_FM_SERVICE);
            this.relationFK_LFS_FM_SERVICE_NOTE_LFS_FM_SERVICE = new global::System.Data.DataRelation("FK_LFS_FM_SERVICE_NOTE_LFS_FM_SERVICE", new global::System.Data.DataColumn[] {
                        this.tableLFS_FM_SERVICE.ServiceIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_FM_SERVICE_NOTE.ServiceIDColumn}, false);
            this.Relations.Add(this.relationFK_LFS_FM_SERVICE_NOTE_LFS_FM_SERVICE);
            this.relationFK_LFS_FM_SERVICE_VEHICLE_LFS_FM_SERVICE = new global::System.Data.DataRelation("FK_LFS_FM_SERVICE_VEHICLE_LFS_FM_SERVICE", new global::System.Data.DataColumn[] {
                        this.tableLFS_FM_SERVICE.ServiceIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_FM_SERVICE_VEHICLE.ServiceIDColumn}, false);
            this.Relations.Add(this.relationFK_LFS_FM_SERVICE_VEHICLE_LFS_FM_SERVICE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_FM_SERVICE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_FM_SERVICE_COST() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_FM_SERVICE_NOTE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_FM_SERVICE_VEHICLE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ServicesTDS ds = new ServicesTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void LFS_FM_SERVICERowChangeEventHandler(object sender, LFS_FM_SERVICERowChangeEvent e);
        
        public delegate void LFS_FM_SERVICE_COSTRowChangeEventHandler(object sender, LFS_FM_SERVICE_COSTRowChangeEvent e);
        
        public delegate void LFS_FM_SERVICE_NOTERowChangeEventHandler(object sender, LFS_FM_SERVICE_NOTERowChangeEvent e);
        
        public delegate void LFS_FM_SERVICE_VEHICLERowChangeEventHandler(object sender, LFS_FM_SERVICE_VEHICLERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_FM_SERVICEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnServiceID;
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnDateTime_;
            
            private global::System.Data.DataColumn columnMTO;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnUnitID;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnOwnerID;
            
            private global::System.Data.DataColumn columnAssignDateTime;
            
            private global::System.Data.DataColumn columnAssignDeadlineDate;
            
            private global::System.Data.DataColumn columnAssignTeamMember;
            
            private global::System.Data.DataColumn columnAssignTeamMemberID;
            
            private global::System.Data.DataColumn columnAssignThirdPartyVendor;
            
            private global::System.Data.DataColumn columnAcceptDateTime;
            
            private global::System.Data.DataColumn columnRejectDateTime;
            
            private global::System.Data.DataColumn columnRejectReason;
            
            private global::System.Data.DataColumn columnStartWorkDateTime;
            
            private global::System.Data.DataColumn columnStartWorkOutOfServiceDate;
            
            private global::System.Data.DataColumn columnStartWorkOutOfServiceTime;
            
            private global::System.Data.DataColumn columnCompleteWorkDateTime;
            
            private global::System.Data.DataColumn columnCompleteWorkBackToServiceDate;
            
            private global::System.Data.DataColumn columnCompleteWorkBackToServiceTime;
            
            private global::System.Data.DataColumn columnCompleteWorkDetailDescription;
            
            private global::System.Data.DataColumn columnCompleteWorkDetailPreventable;
            
            private global::System.Data.DataColumn columnCompleteWorkDetailTMLabourHours;
            
            private global::System.Data.DataColumn columnCompleteWorkDetailTMCost;
            
            private global::System.Data.DataColumn columnCompleteWorkDetailTPVInvoiceNumber;
            
            private global::System.Data.DataColumn columnCompleteWorkDetailTPVInvoiceAmout;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnNotes;
            
            private global::System.Data.DataColumn columnRuleID;
            
            private global::System.Data.DataColumn columnLIBRARY_CATEGORIES_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICEDataTable() {
                this.TableName = "LFS_FM_SERVICE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_FM_SERVICEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_FM_SERVICEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceIDColumn {
                get {
                    return this.columnServiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTime_Column {
                get {
                    return this.columnDateTime_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MTOColumn {
                get {
                    return this.columnMTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitIDColumn {
                get {
                    return this.columnUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerIDColumn {
                get {
                    return this.columnOwnerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssignDateTimeColumn {
                get {
                    return this.columnAssignDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssignDeadlineDateColumn {
                get {
                    return this.columnAssignDeadlineDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssignTeamMemberColumn {
                get {
                    return this.columnAssignTeamMember;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssignTeamMemberIDColumn {
                get {
                    return this.columnAssignTeamMemberID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssignThirdPartyVendorColumn {
                get {
                    return this.columnAssignThirdPartyVendor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcceptDateTimeColumn {
                get {
                    return this.columnAcceptDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RejectDateTimeColumn {
                get {
                    return this.columnRejectDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RejectReasonColumn {
                get {
                    return this.columnRejectReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartWorkDateTimeColumn {
                get {
                    return this.columnStartWorkDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartWorkOutOfServiceDateColumn {
                get {
                    return this.columnStartWorkOutOfServiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartWorkOutOfServiceTimeColumn {
                get {
                    return this.columnStartWorkOutOfServiceTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompleteWorkDateTimeColumn {
                get {
                    return this.columnCompleteWorkDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompleteWorkBackToServiceDateColumn {
                get {
                    return this.columnCompleteWorkBackToServiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompleteWorkBackToServiceTimeColumn {
                get {
                    return this.columnCompleteWorkBackToServiceTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompleteWorkDetailDescriptionColumn {
                get {
                    return this.columnCompleteWorkDetailDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompleteWorkDetailPreventableColumn {
                get {
                    return this.columnCompleteWorkDetailPreventable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompleteWorkDetailTMLabourHoursColumn {
                get {
                    return this.columnCompleteWorkDetailTMLabourHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompleteWorkDetailTMCostColumn {
                get {
                    return this.columnCompleteWorkDetailTMCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompleteWorkDetailTPVInvoiceNumberColumn {
                get {
                    return this.columnCompleteWorkDetailTPVInvoiceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompleteWorkDetailTPVInvoiceAmoutColumn {
                get {
                    return this.columnCompleteWorkDetailTPVInvoiceAmout;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RuleIDColumn {
                get {
                    return this.columnRuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIBRARY_CATEGORIES_IDColumn {
                get {
                    return this.columnLIBRARY_CATEGORIES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICERow this[int index] {
                get {
                    return ((LFS_FM_SERVICERow)(this.Rows[index]));
                }
            }
            
            public event LFS_FM_SERVICERowChangeEventHandler LFS_FM_SERVICERowChanging;
            
            public event LFS_FM_SERVICERowChangeEventHandler LFS_FM_SERVICERowChanged;
            
            public event LFS_FM_SERVICERowChangeEventHandler LFS_FM_SERVICERowDeleting;
            
            public event LFS_FM_SERVICERowChangeEventHandler LFS_FM_SERVICERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_FM_SERVICERow(LFS_FM_SERVICERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICERow AddLFS_FM_SERVICERow(
                        string Number, 
                        System.DateTime DateTime_, 
                        bool MTO, 
                        string Description, 
                        int UnitID, 
                        string Type, 
                        string State, 
                        int OwnerID, 
                        System.DateTime AssignDateTime, 
                        System.DateTime AssignDeadlineDate, 
                        bool AssignTeamMember, 
                        int AssignTeamMemberID, 
                        string AssignThirdPartyVendor, 
                        System.DateTime AcceptDateTime, 
                        System.DateTime RejectDateTime, 
                        string RejectReason, 
                        System.DateTime StartWorkDateTime, 
                        System.DateTime StartWorkOutOfServiceDate, 
                        string StartWorkOutOfServiceTime, 
                        System.DateTime CompleteWorkDateTime, 
                        System.DateTime CompleteWorkBackToServiceDate, 
                        string CompleteWorkBackToServiceTime, 
                        string CompleteWorkDetailDescription, 
                        bool CompleteWorkDetailPreventable, 
                        double CompleteWorkDetailTMLabourHours, 
                        decimal CompleteWorkDetailTMCost, 
                        string CompleteWorkDetailTPVInvoiceNumber, 
                        decimal CompleteWorkDetailTPVInvoiceAmout, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        string Notes, 
                        int RuleID, 
                        int LIBRARY_CATEGORIES_ID) {
                LFS_FM_SERVICERow rowLFS_FM_SERVICERow = ((LFS_FM_SERVICERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Number,
                        DateTime_,
                        MTO,
                        Description,
                        UnitID,
                        Type,
                        State,
                        OwnerID,
                        AssignDateTime,
                        AssignDeadlineDate,
                        AssignTeamMember,
                        AssignTeamMemberID,
                        AssignThirdPartyVendor,
                        AcceptDateTime,
                        RejectDateTime,
                        RejectReason,
                        StartWorkDateTime,
                        StartWorkOutOfServiceDate,
                        StartWorkOutOfServiceTime,
                        CompleteWorkDateTime,
                        CompleteWorkBackToServiceDate,
                        CompleteWorkBackToServiceTime,
                        CompleteWorkDetailDescription,
                        CompleteWorkDetailPreventable,
                        CompleteWorkDetailTMLabourHours,
                        CompleteWorkDetailTMCost,
                        CompleteWorkDetailTPVInvoiceNumber,
                        CompleteWorkDetailTPVInvoiceAmout,
                        Deleted,
                        COMPANY_ID,
                        Notes,
                        RuleID,
                        LIBRARY_CATEGORIES_ID};
                rowLFS_FM_SERVICERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_FM_SERVICERow);
                return rowLFS_FM_SERVICERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICERow FindByServiceID(int ServiceID) {
                return ((LFS_FM_SERVICERow)(this.Rows.Find(new object[] {
                            ServiceID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_FM_SERVICEDataTable cln = ((LFS_FM_SERVICEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_FM_SERVICEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnServiceID = base.Columns["ServiceID"];
                this.columnNumber = base.Columns["Number"];
                this.columnDateTime_ = base.Columns["DateTime_"];
                this.columnMTO = base.Columns["MTO"];
                this.columnDescription = base.Columns["Description"];
                this.columnUnitID = base.Columns["UnitID"];
                this.columnType = base.Columns["Type"];
                this.columnState = base.Columns["State"];
                this.columnOwnerID = base.Columns["OwnerID"];
                this.columnAssignDateTime = base.Columns["AssignDateTime"];
                this.columnAssignDeadlineDate = base.Columns["AssignDeadlineDate"];
                this.columnAssignTeamMember = base.Columns["AssignTeamMember"];
                this.columnAssignTeamMemberID = base.Columns["AssignTeamMemberID"];
                this.columnAssignThirdPartyVendor = base.Columns["AssignThirdPartyVendor"];
                this.columnAcceptDateTime = base.Columns["AcceptDateTime"];
                this.columnRejectDateTime = base.Columns["RejectDateTime"];
                this.columnRejectReason = base.Columns["RejectReason"];
                this.columnStartWorkDateTime = base.Columns["StartWorkDateTime"];
                this.columnStartWorkOutOfServiceDate = base.Columns["StartWorkOutOfServiceDate"];
                this.columnStartWorkOutOfServiceTime = base.Columns["StartWorkOutOfServiceTime"];
                this.columnCompleteWorkDateTime = base.Columns["CompleteWorkDateTime"];
                this.columnCompleteWorkBackToServiceDate = base.Columns["CompleteWorkBackToServiceDate"];
                this.columnCompleteWorkBackToServiceTime = base.Columns["CompleteWorkBackToServiceTime"];
                this.columnCompleteWorkDetailDescription = base.Columns["CompleteWorkDetailDescription"];
                this.columnCompleteWorkDetailPreventable = base.Columns["CompleteWorkDetailPreventable"];
                this.columnCompleteWorkDetailTMLabourHours = base.Columns["CompleteWorkDetailTMLabourHours"];
                this.columnCompleteWorkDetailTMCost = base.Columns["CompleteWorkDetailTMCost"];
                this.columnCompleteWorkDetailTPVInvoiceNumber = base.Columns["CompleteWorkDetailTPVInvoiceNumber"];
                this.columnCompleteWorkDetailTPVInvoiceAmout = base.Columns["CompleteWorkDetailTPVInvoiceAmout"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnNotes = base.Columns["Notes"];
                this.columnRuleID = base.Columns["RuleID"];
                this.columnLIBRARY_CATEGORIES_ID = base.Columns["LIBRARY_CATEGORIES_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnServiceID = new global::System.Data.DataColumn("ServiceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceID);
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnDateTime_ = new global::System.Data.DataColumn("DateTime_", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTime_);
                this.columnMTO = new global::System.Data.DataColumn("MTO", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTO);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnUnitID = new global::System.Data.DataColumn("UnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitID);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnOwnerID = new global::System.Data.DataColumn("OwnerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerID);
                this.columnAssignDateTime = new global::System.Data.DataColumn("AssignDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssignDateTime);
                this.columnAssignDeadlineDate = new global::System.Data.DataColumn("AssignDeadlineDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssignDeadlineDate);
                this.columnAssignTeamMember = new global::System.Data.DataColumn("AssignTeamMember", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssignTeamMember);
                this.columnAssignTeamMemberID = new global::System.Data.DataColumn("AssignTeamMemberID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssignTeamMemberID);
                this.columnAssignThirdPartyVendor = new global::System.Data.DataColumn("AssignThirdPartyVendor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssignThirdPartyVendor);
                this.columnAcceptDateTime = new global::System.Data.DataColumn("AcceptDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptDateTime);
                this.columnRejectDateTime = new global::System.Data.DataColumn("RejectDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRejectDateTime);
                this.columnRejectReason = new global::System.Data.DataColumn("RejectReason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRejectReason);
                this.columnStartWorkDateTime = new global::System.Data.DataColumn("StartWorkDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartWorkDateTime);
                this.columnStartWorkOutOfServiceDate = new global::System.Data.DataColumn("StartWorkOutOfServiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartWorkOutOfServiceDate);
                this.columnStartWorkOutOfServiceTime = new global::System.Data.DataColumn("StartWorkOutOfServiceTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartWorkOutOfServiceTime);
                this.columnCompleteWorkDateTime = new global::System.Data.DataColumn("CompleteWorkDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteWorkDateTime);
                this.columnCompleteWorkBackToServiceDate = new global::System.Data.DataColumn("CompleteWorkBackToServiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteWorkBackToServiceDate);
                this.columnCompleteWorkBackToServiceTime = new global::System.Data.DataColumn("CompleteWorkBackToServiceTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteWorkBackToServiceTime);
                this.columnCompleteWorkDetailDescription = new global::System.Data.DataColumn("CompleteWorkDetailDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteWorkDetailDescription);
                this.columnCompleteWorkDetailPreventable = new global::System.Data.DataColumn("CompleteWorkDetailPreventable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteWorkDetailPreventable);
                this.columnCompleteWorkDetailTMLabourHours = new global::System.Data.DataColumn("CompleteWorkDetailTMLabourHours", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteWorkDetailTMLabourHours);
                this.columnCompleteWorkDetailTMCost = new global::System.Data.DataColumn("CompleteWorkDetailTMCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteWorkDetailTMCost);
                this.columnCompleteWorkDetailTPVInvoiceNumber = new global::System.Data.DataColumn("CompleteWorkDetailTPVInvoiceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteWorkDetailTPVInvoiceNumber);
                this.columnCompleteWorkDetailTPVInvoiceAmout = new global::System.Data.DataColumn("CompleteWorkDetailTPVInvoiceAmout", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteWorkDetailTPVInvoiceAmout);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.columnRuleID = new global::System.Data.DataColumn("RuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleID);
                this.columnLIBRARY_CATEGORIES_ID = new global::System.Data.DataColumn("LIBRARY_CATEGORIES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIBRARY_CATEGORIES_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnServiceID}, true));
                this.columnServiceID.AutoIncrement = true;
                this.columnServiceID.AutoIncrementSeed = -1;
                this.columnServiceID.AutoIncrementStep = -1;
                this.columnServiceID.AllowDBNull = false;
                this.columnServiceID.ReadOnly = true;
                this.columnServiceID.Unique = true;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.MaxLength = 25;
                this.columnDateTime_.AllowDBNull = false;
                this.columnMTO.AllowDBNull = false;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 1073741823;
                this.columnType.AllowDBNull = false;
                this.columnType.MaxLength = 25;
                this.columnState.AllowDBNull = false;
                this.columnState.MaxLength = 25;
                this.columnOwnerID.AllowDBNull = false;
                this.columnAssignThirdPartyVendor.MaxLength = 150;
                this.columnRejectReason.MaxLength = 1073741823;
                this.columnStartWorkOutOfServiceTime.MaxLength = 10;
                this.columnCompleteWorkBackToServiceTime.MaxLength = 10;
                this.columnCompleteWorkDetailDescription.MaxLength = 1073741823;
                this.columnCompleteWorkDetailPreventable.AllowDBNull = false;
                this.columnCompleteWorkDetailTPVInvoiceNumber.MaxLength = 50;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnNotes.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICERow NewLFS_FM_SERVICERow() {
                return ((LFS_FM_SERVICERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_FM_SERVICERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_FM_SERVICERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_FM_SERVICERowChanged != null)) {
                    this.LFS_FM_SERVICERowChanged(this, new LFS_FM_SERVICERowChangeEvent(((LFS_FM_SERVICERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_FM_SERVICERowChanging != null)) {
                    this.LFS_FM_SERVICERowChanging(this, new LFS_FM_SERVICERowChangeEvent(((LFS_FM_SERVICERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_FM_SERVICERowDeleted != null)) {
                    this.LFS_FM_SERVICERowDeleted(this, new LFS_FM_SERVICERowChangeEvent(((LFS_FM_SERVICERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_FM_SERVICERowDeleting != null)) {
                    this.LFS_FM_SERVICERowDeleting(this, new LFS_FM_SERVICERowChangeEvent(((LFS_FM_SERVICERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_FM_SERVICERow(LFS_FM_SERVICERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ServicesTDS ds = new ServicesTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_FM_SERVICEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_FM_SERVICE_COSTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnServiceID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnPartNumber;
            
            private global::System.Data.DataColumn columnPartName;
            
            private global::System.Data.DataColumn columnVendor;
            
            private global::System.Data.DataColumn columnCost;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnNoteID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_COSTDataTable() {
                this.TableName = "LFS_FM_SERVICE_COST";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_FM_SERVICE_COSTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_FM_SERVICE_COSTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceIDColumn {
                get {
                    return this.columnServiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartNumberColumn {
                get {
                    return this.columnPartNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartNameColumn {
                get {
                    return this.columnPartName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorColumn {
                get {
                    return this.columnVendor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostColumn {
                get {
                    return this.columnCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoteIDColumn {
                get {
                    return this.columnNoteID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_COSTRow this[int index] {
                get {
                    return ((LFS_FM_SERVICE_COSTRow)(this.Rows[index]));
                }
            }
            
            public event LFS_FM_SERVICE_COSTRowChangeEventHandler LFS_FM_SERVICE_COSTRowChanging;
            
            public event LFS_FM_SERVICE_COSTRowChangeEventHandler LFS_FM_SERVICE_COSTRowChanged;
            
            public event LFS_FM_SERVICE_COSTRowChangeEventHandler LFS_FM_SERVICE_COSTRowDeleting;
            
            public event LFS_FM_SERVICE_COSTRowChangeEventHandler LFS_FM_SERVICE_COSTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_FM_SERVICE_COSTRow(LFS_FM_SERVICE_COSTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_COSTRow AddLFS_FM_SERVICE_COSTRow(LFS_FM_SERVICERow parentLFS_FM_SERVICERowByFK_LFS_FM_SERVICE_COST_LFS_FM_SERVICE, int RefID, string PartNumber, string PartName, string Vendor, decimal Cost, bool Deleted, int COMPANY_ID, int NoteID) {
                LFS_FM_SERVICE_COSTRow rowLFS_FM_SERVICE_COSTRow = ((LFS_FM_SERVICE_COSTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RefID,
                        PartNumber,
                        PartName,
                        Vendor,
                        Cost,
                        Deleted,
                        COMPANY_ID,
                        NoteID};
                if ((parentLFS_FM_SERVICERowByFK_LFS_FM_SERVICE_COST_LFS_FM_SERVICE != null)) {
                    columnValuesArray[0] = parentLFS_FM_SERVICERowByFK_LFS_FM_SERVICE_COST_LFS_FM_SERVICE[0];
                }
                rowLFS_FM_SERVICE_COSTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_FM_SERVICE_COSTRow);
                return rowLFS_FM_SERVICE_COSTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_COSTRow FindByServiceIDRefID(int ServiceID, int RefID) {
                return ((LFS_FM_SERVICE_COSTRow)(this.Rows.Find(new object[] {
                            ServiceID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_FM_SERVICE_COSTDataTable cln = ((LFS_FM_SERVICE_COSTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_FM_SERVICE_COSTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnServiceID = base.Columns["ServiceID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnPartNumber = base.Columns["PartNumber"];
                this.columnPartName = base.Columns["PartName"];
                this.columnVendor = base.Columns["Vendor"];
                this.columnCost = base.Columns["Cost"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnNoteID = base.Columns["NoteID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnServiceID = new global::System.Data.DataColumn("ServiceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnPartNumber = new global::System.Data.DataColumn("PartNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartNumber);
                this.columnPartName = new global::System.Data.DataColumn("PartName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartName);
                this.columnVendor = new global::System.Data.DataColumn("Vendor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendor);
                this.columnCost = new global::System.Data.DataColumn("Cost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCost);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnNoteID = new global::System.Data.DataColumn("NoteID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoteID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnServiceID,
                                this.columnRefID}, true));
                this.columnServiceID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnPartNumber.MaxLength = 50;
                this.columnPartName.AllowDBNull = false;
                this.columnPartName.MaxLength = 100;
                this.columnVendor.MaxLength = 150;
                this.columnCost.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_COSTRow NewLFS_FM_SERVICE_COSTRow() {
                return ((LFS_FM_SERVICE_COSTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_FM_SERVICE_COSTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_FM_SERVICE_COSTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_FM_SERVICE_COSTRowChanged != null)) {
                    this.LFS_FM_SERVICE_COSTRowChanged(this, new LFS_FM_SERVICE_COSTRowChangeEvent(((LFS_FM_SERVICE_COSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_FM_SERVICE_COSTRowChanging != null)) {
                    this.LFS_FM_SERVICE_COSTRowChanging(this, new LFS_FM_SERVICE_COSTRowChangeEvent(((LFS_FM_SERVICE_COSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_FM_SERVICE_COSTRowDeleted != null)) {
                    this.LFS_FM_SERVICE_COSTRowDeleted(this, new LFS_FM_SERVICE_COSTRowChangeEvent(((LFS_FM_SERVICE_COSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_FM_SERVICE_COSTRowDeleting != null)) {
                    this.LFS_FM_SERVICE_COSTRowDeleting(this, new LFS_FM_SERVICE_COSTRowChangeEvent(((LFS_FM_SERVICE_COSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_FM_SERVICE_COSTRow(LFS_FM_SERVICE_COSTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ServicesTDS ds = new ServicesTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_FM_SERVICE_COSTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_FM_SERVICE_NOTEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnServiceID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnSubject;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnDateTime_;
            
            private global::System.Data.DataColumn columnNote;
            
            private global::System.Data.DataColumn columnLIBRARY_FILES_ID;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_NOTEDataTable() {
                this.TableName = "LFS_FM_SERVICE_NOTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_FM_SERVICE_NOTEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_FM_SERVICE_NOTEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceIDColumn {
                get {
                    return this.columnServiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTime_Column {
                get {
                    return this.columnDateTime_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoteColumn {
                get {
                    return this.columnNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIBRARY_FILES_IDColumn {
                get {
                    return this.columnLIBRARY_FILES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_NOTERow this[int index] {
                get {
                    return ((LFS_FM_SERVICE_NOTERow)(this.Rows[index]));
                }
            }
            
            public event LFS_FM_SERVICE_NOTERowChangeEventHandler LFS_FM_SERVICE_NOTERowChanging;
            
            public event LFS_FM_SERVICE_NOTERowChangeEventHandler LFS_FM_SERVICE_NOTERowChanged;
            
            public event LFS_FM_SERVICE_NOTERowChangeEventHandler LFS_FM_SERVICE_NOTERowDeleting;
            
            public event LFS_FM_SERVICE_NOTERowChangeEventHandler LFS_FM_SERVICE_NOTERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_FM_SERVICE_NOTERow(LFS_FM_SERVICE_NOTERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_NOTERow AddLFS_FM_SERVICE_NOTERow(LFS_FM_SERVICERow parentLFS_FM_SERVICERowByFK_LFS_FM_SERVICE_NOTE_LFS_FM_SERVICE, int RefID, string Subject, int UserID, System.DateTime DateTime_, string Note, int LIBRARY_FILES_ID, bool Deleted, int COMPANY_ID) {
                LFS_FM_SERVICE_NOTERow rowLFS_FM_SERVICE_NOTERow = ((LFS_FM_SERVICE_NOTERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RefID,
                        Subject,
                        UserID,
                        DateTime_,
                        Note,
                        LIBRARY_FILES_ID,
                        Deleted,
                        COMPANY_ID};
                if ((parentLFS_FM_SERVICERowByFK_LFS_FM_SERVICE_NOTE_LFS_FM_SERVICE != null)) {
                    columnValuesArray[0] = parentLFS_FM_SERVICERowByFK_LFS_FM_SERVICE_NOTE_LFS_FM_SERVICE[0];
                }
                rowLFS_FM_SERVICE_NOTERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_FM_SERVICE_NOTERow);
                return rowLFS_FM_SERVICE_NOTERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_NOTERow FindByServiceIDRefID(int ServiceID, int RefID) {
                return ((LFS_FM_SERVICE_NOTERow)(this.Rows.Find(new object[] {
                            ServiceID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_FM_SERVICE_NOTEDataTable cln = ((LFS_FM_SERVICE_NOTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_FM_SERVICE_NOTEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnServiceID = base.Columns["ServiceID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnSubject = base.Columns["Subject"];
                this.columnUserID = base.Columns["UserID"];
                this.columnDateTime_ = base.Columns["DateTime_"];
                this.columnNote = base.Columns["Note"];
                this.columnLIBRARY_FILES_ID = base.Columns["LIBRARY_FILES_ID"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnServiceID = new global::System.Data.DataColumn("ServiceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnSubject = new global::System.Data.DataColumn("Subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnDateTime_ = new global::System.Data.DataColumn("DateTime_", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTime_);
                this.columnNote = new global::System.Data.DataColumn("Note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNote);
                this.columnLIBRARY_FILES_ID = new global::System.Data.DataColumn("LIBRARY_FILES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIBRARY_FILES_ID);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnServiceID,
                                this.columnRefID}, true));
                this.columnServiceID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnSubject.AllowDBNull = false;
                this.columnSubject.MaxLength = 100;
                this.columnUserID.AllowDBNull = false;
                this.columnDateTime_.AllowDBNull = false;
                this.columnNote.AllowDBNull = false;
                this.columnNote.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_NOTERow NewLFS_FM_SERVICE_NOTERow() {
                return ((LFS_FM_SERVICE_NOTERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_FM_SERVICE_NOTERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_FM_SERVICE_NOTERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_FM_SERVICE_NOTERowChanged != null)) {
                    this.LFS_FM_SERVICE_NOTERowChanged(this, new LFS_FM_SERVICE_NOTERowChangeEvent(((LFS_FM_SERVICE_NOTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_FM_SERVICE_NOTERowChanging != null)) {
                    this.LFS_FM_SERVICE_NOTERowChanging(this, new LFS_FM_SERVICE_NOTERowChangeEvent(((LFS_FM_SERVICE_NOTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_FM_SERVICE_NOTERowDeleted != null)) {
                    this.LFS_FM_SERVICE_NOTERowDeleted(this, new LFS_FM_SERVICE_NOTERowChangeEvent(((LFS_FM_SERVICE_NOTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_FM_SERVICE_NOTERowDeleting != null)) {
                    this.LFS_FM_SERVICE_NOTERowDeleting(this, new LFS_FM_SERVICE_NOTERowChangeEvent(((LFS_FM_SERVICE_NOTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_FM_SERVICE_NOTERow(LFS_FM_SERVICE_NOTERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ServicesTDS ds = new ServicesTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_FM_SERVICE_NOTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_FM_SERVICE_VEHICLEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnServiceID;
            
            private global::System.Data.DataColumn columnMileage;
            
            private global::System.Data.DataColumn columnStartWorkMileage;
            
            private global::System.Data.DataColumn columnCompleteWorkMileage;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_VEHICLEDataTable() {
                this.TableName = "LFS_FM_SERVICE_VEHICLE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_FM_SERVICE_VEHICLEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_FM_SERVICE_VEHICLEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceIDColumn {
                get {
                    return this.columnServiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MileageColumn {
                get {
                    return this.columnMileage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartWorkMileageColumn {
                get {
                    return this.columnStartWorkMileage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompleteWorkMileageColumn {
                get {
                    return this.columnCompleteWorkMileage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_VEHICLERow this[int index] {
                get {
                    return ((LFS_FM_SERVICE_VEHICLERow)(this.Rows[index]));
                }
            }
            
            public event LFS_FM_SERVICE_VEHICLERowChangeEventHandler LFS_FM_SERVICE_VEHICLERowChanging;
            
            public event LFS_FM_SERVICE_VEHICLERowChangeEventHandler LFS_FM_SERVICE_VEHICLERowChanged;
            
            public event LFS_FM_SERVICE_VEHICLERowChangeEventHandler LFS_FM_SERVICE_VEHICLERowDeleting;
            
            public event LFS_FM_SERVICE_VEHICLERowChangeEventHandler LFS_FM_SERVICE_VEHICLERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_FM_SERVICE_VEHICLERow(LFS_FM_SERVICE_VEHICLERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_VEHICLERow AddLFS_FM_SERVICE_VEHICLERow(LFS_FM_SERVICERow parentLFS_FM_SERVICERowByFK_LFS_FM_SERVICE_VEHICLE_LFS_FM_SERVICE, string Mileage, string StartWorkMileage, string CompleteWorkMileage, bool Deleted, int COMPANY_ID) {
                LFS_FM_SERVICE_VEHICLERow rowLFS_FM_SERVICE_VEHICLERow = ((LFS_FM_SERVICE_VEHICLERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Mileage,
                        StartWorkMileage,
                        CompleteWorkMileage,
                        Deleted,
                        COMPANY_ID};
                if ((parentLFS_FM_SERVICERowByFK_LFS_FM_SERVICE_VEHICLE_LFS_FM_SERVICE != null)) {
                    columnValuesArray[0] = parentLFS_FM_SERVICERowByFK_LFS_FM_SERVICE_VEHICLE_LFS_FM_SERVICE[0];
                }
                rowLFS_FM_SERVICE_VEHICLERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_FM_SERVICE_VEHICLERow);
                return rowLFS_FM_SERVICE_VEHICLERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_VEHICLERow FindByServiceID(int ServiceID) {
                return ((LFS_FM_SERVICE_VEHICLERow)(this.Rows.Find(new object[] {
                            ServiceID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_FM_SERVICE_VEHICLEDataTable cln = ((LFS_FM_SERVICE_VEHICLEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_FM_SERVICE_VEHICLEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnServiceID = base.Columns["ServiceID"];
                this.columnMileage = base.Columns["Mileage"];
                this.columnStartWorkMileage = base.Columns["StartWorkMileage"];
                this.columnCompleteWorkMileage = base.Columns["CompleteWorkMileage"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnServiceID = new global::System.Data.DataColumn("ServiceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceID);
                this.columnMileage = new global::System.Data.DataColumn("Mileage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMileage);
                this.columnStartWorkMileage = new global::System.Data.DataColumn("StartWorkMileage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartWorkMileage);
                this.columnCompleteWorkMileage = new global::System.Data.DataColumn("CompleteWorkMileage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteWorkMileage);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnServiceID}, true));
                this.columnServiceID.AllowDBNull = false;
                this.columnServiceID.Unique = true;
                this.columnMileage.MaxLength = 25;
                this.columnStartWorkMileage.MaxLength = 25;
                this.columnCompleteWorkMileage.MaxLength = 25;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_VEHICLERow NewLFS_FM_SERVICE_VEHICLERow() {
                return ((LFS_FM_SERVICE_VEHICLERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_FM_SERVICE_VEHICLERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_FM_SERVICE_VEHICLERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_FM_SERVICE_VEHICLERowChanged != null)) {
                    this.LFS_FM_SERVICE_VEHICLERowChanged(this, new LFS_FM_SERVICE_VEHICLERowChangeEvent(((LFS_FM_SERVICE_VEHICLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_FM_SERVICE_VEHICLERowChanging != null)) {
                    this.LFS_FM_SERVICE_VEHICLERowChanging(this, new LFS_FM_SERVICE_VEHICLERowChangeEvent(((LFS_FM_SERVICE_VEHICLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_FM_SERVICE_VEHICLERowDeleted != null)) {
                    this.LFS_FM_SERVICE_VEHICLERowDeleted(this, new LFS_FM_SERVICE_VEHICLERowChangeEvent(((LFS_FM_SERVICE_VEHICLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_FM_SERVICE_VEHICLERowDeleting != null)) {
                    this.LFS_FM_SERVICE_VEHICLERowDeleting(this, new LFS_FM_SERVICE_VEHICLERowChangeEvent(((LFS_FM_SERVICE_VEHICLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_FM_SERVICE_VEHICLERow(LFS_FM_SERVICE_VEHICLERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ServicesTDS ds = new ServicesTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_FM_SERVICE_VEHICLEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_FM_SERVICERow : global::System.Data.DataRow {
            
            private LFS_FM_SERVICEDataTable tableLFS_FM_SERVICE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_FM_SERVICERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_FM_SERVICE = ((LFS_FM_SERVICEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ServiceID {
                get {
                    return ((int)(this[this.tableLFS_FM_SERVICE.ServiceIDColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE.ServiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Number {
                get {
                    return ((string)(this[this.tableLFS_FM_SERVICE.NumberColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTime_ {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_FM_SERVICE.DateTime_Column]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE.DateTime_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool MTO {
                get {
                    return ((bool)(this[this.tableLFS_FM_SERVICE.MTOColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE.MTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    return ((string)(this[this.tableLFS_FM_SERVICE.DescriptionColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UnitID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_FM_SERVICE.UnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitID\' in table \'LFS_FM_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.UnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    return ((string)(this[this.tableLFS_FM_SERVICE.TypeColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    return ((string)(this[this.tableLFS_FM_SERVICE.StateColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnerID {
                get {
                    return ((int)(this[this.tableLFS_FM_SERVICE.OwnerIDColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE.OwnerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AssignDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_FM_SERVICE.AssignDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssignDateTime\' in table \'LFS_FM_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.AssignDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AssignDeadlineDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_FM_SERVICE.AssignDeadlineDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssignDeadlineDate\' in table \'LFS_FM_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.AssignDeadlineDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AssignTeamMember {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_FM_SERVICE.AssignTeamMemberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssignTeamMember\' in table \'LFS_FM_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.AssignTeamMemberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssignTeamMemberID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_FM_SERVICE.AssignTeamMemberIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssignTeamMemberID\' in table \'LFS_FM_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.AssignTeamMemberIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssignThirdPartyVendor {
                get {
                    try {
                        return ((string)(this[this.tableLFS_FM_SERVICE.AssignThirdPartyVendorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssignThirdPartyVendor\' in table \'LFS_FM_SERVICE\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.AssignThirdPartyVendorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AcceptDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_FM_SERVICE.AcceptDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcceptDateTime\' in table \'LFS_FM_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.AcceptDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RejectDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_FM_SERVICE.RejectDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RejectDateTime\' in table \'LFS_FM_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.RejectDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RejectReason {
                get {
                    try {
                        return ((string)(this[this.tableLFS_FM_SERVICE.RejectReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RejectReason\' in table \'LFS_FM_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.RejectReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartWorkDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_FM_SERVICE.StartWorkDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartWorkDateTime\' in table \'LFS_FM_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.StartWorkDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartWorkOutOfServiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_FM_SERVICE.StartWorkOutOfServiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartWorkOutOfServiceDate\' in table \'LFS_FM_SERVICE\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.StartWorkOutOfServiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StartWorkOutOfServiceTime {
                get {
                    try {
                        return ((string)(this[this.tableLFS_FM_SERVICE.StartWorkOutOfServiceTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartWorkOutOfServiceTime\' in table \'LFS_FM_SERVICE\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.StartWorkOutOfServiceTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CompleteWorkDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_FM_SERVICE.CompleteWorkDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompleteWorkDateTime\' in table \'LFS_FM_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.CompleteWorkDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CompleteWorkBackToServiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_FM_SERVICE.CompleteWorkBackToServiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompleteWorkBackToServiceDate\' in table \'LFS_FM_SERVICE\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.CompleteWorkBackToServiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompleteWorkBackToServiceTime {
                get {
                    try {
                        return ((string)(this[this.tableLFS_FM_SERVICE.CompleteWorkBackToServiceTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompleteWorkBackToServiceTime\' in table \'LFS_FM_SERVICE\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.CompleteWorkBackToServiceTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompleteWorkDetailDescription {
                get {
                    try {
                        return ((string)(this[this.tableLFS_FM_SERVICE.CompleteWorkDetailDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompleteWorkDetailDescription\' in table \'LFS_FM_SERVICE\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.CompleteWorkDetailDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CompleteWorkDetailPreventable {
                get {
                    return ((bool)(this[this.tableLFS_FM_SERVICE.CompleteWorkDetailPreventableColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE.CompleteWorkDetailPreventableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CompleteWorkDetailTMLabourHours {
                get {
                    try {
                        return ((double)(this[this.tableLFS_FM_SERVICE.CompleteWorkDetailTMLabourHoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompleteWorkDetailTMLabourHours\' in table \'LFS_FM_SERVICE\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.CompleteWorkDetailTMLabourHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CompleteWorkDetailTMCost {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_FM_SERVICE.CompleteWorkDetailTMCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompleteWorkDetailTMCost\' in table \'LFS_FM_SERVICE\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.CompleteWorkDetailTMCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompleteWorkDetailTPVInvoiceNumber {
                get {
                    try {
                        return ((string)(this[this.tableLFS_FM_SERVICE.CompleteWorkDetailTPVInvoiceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompleteWorkDetailTPVInvoiceNumber\' in table \'LFS_FM_SERVIC" +
                                "E\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.CompleteWorkDetailTPVInvoiceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CompleteWorkDetailTPVInvoiceAmout {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_FM_SERVICE.CompleteWorkDetailTPVInvoiceAmoutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompleteWorkDetailTPVInvoiceAmout\' in table \'LFS_FM_SERVICE" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.CompleteWorkDetailTPVInvoiceAmoutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_FM_SERVICE.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_FM_SERVICE.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tableLFS_FM_SERVICE.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Notes\' in table \'LFS_FM_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RuleID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_FM_SERVICE.RuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RuleID\' in table \'LFS_FM_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.RuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LIBRARY_CATEGORIES_ID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_FM_SERVICE.LIBRARY_CATEGORIES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LIBRARY_CATEGORIES_ID\' in table \'LFS_FM_SERVICE\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE.LIBRARY_CATEGORIES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitIDNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.UnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitIDNull() {
                this[this.tableLFS_FM_SERVICE.UnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssignDateTimeNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.AssignDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssignDateTimeNull() {
                this[this.tableLFS_FM_SERVICE.AssignDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssignDeadlineDateNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.AssignDeadlineDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssignDeadlineDateNull() {
                this[this.tableLFS_FM_SERVICE.AssignDeadlineDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssignTeamMemberNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.AssignTeamMemberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssignTeamMemberNull() {
                this[this.tableLFS_FM_SERVICE.AssignTeamMemberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssignTeamMemberIDNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.AssignTeamMemberIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssignTeamMemberIDNull() {
                this[this.tableLFS_FM_SERVICE.AssignTeamMemberIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssignThirdPartyVendorNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.AssignThirdPartyVendorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssignThirdPartyVendorNull() {
                this[this.tableLFS_FM_SERVICE.AssignThirdPartyVendorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcceptDateTimeNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.AcceptDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcceptDateTimeNull() {
                this[this.tableLFS_FM_SERVICE.AcceptDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRejectDateTimeNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.RejectDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRejectDateTimeNull() {
                this[this.tableLFS_FM_SERVICE.RejectDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRejectReasonNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.RejectReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRejectReasonNull() {
                this[this.tableLFS_FM_SERVICE.RejectReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartWorkDateTimeNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.StartWorkDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartWorkDateTimeNull() {
                this[this.tableLFS_FM_SERVICE.StartWorkDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartWorkOutOfServiceDateNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.StartWorkOutOfServiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartWorkOutOfServiceDateNull() {
                this[this.tableLFS_FM_SERVICE.StartWorkOutOfServiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartWorkOutOfServiceTimeNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.StartWorkOutOfServiceTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartWorkOutOfServiceTimeNull() {
                this[this.tableLFS_FM_SERVICE.StartWorkOutOfServiceTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompleteWorkDateTimeNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.CompleteWorkDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompleteWorkDateTimeNull() {
                this[this.tableLFS_FM_SERVICE.CompleteWorkDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompleteWorkBackToServiceDateNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.CompleteWorkBackToServiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompleteWorkBackToServiceDateNull() {
                this[this.tableLFS_FM_SERVICE.CompleteWorkBackToServiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompleteWorkBackToServiceTimeNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.CompleteWorkBackToServiceTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompleteWorkBackToServiceTimeNull() {
                this[this.tableLFS_FM_SERVICE.CompleteWorkBackToServiceTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompleteWorkDetailDescriptionNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.CompleteWorkDetailDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompleteWorkDetailDescriptionNull() {
                this[this.tableLFS_FM_SERVICE.CompleteWorkDetailDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompleteWorkDetailTMLabourHoursNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.CompleteWorkDetailTMLabourHoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompleteWorkDetailTMLabourHoursNull() {
                this[this.tableLFS_FM_SERVICE.CompleteWorkDetailTMLabourHoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompleteWorkDetailTMCostNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.CompleteWorkDetailTMCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompleteWorkDetailTMCostNull() {
                this[this.tableLFS_FM_SERVICE.CompleteWorkDetailTMCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompleteWorkDetailTPVInvoiceNumberNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.CompleteWorkDetailTPVInvoiceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompleteWorkDetailTPVInvoiceNumberNull() {
                this[this.tableLFS_FM_SERVICE.CompleteWorkDetailTPVInvoiceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompleteWorkDetailTPVInvoiceAmoutNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.CompleteWorkDetailTPVInvoiceAmoutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompleteWorkDetailTPVInvoiceAmoutNull() {
                this[this.tableLFS_FM_SERVICE.CompleteWorkDetailTPVInvoiceAmoutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotesNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotesNull() {
                this[this.tableLFS_FM_SERVICE.NotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRuleIDNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.RuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRuleIDNull() {
                this[this.tableLFS_FM_SERVICE.RuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIBRARY_CATEGORIES_IDNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE.LIBRARY_CATEGORIES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIBRARY_CATEGORIES_IDNull() {
                this[this.tableLFS_FM_SERVICE.LIBRARY_CATEGORIES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_COSTRow[] GetLFS_FM_SERVICE_COSTRows() {
                if ((this.Table.ChildRelations["FK_LFS_FM_SERVICE_COST_LFS_FM_SERVICE"] == null)) {
                    return new LFS_FM_SERVICE_COSTRow[0];
                }
                else {
                    return ((LFS_FM_SERVICE_COSTRow[])(base.GetChildRows(this.Table.ChildRelations["FK_LFS_FM_SERVICE_COST_LFS_FM_SERVICE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_NOTERow[] GetLFS_FM_SERVICE_NOTERows() {
                if ((this.Table.ChildRelations["FK_LFS_FM_SERVICE_NOTE_LFS_FM_SERVICE"] == null)) {
                    return new LFS_FM_SERVICE_NOTERow[0];
                }
                else {
                    return ((LFS_FM_SERVICE_NOTERow[])(base.GetChildRows(this.Table.ChildRelations["FK_LFS_FM_SERVICE_NOTE_LFS_FM_SERVICE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_VEHICLERow[] GetLFS_FM_SERVICE_VEHICLERows() {
                if ((this.Table.ChildRelations["FK_LFS_FM_SERVICE_VEHICLE_LFS_FM_SERVICE"] == null)) {
                    return new LFS_FM_SERVICE_VEHICLERow[0];
                }
                else {
                    return ((LFS_FM_SERVICE_VEHICLERow[])(base.GetChildRows(this.Table.ChildRelations["FK_LFS_FM_SERVICE_VEHICLE_LFS_FM_SERVICE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_FM_SERVICE_COSTRow : global::System.Data.DataRow {
            
            private LFS_FM_SERVICE_COSTDataTable tableLFS_FM_SERVICE_COST;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_FM_SERVICE_COSTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_FM_SERVICE_COST = ((LFS_FM_SERVICE_COSTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ServiceID {
                get {
                    return ((int)(this[this.tableLFS_FM_SERVICE_COST.ServiceIDColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE_COST.ServiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_FM_SERVICE_COST.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE_COST.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartNumber {
                get {
                    try {
                        return ((string)(this[this.tableLFS_FM_SERVICE_COST.PartNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PartNumber\' in table \'LFS_FM_SERVICE_COST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE_COST.PartNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartName {
                get {
                    return ((string)(this[this.tableLFS_FM_SERVICE_COST.PartNameColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE_COST.PartNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Vendor {
                get {
                    try {
                        return ((string)(this[this.tableLFS_FM_SERVICE_COST.VendorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vendor\' in table \'LFS_FM_SERVICE_COST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE_COST.VendorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cost {
                get {
                    return ((decimal)(this[this.tableLFS_FM_SERVICE_COST.CostColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE_COST.CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_FM_SERVICE_COST.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE_COST.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_FM_SERVICE_COST.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE_COST.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NoteID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_FM_SERVICE_COST.NoteIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoteID\' in table \'LFS_FM_SERVICE_COST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE_COST.NoteIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICERow LFS_FM_SERVICERow {
                get {
                    return ((LFS_FM_SERVICERow)(this.GetParentRow(this.Table.ParentRelations["FK_LFS_FM_SERVICE_COST_LFS_FM_SERVICE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_LFS_FM_SERVICE_COST_LFS_FM_SERVICE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartNumberNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE_COST.PartNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartNumberNull() {
                this[this.tableLFS_FM_SERVICE_COST.PartNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE_COST.VendorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNull() {
                this[this.tableLFS_FM_SERVICE_COST.VendorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoteIDNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE_COST.NoteIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoteIDNull() {
                this[this.tableLFS_FM_SERVICE_COST.NoteIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_FM_SERVICE_NOTERow : global::System.Data.DataRow {
            
            private LFS_FM_SERVICE_NOTEDataTable tableLFS_FM_SERVICE_NOTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_FM_SERVICE_NOTERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_FM_SERVICE_NOTE = ((LFS_FM_SERVICE_NOTEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ServiceID {
                get {
                    return ((int)(this[this.tableLFS_FM_SERVICE_NOTE.ServiceIDColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE_NOTE.ServiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_FM_SERVICE_NOTE.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE_NOTE.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Subject {
                get {
                    return ((string)(this[this.tableLFS_FM_SERVICE_NOTE.SubjectColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE_NOTE.SubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    return ((int)(this[this.tableLFS_FM_SERVICE_NOTE.UserIDColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE_NOTE.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTime_ {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_FM_SERVICE_NOTE.DateTime_Column]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE_NOTE.DateTime_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Note {
                get {
                    return ((string)(this[this.tableLFS_FM_SERVICE_NOTE.NoteColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE_NOTE.NoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LIBRARY_FILES_ID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_FM_SERVICE_NOTE.LIBRARY_FILES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LIBRARY_FILES_ID\' in table \'LFS_FM_SERVICE_NOTE\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE_NOTE.LIBRARY_FILES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_FM_SERVICE_NOTE.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE_NOTE.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_FM_SERVICE_NOTE.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE_NOTE.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICERow LFS_FM_SERVICERow {
                get {
                    return ((LFS_FM_SERVICERow)(this.GetParentRow(this.Table.ParentRelations["FK_LFS_FM_SERVICE_NOTE_LFS_FM_SERVICE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_LFS_FM_SERVICE_NOTE_LFS_FM_SERVICE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIBRARY_FILES_IDNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE_NOTE.LIBRARY_FILES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIBRARY_FILES_IDNull() {
                this[this.tableLFS_FM_SERVICE_NOTE.LIBRARY_FILES_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_FM_SERVICE_VEHICLERow : global::System.Data.DataRow {
            
            private LFS_FM_SERVICE_VEHICLEDataTable tableLFS_FM_SERVICE_VEHICLE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_FM_SERVICE_VEHICLERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_FM_SERVICE_VEHICLE = ((LFS_FM_SERVICE_VEHICLEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ServiceID {
                get {
                    return ((int)(this[this.tableLFS_FM_SERVICE_VEHICLE.ServiceIDColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE_VEHICLE.ServiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mileage {
                get {
                    try {
                        return ((string)(this[this.tableLFS_FM_SERVICE_VEHICLE.MileageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mileage\' in table \'LFS_FM_SERVICE_VEHICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE_VEHICLE.MileageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StartWorkMileage {
                get {
                    try {
                        return ((string)(this[this.tableLFS_FM_SERVICE_VEHICLE.StartWorkMileageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartWorkMileage\' in table \'LFS_FM_SERVICE_VEHICLE\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE_VEHICLE.StartWorkMileageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompleteWorkMileage {
                get {
                    try {
                        return ((string)(this[this.tableLFS_FM_SERVICE_VEHICLE.CompleteWorkMileageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompleteWorkMileage\' in table \'LFS_FM_SERVICE_VEHICLE\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_FM_SERVICE_VEHICLE.CompleteWorkMileageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_FM_SERVICE_VEHICLE.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE_VEHICLE.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_FM_SERVICE_VEHICLE.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_FM_SERVICE_VEHICLE.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICERow LFS_FM_SERVICERow {
                get {
                    return ((LFS_FM_SERVICERow)(this.GetParentRow(this.Table.ParentRelations["FK_LFS_FM_SERVICE_VEHICLE_LFS_FM_SERVICE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_LFS_FM_SERVICE_VEHICLE_LFS_FM_SERVICE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMileageNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE_VEHICLE.MileageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMileageNull() {
                this[this.tableLFS_FM_SERVICE_VEHICLE.MileageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartWorkMileageNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE_VEHICLE.StartWorkMileageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartWorkMileageNull() {
                this[this.tableLFS_FM_SERVICE_VEHICLE.StartWorkMileageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompleteWorkMileageNull() {
                return this.IsNull(this.tableLFS_FM_SERVICE_VEHICLE.CompleteWorkMileageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompleteWorkMileageNull() {
                this[this.tableLFS_FM_SERVICE_VEHICLE.CompleteWorkMileageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_FM_SERVICERowChangeEvent : global::System.EventArgs {
            
            private LFS_FM_SERVICERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICERowChangeEvent(LFS_FM_SERVICERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_FM_SERVICE_COSTRowChangeEvent : global::System.EventArgs {
            
            private LFS_FM_SERVICE_COSTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_COSTRowChangeEvent(LFS_FM_SERVICE_COSTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_COSTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_FM_SERVICE_NOTERowChangeEvent : global::System.EventArgs {
            
            private LFS_FM_SERVICE_NOTERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_NOTERowChangeEvent(LFS_FM_SERVICE_NOTERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_NOTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_FM_SERVICE_VEHICLERowChangeEvent : global::System.EventArgs {
            
            private LFS_FM_SERVICE_VEHICLERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_VEHICLERowChangeEvent(LFS_FM_SERVICE_VEHICLERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_FM_SERVICE_VEHICLERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591