//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3620
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.LabourHours.TeamProjectTime {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("TeamProjectTime2TDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class TeamProjectTime2TDS : global::System.Data.DataSet {
        
        private LFS_TEAM_PROJECT_TIME_DETAILDataTable tableLFS_TEAM_PROJECT_TIME_DETAIL;
        
        private LFS_TEAM_PROJECT_TIME_DETAIL_TEMPDataTable tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP;
        
        private TemplateDataTable tableTemplate;
        
        private TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATDataTable tableTEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT;
        
        private LFS_TEAM_PROJECT_TIMEDataTable tableLFS_TEAM_PROJECT_TIME;
        
        private LFS_TEAM_PROJECT_TIME_SECTIONDataTable tableLFS_TEAM_PROJECT_TIME_SECTION;
        
        private LFS_TEAM_PROJECT_TIME_SECTION_LATERALDataTable tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL;
        
        private LFS_TEAM_PROJECT_TIME_SECTION_MHDataTable tableLFS_TEAM_PROJECT_TIME_SECTION_MH;
        
        private global::System.Data.DataRelation relationLFS_TEAM_PROJECT_TIME_LFS_TEAM_PROJECT_TIME_DETAIL;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TeamProjectTime2TDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected TeamProjectTime2TDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LFS_TEAM_PROJECT_TIME_DETAIL"] != null)) {
                    base.Tables.Add(new LFS_TEAM_PROJECT_TIME_DETAILDataTable(ds.Tables["LFS_TEAM_PROJECT_TIME_DETAIL"]));
                }
                if ((ds.Tables["LFS_TEAM_PROJECT_TIME_DETAIL_TEMP"] != null)) {
                    base.Tables.Add(new LFS_TEAM_PROJECT_TIME_DETAIL_TEMPDataTable(ds.Tables["LFS_TEAM_PROJECT_TIME_DETAIL_TEMP"]));
                }
                if ((ds.Tables["Template"] != null)) {
                    base.Tables.Add(new TemplateDataTable(ds.Tables["Template"]));
                }
                if ((ds.Tables["TEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT"] != null)) {
                    base.Tables.Add(new TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATDataTable(ds.Tables["TEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT"]));
                }
                if ((ds.Tables["LFS_TEAM_PROJECT_TIME"] != null)) {
                    base.Tables.Add(new LFS_TEAM_PROJECT_TIMEDataTable(ds.Tables["LFS_TEAM_PROJECT_TIME"]));
                }
                if ((ds.Tables["LFS_TEAM_PROJECT_TIME_SECTION"] != null)) {
                    base.Tables.Add(new LFS_TEAM_PROJECT_TIME_SECTIONDataTable(ds.Tables["LFS_TEAM_PROJECT_TIME_SECTION"]));
                }
                if ((ds.Tables["LFS_TEAM_PROJECT_TIME_SECTION_LATERAL"] != null)) {
                    base.Tables.Add(new LFS_TEAM_PROJECT_TIME_SECTION_LATERALDataTable(ds.Tables["LFS_TEAM_PROJECT_TIME_SECTION_LATERAL"]));
                }
                if ((ds.Tables["LFS_TEAM_PROJECT_TIME_SECTION_MH"] != null)) {
                    base.Tables.Add(new LFS_TEAM_PROJECT_TIME_SECTION_MHDataTable(ds.Tables["LFS_TEAM_PROJECT_TIME_SECTION_MH"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_TEAM_PROJECT_TIME_DETAILDataTable LFS_TEAM_PROJECT_TIME_DETAIL {
            get {
                return this.tableLFS_TEAM_PROJECT_TIME_DETAIL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_TEAM_PROJECT_TIME_DETAIL_TEMPDataTable LFS_TEAM_PROJECT_TIME_DETAIL_TEMP {
            get {
                return this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TemplateDataTable Template {
            get {
                return this.tableTemplate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATDataTable TEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT {
            get {
                return this.tableTEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_TEAM_PROJECT_TIMEDataTable LFS_TEAM_PROJECT_TIME {
            get {
                return this.tableLFS_TEAM_PROJECT_TIME;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_TEAM_PROJECT_TIME_SECTIONDataTable LFS_TEAM_PROJECT_TIME_SECTION {
            get {
                return this.tableLFS_TEAM_PROJECT_TIME_SECTION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_TEAM_PROJECT_TIME_SECTION_LATERALDataTable LFS_TEAM_PROJECT_TIME_SECTION_LATERAL {
            get {
                return this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_TEAM_PROJECT_TIME_SECTION_MHDataTable LFS_TEAM_PROJECT_TIME_SECTION_MH {
            get {
                return this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            TeamProjectTime2TDS cln = ((TeamProjectTime2TDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LFS_TEAM_PROJECT_TIME_DETAIL"] != null)) {
                    base.Tables.Add(new LFS_TEAM_PROJECT_TIME_DETAILDataTable(ds.Tables["LFS_TEAM_PROJECT_TIME_DETAIL"]));
                }
                if ((ds.Tables["LFS_TEAM_PROJECT_TIME_DETAIL_TEMP"] != null)) {
                    base.Tables.Add(new LFS_TEAM_PROJECT_TIME_DETAIL_TEMPDataTable(ds.Tables["LFS_TEAM_PROJECT_TIME_DETAIL_TEMP"]));
                }
                if ((ds.Tables["Template"] != null)) {
                    base.Tables.Add(new TemplateDataTable(ds.Tables["Template"]));
                }
                if ((ds.Tables["TEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT"] != null)) {
                    base.Tables.Add(new TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATDataTable(ds.Tables["TEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT"]));
                }
                if ((ds.Tables["LFS_TEAM_PROJECT_TIME"] != null)) {
                    base.Tables.Add(new LFS_TEAM_PROJECT_TIMEDataTable(ds.Tables["LFS_TEAM_PROJECT_TIME"]));
                }
                if ((ds.Tables["LFS_TEAM_PROJECT_TIME_SECTION"] != null)) {
                    base.Tables.Add(new LFS_TEAM_PROJECT_TIME_SECTIONDataTable(ds.Tables["LFS_TEAM_PROJECT_TIME_SECTION"]));
                }
                if ((ds.Tables["LFS_TEAM_PROJECT_TIME_SECTION_LATERAL"] != null)) {
                    base.Tables.Add(new LFS_TEAM_PROJECT_TIME_SECTION_LATERALDataTable(ds.Tables["LFS_TEAM_PROJECT_TIME_SECTION_LATERAL"]));
                }
                if ((ds.Tables["LFS_TEAM_PROJECT_TIME_SECTION_MH"] != null)) {
                    base.Tables.Add(new LFS_TEAM_PROJECT_TIME_SECTION_MHDataTable(ds.Tables["LFS_TEAM_PROJECT_TIME_SECTION_MH"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableLFS_TEAM_PROJECT_TIME_DETAIL = ((LFS_TEAM_PROJECT_TIME_DETAILDataTable)(base.Tables["LFS_TEAM_PROJECT_TIME_DETAIL"]));
            if ((initTable == true)) {
                if ((this.tableLFS_TEAM_PROJECT_TIME_DETAIL != null)) {
                    this.tableLFS_TEAM_PROJECT_TIME_DETAIL.InitVars();
                }
            }
            this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP = ((LFS_TEAM_PROJECT_TIME_DETAIL_TEMPDataTable)(base.Tables["LFS_TEAM_PROJECT_TIME_DETAIL_TEMP"]));
            if ((initTable == true)) {
                if ((this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP != null)) {
                    this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.InitVars();
                }
            }
            this.tableTemplate = ((TemplateDataTable)(base.Tables["Template"]));
            if ((initTable == true)) {
                if ((this.tableTemplate != null)) {
                    this.tableTemplate.InitVars();
                }
            }
            this.tableTEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT = ((TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATDataTable)(base.Tables["TEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT"]));
            if ((initTable == true)) {
                if ((this.tableTEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT != null)) {
                    this.tableTEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT.InitVars();
                }
            }
            this.tableLFS_TEAM_PROJECT_TIME = ((LFS_TEAM_PROJECT_TIMEDataTable)(base.Tables["LFS_TEAM_PROJECT_TIME"]));
            if ((initTable == true)) {
                if ((this.tableLFS_TEAM_PROJECT_TIME != null)) {
                    this.tableLFS_TEAM_PROJECT_TIME.InitVars();
                }
            }
            this.tableLFS_TEAM_PROJECT_TIME_SECTION = ((LFS_TEAM_PROJECT_TIME_SECTIONDataTable)(base.Tables["LFS_TEAM_PROJECT_TIME_SECTION"]));
            if ((initTable == true)) {
                if ((this.tableLFS_TEAM_PROJECT_TIME_SECTION != null)) {
                    this.tableLFS_TEAM_PROJECT_TIME_SECTION.InitVars();
                }
            }
            this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL = ((LFS_TEAM_PROJECT_TIME_SECTION_LATERALDataTable)(base.Tables["LFS_TEAM_PROJECT_TIME_SECTION_LATERAL"]));
            if ((initTable == true)) {
                if ((this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL != null)) {
                    this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.InitVars();
                }
            }
            this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH = ((LFS_TEAM_PROJECT_TIME_SECTION_MHDataTable)(base.Tables["LFS_TEAM_PROJECT_TIME_SECTION_MH"]));
            if ((initTable == true)) {
                if ((this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH != null)) {
                    this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH.InitVars();
                }
            }
            this.relationLFS_TEAM_PROJECT_TIME_LFS_TEAM_PROJECT_TIME_DETAIL = this.Relations["LFS_TEAM_PROJECT_TIME_LFS_TEAM_PROJECT_TIME_DETAIL"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "TeamProjectTime2TDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/TeamProjectTime2TDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLFS_TEAM_PROJECT_TIME_DETAIL = new LFS_TEAM_PROJECT_TIME_DETAILDataTable();
            base.Tables.Add(this.tableLFS_TEAM_PROJECT_TIME_DETAIL);
            this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP = new LFS_TEAM_PROJECT_TIME_DETAIL_TEMPDataTable();
            base.Tables.Add(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP);
            this.tableTemplate = new TemplateDataTable();
            base.Tables.Add(this.tableTemplate);
            this.tableTEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT = new TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATDataTable();
            base.Tables.Add(this.tableTEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT);
            this.tableLFS_TEAM_PROJECT_TIME = new LFS_TEAM_PROJECT_TIMEDataTable();
            base.Tables.Add(this.tableLFS_TEAM_PROJECT_TIME);
            this.tableLFS_TEAM_PROJECT_TIME_SECTION = new LFS_TEAM_PROJECT_TIME_SECTIONDataTable();
            base.Tables.Add(this.tableLFS_TEAM_PROJECT_TIME_SECTION);
            this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL = new LFS_TEAM_PROJECT_TIME_SECTION_LATERALDataTable();
            base.Tables.Add(this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL);
            this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH = new LFS_TEAM_PROJECT_TIME_SECTION_MHDataTable();
            base.Tables.Add(this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("LFS_TEAM_PROJECT_TIME_LFS_TEAM_PROJECT_TIME_DETAIL", new global::System.Data.DataColumn[] {
                        this.tableLFS_TEAM_PROJECT_TIME.TeamProjectTimeIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_TEAM_PROJECT_TIME_DETAIL.TeamProjectTimeIDColumn});
            this.tableLFS_TEAM_PROJECT_TIME_DETAIL.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.None;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_LFS_TEAM_PROJECT_TIME_LFS_TEAM_PROJECT_TIME_DETAIL_TEMP", new global::System.Data.DataColumn[] {
                        this.tableLFS_TEAM_PROJECT_TIME.TeamProjectTimeIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.TeamProjectTimeIDColumn});
            this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.None;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationLFS_TEAM_PROJECT_TIME_LFS_TEAM_PROJECT_TIME_DETAIL = new global::System.Data.DataRelation("LFS_TEAM_PROJECT_TIME_LFS_TEAM_PROJECT_TIME_DETAIL", new global::System.Data.DataColumn[] {
                        this.tableLFS_TEAM_PROJECT_TIME.TeamProjectTimeIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_TEAM_PROJECT_TIME_DETAIL.TeamProjectTimeIDColumn}, false);
            this.Relations.Add(this.relationLFS_TEAM_PROJECT_TIME_LFS_TEAM_PROJECT_TIME_DETAIL);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_TEAM_PROJECT_TIME_DETAIL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_TEAM_PROJECT_TIME_DETAIL_TEMP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTemplate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_TEAM_PROJECT_TIME() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_TEAM_PROJECT_TIME_SECTION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_TEAM_PROJECT_TIME_SECTION_LATERAL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_TEAM_PROJECT_TIME_SECTION_MH() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            TeamProjectTime2TDS ds = new TeamProjectTime2TDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void LFS_TEAM_PROJECT_TIME_DETAILRowChangeEventHandler(object sender, LFS_TEAM_PROJECT_TIME_DETAILRowChangeEvent e);
        
        public delegate void LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowChangeEventHandler(object sender, LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowChangeEvent e);
        
        public delegate void TemplateRowChangeEventHandler(object sender, TemplateRowChangeEvent e);
        
        public delegate void TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowChangeEventHandler(object sender, TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowChangeEvent e);
        
        public delegate void LFS_TEAM_PROJECT_TIMERowChangeEventHandler(object sender, LFS_TEAM_PROJECT_TIMERowChangeEvent e);
        
        public delegate void LFS_TEAM_PROJECT_TIME_SECTIONRowChangeEventHandler(object sender, LFS_TEAM_PROJECT_TIME_SECTIONRowChangeEvent e);
        
        public delegate void LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowChangeEventHandler(object sender, LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowChangeEvent e);
        
        public delegate void LFS_TEAM_PROJECT_TIME_SECTION_MHRowChangeEventHandler(object sender, LFS_TEAM_PROJECT_TIME_SECTION_MHRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_TEAM_PROJECT_TIME_DETAILDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTeamProjectTimeID;
            
            private global::System.Data.DataColumn columnDetailID;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnCompaniesID;
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnDate_;
            
            private global::System.Data.DataColumn columnStartTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            private global::System.Data.DataColumn columnOffset;
            
            private global::System.Data.DataColumn columnProjectTime;
            
            private global::System.Data.DataColumn columnWorkingDetails;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnMealsCountry;
            
            private global::System.Data.DataColumn columnMealsAllowanceType;
            
            private global::System.Data.DataColumn columnMealsAllowance;
            
            private global::System.Data.DataColumn columnUnitID;
            
            private global::System.Data.DataColumn columnTowedUnitID;
            
            private global::System.Data.DataColumn columnProjectTimeState;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnWork_;
            
            private global::System.Data.DataColumn columnFunction_;
            
            private global::System.Data.DataColumn columnFairWage;
            
            private global::System.Data.DataColumn columnJobClassType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_DETAILDataTable() {
                this.TableName = "LFS_TEAM_PROJECT_TIME_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_TEAM_PROJECT_TIME_DETAILDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_TEAM_PROJECT_TIME_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TeamProjectTimeIDColumn {
                get {
                    return this.columnTeamProjectTimeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailIDColumn {
                get {
                    return this.columnDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompaniesIDColumn {
                get {
                    return this.columnCompaniesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Date_Column {
                get {
                    return this.columnDate_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartTimeColumn {
                get {
                    return this.columnStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OffsetColumn {
                get {
                    return this.columnOffset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectTimeColumn {
                get {
                    return this.columnProjectTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkingDetailsColumn {
                get {
                    return this.columnWorkingDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MealsCountryColumn {
                get {
                    return this.columnMealsCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MealsAllowanceTypeColumn {
                get {
                    return this.columnMealsAllowanceType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MealsAllowanceColumn {
                get {
                    return this.columnMealsAllowance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitIDColumn {
                get {
                    return this.columnUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TowedUnitIDColumn {
                get {
                    return this.columnTowedUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectTimeStateColumn {
                get {
                    return this.columnProjectTimeState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Work_Column {
                get {
                    return this.columnWork_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Function_Column {
                get {
                    return this.columnFunction_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FairWageColumn {
                get {
                    return this.columnFairWage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobClassTypeColumn {
                get {
                    return this.columnJobClassType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_DETAILRow this[int index] {
                get {
                    return ((LFS_TEAM_PROJECT_TIME_DETAILRow)(this.Rows[index]));
                }
            }
            
            public event LFS_TEAM_PROJECT_TIME_DETAILRowChangeEventHandler LFS_TEAM_PROJECT_TIME_DETAILRowChanging;
            
            public event LFS_TEAM_PROJECT_TIME_DETAILRowChangeEventHandler LFS_TEAM_PROJECT_TIME_DETAILRowChanged;
            
            public event LFS_TEAM_PROJECT_TIME_DETAILRowChangeEventHandler LFS_TEAM_PROJECT_TIME_DETAILRowDeleting;
            
            public event LFS_TEAM_PROJECT_TIME_DETAILRowChangeEventHandler LFS_TEAM_PROJECT_TIME_DETAILRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_TEAM_PROJECT_TIME_DETAILRow(LFS_TEAM_PROJECT_TIME_DETAILRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_DETAILRow AddLFS_TEAM_PROJECT_TIME_DETAILRow(
                        LFS_TEAM_PROJECT_TIMERow parentLFS_TEAM_PROJECT_TIMERowByLFS_TEAM_PROJECT_TIME_LFS_TEAM_PROJECT_TIME_DETAIL, 
                        int DetailID, 
                        int EmployeeID, 
                        int CompaniesID, 
                        int ProjectID, 
                        System.DateTime Date_, 
                        string StartTime, 
                        string EndTime, 
                        double Offset, 
                        double ProjectTime, 
                        string WorkingDetails, 
                        string Location, 
                        long MealsCountry, 
                        string MealsAllowanceType, 
                        decimal MealsAllowance, 
                        int UnitID, 
                        int TowedUnitID, 
                        string ProjectTimeState, 
                        string Comments, 
                        bool Deleted, 
                        string Work_, 
                        string Function_, 
                        bool FairWage, 
                        string JobClassType) {
                LFS_TEAM_PROJECT_TIME_DETAILRow rowLFS_TEAM_PROJECT_TIME_DETAILRow = ((LFS_TEAM_PROJECT_TIME_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DetailID,
                        EmployeeID,
                        CompaniesID,
                        ProjectID,
                        Date_,
                        StartTime,
                        EndTime,
                        Offset,
                        ProjectTime,
                        WorkingDetails,
                        Location,
                        MealsCountry,
                        MealsAllowanceType,
                        MealsAllowance,
                        UnitID,
                        TowedUnitID,
                        ProjectTimeState,
                        Comments,
                        Deleted,
                        Work_,
                        Function_,
                        FairWage,
                        JobClassType};
                if ((parentLFS_TEAM_PROJECT_TIMERowByLFS_TEAM_PROJECT_TIME_LFS_TEAM_PROJECT_TIME_DETAIL != null)) {
                    columnValuesArray[0] = parentLFS_TEAM_PROJECT_TIMERowByLFS_TEAM_PROJECT_TIME_LFS_TEAM_PROJECT_TIME_DETAIL[0];
                }
                rowLFS_TEAM_PROJECT_TIME_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_TEAM_PROJECT_TIME_DETAILRow);
                return rowLFS_TEAM_PROJECT_TIME_DETAILRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_DETAILRow FindByTeamProjectTimeIDDetailID(int TeamProjectTimeID, int DetailID) {
                return ((LFS_TEAM_PROJECT_TIME_DETAILRow)(this.Rows.Find(new object[] {
                            TeamProjectTimeID,
                            DetailID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_TEAM_PROJECT_TIME_DETAILDataTable cln = ((LFS_TEAM_PROJECT_TIME_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_TEAM_PROJECT_TIME_DETAILDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTeamProjectTimeID = base.Columns["TeamProjectTimeID"];
                this.columnDetailID = base.Columns["DetailID"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnCompaniesID = base.Columns["CompaniesID"];
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnDate_ = base.Columns["Date_"];
                this.columnStartTime = base.Columns["StartTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnOffset = base.Columns["Offset"];
                this.columnProjectTime = base.Columns["ProjectTime"];
                this.columnWorkingDetails = base.Columns["WorkingDetails"];
                this.columnLocation = base.Columns["Location"];
                this.columnMealsCountry = base.Columns["MealsCountry"];
                this.columnMealsAllowanceType = base.Columns["MealsAllowanceType"];
                this.columnMealsAllowance = base.Columns["MealsAllowance"];
                this.columnUnitID = base.Columns["UnitID"];
                this.columnTowedUnitID = base.Columns["TowedUnitID"];
                this.columnProjectTimeState = base.Columns["ProjectTimeState"];
                this.columnComments = base.Columns["Comments"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnWork_ = base.Columns["Work_"];
                this.columnFunction_ = base.Columns["Function_"];
                this.columnFairWage = base.Columns["FairWage"];
                this.columnJobClassType = base.Columns["JobClassType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTeamProjectTimeID = new global::System.Data.DataColumn("TeamProjectTimeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeamProjectTimeID);
                this.columnDetailID = new global::System.Data.DataColumn("DetailID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailID);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnCompaniesID = new global::System.Data.DataColumn("CompaniesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompaniesID);
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnDate_ = new global::System.Data.DataColumn("Date_", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate_);
                this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnOffset = new global::System.Data.DataColumn("Offset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOffset);
                this.columnProjectTime = new global::System.Data.DataColumn("ProjectTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectTime);
                this.columnWorkingDetails = new global::System.Data.DataColumn("WorkingDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkingDetails);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnMealsCountry = new global::System.Data.DataColumn("MealsCountry", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMealsCountry);
                this.columnMealsAllowanceType = new global::System.Data.DataColumn("MealsAllowanceType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMealsAllowanceType);
                this.columnMealsAllowance = new global::System.Data.DataColumn("MealsAllowance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMealsAllowance);
                this.columnUnitID = new global::System.Data.DataColumn("UnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitID);
                this.columnTowedUnitID = new global::System.Data.DataColumn("TowedUnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTowedUnitID);
                this.columnProjectTimeState = new global::System.Data.DataColumn("ProjectTimeState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectTimeState);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnWork_ = new global::System.Data.DataColumn("Work_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWork_);
                this.columnFunction_ = new global::System.Data.DataColumn("Function_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunction_);
                this.columnFairWage = new global::System.Data.DataColumn("FairWage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFairWage);
                this.columnJobClassType = new global::System.Data.DataColumn("JobClassType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobClassType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTeamProjectTimeID,
                                this.columnDetailID}, true));
                this.columnTeamProjectTimeID.AllowDBNull = false;
                this.columnDetailID.AllowDBNull = false;
                this.columnEmployeeID.AllowDBNull = false;
                this.columnCompaniesID.AllowDBNull = false;
                this.columnProjectID.AllowDBNull = false;
                this.columnDate_.AllowDBNull = false;
                this.columnStartTime.MaxLength = 10;
                this.columnEndTime.MaxLength = 10;
                this.columnProjectTime.AllowDBNull = false;
                this.columnWorkingDetails.MaxLength = 25;
                this.columnLocation.MaxLength = 50;
                this.columnMealsAllowanceType.MaxLength = 25;
                this.columnMealsAllowance.AllowDBNull = false;
                this.columnProjectTimeState.AllowDBNull = false;
                this.columnProjectTimeState.MaxLength = 25;
                this.columnComments.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
                this.columnWork_.MaxLength = 50;
                this.columnFunction_.MaxLength = 50;
                this.columnFairWage.AllowDBNull = false;
                this.columnJobClassType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_DETAILRow NewLFS_TEAM_PROJECT_TIME_DETAILRow() {
                return ((LFS_TEAM_PROJECT_TIME_DETAILRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_TEAM_PROJECT_TIME_DETAILRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_TEAM_PROJECT_TIME_DETAILRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_TEAM_PROJECT_TIME_DETAILRowChanged != null)) {
                    this.LFS_TEAM_PROJECT_TIME_DETAILRowChanged(this, new LFS_TEAM_PROJECT_TIME_DETAILRowChangeEvent(((LFS_TEAM_PROJECT_TIME_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_TEAM_PROJECT_TIME_DETAILRowChanging != null)) {
                    this.LFS_TEAM_PROJECT_TIME_DETAILRowChanging(this, new LFS_TEAM_PROJECT_TIME_DETAILRowChangeEvent(((LFS_TEAM_PROJECT_TIME_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_TEAM_PROJECT_TIME_DETAILRowDeleted != null)) {
                    this.LFS_TEAM_PROJECT_TIME_DETAILRowDeleted(this, new LFS_TEAM_PROJECT_TIME_DETAILRowChangeEvent(((LFS_TEAM_PROJECT_TIME_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_TEAM_PROJECT_TIME_DETAILRowDeleting != null)) {
                    this.LFS_TEAM_PROJECT_TIME_DETAILRowDeleting(this, new LFS_TEAM_PROJECT_TIME_DETAILRowChangeEvent(((LFS_TEAM_PROJECT_TIME_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_TEAM_PROJECT_TIME_DETAILRow(LFS_TEAM_PROJECT_TIME_DETAILRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TeamProjectTime2TDS ds = new TeamProjectTime2TDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_TEAM_PROJECT_TIME_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_TEAM_PROJECT_TIME_DETAIL_TEMPDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTeamProjectTimeID;
            
            private global::System.Data.DataColumn columnDetailID;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnCompaniesID;
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnDate_;
            
            private global::System.Data.DataColumn columnStartTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            private global::System.Data.DataColumn columnOffset;
            
            private global::System.Data.DataColumn columnProjectTime;
            
            private global::System.Data.DataColumn columnWorkingDetails;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnMealsCountry;
            
            private global::System.Data.DataColumn columnMealsAllowance;
            
            private global::System.Data.DataColumn columnUnitID;
            
            private global::System.Data.DataColumn columnTowedUnitID;
            
            private global::System.Data.DataColumn columnProjectTimeState;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnWork_;
            
            private global::System.Data.DataColumn columnFunction_;
            
            private global::System.Data.DataColumn columnWorkFunctionConcat;
            
            private global::System.Data.DataColumn columnFairWage;
            
            private global::System.Data.DataColumn columnJobClassType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_DETAIL_TEMPDataTable() {
                this.TableName = "LFS_TEAM_PROJECT_TIME_DETAIL_TEMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_TEAM_PROJECT_TIME_DETAIL_TEMPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_TEAM_PROJECT_TIME_DETAIL_TEMPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TeamProjectTimeIDColumn {
                get {
                    return this.columnTeamProjectTimeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailIDColumn {
                get {
                    return this.columnDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompaniesIDColumn {
                get {
                    return this.columnCompaniesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Date_Column {
                get {
                    return this.columnDate_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartTimeColumn {
                get {
                    return this.columnStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OffsetColumn {
                get {
                    return this.columnOffset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectTimeColumn {
                get {
                    return this.columnProjectTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkingDetailsColumn {
                get {
                    return this.columnWorkingDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MealsCountryColumn {
                get {
                    return this.columnMealsCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MealsAllowanceColumn {
                get {
                    return this.columnMealsAllowance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitIDColumn {
                get {
                    return this.columnUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TowedUnitIDColumn {
                get {
                    return this.columnTowedUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectTimeStateColumn {
                get {
                    return this.columnProjectTimeState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Work_Column {
                get {
                    return this.columnWork_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Function_Column {
                get {
                    return this.columnFunction_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkFunctionConcatColumn {
                get {
                    return this.columnWorkFunctionConcat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FairWageColumn {
                get {
                    return this.columnFairWage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobClassTypeColumn {
                get {
                    return this.columnJobClassType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow this[int index] {
                get {
                    return ((LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow)(this.Rows[index]));
                }
            }
            
            public event LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowChangeEventHandler LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowChanging;
            
            public event LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowChangeEventHandler LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowChanged;
            
            public event LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowChangeEventHandler LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowDeleting;
            
            public event LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowChangeEventHandler LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow(LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow AddLFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow(
                        int TeamProjectTimeID, 
                        int DetailID, 
                        int EmployeeID, 
                        int CompaniesID, 
                        int ProjectID, 
                        System.DateTime Date_, 
                        string StartTime, 
                        string EndTime, 
                        double Offset, 
                        double ProjectTime, 
                        string WorkingDetails, 
                        string Location, 
                        long MealsCountry, 
                        bool MealsAllowance, 
                        int UnitID, 
                        int TowedUnitID, 
                        string ProjectTimeState, 
                        string Comments, 
                        bool Deleted, 
                        string Work_, 
                        string Function_, 
                        string WorkFunctionConcat, 
                        bool FairWage, 
                        string JobClassType) {
                LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow rowLFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow = ((LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TeamProjectTimeID,
                        DetailID,
                        EmployeeID,
                        CompaniesID,
                        ProjectID,
                        Date_,
                        StartTime,
                        EndTime,
                        Offset,
                        ProjectTime,
                        WorkingDetails,
                        Location,
                        MealsCountry,
                        MealsAllowance,
                        UnitID,
                        TowedUnitID,
                        ProjectTimeState,
                        Comments,
                        Deleted,
                        Work_,
                        Function_,
                        WorkFunctionConcat,
                        FairWage,
                        JobClassType};
                rowLFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow);
                return rowLFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_TEAM_PROJECT_TIME_DETAIL_TEMPDataTable cln = ((LFS_TEAM_PROJECT_TIME_DETAIL_TEMPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_TEAM_PROJECT_TIME_DETAIL_TEMPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTeamProjectTimeID = base.Columns["TeamProjectTimeID"];
                this.columnDetailID = base.Columns["DetailID"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnCompaniesID = base.Columns["CompaniesID"];
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnDate_ = base.Columns["Date_"];
                this.columnStartTime = base.Columns["StartTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnOffset = base.Columns["Offset"];
                this.columnProjectTime = base.Columns["ProjectTime"];
                this.columnWorkingDetails = base.Columns["WorkingDetails"];
                this.columnLocation = base.Columns["Location"];
                this.columnMealsCountry = base.Columns["MealsCountry"];
                this.columnMealsAllowance = base.Columns["MealsAllowance"];
                this.columnUnitID = base.Columns["UnitID"];
                this.columnTowedUnitID = base.Columns["TowedUnitID"];
                this.columnProjectTimeState = base.Columns["ProjectTimeState"];
                this.columnComments = base.Columns["Comments"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnWork_ = base.Columns["Work_"];
                this.columnFunction_ = base.Columns["Function_"];
                this.columnWorkFunctionConcat = base.Columns["WorkFunctionConcat"];
                this.columnFairWage = base.Columns["FairWage"];
                this.columnJobClassType = base.Columns["JobClassType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTeamProjectTimeID = new global::System.Data.DataColumn("TeamProjectTimeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeamProjectTimeID);
                this.columnDetailID = new global::System.Data.DataColumn("DetailID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailID);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnCompaniesID = new global::System.Data.DataColumn("CompaniesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompaniesID);
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnDate_ = new global::System.Data.DataColumn("Date_", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate_);
                this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnOffset = new global::System.Data.DataColumn("Offset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOffset);
                this.columnProjectTime = new global::System.Data.DataColumn("ProjectTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectTime);
                this.columnWorkingDetails = new global::System.Data.DataColumn("WorkingDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkingDetails);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnMealsCountry = new global::System.Data.DataColumn("MealsCountry", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMealsCountry);
                this.columnMealsAllowance = new global::System.Data.DataColumn("MealsAllowance", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMealsAllowance);
                this.columnUnitID = new global::System.Data.DataColumn("UnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitID);
                this.columnTowedUnitID = new global::System.Data.DataColumn("TowedUnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTowedUnitID);
                this.columnProjectTimeState = new global::System.Data.DataColumn("ProjectTimeState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectTimeState);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnWork_ = new global::System.Data.DataColumn("Work_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWork_);
                this.columnFunction_ = new global::System.Data.DataColumn("Function_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunction_);
                this.columnWorkFunctionConcat = new global::System.Data.DataColumn("WorkFunctionConcat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkFunctionConcat);
                this.columnFairWage = new global::System.Data.DataColumn("FairWage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFairWage);
                this.columnJobClassType = new global::System.Data.DataColumn("JobClassType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobClassType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("LFS_TEAM_PROJECT_TIME_DETAIL_TEMPKey1", new global::System.Data.DataColumn[] {
                                this.columnTeamProjectTimeID,
                                this.columnDetailID}, false));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow NewLFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow() {
                return ((LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowChanged != null)) {
                    this.LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowChanged(this, new LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowChangeEvent(((LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowChanging != null)) {
                    this.LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowChanging(this, new LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowChangeEvent(((LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowDeleted != null)) {
                    this.LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowDeleted(this, new LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowChangeEvent(((LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowDeleting != null)) {
                    this.LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowDeleting(this, new LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowChangeEvent(((LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow(LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TeamProjectTime2TDS ds = new TeamProjectTime2TDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_TEAM_PROJECT_TIME_DETAIL_TEMPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TemplateDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTeamProjectTimeID;
            
            private global::System.Data.DataColumn columnTemplateName;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnProjectNumber;
            
            private global::System.Data.DataColumn columnProjectName;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnSelected;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TemplateDataTable() {
                this.TableName = "Template";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TemplateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TemplateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TeamProjectTimeIDColumn {
                get {
                    return this.columnTeamProjectTimeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TemplateNameColumn {
                get {
                    return this.columnTemplateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectNumberColumn {
                get {
                    return this.columnProjectNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectNameColumn {
                get {
                    return this.columnProjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectedColumn {
                get {
                    return this.columnSelected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TemplateRow this[int index] {
                get {
                    return ((TemplateRow)(this.Rows[index]));
                }
            }
            
            public event TemplateRowChangeEventHandler TemplateRowChanging;
            
            public event TemplateRowChangeEventHandler TemplateRowChanged;
            
            public event TemplateRowChangeEventHandler TemplateRowDeleting;
            
            public event TemplateRowChangeEventHandler TemplateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTemplateRow(TemplateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TemplateRow AddTemplateRow(string TemplateName, string ClientName, string ProjectNumber, string ProjectName, bool Deleted, bool Selected) {
                TemplateRow rowTemplateRow = ((TemplateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TemplateName,
                        ClientName,
                        ProjectNumber,
                        ProjectName,
                        Deleted,
                        Selected};
                rowTemplateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTemplateRow);
                return rowTemplateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TemplateRow FindByTeamProjectTimeID(int TeamProjectTimeID) {
                return ((TemplateRow)(this.Rows.Find(new object[] {
                            TeamProjectTimeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TemplateDataTable cln = ((TemplateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TemplateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTeamProjectTimeID = base.Columns["TeamProjectTimeID"];
                this.columnTemplateName = base.Columns["TemplateName"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnProjectNumber = base.Columns["ProjectNumber"];
                this.columnProjectName = base.Columns["ProjectName"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnSelected = base.Columns["Selected"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTeamProjectTimeID = new global::System.Data.DataColumn("TeamProjectTimeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeamProjectTimeID);
                this.columnTemplateName = new global::System.Data.DataColumn("TemplateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemplateName);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnProjectNumber = new global::System.Data.DataColumn("ProjectNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectNumber);
                this.columnProjectName = new global::System.Data.DataColumn("ProjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectName);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnSelected = new global::System.Data.DataColumn("Selected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelected);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTeamProjectTimeID}, true));
                this.columnTeamProjectTimeID.AutoIncrement = true;
                this.columnTeamProjectTimeID.AllowDBNull = false;
                this.columnTeamProjectTimeID.ReadOnly = true;
                this.columnTeamProjectTimeID.Unique = true;
                this.columnTemplateName.MaxLength = 50;
                this.columnClientName.MaxLength = 150;
                this.columnProjectNumber.AllowDBNull = false;
                this.columnProjectNumber.MaxLength = 25;
                this.columnProjectName.MaxLength = 100;
                this.columnDeleted.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TemplateRow NewTemplateRow() {
                return ((TemplateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TemplateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TemplateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TemplateRowChanged != null)) {
                    this.TemplateRowChanged(this, new TemplateRowChangeEvent(((TemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TemplateRowChanging != null)) {
                    this.TemplateRowChanging(this, new TemplateRowChangeEvent(((TemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TemplateRowDeleted != null)) {
                    this.TemplateRowDeleted(this, new TemplateRowChangeEvent(((TemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TemplateRowDeleting != null)) {
                    this.TemplateRowDeleting(this, new TemplateRowChangeEvent(((TemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTemplateRow(TemplateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TeamProjectTime2TDS ds = new TeamProjectTime2TDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TemplateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkFunctionConcat;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATDataTable() {
                this.TableName = "TEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkFunctionConcatColumn {
                get {
                    return this.columnWorkFunctionConcat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow this[int index] {
                get {
                    return ((TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow)(this.Rows[index]));
                }
            }
            
            public event TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowChangeEventHandler TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowChanging;
            
            public event TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowChangeEventHandler TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowChanged;
            
            public event TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowChangeEventHandler TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowDeleting;
            
            public event TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowChangeEventHandler TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow(TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow AddTEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow(string WorkFunctionConcat) {
                TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow rowTEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow = ((TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkFunctionConcat};
                rowTEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow);
                return rowTEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATDataTable cln = ((TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkFunctionConcat = base.Columns["WorkFunctionConcat"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkFunctionConcat = new global::System.Data.DataColumn("WorkFunctionConcat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkFunctionConcat);
                this.columnWorkFunctionConcat.ReadOnly = true;
                this.columnWorkFunctionConcat.Caption = "workFunctionConcat";
                this.columnWorkFunctionConcat.MaxLength = 103;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow NewTEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow() {
                return ((TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowChanged != null)) {
                    this.TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowChanged(this, new TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowChangeEvent(((TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowChanging != null)) {
                    this.TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowChanging(this, new TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowChangeEvent(((TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowDeleted != null)) {
                    this.TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowDeleted(this, new TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowChangeEvent(((TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowDeleting != null)) {
                    this.TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowDeleting(this, new TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowChangeEvent(((TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow(TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TeamProjectTime2TDS ds = new TeamProjectTime2TDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_TEAM_PROJECT_TIMEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTeamProjectTimeID;
            
            private global::System.Data.DataColumn columnTemplateName;
            
            private global::System.Data.DataColumn columnCompaniesID;
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnDate_;
            
            private global::System.Data.DataColumn columnStartTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            private global::System.Data.DataColumn columnOffset;
            
            private global::System.Data.DataColumn columnWorkingDetails;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnMealsCountry;
            
            private global::System.Data.DataColumn columnMealsAllowanceType;
            
            private global::System.Data.DataColumn columnMealsAllowance;
            
            private global::System.Data.DataColumn columnUnitID;
            
            private global::System.Data.DataColumn columnTowedUnitID;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnLoginID;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnWork_;
            
            private global::System.Data.DataColumn columnFunction_;
            
            private global::System.Data.DataColumn columnFairWage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIMEDataTable() {
                this.TableName = "LFS_TEAM_PROJECT_TIME";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_TEAM_PROJECT_TIMEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_TEAM_PROJECT_TIMEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TeamProjectTimeIDColumn {
                get {
                    return this.columnTeamProjectTimeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TemplateNameColumn {
                get {
                    return this.columnTemplateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompaniesIDColumn {
                get {
                    return this.columnCompaniesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Date_Column {
                get {
                    return this.columnDate_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartTimeColumn {
                get {
                    return this.columnStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OffsetColumn {
                get {
                    return this.columnOffset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkingDetailsColumn {
                get {
                    return this.columnWorkingDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MealsCountryColumn {
                get {
                    return this.columnMealsCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MealsAllowanceTypeColumn {
                get {
                    return this.columnMealsAllowanceType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MealsAllowanceColumn {
                get {
                    return this.columnMealsAllowance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitIDColumn {
                get {
                    return this.columnUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TowedUnitIDColumn {
                get {
                    return this.columnTowedUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LoginIDColumn {
                get {
                    return this.columnLoginID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Work_Column {
                get {
                    return this.columnWork_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Function_Column {
                get {
                    return this.columnFunction_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FairWageColumn {
                get {
                    return this.columnFairWage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIMERow this[int index] {
                get {
                    return ((LFS_TEAM_PROJECT_TIMERow)(this.Rows[index]));
                }
            }
            
            public event LFS_TEAM_PROJECT_TIMERowChangeEventHandler LFS_TEAM_PROJECT_TIMERowChanging;
            
            public event LFS_TEAM_PROJECT_TIMERowChangeEventHandler LFS_TEAM_PROJECT_TIMERowChanged;
            
            public event LFS_TEAM_PROJECT_TIMERowChangeEventHandler LFS_TEAM_PROJECT_TIMERowDeleting;
            
            public event LFS_TEAM_PROJECT_TIMERowChangeEventHandler LFS_TEAM_PROJECT_TIMERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_TEAM_PROJECT_TIMERow(LFS_TEAM_PROJECT_TIMERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIMERow AddLFS_TEAM_PROJECT_TIMERow(
                        string TemplateName, 
                        int CompaniesID, 
                        int ProjectID, 
                        System.DateTime Date_, 
                        System.DateTime StartTime, 
                        System.DateTime EndTime, 
                        double Offset, 
                        string WorkingDetails, 
                        string Location, 
                        long MealsCountry, 
                        string MealsAllowanceType, 
                        decimal MealsAllowance, 
                        int UnitID, 
                        int TowedUnitID, 
                        string Comments, 
                        string Type, 
                        string State, 
                        int LoginID, 
                        bool Deleted, 
                        string Work_, 
                        string Function_, 
                        bool FairWage) {
                LFS_TEAM_PROJECT_TIMERow rowLFS_TEAM_PROJECT_TIMERow = ((LFS_TEAM_PROJECT_TIMERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TemplateName,
                        CompaniesID,
                        ProjectID,
                        Date_,
                        StartTime,
                        EndTime,
                        Offset,
                        WorkingDetails,
                        Location,
                        MealsCountry,
                        MealsAllowanceType,
                        MealsAllowance,
                        UnitID,
                        TowedUnitID,
                        Comments,
                        Type,
                        State,
                        LoginID,
                        Deleted,
                        Work_,
                        Function_,
                        FairWage};
                rowLFS_TEAM_PROJECT_TIMERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_TEAM_PROJECT_TIMERow);
                return rowLFS_TEAM_PROJECT_TIMERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIMERow FindByTeamProjectTimeID(int TeamProjectTimeID) {
                return ((LFS_TEAM_PROJECT_TIMERow)(this.Rows.Find(new object[] {
                            TeamProjectTimeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_TEAM_PROJECT_TIMEDataTable cln = ((LFS_TEAM_PROJECT_TIMEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_TEAM_PROJECT_TIMEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTeamProjectTimeID = base.Columns["TeamProjectTimeID"];
                this.columnTemplateName = base.Columns["TemplateName"];
                this.columnCompaniesID = base.Columns["CompaniesID"];
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnDate_ = base.Columns["Date_"];
                this.columnStartTime = base.Columns["StartTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnOffset = base.Columns["Offset"];
                this.columnWorkingDetails = base.Columns["WorkingDetails"];
                this.columnLocation = base.Columns["Location"];
                this.columnMealsCountry = base.Columns["MealsCountry"];
                this.columnMealsAllowanceType = base.Columns["MealsAllowanceType"];
                this.columnMealsAllowance = base.Columns["MealsAllowance"];
                this.columnUnitID = base.Columns["UnitID"];
                this.columnTowedUnitID = base.Columns["TowedUnitID"];
                this.columnComments = base.Columns["Comments"];
                this.columnType = base.Columns["Type"];
                this.columnState = base.Columns["State"];
                this.columnLoginID = base.Columns["LoginID"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnWork_ = base.Columns["Work_"];
                this.columnFunction_ = base.Columns["Function_"];
                this.columnFairWage = base.Columns["FairWage"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTeamProjectTimeID = new global::System.Data.DataColumn("TeamProjectTimeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeamProjectTimeID);
                this.columnTemplateName = new global::System.Data.DataColumn("TemplateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemplateName);
                this.columnCompaniesID = new global::System.Data.DataColumn("CompaniesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompaniesID);
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnDate_ = new global::System.Data.DataColumn("Date_", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate_);
                this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnOffset = new global::System.Data.DataColumn("Offset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOffset);
                this.columnWorkingDetails = new global::System.Data.DataColumn("WorkingDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkingDetails);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnMealsCountry = new global::System.Data.DataColumn("MealsCountry", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMealsCountry);
                this.columnMealsAllowanceType = new global::System.Data.DataColumn("MealsAllowanceType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMealsAllowanceType);
                this.columnMealsAllowance = new global::System.Data.DataColumn("MealsAllowance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMealsAllowance);
                this.columnUnitID = new global::System.Data.DataColumn("UnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitID);
                this.columnTowedUnitID = new global::System.Data.DataColumn("TowedUnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTowedUnitID);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnLoginID = new global::System.Data.DataColumn("LoginID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoginID);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnWork_ = new global::System.Data.DataColumn("Work_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWork_);
                this.columnFunction_ = new global::System.Data.DataColumn("Function_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunction_);
                this.columnFairWage = new global::System.Data.DataColumn("FairWage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFairWage);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTeamProjectTimeID}, true));
                this.columnTeamProjectTimeID.AutoIncrement = true;
                this.columnTeamProjectTimeID.AllowDBNull = false;
                this.columnTeamProjectTimeID.Unique = true;
                this.columnTemplateName.MaxLength = 50;
                this.columnCompaniesID.AllowDBNull = false;
                this.columnProjectID.AllowDBNull = false;
                this.columnDate_.AllowDBNull = false;
                this.columnWorkingDetails.MaxLength = 25;
                this.columnLocation.MaxLength = 50;
                this.columnMealsAllowanceType.MaxLength = 25;
                this.columnMealsAllowance.AllowDBNull = false;
                this.columnComments.MaxLength = 1073741823;
                this.columnType.AllowDBNull = false;
                this.columnType.MaxLength = 25;
                this.columnState.AllowDBNull = false;
                this.columnState.MaxLength = 25;
                this.columnLoginID.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnWork_.MaxLength = 50;
                this.columnFunction_.MaxLength = 50;
                this.columnFairWage.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIMERow NewLFS_TEAM_PROJECT_TIMERow() {
                return ((LFS_TEAM_PROJECT_TIMERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_TEAM_PROJECT_TIMERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_TEAM_PROJECT_TIMERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_TEAM_PROJECT_TIMERowChanged != null)) {
                    this.LFS_TEAM_PROJECT_TIMERowChanged(this, new LFS_TEAM_PROJECT_TIMERowChangeEvent(((LFS_TEAM_PROJECT_TIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_TEAM_PROJECT_TIMERowChanging != null)) {
                    this.LFS_TEAM_PROJECT_TIMERowChanging(this, new LFS_TEAM_PROJECT_TIMERowChangeEvent(((LFS_TEAM_PROJECT_TIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_TEAM_PROJECT_TIMERowDeleted != null)) {
                    this.LFS_TEAM_PROJECT_TIMERowDeleted(this, new LFS_TEAM_PROJECT_TIMERowChangeEvent(((LFS_TEAM_PROJECT_TIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_TEAM_PROJECT_TIMERowDeleting != null)) {
                    this.LFS_TEAM_PROJECT_TIMERowDeleting(this, new LFS_TEAM_PROJECT_TIMERowChangeEvent(((LFS_TEAM_PROJECT_TIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_TEAM_PROJECT_TIMERow(LFS_TEAM_PROJECT_TIMERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TeamProjectTime2TDS ds = new TeamProjectTime2TDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_TEAM_PROJECT_TIMEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_TEAM_PROJECT_TIME_SECTIONDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSectionID;
            
            private global::System.Data.DataColumn columnFlowOrderID;
            
            private global::System.Data.DataColumn columnCompleted;
            
            private global::System.Data.DataColumn column_Date;
            
            private global::System.Data.DataColumn columnSelected;
            
            private global::System.Data.DataColumn columnPercentageOpened;
            
            private global::System.Data.DataColumn columnPercentageBrushed;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTIONDataTable() {
                this.TableName = "LFS_TEAM_PROJECT_TIME_SECTION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_TEAM_PROJECT_TIME_SECTIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_TEAM_PROJECT_TIME_SECTIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionIDColumn {
                get {
                    return this.columnSectionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlowOrderIDColumn {
                get {
                    return this.columnFlowOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompletedColumn {
                get {
                    return this.columnCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _DateColumn {
                get {
                    return this.column_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectedColumn {
                get {
                    return this.columnSelected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PercentageOpenedColumn {
                get {
                    return this.columnPercentageOpened;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PercentageBrushedColumn {
                get {
                    return this.columnPercentageBrushed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTIONRow this[int index] {
                get {
                    return ((LFS_TEAM_PROJECT_TIME_SECTIONRow)(this.Rows[index]));
                }
            }
            
            public event LFS_TEAM_PROJECT_TIME_SECTIONRowChangeEventHandler LFS_TEAM_PROJECT_TIME_SECTIONRowChanging;
            
            public event LFS_TEAM_PROJECT_TIME_SECTIONRowChangeEventHandler LFS_TEAM_PROJECT_TIME_SECTIONRowChanged;
            
            public event LFS_TEAM_PROJECT_TIME_SECTIONRowChangeEventHandler LFS_TEAM_PROJECT_TIME_SECTIONRowDeleting;
            
            public event LFS_TEAM_PROJECT_TIME_SECTIONRowChangeEventHandler LFS_TEAM_PROJECT_TIME_SECTIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_TEAM_PROJECT_TIME_SECTIONRow(LFS_TEAM_PROJECT_TIME_SECTIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTIONRow AddLFS_TEAM_PROJECT_TIME_SECTIONRow(string SectionID, string FlowOrderID, bool Completed, System.DateTime _Date, bool Selected, int PercentageOpened, int PercentageBrushed) {
                LFS_TEAM_PROJECT_TIME_SECTIONRow rowLFS_TEAM_PROJECT_TIME_SECTIONRow = ((LFS_TEAM_PROJECT_TIME_SECTIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SectionID,
                        FlowOrderID,
                        Completed,
                        _Date,
                        Selected,
                        PercentageOpened,
                        PercentageBrushed};
                rowLFS_TEAM_PROJECT_TIME_SECTIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_TEAM_PROJECT_TIME_SECTIONRow);
                return rowLFS_TEAM_PROJECT_TIME_SECTIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTIONRow FindBySectionID(string SectionID) {
                return ((LFS_TEAM_PROJECT_TIME_SECTIONRow)(this.Rows.Find(new object[] {
                            SectionID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_TEAM_PROJECT_TIME_SECTIONDataTable cln = ((LFS_TEAM_PROJECT_TIME_SECTIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_TEAM_PROJECT_TIME_SECTIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSectionID = base.Columns["SectionID"];
                this.columnFlowOrderID = base.Columns["FlowOrderID"];
                this.columnCompleted = base.Columns["Completed"];
                this.column_Date = base.Columns["_Date"];
                this.columnSelected = base.Columns["Selected"];
                this.columnPercentageOpened = base.Columns["PercentageOpened"];
                this.columnPercentageBrushed = base.Columns["PercentageBrushed"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSectionID = new global::System.Data.DataColumn("SectionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionID);
                this.columnFlowOrderID = new global::System.Data.DataColumn("FlowOrderID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlowOrderID);
                this.columnCompleted = new global::System.Data.DataColumn("Completed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleted);
                this.column_Date = new global::System.Data.DataColumn("_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_Date);
                this.columnSelected = new global::System.Data.DataColumn("Selected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelected);
                this.columnPercentageOpened = new global::System.Data.DataColumn("PercentageOpened", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageOpened);
                this.columnPercentageBrushed = new global::System.Data.DataColumn("PercentageBrushed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageBrushed);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSectionID}, true));
                this.columnSectionID.AllowDBNull = false;
                this.columnSectionID.Unique = true;
                this.columnSectionID.MaxLength = 75;
                this.columnFlowOrderID.AllowDBNull = false;
                this.columnFlowOrderID.MaxLength = 15;
                this.columnCompleted.AllowDBNull = false;
                this.columnSelected.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTIONRow NewLFS_TEAM_PROJECT_TIME_SECTIONRow() {
                return ((LFS_TEAM_PROJECT_TIME_SECTIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_TEAM_PROJECT_TIME_SECTIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_TEAM_PROJECT_TIME_SECTIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_TEAM_PROJECT_TIME_SECTIONRowChanged != null)) {
                    this.LFS_TEAM_PROJECT_TIME_SECTIONRowChanged(this, new LFS_TEAM_PROJECT_TIME_SECTIONRowChangeEvent(((LFS_TEAM_PROJECT_TIME_SECTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_TEAM_PROJECT_TIME_SECTIONRowChanging != null)) {
                    this.LFS_TEAM_PROJECT_TIME_SECTIONRowChanging(this, new LFS_TEAM_PROJECT_TIME_SECTIONRowChangeEvent(((LFS_TEAM_PROJECT_TIME_SECTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_TEAM_PROJECT_TIME_SECTIONRowDeleted != null)) {
                    this.LFS_TEAM_PROJECT_TIME_SECTIONRowDeleted(this, new LFS_TEAM_PROJECT_TIME_SECTIONRowChangeEvent(((LFS_TEAM_PROJECT_TIME_SECTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_TEAM_PROJECT_TIME_SECTIONRowDeleting != null)) {
                    this.LFS_TEAM_PROJECT_TIME_SECTIONRowDeleting(this, new LFS_TEAM_PROJECT_TIME_SECTIONRowChangeEvent(((LFS_TEAM_PROJECT_TIME_SECTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_TEAM_PROJECT_TIME_SECTIONRow(LFS_TEAM_PROJECT_TIME_SECTIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TeamProjectTime2TDS ds = new TeamProjectTime2TDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_TEAM_PROJECT_TIME_SECTIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_TEAM_PROJECT_TIME_SECTION_LATERALDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSectionID;
            
            private global::System.Data.DataColumn columnLateralID;
            
            private global::System.Data.DataColumn columnOpened;
            
            private global::System.Data.DataColumn columnBrushed;
            
            private global::System.Data.DataColumn columnSelected;
            
            private global::System.Data.DataColumn columnAssetIDLateral;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTION_LATERALDataTable() {
                this.TableName = "LFS_TEAM_PROJECT_TIME_SECTION_LATERAL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_TEAM_PROJECT_TIME_SECTION_LATERALDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_TEAM_PROJECT_TIME_SECTION_LATERALDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionIDColumn {
                get {
                    return this.columnSectionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralIDColumn {
                get {
                    return this.columnLateralID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OpenedColumn {
                get {
                    return this.columnOpened;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrushedColumn {
                get {
                    return this.columnBrushed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectedColumn {
                get {
                    return this.columnSelected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetIDLateralColumn {
                get {
                    return this.columnAssetIDLateral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow this[int index] {
                get {
                    return ((LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow)(this.Rows[index]));
                }
            }
            
            public event LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowChangeEventHandler LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowChanging;
            
            public event LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowChangeEventHandler LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowChanged;
            
            public event LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowChangeEventHandler LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowDeleting;
            
            public event LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowChangeEventHandler LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_TEAM_PROJECT_TIME_SECTION_LATERALRow(LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow AddLFS_TEAM_PROJECT_TIME_SECTION_LATERALRow(string SectionID, string LateralID, bool Opened, bool Brushed, bool Selected, int AssetIDLateral) {
                LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow rowLFS_TEAM_PROJECT_TIME_SECTION_LATERALRow = ((LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SectionID,
                        LateralID,
                        Opened,
                        Brushed,
                        Selected,
                        AssetIDLateral};
                rowLFS_TEAM_PROJECT_TIME_SECTION_LATERALRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_TEAM_PROJECT_TIME_SECTION_LATERALRow);
                return rowLFS_TEAM_PROJECT_TIME_SECTION_LATERALRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow FindBySectionIDLateralID(string SectionID, string LateralID) {
                return ((LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow)(this.Rows.Find(new object[] {
                            SectionID,
                            LateralID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_TEAM_PROJECT_TIME_SECTION_LATERALDataTable cln = ((LFS_TEAM_PROJECT_TIME_SECTION_LATERALDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_TEAM_PROJECT_TIME_SECTION_LATERALDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSectionID = base.Columns["SectionID"];
                this.columnLateralID = base.Columns["LateralID"];
                this.columnOpened = base.Columns["Opened"];
                this.columnBrushed = base.Columns["Brushed"];
                this.columnSelected = base.Columns["Selected"];
                this.columnAssetIDLateral = base.Columns["AssetIDLateral"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSectionID = new global::System.Data.DataColumn("SectionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionID);
                this.columnLateralID = new global::System.Data.DataColumn("LateralID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralID);
                this.columnOpened = new global::System.Data.DataColumn("Opened", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpened);
                this.columnBrushed = new global::System.Data.DataColumn("Brushed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrushed);
                this.columnSelected = new global::System.Data.DataColumn("Selected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelected);
                this.columnAssetIDLateral = new global::System.Data.DataColumn("AssetIDLateral", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetIDLateral);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSectionID,
                                this.columnLateralID}, true));
                this.columnSectionID.AllowDBNull = false;
                this.columnLateralID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow NewLFS_TEAM_PROJECT_TIME_SECTION_LATERALRow() {
                return ((LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowChanged != null)) {
                    this.LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowChanged(this, new LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowChangeEvent(((LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowChanging != null)) {
                    this.LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowChanging(this, new LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowChangeEvent(((LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowDeleted != null)) {
                    this.LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowDeleted(this, new LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowChangeEvent(((LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowDeleting != null)) {
                    this.LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowDeleting(this, new LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowChangeEvent(((LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_TEAM_PROJECT_TIME_SECTION_LATERALRow(LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TeamProjectTime2TDS ds = new TeamProjectTime2TDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_TEAM_PROJECT_TIME_SECTION_LATERALDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_TEAM_PROJECT_TIME_SECTION_MHDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAssetID;
            
            private global::System.Data.DataColumn columnManholeNumber;
            
            private global::System.Data.DataColumn columnStreet;
            
            private global::System.Data.DataColumn columnSquareFoot;
            
            private global::System.Data.DataColumn columnSelected;
            
            private global::System.Data.DataColumn column_Date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTION_MHDataTable() {
                this.TableName = "LFS_TEAM_PROJECT_TIME_SECTION_MH";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_TEAM_PROJECT_TIME_SECTION_MHDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_TEAM_PROJECT_TIME_SECTION_MHDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetIDColumn {
                get {
                    return this.columnAssetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManholeNumberColumn {
                get {
                    return this.columnManholeNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SquareFootColumn {
                get {
                    return this.columnSquareFoot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectedColumn {
                get {
                    return this.columnSelected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _DateColumn {
                get {
                    return this.column_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTION_MHRow this[int index] {
                get {
                    return ((LFS_TEAM_PROJECT_TIME_SECTION_MHRow)(this.Rows[index]));
                }
            }
            
            public event LFS_TEAM_PROJECT_TIME_SECTION_MHRowChangeEventHandler LFS_TEAM_PROJECT_TIME_SECTION_MHRowChanging;
            
            public event LFS_TEAM_PROJECT_TIME_SECTION_MHRowChangeEventHandler LFS_TEAM_PROJECT_TIME_SECTION_MHRowChanged;
            
            public event LFS_TEAM_PROJECT_TIME_SECTION_MHRowChangeEventHandler LFS_TEAM_PROJECT_TIME_SECTION_MHRowDeleting;
            
            public event LFS_TEAM_PROJECT_TIME_SECTION_MHRowChangeEventHandler LFS_TEAM_PROJECT_TIME_SECTION_MHRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_TEAM_PROJECT_TIME_SECTION_MHRow(LFS_TEAM_PROJECT_TIME_SECTION_MHRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTION_MHRow AddLFS_TEAM_PROJECT_TIME_SECTION_MHRow(int AssetID, string ManholeNumber, string Street, string SquareFoot, bool Selected, System.DateTime _Date) {
                LFS_TEAM_PROJECT_TIME_SECTION_MHRow rowLFS_TEAM_PROJECT_TIME_SECTION_MHRow = ((LFS_TEAM_PROJECT_TIME_SECTION_MHRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AssetID,
                        ManholeNumber,
                        Street,
                        SquareFoot,
                        Selected,
                        _Date};
                rowLFS_TEAM_PROJECT_TIME_SECTION_MHRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_TEAM_PROJECT_TIME_SECTION_MHRow);
                return rowLFS_TEAM_PROJECT_TIME_SECTION_MHRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTION_MHRow FindByAssetID(int AssetID) {
                return ((LFS_TEAM_PROJECT_TIME_SECTION_MHRow)(this.Rows.Find(new object[] {
                            AssetID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_TEAM_PROJECT_TIME_SECTION_MHDataTable cln = ((LFS_TEAM_PROJECT_TIME_SECTION_MHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_TEAM_PROJECT_TIME_SECTION_MHDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAssetID = base.Columns["AssetID"];
                this.columnManholeNumber = base.Columns["ManholeNumber"];
                this.columnStreet = base.Columns["Street"];
                this.columnSquareFoot = base.Columns["SquareFoot"];
                this.columnSelected = base.Columns["Selected"];
                this.column_Date = base.Columns["_Date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAssetID = new global::System.Data.DataColumn("AssetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetID);
                this.columnManholeNumber = new global::System.Data.DataColumn("ManholeNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManholeNumber);
                this.columnStreet = new global::System.Data.DataColumn("Street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnSquareFoot = new global::System.Data.DataColumn("SquareFoot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSquareFoot);
                this.columnSelected = new global::System.Data.DataColumn("Selected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelected);
                this.column_Date = new global::System.Data.DataColumn("_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_Date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAssetID}, true));
                this.columnAssetID.AllowDBNull = false;
                this.columnAssetID.Unique = true;
                this.columnManholeNumber.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTION_MHRow NewLFS_TEAM_PROJECT_TIME_SECTION_MHRow() {
                return ((LFS_TEAM_PROJECT_TIME_SECTION_MHRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_TEAM_PROJECT_TIME_SECTION_MHRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_TEAM_PROJECT_TIME_SECTION_MHRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_TEAM_PROJECT_TIME_SECTION_MHRowChanged != null)) {
                    this.LFS_TEAM_PROJECT_TIME_SECTION_MHRowChanged(this, new LFS_TEAM_PROJECT_TIME_SECTION_MHRowChangeEvent(((LFS_TEAM_PROJECT_TIME_SECTION_MHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_TEAM_PROJECT_TIME_SECTION_MHRowChanging != null)) {
                    this.LFS_TEAM_PROJECT_TIME_SECTION_MHRowChanging(this, new LFS_TEAM_PROJECT_TIME_SECTION_MHRowChangeEvent(((LFS_TEAM_PROJECT_TIME_SECTION_MHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_TEAM_PROJECT_TIME_SECTION_MHRowDeleted != null)) {
                    this.LFS_TEAM_PROJECT_TIME_SECTION_MHRowDeleted(this, new LFS_TEAM_PROJECT_TIME_SECTION_MHRowChangeEvent(((LFS_TEAM_PROJECT_TIME_SECTION_MHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_TEAM_PROJECT_TIME_SECTION_MHRowDeleting != null)) {
                    this.LFS_TEAM_PROJECT_TIME_SECTION_MHRowDeleting(this, new LFS_TEAM_PROJECT_TIME_SECTION_MHRowChangeEvent(((LFS_TEAM_PROJECT_TIME_SECTION_MHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_TEAM_PROJECT_TIME_SECTION_MHRow(LFS_TEAM_PROJECT_TIME_SECTION_MHRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TeamProjectTime2TDS ds = new TeamProjectTime2TDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_TEAM_PROJECT_TIME_SECTION_MHDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_TEAM_PROJECT_TIME_DETAILRow : global::System.Data.DataRow {
            
            private LFS_TEAM_PROJECT_TIME_DETAILDataTable tableLFS_TEAM_PROJECT_TIME_DETAIL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_TEAM_PROJECT_TIME_DETAILRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_TEAM_PROJECT_TIME_DETAIL = ((LFS_TEAM_PROJECT_TIME_DETAILDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TeamProjectTimeID {
                get {
                    return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.TeamProjectTimeIDColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.TeamProjectTimeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DetailID {
                get {
                    return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.DetailIDColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.DetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.EmployeeIDColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompaniesID {
                get {
                    return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.CompaniesIDColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.CompaniesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date_ {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.Date_Column]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.Date_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StartTime {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.StartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartTime\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.StartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EndTime {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.EndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndTime\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Offset {
                get {
                    try {
                        return ((double)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.OffsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Offset\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.OffsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ProjectTime {
                get {
                    return ((double)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.ProjectTimeColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.ProjectTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkingDetails {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.WorkingDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkingDetails\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.WorkingDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MealsCountry {
                get {
                    try {
                        return ((long)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.MealsCountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MealsCountry\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.MealsCountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MealsAllowanceType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.MealsAllowanceTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MealsAllowanceType\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.MealsAllowanceTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MealsAllowance {
                get {
                    return ((decimal)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.MealsAllowanceColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.MealsAllowanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UnitID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.UnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitID\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.UnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TowedUnitID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.TowedUnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TowedUnitID\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.TowedUnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProjectTimeState {
                get {
                    return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.ProjectTimeStateColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.ProjectTimeStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Work_ {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.Work_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Work_\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.Work_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Function_ {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.Function_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Function_\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.Function_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FairWage {
                get {
                    return ((bool)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.FairWageColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.FairWageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobClassType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.JobClassTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobClassType\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.JobClassTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIMERow LFS_TEAM_PROJECT_TIMERow {
                get {
                    return ((LFS_TEAM_PROJECT_TIMERow)(this.GetParentRow(this.Table.ParentRelations["LFS_TEAM_PROJECT_TIME_LFS_TEAM_PROJECT_TIME_DETAIL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_TEAM_PROJECT_TIME_LFS_TEAM_PROJECT_TIME_DETAIL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartTimeNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL.StartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartTimeNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.StartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndTimeNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL.EndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndTimeNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.EndTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOffsetNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL.OffsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOffsetNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.OffsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkingDetailsNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL.WorkingDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkingDetailsNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.WorkingDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMealsCountryNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL.MealsCountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMealsCountryNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.MealsCountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMealsAllowanceTypeNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL.MealsAllowanceTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMealsAllowanceTypeNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.MealsAllowanceTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitIDNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL.UnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitIDNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.UnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTowedUnitIDNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL.TowedUnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTowedUnitIDNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.TowedUnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWork_Null() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL.Work_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWork_Null() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.Work_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFunction_Null() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL.Function_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFunction_Null() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.Function_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobClassTypeNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL.JobClassTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobClassTypeNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL.JobClassTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow : global::System.Data.DataRow {
            
            private LFS_TEAM_PROJECT_TIME_DETAIL_TEMPDataTable tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP = ((LFS_TEAM_PROJECT_TIME_DETAIL_TEMPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TeamProjectTimeID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.TeamProjectTimeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TeamProjectTimeID\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_T" +
                                "EMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.TeamProjectTimeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DetailID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.DetailIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DetailID\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.DetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.EmployeeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeID\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompaniesID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.CompaniesIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompaniesID\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.CompaniesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.ProjectIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectID\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date_ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.Date_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date_\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.Date_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StartTime {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.StartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartTime\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.StartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EndTime {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.EndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndTime\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Offset {
                get {
                    try {
                        return ((double)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.OffsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Offset\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.OffsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ProjectTime {
                get {
                    try {
                        return ((double)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.ProjectTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectTime\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.ProjectTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkingDetails {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.WorkingDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkingDetails\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.WorkingDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MealsCountry {
                get {
                    try {
                        return ((long)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.MealsCountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MealsCountry\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.MealsCountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool MealsAllowance {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.MealsAllowanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MealsAllowance\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.MealsAllowanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UnitID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.UnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitID\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.UnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TowedUnitID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.TowedUnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TowedUnitID\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.TowedUnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProjectTimeState {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.ProjectTimeStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectTimeState\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TE" +
                                "MP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.ProjectTimeStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.DeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deleted\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Work_ {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.Work_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Work_\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.Work_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Function_ {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.Function_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Function_\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.Function_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkFunctionConcat {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.WorkFunctionConcatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkFunctionConcat\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_" +
                                "TEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.WorkFunctionConcatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FairWage {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.FairWageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FairWage\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.FairWageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobClassType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.JobClassTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobClassType\' in table \'LFS_TEAM_PROJECT_TIME_DETAIL_TEMP\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.JobClassTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTeamProjectTimeIDNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.TeamProjectTimeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTeamProjectTimeIDNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.TeamProjectTimeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetailIDNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.DetailIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetailIDNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.DetailIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeeIDNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.EmployeeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeeIDNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.EmployeeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompaniesIDNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.CompaniesIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompaniesIDNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.CompaniesIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectIDNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.ProjectIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectIDNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.ProjectIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDate_Null() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.Date_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDate_Null() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.Date_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartTimeNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.StartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartTimeNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.StartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndTimeNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.EndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndTimeNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.EndTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOffsetNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.OffsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOffsetNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.OffsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectTimeNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.ProjectTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectTimeNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.ProjectTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkingDetailsNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.WorkingDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkingDetailsNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.WorkingDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMealsCountryNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.MealsCountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMealsCountryNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.MealsCountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMealsAllowanceNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.MealsAllowanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMealsAllowanceNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.MealsAllowanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitIDNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.UnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitIDNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.UnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTowedUnitIDNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.TowedUnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTowedUnitIDNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.TowedUnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectTimeStateNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.ProjectTimeStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectTimeStateNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.ProjectTimeStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWork_Null() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.Work_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWork_Null() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.Work_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFunction_Null() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.Function_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFunction_Null() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.Function_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkFunctionConcatNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.WorkFunctionConcatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkFunctionConcatNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.WorkFunctionConcatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFairWageNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.FairWageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFairWageNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.FairWageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobClassTypeNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.JobClassTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobClassTypeNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_DETAIL_TEMP.JobClassTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TemplateRow : global::System.Data.DataRow {
            
            private TemplateDataTable tableTemplate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TemplateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTemplate = ((TemplateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TeamProjectTimeID {
                get {
                    return ((int)(this[this.tableTemplate.TeamProjectTimeIDColumn]));
                }
                set {
                    this[this.tableTemplate.TeamProjectTimeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TemplateName {
                get {
                    try {
                        return ((string)(this[this.tableTemplate.TemplateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TemplateName\' in table \'Template\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTemplate.TemplateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tableTemplate.ClientNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientName\' in table \'Template\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTemplate.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProjectNumber {
                get {
                    return ((string)(this[this.tableTemplate.ProjectNumberColumn]));
                }
                set {
                    this[this.tableTemplate.ProjectNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProjectName {
                get {
                    try {
                        return ((string)(this[this.tableTemplate.ProjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectName\' in table \'Template\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTemplate.ProjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableTemplate.DeletedColumn]));
                }
                set {
                    this[this.tableTemplate.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Selected {
                get {
                    try {
                        return ((bool)(this[this.tableTemplate.SelectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selected\' in table \'Template\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTemplate.SelectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTemplateNameNull() {
                return this.IsNull(this.tableTemplate.TemplateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTemplateNameNull() {
                this[this.tableTemplate.TemplateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNameNull() {
                return this.IsNull(this.tableTemplate.ClientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNameNull() {
                this[this.tableTemplate.ClientNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectNameNull() {
                return this.IsNull(this.tableTemplate.ProjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectNameNull() {
                this[this.tableTemplate.ProjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectedNull() {
                return this.IsNull(this.tableTemplate.SelectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectedNull() {
                this[this.tableTemplate.SelectedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow : global::System.Data.DataRow {
            
            private TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATDataTable tableTEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT = ((TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkFunctionConcat {
                get {
                    try {
                        return ((string)(this[this.tableTEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT.WorkFunctionConcatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkFunctionConcat\' in table \'TEAM_PROJECT_TIME_WORK_FUNCTI" +
                                "ON_CONCAT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT.WorkFunctionConcatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkFunctionConcatNull() {
                return this.IsNull(this.tableTEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT.WorkFunctionConcatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkFunctionConcatNull() {
                this[this.tableTEAM_PROJECT_TIME_WORK_FUNCTION_CONCAT.WorkFunctionConcatColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_TEAM_PROJECT_TIMERow : global::System.Data.DataRow {
            
            private LFS_TEAM_PROJECT_TIMEDataTable tableLFS_TEAM_PROJECT_TIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_TEAM_PROJECT_TIMERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_TEAM_PROJECT_TIME = ((LFS_TEAM_PROJECT_TIMEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TeamProjectTimeID {
                get {
                    return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME.TeamProjectTimeIDColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.TeamProjectTimeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TemplateName {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME.TemplateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TemplateName\' in table \'LFS_TEAM_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.TemplateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompaniesID {
                get {
                    return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME.CompaniesIDColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.CompaniesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date_ {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_TEAM_PROJECT_TIME.Date_Column]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.Date_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_TEAM_PROJECT_TIME.StartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartTime\' in table \'LFS_TEAM_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.StartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_TEAM_PROJECT_TIME.EndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndTime\' in table \'LFS_TEAM_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Offset {
                get {
                    try {
                        return ((double)(this[this.tableLFS_TEAM_PROJECT_TIME.OffsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Offset\' in table \'LFS_TEAM_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.OffsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkingDetails {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME.WorkingDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkingDetails\' in table \'LFS_TEAM_PROJECT_TIME\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.WorkingDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'LFS_TEAM_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MealsCountry {
                get {
                    try {
                        return ((long)(this[this.tableLFS_TEAM_PROJECT_TIME.MealsCountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MealsCountry\' in table \'LFS_TEAM_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.MealsCountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MealsAllowanceType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME.MealsAllowanceTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MealsAllowanceType\' in table \'LFS_TEAM_PROJECT_TIME\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.MealsAllowanceTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MealsAllowance {
                get {
                    return ((decimal)(this[this.tableLFS_TEAM_PROJECT_TIME.MealsAllowanceColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.MealsAllowanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UnitID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME.UnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitID\' in table \'LFS_TEAM_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.UnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TowedUnitID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME.TowedUnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TowedUnitID\' in table \'LFS_TEAM_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.TowedUnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_TEAM_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME.TypeColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME.StateColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LoginID {
                get {
                    return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME.LoginIDColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.LoginIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_TEAM_PROJECT_TIME.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Work_ {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME.Work_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Work_\' in table \'LFS_TEAM_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.Work_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Function_ {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME.Function_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Function_\' in table \'LFS_TEAM_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.Function_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FairWage {
                get {
                    return ((bool)(this[this.tableLFS_TEAM_PROJECT_TIME.FairWageColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME.FairWageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTemplateNameNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME.TemplateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTemplateNameNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME.TemplateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartTimeNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME.StartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartTimeNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME.StartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndTimeNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME.EndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndTimeNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME.EndTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOffsetNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME.OffsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOffsetNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME.OffsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkingDetailsNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME.WorkingDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkingDetailsNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME.WorkingDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMealsCountryNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME.MealsCountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMealsCountryNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME.MealsCountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMealsAllowanceTypeNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME.MealsAllowanceTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMealsAllowanceTypeNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME.MealsAllowanceTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitIDNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME.UnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitIDNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME.UnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTowedUnitIDNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME.TowedUnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTowedUnitIDNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME.TowedUnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWork_Null() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME.Work_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWork_Null() {
                this[this.tableLFS_TEAM_PROJECT_TIME.Work_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFunction_Null() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME.Function_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFunction_Null() {
                this[this.tableLFS_TEAM_PROJECT_TIME.Function_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_DETAILRow[] GetLFS_TEAM_PROJECT_TIME_DETAILRows() {
                if ((this.Table.ChildRelations["LFS_TEAM_PROJECT_TIME_LFS_TEAM_PROJECT_TIME_DETAIL"] == null)) {
                    return new LFS_TEAM_PROJECT_TIME_DETAILRow[0];
                }
                else {
                    return ((LFS_TEAM_PROJECT_TIME_DETAILRow[])(base.GetChildRows(this.Table.ChildRelations["LFS_TEAM_PROJECT_TIME_LFS_TEAM_PROJECT_TIME_DETAIL"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_TEAM_PROJECT_TIME_SECTIONRow : global::System.Data.DataRow {
            
            private LFS_TEAM_PROJECT_TIME_SECTIONDataTable tableLFS_TEAM_PROJECT_TIME_SECTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_TEAM_PROJECT_TIME_SECTIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_TEAM_PROJECT_TIME_SECTION = ((LFS_TEAM_PROJECT_TIME_SECTIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionID {
                get {
                    return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION.SectionIDColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION.SectionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FlowOrderID {
                get {
                    return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION.FlowOrderIDColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION.FlowOrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Completed {
                get {
                    return ((bool)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION.CompletedColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION.CompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime _Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION._DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'_Date\' in table \'LFS_TEAM_PROJECT_TIME_SECTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION._DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Selected {
                get {
                    return ((bool)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION.SelectedColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION.SelectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PercentageOpened {
                get {
                    try {
                        return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION.PercentageOpenedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PercentageOpened\' in table \'LFS_TEAM_PROJECT_TIME_SECTION\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION.PercentageOpenedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PercentageBrushed {
                get {
                    try {
                        return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION.PercentageBrushedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PercentageBrushed\' in table \'LFS_TEAM_PROJECT_TIME_SECTION\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION.PercentageBrushedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_DateNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_SECTION._DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_DateNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_SECTION._DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPercentageOpenedNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_SECTION.PercentageOpenedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPercentageOpenedNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_SECTION.PercentageOpenedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPercentageBrushedNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_SECTION.PercentageBrushedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPercentageBrushedNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_SECTION.PercentageBrushedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow : global::System.Data.DataRow {
            
            private LFS_TEAM_PROJECT_TIME_SECTION_LATERALDataTable tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL = ((LFS_TEAM_PROJECT_TIME_SECTION_LATERALDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionID {
                get {
                    return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.SectionIDColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.SectionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LateralID {
                get {
                    return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.LateralIDColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.LateralIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Opened {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.OpenedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Opened\' in table \'LFS_TEAM_PROJECT_TIME_SECTION_LATERAL\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.OpenedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Brushed {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.BrushedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Brushed\' in table \'LFS_TEAM_PROJECT_TIME_SECTION_LATERAL\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.BrushedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Selected {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.SelectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selected\' in table \'LFS_TEAM_PROJECT_TIME_SECTION_LATERAL\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.SelectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssetIDLateral {
                get {
                    try {
                        return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.AssetIDLateralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssetIDLateral\' in table \'LFS_TEAM_PROJECT_TIME_SECTION_LAT" +
                                "ERAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.AssetIDLateralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOpenedNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.OpenedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOpenedNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.OpenedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrushedNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.BrushedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrushedNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.BrushedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectedNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.SelectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectedNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.SelectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssetIDLateralNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.AssetIDLateralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssetIDLateralNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_LATERAL.AssetIDLateralColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_TEAM_PROJECT_TIME_SECTION_MHRow : global::System.Data.DataRow {
            
            private LFS_TEAM_PROJECT_TIME_SECTION_MHDataTable tableLFS_TEAM_PROJECT_TIME_SECTION_MH;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_TEAM_PROJECT_TIME_SECTION_MHRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH = ((LFS_TEAM_PROJECT_TIME_SECTION_MHDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssetID {
                get {
                    return ((int)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH.AssetIDColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH.AssetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ManholeNumber {
                get {
                    return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH.ManholeNumberColumn]));
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH.ManholeNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Street {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH.StreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Street\' in table \'LFS_TEAM_PROJECT_TIME_SECTION_MH\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH.StreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SquareFoot {
                get {
                    try {
                        return ((string)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH.SquareFootColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SquareFoot\' in table \'LFS_TEAM_PROJECT_TIME_SECTION_MH\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH.SquareFootColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Selected {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH.SelectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selected\' in table \'LFS_TEAM_PROJECT_TIME_SECTION_MH\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH.SelectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime _Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH._DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'_Date\' in table \'LFS_TEAM_PROJECT_TIME_SECTION_MH\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH._DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH.StreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH.StreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSquareFootNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH.SquareFootColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSquareFootNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH.SquareFootColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectedNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH.SelectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectedNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH.SelectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_DateNull() {
                return this.IsNull(this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH._DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_DateNull() {
                this[this.tableLFS_TEAM_PROJECT_TIME_SECTION_MH._DateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_TEAM_PROJECT_TIME_DETAILRowChangeEvent : global::System.EventArgs {
            
            private LFS_TEAM_PROJECT_TIME_DETAILRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_DETAILRowChangeEvent(LFS_TEAM_PROJECT_TIME_DETAILRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_DETAILRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowChangeEvent : global::System.EventArgs {
            
            private LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRowChangeEvent(LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_DETAIL_TEMPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TemplateRowChangeEvent : global::System.EventArgs {
            
            private TemplateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TemplateRowChangeEvent(TemplateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TemplateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowChangeEvent : global::System.EventArgs {
            
            private TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRowChangeEvent(TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TEAM_PROJECT_TIME_WORK_FUNCTION_CONCATRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_TEAM_PROJECT_TIMERowChangeEvent : global::System.EventArgs {
            
            private LFS_TEAM_PROJECT_TIMERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIMERowChangeEvent(LFS_TEAM_PROJECT_TIMERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIMERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_TEAM_PROJECT_TIME_SECTIONRowChangeEvent : global::System.EventArgs {
            
            private LFS_TEAM_PROJECT_TIME_SECTIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTIONRowChangeEvent(LFS_TEAM_PROJECT_TIME_SECTIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowChangeEvent : global::System.EventArgs {
            
            private LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTION_LATERALRowChangeEvent(LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTION_LATERALRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_TEAM_PROJECT_TIME_SECTION_MHRowChangeEvent : global::System.EventArgs {
            
            private LFS_TEAM_PROJECT_TIME_SECTION_MHRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTION_MHRowChangeEvent(LFS_TEAM_PROJECT_TIME_SECTION_MHRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_TEAM_PROJECT_TIME_SECTION_MHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace LiquiForce.LFSLive.DA.LabourHours.TeamProjectTime.TeamProjectTime2TDSTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LFS_TEAM_PROJECT_TIME_DETAILTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LFS_TEAM_PROJECT_TIME_DETAILTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LFS_TEAM_PROJECT_TIME_DETAIL";
            tableMapping.ColumnMappings.Add("TeamProjectTimeID", "TeamProjectTimeID");
            tableMapping.ColumnMappings.Add("DetailID", "DetailID");
            tableMapping.ColumnMappings.Add("EmployeeID", "EmployeeID");
            tableMapping.ColumnMappings.Add("CompaniesID", "CompaniesID");
            tableMapping.ColumnMappings.Add("ProjectID", "ProjectID");
            tableMapping.ColumnMappings.Add("Date_", "Date_");
            tableMapping.ColumnMappings.Add("StartTime", "StartTime");
            tableMapping.ColumnMappings.Add("EndTime", "EndTime");
            tableMapping.ColumnMappings.Add("Offset", "Offset");
            tableMapping.ColumnMappings.Add("ProjectTime", "ProjectTime");
            tableMapping.ColumnMappings.Add("WorkingDetails", "WorkingDetails");
            tableMapping.ColumnMappings.Add("Location", "Location");
            tableMapping.ColumnMappings.Add("MealsCountry", "MealsCountry");
            tableMapping.ColumnMappings.Add("MealsAllowanceType", "MealsAllowanceType");
            tableMapping.ColumnMappings.Add("MealsAllowance", "MealsAllowance");
            tableMapping.ColumnMappings.Add("UnitID", "UnitID");
            tableMapping.ColumnMappings.Add("TowedUnitID", "TowedUnitID");
            tableMapping.ColumnMappings.Add("ProjectTimeState", "ProjectTimeState");
            tableMapping.ColumnMappings.Add("Comments", "Comments");
            tableMapping.ColumnMappings.Add("Deleted", "Deleted");
            tableMapping.ColumnMappings.Add("Work_", "Work_");
            tableMapping.ColumnMappings.Add("Function_", "Function_");
            tableMapping.ColumnMappings.Add("FairWage", "FairWage");
            tableMapping.ColumnMappings.Add("JobClassType", "JobClassType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[LFS_TEAM_PROJECT_TIME_DETAIL] WHERE (([TeamProjectTimeID] = @O" +
                "riginal_TeamProjectTimeID) AND ([DetailID] = @Original_DetailID) AND ([EmployeeI" +
                "D] = @Original_EmployeeID) AND ([CompaniesID] = @Original_CompaniesID) AND ([Pro" +
                "jectID] = @Original_ProjectID) AND ([Date_] = @Original_Date_) AND ((@IsNull_Sta" +
                "rtTime = 1 AND [StartTime] IS NULL) OR ([StartTime] = @Original_StartTime)) AND " +
                "((@IsNull_EndTime = 1 AND [EndTime] IS NULL) OR ([EndTime] = @Original_EndTime))" +
                " AND ((@IsNull_Offset = 1 AND [Offset] IS NULL) OR ([Offset] = @Original_Offset)" +
                ") AND ([ProjectTime] = @Original_ProjectTime) AND ((@IsNull_WorkingDetails = 1 A" +
                "ND [WorkingDetails] IS NULL) OR ([WorkingDetails] = @Original_WorkingDetails)) A" +
                "ND ((@IsNull_Location = 1 AND [Location] IS NULL) OR ([Location] = @Original_Loc" +
                "ation)) AND ((@IsNull_MealsCountry = 1 AND [MealsCountry] IS NULL) OR ([MealsCou" +
                "ntry] = @Original_MealsCountry)) AND ((@IsNull_MealsAllowanceType = 1 AND [Meals" +
                "AllowanceType] IS NULL) OR ([MealsAllowanceType] = @Original_MealsAllowanceType)" +
                ") AND ([MealsAllowance] = @Original_MealsAllowance) AND ((@IsNull_UnitID = 1 AND" +
                " [UnitID] IS NULL) OR ([UnitID] = @Original_UnitID)) AND ((@IsNull_TowedUnitID =" +
                " 1 AND [TowedUnitID] IS NULL) OR ([TowedUnitID] = @Original_TowedUnitID)) AND ([" +
                "ProjectTimeState] = @Original_ProjectTimeState) AND ([Deleted] = @Original_Delet" +
                "ed) AND ((@IsNull_Work_ = 1 AND [Work_] IS NULL) OR ([Work_] = @Original_Work_))" +
                " AND ((@IsNull_Function_ = 1 AND [Function_] IS NULL) OR ([Function_] = @Origina" +
                "l_Function_)) AND ([FairWage] = @Original_FairWage) AND ((@IsNull_JobClassType =" +
                " 1 AND [JobClassType] IS NULL) OR ([JobClassType] = @Original_JobClassType)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TeamProjectTimeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TeamProjectTimeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DetailID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DetailID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompaniesID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompaniesID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date_", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StartTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartTime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EndTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndTime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Offset", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Offset", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Offset", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Offset", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WorkingDetails", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkingDetails", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkingDetails", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkingDetails", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Location", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Location", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Location", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Location", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MealsCountry", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MealsCountry", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MealsCountry", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MealsCountry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MealsAllowanceType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MealsAllowanceType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MealsAllowanceType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MealsAllowanceType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MealsAllowance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MealsAllowance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TowedUnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TowedUnitID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TowedUnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TowedUnitID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectTimeState", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectTimeState", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Work_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Work_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Work_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Work_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Function_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Function_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Function_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Function_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FairWage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FairWage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JobClassType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobClassType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobClassType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobClassType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[LFS_TEAM_PROJECT_TIME_DETAIL] ([TeamProjectTimeID], [DetailID], [EmployeeID], [CompaniesID], [ProjectID], [Date_], [StartTime], [EndTime], [Offset], [ProjectTime], [WorkingDetails], [Location], [MealsCountry], [MealsAllowanceType], [MealsAllowance], [UnitID], [TowedUnitID], [ProjectTimeState], [Comments], [Deleted], [Work_], [Function_], [FairWage], [JobClassType]) VALUES (@TeamProjectTimeID, @DetailID, @EmployeeID, @CompaniesID, @ProjectID, @Date_, @StartTime, @EndTime, @Offset, @ProjectTime, @WorkingDetails, @Location, @MealsCountry, @MealsAllowanceType, @MealsAllowance, @UnitID, @TowedUnitID, @ProjectTimeState, @Comments, @Deleted, @Work_, @Function_, @FairWage, @JobClassType);
SELECT TeamProjectTimeID, DetailID, EmployeeID, CompaniesID, ProjectID, Date_, StartTime, EndTime, Offset, ProjectTime, WorkingDetails, Location, MealsCountry, MealsAllowanceType, MealsAllowance, UnitID, TowedUnitID, ProjectTimeState, Comments, Deleted, Work_, Function_, FairWage, JobClassType FROM LFS_TEAM_PROJECT_TIME_DETAIL WHERE (DetailID = @DetailID) AND (TeamProjectTimeID = @TeamProjectTimeID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TeamProjectTimeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TeamProjectTimeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DetailID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DetailID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompaniesID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompaniesID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date_", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartTime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndTime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Offset", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Offset", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkingDetails", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkingDetails", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Location", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Location", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MealsCountry", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MealsCountry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MealsAllowanceType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MealsAllowanceType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MealsAllowance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MealsAllowance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TowedUnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TowedUnitID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectTimeState", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectTimeState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comments", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Work_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Work_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Function_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Function_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FairWage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FairWage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobClassType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobClassType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[LFS_TEAM_PROJECT_TIME_DETAIL] SET [TeamProjectTimeID] = @TeamProjec" +
                "tTimeID, [DetailID] = @DetailID, [EmployeeID] = @EmployeeID, [CompaniesID] = @Co" +
                "mpaniesID, [ProjectID] = @ProjectID, [Date_] = @Date_, [StartTime] = @StartTime," +
                " [EndTime] = @EndTime, [Offset] = @Offset, [ProjectTime] = @ProjectTime, [Workin" +
                "gDetails] = @WorkingDetails, [Location] = @Location, [MealsCountry] = @MealsCoun" +
                "try, [MealsAllowanceType] = @MealsAllowanceType, [MealsAllowance] = @MealsAllowa" +
                "nce, [UnitID] = @UnitID, [TowedUnitID] = @TowedUnitID, [ProjectTimeState] = @Pro" +
                "jectTimeState, [Comments] = @Comments, [Deleted] = @Deleted, [Work_] = @Work_, [" +
                "Function_] = @Function_, [FairWage] = @FairWage, [JobClassType] = @JobClassType " +
                "WHERE (([TeamProjectTimeID] = @Original_TeamProjectTimeID) AND ([DetailID] = @Or" +
                "iginal_DetailID) AND ([EmployeeID] = @Original_EmployeeID) AND ([CompaniesID] = " +
                "@Original_CompaniesID) AND ([ProjectID] = @Original_ProjectID) AND ([Date_] = @O" +
                "riginal_Date_) AND ((@IsNull_StartTime = 1 AND [StartTime] IS NULL) OR ([StartTi" +
                "me] = @Original_StartTime)) AND ((@IsNull_EndTime = 1 AND [EndTime] IS NULL) OR " +
                "([EndTime] = @Original_EndTime)) AND ((@IsNull_Offset = 1 AND [Offset] IS NULL) " +
                "OR ([Offset] = @Original_Offset)) AND ([ProjectTime] = @Original_ProjectTime) AN" +
                "D ((@IsNull_WorkingDetails = 1 AND [WorkingDetails] IS NULL) OR ([WorkingDetails" +
                "] = @Original_WorkingDetails)) AND ((@IsNull_Location = 1 AND [Location] IS NULL" +
                ") OR ([Location] = @Original_Location)) AND ((@IsNull_MealsCountry = 1 AND [Meal" +
                "sCountry] IS NULL) OR ([MealsCountry] = @Original_MealsCountry)) AND ((@IsNull_M" +
                "ealsAllowanceType = 1 AND [MealsAllowanceType] IS NULL) OR ([MealsAllowanceType]" +
                " = @Original_MealsAllowanceType)) AND ([MealsAllowance] = @Original_MealsAllowan" +
                "ce) AND ((@IsNull_UnitID = 1 AND [UnitID] IS NULL) OR ([UnitID] = @Original_Unit" +
                "ID)) AND ((@IsNull_TowedUnitID = 1 AND [TowedUnitID] IS NULL) OR ([TowedUnitID] " +
                "= @Original_TowedUnitID)) AND ([ProjectTimeState] = @Original_ProjectTimeState) " +
                "AND ([Deleted] = @Original_Deleted) AND ((@IsNull_Work_ = 1 AND [Work_] IS NULL)" +
                " OR ([Work_] = @Original_Work_)) AND ((@IsNull_Function_ = 1 AND [Function_] IS " +
                "NULL) OR ([Function_] = @Original_Function_)) AND ([FairWage] = @Original_FairWa" +
                "ge) AND ((@IsNull_JobClassType = 1 AND [JobClassType] IS NULL) OR ([JobClassType" +
                "] = @Original_JobClassType)));\r\nSELECT TeamProjectTimeID, DetailID, EmployeeID, " +
                "CompaniesID, ProjectID, Date_, StartTime, EndTime, Offset, ProjectTime, WorkingD" +
                "etails, Location, MealsCountry, MealsAllowanceType, MealsAllowance, UnitID, Towe" +
                "dUnitID, ProjectTimeState, Comments, Deleted, Work_, Function_, FairWage, JobCla" +
                "ssType FROM LFS_TEAM_PROJECT_TIME_DETAIL WHERE (DetailID = @DetailID) AND (TeamP" +
                "rojectTimeID = @TeamProjectTimeID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TeamProjectTimeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TeamProjectTimeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DetailID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DetailID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompaniesID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompaniesID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date_", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartTime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndTime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Offset", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Offset", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkingDetails", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkingDetails", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Location", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Location", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MealsCountry", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MealsCountry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MealsAllowanceType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MealsAllowanceType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MealsAllowance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MealsAllowance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TowedUnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TowedUnitID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectTimeState", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectTimeState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comments", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Work_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Work_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Function_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Function_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FairWage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FairWage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobClassType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobClassType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TeamProjectTimeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TeamProjectTimeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DetailID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DetailID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompaniesID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompaniesID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date_", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StartTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartTime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EndTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndTime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Offset", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Offset", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Offset", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Offset", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WorkingDetails", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkingDetails", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkingDetails", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkingDetails", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Location", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Location", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Location", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Location", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MealsCountry", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MealsCountry", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MealsCountry", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MealsCountry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MealsAllowanceType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MealsAllowanceType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MealsAllowanceType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MealsAllowanceType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MealsAllowance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MealsAllowance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TowedUnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TowedUnitID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TowedUnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TowedUnitID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectTimeState", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectTimeState", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Work_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Work_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Work_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Work_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Function_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Function_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Function_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Function_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FairWage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FairWage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JobClassType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobClassType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobClassType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobClassType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LiquiForce.LFSLive.DA.LabourHours.Properties.Settings.Default.eCRMLive2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT TeamProjectTimeID, DetailID, EmployeeID, CompaniesID, ProjectID, Date_, StartTime, EndTime, Offset, ProjectTime, WorkingDetails, Location, MealsCountry, MealsAllowanceType, MealsAllowance, UnitID, TowedUnitID, ProjectTimeState, Comments, Deleted, Work_, Function_, FairWage, JobClassType FROM dbo.LFS_TEAM_PROJECT_TIME_DETAIL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TeamProjectTime2TDS.LFS_TEAM_PROJECT_TIME_DETAILDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TeamProjectTime2TDS.LFS_TEAM_PROJECT_TIME_DETAILDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TeamProjectTime2TDS.LFS_TEAM_PROJECT_TIME_DETAILDataTable dataTable = new TeamProjectTime2TDS.LFS_TEAM_PROJECT_TIME_DETAILDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TeamProjectTime2TDS.LFS_TEAM_PROJECT_TIME_DETAILDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TeamProjectTime2TDS dataSet) {
            return this.Adapter.Update(dataSet, "LFS_TEAM_PROJECT_TIME_DETAIL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_TeamProjectTimeID, 
                    int Original_DetailID, 
                    int Original_EmployeeID, 
                    int Original_CompaniesID, 
                    int Original_ProjectID, 
                    System.DateTime Original_Date_, 
                    string Original_StartTime, 
                    string Original_EndTime, 
                    global::System.Nullable<double> Original_Offset, 
                    double Original_ProjectTime, 
                    string Original_WorkingDetails, 
                    string Original_Location, 
                    global::System.Nullable<long> Original_MealsCountry, 
                    string Original_MealsAllowanceType, 
                    decimal Original_MealsAllowance, 
                    global::System.Nullable<int> Original_UnitID, 
                    global::System.Nullable<int> Original_TowedUnitID, 
                    string Original_ProjectTimeState, 
                    bool Original_Deleted, 
                    string Original_Work_, 
                    string Original_Function_, 
                    bool Original_FairWage, 
                    string Original_JobClassType) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_TeamProjectTimeID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_DetailID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_EmployeeID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_CompaniesID));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ProjectID));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_Date_));
            if ((Original_StartTime == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_StartTime));
            }
            if ((Original_EndTime == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_EndTime));
            }
            if ((Original_Offset.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_Offset.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_ProjectTime));
            if ((Original_WorkingDetails == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_WorkingDetails));
            }
            if ((Original_Location == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Location));
            }
            if ((Original_MealsCountry.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((long)(Original_MealsCountry.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_MealsAllowanceType == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_MealsAllowanceType));
            }
            this.Adapter.DeleteCommand.Parameters[21].Value = ((decimal)(Original_MealsAllowance));
            if ((Original_UnitID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_UnitID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_TowedUnitID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((int)(Original_TowedUnitID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_ProjectTimeState == null)) {
                throw new global::System.ArgumentNullException("Original_ProjectTimeState");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_ProjectTimeState));
            }
            this.Adapter.DeleteCommand.Parameters[27].Value = ((bool)(Original_Deleted));
            if ((Original_Work_ == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_Work_));
            }
            if ((Original_Function_ == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_Function_));
            }
            this.Adapter.DeleteCommand.Parameters[32].Value = ((bool)(Original_FairWage));
            if ((Original_JobClassType == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_JobClassType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int TeamProjectTimeID, 
                    int DetailID, 
                    int EmployeeID, 
                    int CompaniesID, 
                    int ProjectID, 
                    System.DateTime Date_, 
                    string StartTime, 
                    string EndTime, 
                    global::System.Nullable<double> Offset, 
                    double ProjectTime, 
                    string WorkingDetails, 
                    string Location, 
                    global::System.Nullable<long> MealsCountry, 
                    string MealsAllowanceType, 
                    decimal MealsAllowance, 
                    global::System.Nullable<int> UnitID, 
                    global::System.Nullable<int> TowedUnitID, 
                    string ProjectTimeState, 
                    string Comments, 
                    bool Deleted, 
                    string Work_, 
                    string Function_, 
                    bool FairWage, 
                    string JobClassType) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(TeamProjectTimeID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(DetailID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(EmployeeID));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(CompaniesID));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(ProjectID));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Date_));
            if ((StartTime == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(StartTime));
            }
            if ((EndTime == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(EndTime));
            }
            if ((Offset.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(Offset.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((double)(ProjectTime));
            if ((WorkingDetails == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(WorkingDetails));
            }
            if ((Location == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Location));
            }
            if ((MealsCountry.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((long)(MealsCountry.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((MealsAllowanceType == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(MealsAllowanceType));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(MealsAllowance));
            if ((UnitID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(UnitID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((TowedUnitID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(TowedUnitID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((ProjectTimeState == null)) {
                throw new global::System.ArgumentNullException("ProjectTimeState");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(ProjectTimeState));
            }
            if ((Comments == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Comments));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(Deleted));
            if ((Work_ == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(Work_));
            }
            if ((Function_ == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Function_));
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(FairWage));
            if ((JobClassType == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(JobClassType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int TeamProjectTimeID, 
                    int DetailID, 
                    int EmployeeID, 
                    int CompaniesID, 
                    int ProjectID, 
                    System.DateTime Date_, 
                    string StartTime, 
                    string EndTime, 
                    global::System.Nullable<double> Offset, 
                    double ProjectTime, 
                    string WorkingDetails, 
                    string Location, 
                    global::System.Nullable<long> MealsCountry, 
                    string MealsAllowanceType, 
                    decimal MealsAllowance, 
                    global::System.Nullable<int> UnitID, 
                    global::System.Nullable<int> TowedUnitID, 
                    string ProjectTimeState, 
                    string Comments, 
                    bool Deleted, 
                    string Work_, 
                    string Function_, 
                    bool FairWage, 
                    string JobClassType, 
                    int Original_TeamProjectTimeID, 
                    int Original_DetailID, 
                    int Original_EmployeeID, 
                    int Original_CompaniesID, 
                    int Original_ProjectID, 
                    System.DateTime Original_Date_, 
                    string Original_StartTime, 
                    string Original_EndTime, 
                    global::System.Nullable<double> Original_Offset, 
                    double Original_ProjectTime, 
                    string Original_WorkingDetails, 
                    string Original_Location, 
                    global::System.Nullable<long> Original_MealsCountry, 
                    string Original_MealsAllowanceType, 
                    decimal Original_MealsAllowance, 
                    global::System.Nullable<int> Original_UnitID, 
                    global::System.Nullable<int> Original_TowedUnitID, 
                    string Original_ProjectTimeState, 
                    bool Original_Deleted, 
                    string Original_Work_, 
                    string Original_Function_, 
                    bool Original_FairWage, 
                    string Original_JobClassType) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(TeamProjectTimeID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(DetailID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(EmployeeID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(CompaniesID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(ProjectID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Date_));
            if ((StartTime == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(StartTime));
            }
            if ((EndTime == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(EndTime));
            }
            if ((Offset.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Offset.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(ProjectTime));
            if ((WorkingDetails == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(WorkingDetails));
            }
            if ((Location == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Location));
            }
            if ((MealsCountry.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((long)(MealsCountry.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((MealsAllowanceType == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(MealsAllowanceType));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(MealsAllowance));
            if ((UnitID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(UnitID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((TowedUnitID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(TowedUnitID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((ProjectTimeState == null)) {
                throw new global::System.ArgumentNullException("ProjectTimeState");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(ProjectTimeState));
            }
            if ((Comments == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Comments));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(Deleted));
            if ((Work_ == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Work_));
            }
            if ((Function_ == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Function_));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(FairWage));
            if ((JobClassType == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(JobClassType));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_TeamProjectTimeID));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_DetailID));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_EmployeeID));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_CompaniesID));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_ProjectID));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(Original_Date_));
            if ((Original_StartTime == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_StartTime));
            }
            if ((Original_EndTime == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_EndTime));
            }
            if ((Original_Offset.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(Original_Offset.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(Original_ProjectTime));
            if ((Original_WorkingDetails == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_WorkingDetails));
            }
            if ((Original_Location == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_Location));
            }
            if ((Original_MealsCountry.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((long)(Original_MealsCountry.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_MealsAllowanceType == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_MealsAllowanceType));
            }
            this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(Original_MealsAllowance));
            if ((Original_UnitID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(Original_UnitID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_TowedUnitID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_TowedUnitID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_ProjectTimeState == null)) {
                throw new global::System.ArgumentNullException("Original_ProjectTimeState");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_ProjectTimeState));
            }
            this.Adapter.UpdateCommand.Parameters[51].Value = ((bool)(Original_Deleted));
            if ((Original_Work_ == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_Work_));
            }
            if ((Original_Function_ == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_Function_));
            }
            this.Adapter.UpdateCommand.Parameters[56].Value = ((bool)(Original_FairWage));
            if ((Original_JobClassType == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_JobClassType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int EmployeeID, 
                    int CompaniesID, 
                    int ProjectID, 
                    System.DateTime Date_, 
                    string StartTime, 
                    string EndTime, 
                    global::System.Nullable<double> Offset, 
                    double ProjectTime, 
                    string WorkingDetails, 
                    string Location, 
                    global::System.Nullable<long> MealsCountry, 
                    string MealsAllowanceType, 
                    decimal MealsAllowance, 
                    global::System.Nullable<int> UnitID, 
                    global::System.Nullable<int> TowedUnitID, 
                    string ProjectTimeState, 
                    string Comments, 
                    bool Deleted, 
                    string Work_, 
                    string Function_, 
                    bool FairWage, 
                    string JobClassType, 
                    int Original_TeamProjectTimeID, 
                    int Original_DetailID, 
                    int Original_EmployeeID, 
                    int Original_CompaniesID, 
                    int Original_ProjectID, 
                    System.DateTime Original_Date_, 
                    string Original_StartTime, 
                    string Original_EndTime, 
                    global::System.Nullable<double> Original_Offset, 
                    double Original_ProjectTime, 
                    string Original_WorkingDetails, 
                    string Original_Location, 
                    global::System.Nullable<long> Original_MealsCountry, 
                    string Original_MealsAllowanceType, 
                    decimal Original_MealsAllowance, 
                    global::System.Nullable<int> Original_UnitID, 
                    global::System.Nullable<int> Original_TowedUnitID, 
                    string Original_ProjectTimeState, 
                    bool Original_Deleted, 
                    string Original_Work_, 
                    string Original_Function_, 
                    bool Original_FairWage, 
                    string Original_JobClassType) {
            return this.Update(Original_TeamProjectTimeID, Original_DetailID, EmployeeID, CompaniesID, ProjectID, Date_, StartTime, EndTime, Offset, ProjectTime, WorkingDetails, Location, MealsCountry, MealsAllowanceType, MealsAllowance, UnitID, TowedUnitID, ProjectTimeState, Comments, Deleted, Work_, Function_, FairWage, JobClassType, Original_TeamProjectTimeID, Original_DetailID, Original_EmployeeID, Original_CompaniesID, Original_ProjectID, Original_Date_, Original_StartTime, Original_EndTime, Original_Offset, Original_ProjectTime, Original_WorkingDetails, Original_Location, Original_MealsCountry, Original_MealsAllowanceType, Original_MealsAllowance, Original_UnitID, Original_TowedUnitID, Original_ProjectTimeState, Original_Deleted, Original_Work_, Original_Function_, Original_FairWage, Original_JobClassType);
        }
    }
}

#pragma warning restore 1591