//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3625
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.LabourHours.ProjectTime {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ProjectTimeTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ProjectTimeTDS : global::System.Data.DataSet {
        
        private LFS_PROJECT_TIME_TEMPDataTable tableLFS_PROJECT_TIME_TEMP;
        
        private LFS_PROJECT_TIME_SECTIONDataTable tableLFS_PROJECT_TIME_SECTION;
        
        private LFS_PROJECT_TIME_SECTION_TEMPDataTable tableLFS_PROJECT_TIME_SECTION_TEMP;
        
        private LFS_PROJECT_TIMEDataTable tableLFS_PROJECT_TIME;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProjectTimeTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ProjectTimeTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LFS_PROJECT_TIME_TEMP"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_TIME_TEMPDataTable(ds.Tables["LFS_PROJECT_TIME_TEMP"]));
                }
                if ((ds.Tables["LFS_PROJECT_TIME_SECTION"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_TIME_SECTIONDataTable(ds.Tables["LFS_PROJECT_TIME_SECTION"]));
                }
                if ((ds.Tables["LFS_PROJECT_TIME_SECTION_TEMP"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_TIME_SECTION_TEMPDataTable(ds.Tables["LFS_PROJECT_TIME_SECTION_TEMP"]));
                }
                if ((ds.Tables["LFS_PROJECT_TIME"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_TIMEDataTable(ds.Tables["LFS_PROJECT_TIME"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_TIME_TEMPDataTable LFS_PROJECT_TIME_TEMP {
            get {
                return this.tableLFS_PROJECT_TIME_TEMP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_TIME_SECTIONDataTable LFS_PROJECT_TIME_SECTION {
            get {
                return this.tableLFS_PROJECT_TIME_SECTION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_TIME_SECTION_TEMPDataTable LFS_PROJECT_TIME_SECTION_TEMP {
            get {
                return this.tableLFS_PROJECT_TIME_SECTION_TEMP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_PROJECT_TIMEDataTable LFS_PROJECT_TIME {
            get {
                return this.tableLFS_PROJECT_TIME;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ProjectTimeTDS cln = ((ProjectTimeTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LFS_PROJECT_TIME_TEMP"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_TIME_TEMPDataTable(ds.Tables["LFS_PROJECT_TIME_TEMP"]));
                }
                if ((ds.Tables["LFS_PROJECT_TIME_SECTION"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_TIME_SECTIONDataTable(ds.Tables["LFS_PROJECT_TIME_SECTION"]));
                }
                if ((ds.Tables["LFS_PROJECT_TIME_SECTION_TEMP"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_TIME_SECTION_TEMPDataTable(ds.Tables["LFS_PROJECT_TIME_SECTION_TEMP"]));
                }
                if ((ds.Tables["LFS_PROJECT_TIME"] != null)) {
                    base.Tables.Add(new LFS_PROJECT_TIMEDataTable(ds.Tables["LFS_PROJECT_TIME"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableLFS_PROJECT_TIME_TEMP = ((LFS_PROJECT_TIME_TEMPDataTable)(base.Tables["LFS_PROJECT_TIME_TEMP"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_TIME_TEMP != null)) {
                    this.tableLFS_PROJECT_TIME_TEMP.InitVars();
                }
            }
            this.tableLFS_PROJECT_TIME_SECTION = ((LFS_PROJECT_TIME_SECTIONDataTable)(base.Tables["LFS_PROJECT_TIME_SECTION"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_TIME_SECTION != null)) {
                    this.tableLFS_PROJECT_TIME_SECTION.InitVars();
                }
            }
            this.tableLFS_PROJECT_TIME_SECTION_TEMP = ((LFS_PROJECT_TIME_SECTION_TEMPDataTable)(base.Tables["LFS_PROJECT_TIME_SECTION_TEMP"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_TIME_SECTION_TEMP != null)) {
                    this.tableLFS_PROJECT_TIME_SECTION_TEMP.InitVars();
                }
            }
            this.tableLFS_PROJECT_TIME = ((LFS_PROJECT_TIMEDataTable)(base.Tables["LFS_PROJECT_TIME"]));
            if ((initTable == true)) {
                if ((this.tableLFS_PROJECT_TIME != null)) {
                    this.tableLFS_PROJECT_TIME.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ProjectTimeTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ProjectTimeTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLFS_PROJECT_TIME_TEMP = new LFS_PROJECT_TIME_TEMPDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_TIME_TEMP);
            this.tableLFS_PROJECT_TIME_SECTION = new LFS_PROJECT_TIME_SECTIONDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_TIME_SECTION);
            this.tableLFS_PROJECT_TIME_SECTION_TEMP = new LFS_PROJECT_TIME_SECTION_TEMPDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_TIME_SECTION_TEMP);
            this.tableLFS_PROJECT_TIME = new LFS_PROJECT_TIMEDataTable();
            base.Tables.Add(this.tableLFS_PROJECT_TIME);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_TIME_TEMP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_TIME_SECTION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_TIME_SECTION_TEMP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_PROJECT_TIME() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ProjectTimeTDS ds = new ProjectTimeTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void LFS_PROJECT_TIME_TEMPRowChangeEventHandler(object sender, LFS_PROJECT_TIME_TEMPRowChangeEvent e);
        
        public delegate void LFS_PROJECT_TIME_SECTIONRowChangeEventHandler(object sender, LFS_PROJECT_TIME_SECTIONRowChangeEvent e);
        
        public delegate void LFS_PROJECT_TIME_SECTION_TEMPRowChangeEventHandler(object sender, LFS_PROJECT_TIME_SECTION_TEMPRowChangeEvent e);
        
        public delegate void LFS_PROJECT_TIMERowChangeEventHandler(object sender, LFS_PROJECT_TIMERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_TIME_TEMPDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectTimeID;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnCompaniesID;
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnDate_;
            
            private global::System.Data.DataColumn columnStartTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            private global::System.Data.DataColumn columnOffset;
            
            private global::System.Data.DataColumn columnProjectTime;
            
            private global::System.Data.DataColumn columnWorkingDetails;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnMealsCountry;
            
            private global::System.Data.DataColumn columnMealsAllowanceType;
            
            private global::System.Data.DataColumn columnMealsAllowance;
            
            private global::System.Data.DataColumn columnUnitID;
            
            private global::System.Data.DataColumn columnTowedUnitID;
            
            private global::System.Data.DataColumn columnProjectTimeState;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnWork_;
            
            private global::System.Data.DataColumn columnFunction_;
            
            private global::System.Data.DataColumn columnWorkFunctionConcat;
            
            private global::System.Data.DataColumn columnIsMealsAllowance;
            
            private global::System.Data.DataColumn columnFairWage;
            
            private global::System.Data.DataColumn columnJobClassType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_TEMPDataTable() {
                this.TableName = "LFS_PROJECT_TIME_TEMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_TIME_TEMPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_TIME_TEMPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectTimeIDColumn {
                get {
                    return this.columnProjectTimeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompaniesIDColumn {
                get {
                    return this.columnCompaniesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Date_Column {
                get {
                    return this.columnDate_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartTimeColumn {
                get {
                    return this.columnStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OffsetColumn {
                get {
                    return this.columnOffset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectTimeColumn {
                get {
                    return this.columnProjectTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkingDetailsColumn {
                get {
                    return this.columnWorkingDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MealsCountryColumn {
                get {
                    return this.columnMealsCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MealsAllowanceTypeColumn {
                get {
                    return this.columnMealsAllowanceType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MealsAllowanceColumn {
                get {
                    return this.columnMealsAllowance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitIDColumn {
                get {
                    return this.columnUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TowedUnitIDColumn {
                get {
                    return this.columnTowedUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectTimeStateColumn {
                get {
                    return this.columnProjectTimeState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Work_Column {
                get {
                    return this.columnWork_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Function_Column {
                get {
                    return this.columnFunction_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkFunctionConcatColumn {
                get {
                    return this.columnWorkFunctionConcat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsMealsAllowanceColumn {
                get {
                    return this.columnIsMealsAllowance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FairWageColumn {
                get {
                    return this.columnFairWage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobClassTypeColumn {
                get {
                    return this.columnJobClassType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_TEMPRow this[int index] {
                get {
                    return ((LFS_PROJECT_TIME_TEMPRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_TIME_TEMPRowChangeEventHandler LFS_PROJECT_TIME_TEMPRowChanging;
            
            public event LFS_PROJECT_TIME_TEMPRowChangeEventHandler LFS_PROJECT_TIME_TEMPRowChanged;
            
            public event LFS_PROJECT_TIME_TEMPRowChangeEventHandler LFS_PROJECT_TIME_TEMPRowDeleting;
            
            public event LFS_PROJECT_TIME_TEMPRowChangeEventHandler LFS_PROJECT_TIME_TEMPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_TIME_TEMPRow(LFS_PROJECT_TIME_TEMPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_TEMPRow AddLFS_PROJECT_TIME_TEMPRow(
                        int ProjectTimeID, 
                        int EmployeeID, 
                        int CompaniesID, 
                        int ProjectID, 
                        System.DateTime Date_, 
                        string StartTime, 
                        string EndTime, 
                        double Offset, 
                        double ProjectTime, 
                        string WorkingDetails, 
                        string Location, 
                        long MealsCountry, 
                        string MealsAllowanceType, 
                        decimal MealsAllowance, 
                        int UnitID, 
                        int TowedUnitID, 
                        string ProjectTimeState, 
                        string Comments, 
                        bool Deleted, 
                        string Work_, 
                        string Function_, 
                        string WorkFunctionConcat, 
                        bool IsMealsAllowance, 
                        bool FairWage, 
                        string JobClassType) {
                LFS_PROJECT_TIME_TEMPRow rowLFS_PROJECT_TIME_TEMPRow = ((LFS_PROJECT_TIME_TEMPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProjectTimeID,
                        EmployeeID,
                        CompaniesID,
                        ProjectID,
                        Date_,
                        StartTime,
                        EndTime,
                        Offset,
                        ProjectTime,
                        WorkingDetails,
                        Location,
                        MealsCountry,
                        MealsAllowanceType,
                        MealsAllowance,
                        UnitID,
                        TowedUnitID,
                        ProjectTimeState,
                        Comments,
                        Deleted,
                        Work_,
                        Function_,
                        WorkFunctionConcat,
                        IsMealsAllowance,
                        FairWage,
                        JobClassType};
                rowLFS_PROJECT_TIME_TEMPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_TIME_TEMPRow);
                return rowLFS_PROJECT_TIME_TEMPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_TEMPRow FindByProjectTimeID(int ProjectTimeID) {
                return ((LFS_PROJECT_TIME_TEMPRow)(this.Rows.Find(new object[] {
                            ProjectTimeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_TIME_TEMPDataTable cln = ((LFS_PROJECT_TIME_TEMPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_TIME_TEMPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectTimeID = base.Columns["ProjectTimeID"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnCompaniesID = base.Columns["CompaniesID"];
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnDate_ = base.Columns["Date_"];
                this.columnStartTime = base.Columns["StartTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnOffset = base.Columns["Offset"];
                this.columnProjectTime = base.Columns["ProjectTime"];
                this.columnWorkingDetails = base.Columns["WorkingDetails"];
                this.columnLocation = base.Columns["Location"];
                this.columnMealsCountry = base.Columns["MealsCountry"];
                this.columnMealsAllowanceType = base.Columns["MealsAllowanceType"];
                this.columnMealsAllowance = base.Columns["MealsAllowance"];
                this.columnUnitID = base.Columns["UnitID"];
                this.columnTowedUnitID = base.Columns["TowedUnitID"];
                this.columnProjectTimeState = base.Columns["ProjectTimeState"];
                this.columnComments = base.Columns["Comments"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnWork_ = base.Columns["Work_"];
                this.columnFunction_ = base.Columns["Function_"];
                this.columnWorkFunctionConcat = base.Columns["WorkFunctionConcat"];
                this.columnIsMealsAllowance = base.Columns["IsMealsAllowance"];
                this.columnFairWage = base.Columns["FairWage"];
                this.columnJobClassType = base.Columns["JobClassType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectTimeID = new global::System.Data.DataColumn("ProjectTimeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectTimeID);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnCompaniesID = new global::System.Data.DataColumn("CompaniesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompaniesID);
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnDate_ = new global::System.Data.DataColumn("Date_", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate_);
                this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnOffset = new global::System.Data.DataColumn("Offset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOffset);
                this.columnProjectTime = new global::System.Data.DataColumn("ProjectTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectTime);
                this.columnWorkingDetails = new global::System.Data.DataColumn("WorkingDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkingDetails);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnMealsCountry = new global::System.Data.DataColumn("MealsCountry", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMealsCountry);
                this.columnMealsAllowanceType = new global::System.Data.DataColumn("MealsAllowanceType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMealsAllowanceType);
                this.columnMealsAllowance = new global::System.Data.DataColumn("MealsAllowance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMealsAllowance);
                this.columnUnitID = new global::System.Data.DataColumn("UnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitID);
                this.columnTowedUnitID = new global::System.Data.DataColumn("TowedUnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTowedUnitID);
                this.columnProjectTimeState = new global::System.Data.DataColumn("ProjectTimeState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectTimeState);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnWork_ = new global::System.Data.DataColumn("Work_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWork_);
                this.columnFunction_ = new global::System.Data.DataColumn("Function_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunction_);
                this.columnWorkFunctionConcat = new global::System.Data.DataColumn("WorkFunctionConcat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkFunctionConcat);
                this.columnIsMealsAllowance = new global::System.Data.DataColumn("IsMealsAllowance", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsMealsAllowance);
                this.columnFairWage = new global::System.Data.DataColumn("FairWage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFairWage);
                this.columnJobClassType = new global::System.Data.DataColumn("JobClassType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobClassType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectTimeID}, true));
                this.columnProjectTimeID.AllowDBNull = false;
                this.columnProjectTimeID.Unique = true;
                this.columnEmployeeID.AllowDBNull = false;
                this.columnCompaniesID.AllowDBNull = false;
                this.columnProjectID.AllowDBNull = false;
                this.columnDate_.AllowDBNull = false;
                this.columnProjectTime.AllowDBNull = false;
                this.columnWorkingDetails.MaxLength = 25;
                this.columnLocation.MaxLength = 50;
                this.columnMealsAllowanceType.MaxLength = 25;
                this.columnMealsAllowance.AllowDBNull = false;
                this.columnProjectTimeState.AllowDBNull = false;
                this.columnProjectTimeState.MaxLength = 25;
                this.columnComments.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
                this.columnWork_.MaxLength = 50;
                this.columnFunction_.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_TEMPRow NewLFS_PROJECT_TIME_TEMPRow() {
                return ((LFS_PROJECT_TIME_TEMPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_TIME_TEMPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_TIME_TEMPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_TIME_TEMPRowChanged != null)) {
                    this.LFS_PROJECT_TIME_TEMPRowChanged(this, new LFS_PROJECT_TIME_TEMPRowChangeEvent(((LFS_PROJECT_TIME_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_TIME_TEMPRowChanging != null)) {
                    this.LFS_PROJECT_TIME_TEMPRowChanging(this, new LFS_PROJECT_TIME_TEMPRowChangeEvent(((LFS_PROJECT_TIME_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_TIME_TEMPRowDeleted != null)) {
                    this.LFS_PROJECT_TIME_TEMPRowDeleted(this, new LFS_PROJECT_TIME_TEMPRowChangeEvent(((LFS_PROJECT_TIME_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_TIME_TEMPRowDeleting != null)) {
                    this.LFS_PROJECT_TIME_TEMPRowDeleting(this, new LFS_PROJECT_TIME_TEMPRowChangeEvent(((LFS_PROJECT_TIME_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_TIME_TEMPRow(LFS_PROJECT_TIME_TEMPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTimeTDS ds = new ProjectTimeTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_TIME_TEMPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_TIME_SECTIONDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectTimeID;
            
            private global::System.Data.DataColumn columnSectionID;
            
            private global::System.Data.DataColumn columnFlowOrderID;
            
            private global::System.Data.DataColumn columnCompleted;
            
            private global::System.Data.DataColumn columnDate_;
            
            private global::System.Data.DataColumn columnPercentageOpened;
            
            private global::System.Data.DataColumn columnPercentageBrushed;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_SECTIONDataTable() {
                this.TableName = "LFS_PROJECT_TIME_SECTION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_TIME_SECTIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_TIME_SECTIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectTimeIDColumn {
                get {
                    return this.columnProjectTimeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionIDColumn {
                get {
                    return this.columnSectionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlowOrderIDColumn {
                get {
                    return this.columnFlowOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompletedColumn {
                get {
                    return this.columnCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Date_Column {
                get {
                    return this.columnDate_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PercentageOpenedColumn {
                get {
                    return this.columnPercentageOpened;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PercentageBrushedColumn {
                get {
                    return this.columnPercentageBrushed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_SECTIONRow this[int index] {
                get {
                    return ((LFS_PROJECT_TIME_SECTIONRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_TIME_SECTIONRowChangeEventHandler LFS_PROJECT_TIME_SECTIONRowChanging;
            
            public event LFS_PROJECT_TIME_SECTIONRowChangeEventHandler LFS_PROJECT_TIME_SECTIONRowChanged;
            
            public event LFS_PROJECT_TIME_SECTIONRowChangeEventHandler LFS_PROJECT_TIME_SECTIONRowDeleting;
            
            public event LFS_PROJECT_TIME_SECTIONRowChangeEventHandler LFS_PROJECT_TIME_SECTIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_TIME_SECTIONRow(LFS_PROJECT_TIME_SECTIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_SECTIONRow AddLFS_PROJECT_TIME_SECTIONRow(int ProjectTimeID, string SectionID, string FlowOrderID, bool Completed, System.DateTime Date_, int PercentageOpened, int PercentageBrushed, bool Deleted, int COMPANY_ID) {
                LFS_PROJECT_TIME_SECTIONRow rowLFS_PROJECT_TIME_SECTIONRow = ((LFS_PROJECT_TIME_SECTIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProjectTimeID,
                        SectionID,
                        FlowOrderID,
                        Completed,
                        Date_,
                        PercentageOpened,
                        PercentageBrushed,
                        Deleted,
                        COMPANY_ID};
                rowLFS_PROJECT_TIME_SECTIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_TIME_SECTIONRow);
                return rowLFS_PROJECT_TIME_SECTIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_SECTIONRow FindByProjectTimeIDSectionID(int ProjectTimeID, string SectionID) {
                return ((LFS_PROJECT_TIME_SECTIONRow)(this.Rows.Find(new object[] {
                            ProjectTimeID,
                            SectionID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_TIME_SECTIONDataTable cln = ((LFS_PROJECT_TIME_SECTIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_TIME_SECTIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectTimeID = base.Columns["ProjectTimeID"];
                this.columnSectionID = base.Columns["SectionID"];
                this.columnFlowOrderID = base.Columns["FlowOrderID"];
                this.columnCompleted = base.Columns["Completed"];
                this.columnDate_ = base.Columns["Date_"];
                this.columnPercentageOpened = base.Columns["PercentageOpened"];
                this.columnPercentageBrushed = base.Columns["PercentageBrushed"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectTimeID = new global::System.Data.DataColumn("ProjectTimeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectTimeID);
                this.columnSectionID = new global::System.Data.DataColumn("SectionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionID);
                this.columnFlowOrderID = new global::System.Data.DataColumn("FlowOrderID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlowOrderID);
                this.columnCompleted = new global::System.Data.DataColumn("Completed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleted);
                this.columnDate_ = new global::System.Data.DataColumn("Date_", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate_);
                this.columnPercentageOpened = new global::System.Data.DataColumn("PercentageOpened", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageOpened);
                this.columnPercentageBrushed = new global::System.Data.DataColumn("PercentageBrushed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageBrushed);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectTimeID,
                                this.columnSectionID}, true));
                this.columnProjectTimeID.AllowDBNull = false;
                this.columnSectionID.AllowDBNull = false;
                this.columnSectionID.MaxLength = 75;
                this.columnFlowOrderID.AllowDBNull = false;
                this.columnFlowOrderID.MaxLength = 15;
                this.columnCompleted.AllowDBNull = false;
                this.columnDate_.AllowDBNull = false;
                this.columnPercentageOpened.AllowDBNull = false;
                this.columnPercentageBrushed.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_SECTIONRow NewLFS_PROJECT_TIME_SECTIONRow() {
                return ((LFS_PROJECT_TIME_SECTIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_TIME_SECTIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_TIME_SECTIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_TIME_SECTIONRowChanged != null)) {
                    this.LFS_PROJECT_TIME_SECTIONRowChanged(this, new LFS_PROJECT_TIME_SECTIONRowChangeEvent(((LFS_PROJECT_TIME_SECTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_TIME_SECTIONRowChanging != null)) {
                    this.LFS_PROJECT_TIME_SECTIONRowChanging(this, new LFS_PROJECT_TIME_SECTIONRowChangeEvent(((LFS_PROJECT_TIME_SECTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_TIME_SECTIONRowDeleted != null)) {
                    this.LFS_PROJECT_TIME_SECTIONRowDeleted(this, new LFS_PROJECT_TIME_SECTIONRowChangeEvent(((LFS_PROJECT_TIME_SECTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_TIME_SECTIONRowDeleting != null)) {
                    this.LFS_PROJECT_TIME_SECTIONRowDeleting(this, new LFS_PROJECT_TIME_SECTIONRowChangeEvent(((LFS_PROJECT_TIME_SECTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_TIME_SECTIONRow(LFS_PROJECT_TIME_SECTIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTimeTDS ds = new ProjectTimeTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_TIME_SECTIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_TIME_SECTION_TEMPDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectTimeID;
            
            private global::System.Data.DataColumn columnSectionID;
            
            private global::System.Data.DataColumn columnFlowOrderID;
            
            private global::System.Data.DataColumn columnCompleted;
            
            private global::System.Data.DataColumn columnDate_;
            
            private global::System.Data.DataColumn columnPercentageOpened;
            
            private global::System.Data.DataColumn columnPercentageBrushed;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_SECTION_TEMPDataTable() {
                this.TableName = "LFS_PROJECT_TIME_SECTION_TEMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_TIME_SECTION_TEMPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_TIME_SECTION_TEMPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectTimeIDColumn {
                get {
                    return this.columnProjectTimeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionIDColumn {
                get {
                    return this.columnSectionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlowOrderIDColumn {
                get {
                    return this.columnFlowOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompletedColumn {
                get {
                    return this.columnCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Date_Column {
                get {
                    return this.columnDate_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PercentageOpenedColumn {
                get {
                    return this.columnPercentageOpened;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PercentageBrushedColumn {
                get {
                    return this.columnPercentageBrushed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_SECTION_TEMPRow this[int index] {
                get {
                    return ((LFS_PROJECT_TIME_SECTION_TEMPRow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_TIME_SECTION_TEMPRowChangeEventHandler LFS_PROJECT_TIME_SECTION_TEMPRowChanging;
            
            public event LFS_PROJECT_TIME_SECTION_TEMPRowChangeEventHandler LFS_PROJECT_TIME_SECTION_TEMPRowChanged;
            
            public event LFS_PROJECT_TIME_SECTION_TEMPRowChangeEventHandler LFS_PROJECT_TIME_SECTION_TEMPRowDeleting;
            
            public event LFS_PROJECT_TIME_SECTION_TEMPRowChangeEventHandler LFS_PROJECT_TIME_SECTION_TEMPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_TIME_SECTION_TEMPRow(LFS_PROJECT_TIME_SECTION_TEMPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_SECTION_TEMPRow AddLFS_PROJECT_TIME_SECTION_TEMPRow(int ProjectTimeID, string SectionID, string FlowOrderID, bool Completed, System.DateTime Date_, int PercentageOpened, int PercentageBrushed, bool Deleted, int COMPANY_ID) {
                LFS_PROJECT_TIME_SECTION_TEMPRow rowLFS_PROJECT_TIME_SECTION_TEMPRow = ((LFS_PROJECT_TIME_SECTION_TEMPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProjectTimeID,
                        SectionID,
                        FlowOrderID,
                        Completed,
                        Date_,
                        PercentageOpened,
                        PercentageBrushed,
                        Deleted,
                        COMPANY_ID};
                rowLFS_PROJECT_TIME_SECTION_TEMPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_TIME_SECTION_TEMPRow);
                return rowLFS_PROJECT_TIME_SECTION_TEMPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_SECTION_TEMPRow FindByProjectTimeIDSectionID(int ProjectTimeID, string SectionID) {
                return ((LFS_PROJECT_TIME_SECTION_TEMPRow)(this.Rows.Find(new object[] {
                            ProjectTimeID,
                            SectionID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_TIME_SECTION_TEMPDataTable cln = ((LFS_PROJECT_TIME_SECTION_TEMPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_TIME_SECTION_TEMPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectTimeID = base.Columns["ProjectTimeID"];
                this.columnSectionID = base.Columns["SectionID"];
                this.columnFlowOrderID = base.Columns["FlowOrderID"];
                this.columnCompleted = base.Columns["Completed"];
                this.columnDate_ = base.Columns["Date_"];
                this.columnPercentageOpened = base.Columns["PercentageOpened"];
                this.columnPercentageBrushed = base.Columns["PercentageBrushed"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectTimeID = new global::System.Data.DataColumn("ProjectTimeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectTimeID);
                this.columnSectionID = new global::System.Data.DataColumn("SectionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionID);
                this.columnFlowOrderID = new global::System.Data.DataColumn("FlowOrderID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlowOrderID);
                this.columnCompleted = new global::System.Data.DataColumn("Completed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleted);
                this.columnDate_ = new global::System.Data.DataColumn("Date_", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate_);
                this.columnPercentageOpened = new global::System.Data.DataColumn("PercentageOpened", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageOpened);
                this.columnPercentageBrushed = new global::System.Data.DataColumn("PercentageBrushed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageBrushed);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectTimeID,
                                this.columnSectionID}, true));
                this.columnProjectTimeID.AllowDBNull = false;
                this.columnSectionID.AllowDBNull = false;
                this.columnSectionID.MaxLength = 75;
                this.columnFlowOrderID.AllowDBNull = false;
                this.columnFlowOrderID.MaxLength = 15;
                this.columnCompleted.AllowDBNull = false;
                this.columnDate_.AllowDBNull = false;
                this.columnPercentageOpened.AllowDBNull = false;
                this.columnPercentageBrushed.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_SECTION_TEMPRow NewLFS_PROJECT_TIME_SECTION_TEMPRow() {
                return ((LFS_PROJECT_TIME_SECTION_TEMPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_TIME_SECTION_TEMPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_TIME_SECTION_TEMPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_TIME_SECTION_TEMPRowChanged != null)) {
                    this.LFS_PROJECT_TIME_SECTION_TEMPRowChanged(this, new LFS_PROJECT_TIME_SECTION_TEMPRowChangeEvent(((LFS_PROJECT_TIME_SECTION_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_TIME_SECTION_TEMPRowChanging != null)) {
                    this.LFS_PROJECT_TIME_SECTION_TEMPRowChanging(this, new LFS_PROJECT_TIME_SECTION_TEMPRowChangeEvent(((LFS_PROJECT_TIME_SECTION_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_TIME_SECTION_TEMPRowDeleted != null)) {
                    this.LFS_PROJECT_TIME_SECTION_TEMPRowDeleted(this, new LFS_PROJECT_TIME_SECTION_TEMPRowChangeEvent(((LFS_PROJECT_TIME_SECTION_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_TIME_SECTION_TEMPRowDeleting != null)) {
                    this.LFS_PROJECT_TIME_SECTION_TEMPRowDeleting(this, new LFS_PROJECT_TIME_SECTION_TEMPRowChangeEvent(((LFS_PROJECT_TIME_SECTION_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_TIME_SECTION_TEMPRow(LFS_PROJECT_TIME_SECTION_TEMPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTimeTDS ds = new ProjectTimeTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_TIME_SECTION_TEMPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_PROJECT_TIMEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProjectTimeID;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnCompaniesID;
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnDate_;
            
            private global::System.Data.DataColumn columnStartTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            private global::System.Data.DataColumn columnOffset;
            
            private global::System.Data.DataColumn columnProjectTime;
            
            private global::System.Data.DataColumn columnWorkingDetails;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnMealsCountry;
            
            private global::System.Data.DataColumn columnMealsAllowanceType;
            
            private global::System.Data.DataColumn columnMealsAllowance;
            
            private global::System.Data.DataColumn columnUnitID;
            
            private global::System.Data.DataColumn columnTowedUnitID;
            
            private global::System.Data.DataColumn columnProjectTimeState;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnWork_;
            
            private global::System.Data.DataColumn columnFunction_;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnApprovedByID;
            
            private global::System.Data.DataColumn columnFairWage;
            
            private global::System.Data.DataColumn columnJobClassType;
            
            private global::System.Data.DataColumn columnCreatedByID;
            
            private global::System.Data.DataColumn columnCreateDate;
            
            private global::System.Data.DataColumn columnUpdateByID;
            
            private global::System.Data.DataColumn columnUpdateDate;
            
            private global::System.Data.DataColumn columnDeletedByID;
            
            private global::System.Data.DataColumn columnDeleteDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIMEDataTable() {
                this.TableName = "LFS_PROJECT_TIME";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_TIMEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_PROJECT_TIMEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectTimeIDColumn {
                get {
                    return this.columnProjectTimeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompaniesIDColumn {
                get {
                    return this.columnCompaniesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Date_Column {
                get {
                    return this.columnDate_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartTimeColumn {
                get {
                    return this.columnStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OffsetColumn {
                get {
                    return this.columnOffset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectTimeColumn {
                get {
                    return this.columnProjectTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkingDetailsColumn {
                get {
                    return this.columnWorkingDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MealsCountryColumn {
                get {
                    return this.columnMealsCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MealsAllowanceTypeColumn {
                get {
                    return this.columnMealsAllowanceType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MealsAllowanceColumn {
                get {
                    return this.columnMealsAllowance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitIDColumn {
                get {
                    return this.columnUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TowedUnitIDColumn {
                get {
                    return this.columnTowedUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectTimeStateColumn {
                get {
                    return this.columnProjectTimeState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Work_Column {
                get {
                    return this.columnWork_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Function_Column {
                get {
                    return this.columnFunction_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApprovedByIDColumn {
                get {
                    return this.columnApprovedByID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FairWageColumn {
                get {
                    return this.columnFairWage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobClassTypeColumn {
                get {
                    return this.columnJobClassType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByIDColumn {
                get {
                    return this.columnCreatedByID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreateDateColumn {
                get {
                    return this.columnCreateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateByIDColumn {
                get {
                    return this.columnUpdateByID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateDateColumn {
                get {
                    return this.columnUpdateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByIDColumn {
                get {
                    return this.columnDeletedByID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeleteDateColumn {
                get {
                    return this.columnDeleteDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIMERow this[int index] {
                get {
                    return ((LFS_PROJECT_TIMERow)(this.Rows[index]));
                }
            }
            
            public event LFS_PROJECT_TIMERowChangeEventHandler LFS_PROJECT_TIMERowChanging;
            
            public event LFS_PROJECT_TIMERowChangeEventHandler LFS_PROJECT_TIMERowChanged;
            
            public event LFS_PROJECT_TIMERowChangeEventHandler LFS_PROJECT_TIMERowDeleting;
            
            public event LFS_PROJECT_TIMERowChangeEventHandler LFS_PROJECT_TIMERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_PROJECT_TIMERow(LFS_PROJECT_TIMERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIMERow AddLFS_PROJECT_TIMERow(
                        int EmployeeID, 
                        int CompaniesID, 
                        int ProjectID, 
                        System.DateTime Date_, 
                        System.DateTime StartTime, 
                        System.DateTime EndTime, 
                        double Offset, 
                        double ProjectTime, 
                        string WorkingDetails, 
                        string Location, 
                        long MealsCountry, 
                        string MealsAllowanceType, 
                        decimal MealsAllowance, 
                        int UnitID, 
                        int TowedUnitID, 
                        string ProjectTimeState, 
                        string Comments, 
                        bool Deleted, 
                        string Work_, 
                        string Function_, 
                        int COMPANY_ID, 
                        int ApprovedByID, 
                        bool FairWage, 
                        string JobClassType, 
                        int CreatedByID, 
                        System.DateTime CreateDate, 
                        int UpdateByID, 
                        System.DateTime UpdateDate, 
                        int DeletedByID, 
                        System.DateTime DeleteDate) {
                LFS_PROJECT_TIMERow rowLFS_PROJECT_TIMERow = ((LFS_PROJECT_TIMERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EmployeeID,
                        CompaniesID,
                        ProjectID,
                        Date_,
                        StartTime,
                        EndTime,
                        Offset,
                        ProjectTime,
                        WorkingDetails,
                        Location,
                        MealsCountry,
                        MealsAllowanceType,
                        MealsAllowance,
                        UnitID,
                        TowedUnitID,
                        ProjectTimeState,
                        Comments,
                        Deleted,
                        Work_,
                        Function_,
                        COMPANY_ID,
                        ApprovedByID,
                        FairWage,
                        JobClassType,
                        CreatedByID,
                        CreateDate,
                        UpdateByID,
                        UpdateDate,
                        DeletedByID,
                        DeleteDate};
                rowLFS_PROJECT_TIMERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_PROJECT_TIMERow);
                return rowLFS_PROJECT_TIMERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIMERow FindByProjectTimeID(int ProjectTimeID) {
                return ((LFS_PROJECT_TIMERow)(this.Rows.Find(new object[] {
                            ProjectTimeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_PROJECT_TIMEDataTable cln = ((LFS_PROJECT_TIMEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_PROJECT_TIMEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProjectTimeID = base.Columns["ProjectTimeID"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnCompaniesID = base.Columns["CompaniesID"];
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnDate_ = base.Columns["Date_"];
                this.columnStartTime = base.Columns["StartTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnOffset = base.Columns["Offset"];
                this.columnProjectTime = base.Columns["ProjectTime"];
                this.columnWorkingDetails = base.Columns["WorkingDetails"];
                this.columnLocation = base.Columns["Location"];
                this.columnMealsCountry = base.Columns["MealsCountry"];
                this.columnMealsAllowanceType = base.Columns["MealsAllowanceType"];
                this.columnMealsAllowance = base.Columns["MealsAllowance"];
                this.columnUnitID = base.Columns["UnitID"];
                this.columnTowedUnitID = base.Columns["TowedUnitID"];
                this.columnProjectTimeState = base.Columns["ProjectTimeState"];
                this.columnComments = base.Columns["Comments"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnWork_ = base.Columns["Work_"];
                this.columnFunction_ = base.Columns["Function_"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnApprovedByID = base.Columns["ApprovedByID"];
                this.columnFairWage = base.Columns["FairWage"];
                this.columnJobClassType = base.Columns["JobClassType"];
                this.columnCreatedByID = base.Columns["CreatedByID"];
                this.columnCreateDate = base.Columns["CreateDate"];
                this.columnUpdateByID = base.Columns["UpdateByID"];
                this.columnUpdateDate = base.Columns["UpdateDate"];
                this.columnDeletedByID = base.Columns["DeletedByID"];
                this.columnDeleteDate = base.Columns["DeleteDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProjectTimeID = new global::System.Data.DataColumn("ProjectTimeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectTimeID);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnCompaniesID = new global::System.Data.DataColumn("CompaniesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompaniesID);
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnDate_ = new global::System.Data.DataColumn("Date_", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate_);
                this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnOffset = new global::System.Data.DataColumn("Offset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOffset);
                this.columnProjectTime = new global::System.Data.DataColumn("ProjectTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectTime);
                this.columnWorkingDetails = new global::System.Data.DataColumn("WorkingDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkingDetails);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnMealsCountry = new global::System.Data.DataColumn("MealsCountry", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMealsCountry);
                this.columnMealsAllowanceType = new global::System.Data.DataColumn("MealsAllowanceType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMealsAllowanceType);
                this.columnMealsAllowance = new global::System.Data.DataColumn("MealsAllowance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMealsAllowance);
                this.columnUnitID = new global::System.Data.DataColumn("UnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitID);
                this.columnTowedUnitID = new global::System.Data.DataColumn("TowedUnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTowedUnitID);
                this.columnProjectTimeState = new global::System.Data.DataColumn("ProjectTimeState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectTimeState);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnWork_ = new global::System.Data.DataColumn("Work_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWork_);
                this.columnFunction_ = new global::System.Data.DataColumn("Function_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunction_);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnApprovedByID = new global::System.Data.DataColumn("ApprovedByID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedByID);
                this.columnFairWage = new global::System.Data.DataColumn("FairWage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFairWage);
                this.columnJobClassType = new global::System.Data.DataColumn("JobClassType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobClassType);
                this.columnCreatedByID = new global::System.Data.DataColumn("CreatedByID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedByID);
                this.columnCreateDate = new global::System.Data.DataColumn("CreateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDate);
                this.columnUpdateByID = new global::System.Data.DataColumn("UpdateByID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateByID);
                this.columnUpdateDate = new global::System.Data.DataColumn("UpdateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDate);
                this.columnDeletedByID = new global::System.Data.DataColumn("DeletedByID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedByID);
                this.columnDeleteDate = new global::System.Data.DataColumn("DeleteDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleteDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectTimeID}, true));
                this.columnProjectTimeID.AutoIncrement = true;
                this.columnProjectTimeID.AutoIncrementSeed = -1;
                this.columnProjectTimeID.AutoIncrementStep = -1;
                this.columnProjectTimeID.AllowDBNull = false;
                this.columnProjectTimeID.ReadOnly = true;
                this.columnProjectTimeID.Unique = true;
                this.columnEmployeeID.AllowDBNull = false;
                this.columnCompaniesID.AllowDBNull = false;
                this.columnProjectID.AllowDBNull = false;
                this.columnDate_.AllowDBNull = false;
                this.columnProjectTime.AllowDBNull = false;
                this.columnWorkingDetails.MaxLength = 25;
                this.columnLocation.MaxLength = 50;
                this.columnMealsAllowanceType.MaxLength = 25;
                this.columnMealsAllowance.AllowDBNull = false;
                this.columnProjectTimeState.AllowDBNull = false;
                this.columnProjectTimeState.MaxLength = 25;
                this.columnComments.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
                this.columnWork_.MaxLength = 50;
                this.columnFunction_.MaxLength = 50;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnFairWage.AllowDBNull = false;
                this.columnJobClassType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIMERow NewLFS_PROJECT_TIMERow() {
                return ((LFS_PROJECT_TIMERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_PROJECT_TIMERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_PROJECT_TIMERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_PROJECT_TIMERowChanged != null)) {
                    this.LFS_PROJECT_TIMERowChanged(this, new LFS_PROJECT_TIMERowChangeEvent(((LFS_PROJECT_TIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_PROJECT_TIMERowChanging != null)) {
                    this.LFS_PROJECT_TIMERowChanging(this, new LFS_PROJECT_TIMERowChangeEvent(((LFS_PROJECT_TIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_PROJECT_TIMERowDeleted != null)) {
                    this.LFS_PROJECT_TIMERowDeleted(this, new LFS_PROJECT_TIMERowChangeEvent(((LFS_PROJECT_TIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_PROJECT_TIMERowDeleting != null)) {
                    this.LFS_PROJECT_TIMERowDeleting(this, new LFS_PROJECT_TIMERowChangeEvent(((LFS_PROJECT_TIMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_PROJECT_TIMERow(LFS_PROJECT_TIMERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectTimeTDS ds = new ProjectTimeTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_PROJECT_TIMEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_TIME_TEMPRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_TIME_TEMPDataTable tableLFS_PROJECT_TIME_TEMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_TIME_TEMPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_TIME_TEMP = ((LFS_PROJECT_TIME_TEMPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectTimeID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TIME_TEMP.ProjectTimeIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.ProjectTimeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TIME_TEMP.EmployeeIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompaniesID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TIME_TEMP.CompaniesIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.CompaniesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TIME_TEMP.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date_ {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_PROJECT_TIME_TEMP.Date_Column]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.Date_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StartTime {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TIME_TEMP.StartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartTime\' in table \'LFS_PROJECT_TIME_TEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.StartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EndTime {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TIME_TEMP.EndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndTime\' in table \'LFS_PROJECT_TIME_TEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Offset {
                get {
                    try {
                        return ((double)(this[this.tableLFS_PROJECT_TIME_TEMP.OffsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Offset\' in table \'LFS_PROJECT_TIME_TEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.OffsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ProjectTime {
                get {
                    return ((double)(this[this.tableLFS_PROJECT_TIME_TEMP.ProjectTimeColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.ProjectTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkingDetails {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TIME_TEMP.WorkingDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkingDetails\' in table \'LFS_PROJECT_TIME_TEMP\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.WorkingDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TIME_TEMP.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'LFS_PROJECT_TIME_TEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MealsCountry {
                get {
                    try {
                        return ((long)(this[this.tableLFS_PROJECT_TIME_TEMP.MealsCountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MealsCountry\' in table \'LFS_PROJECT_TIME_TEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.MealsCountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MealsAllowanceType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TIME_TEMP.MealsAllowanceTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MealsAllowanceType\' in table \'LFS_PROJECT_TIME_TEMP\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.MealsAllowanceTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MealsAllowance {
                get {
                    return ((decimal)(this[this.tableLFS_PROJECT_TIME_TEMP.MealsAllowanceColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.MealsAllowanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UnitID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT_TIME_TEMP.UnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitID\' in table \'LFS_PROJECT_TIME_TEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.UnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TowedUnitID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT_TIME_TEMP.TowedUnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TowedUnitID\' in table \'LFS_PROJECT_TIME_TEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.TowedUnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProjectTimeState {
                get {
                    return ((string)(this[this.tableLFS_PROJECT_TIME_TEMP.ProjectTimeStateColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.ProjectTimeStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TIME_TEMP.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_PROJECT_TIME_TEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TIME_TEMP.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Work_ {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TIME_TEMP.Work_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Work_\' in table \'LFS_PROJECT_TIME_TEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.Work_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Function_ {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TIME_TEMP.Function_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Function_\' in table \'LFS_PROJECT_TIME_TEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.Function_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkFunctionConcat {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TIME_TEMP.WorkFunctionConcatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkFunctionConcat\' in table \'LFS_PROJECT_TIME_TEMP\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.WorkFunctionConcatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMealsAllowance {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_PROJECT_TIME_TEMP.IsMealsAllowanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsMealsAllowance\' in table \'LFS_PROJECT_TIME_TEMP\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.IsMealsAllowanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FairWage {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_PROJECT_TIME_TEMP.FairWageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FairWage\' in table \'LFS_PROJECT_TIME_TEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.FairWageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobClassType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TIME_TEMP.JobClassTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobClassType\' in table \'LFS_PROJECT_TIME_TEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_TEMP.JobClassTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartTimeNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME_TEMP.StartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartTimeNull() {
                this[this.tableLFS_PROJECT_TIME_TEMP.StartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndTimeNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME_TEMP.EndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndTimeNull() {
                this[this.tableLFS_PROJECT_TIME_TEMP.EndTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOffsetNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME_TEMP.OffsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOffsetNull() {
                this[this.tableLFS_PROJECT_TIME_TEMP.OffsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkingDetailsNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME_TEMP.WorkingDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkingDetailsNull() {
                this[this.tableLFS_PROJECT_TIME_TEMP.WorkingDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME_TEMP.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableLFS_PROJECT_TIME_TEMP.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMealsCountryNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME_TEMP.MealsCountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMealsCountryNull() {
                this[this.tableLFS_PROJECT_TIME_TEMP.MealsCountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMealsAllowanceTypeNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME_TEMP.MealsAllowanceTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMealsAllowanceTypeNull() {
                this[this.tableLFS_PROJECT_TIME_TEMP.MealsAllowanceTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitIDNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME_TEMP.UnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitIDNull() {
                this[this.tableLFS_PROJECT_TIME_TEMP.UnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTowedUnitIDNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME_TEMP.TowedUnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTowedUnitIDNull() {
                this[this.tableLFS_PROJECT_TIME_TEMP.TowedUnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME_TEMP.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_PROJECT_TIME_TEMP.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWork_Null() {
                return this.IsNull(this.tableLFS_PROJECT_TIME_TEMP.Work_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWork_Null() {
                this[this.tableLFS_PROJECT_TIME_TEMP.Work_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFunction_Null() {
                return this.IsNull(this.tableLFS_PROJECT_TIME_TEMP.Function_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFunction_Null() {
                this[this.tableLFS_PROJECT_TIME_TEMP.Function_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkFunctionConcatNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME_TEMP.WorkFunctionConcatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkFunctionConcatNull() {
                this[this.tableLFS_PROJECT_TIME_TEMP.WorkFunctionConcatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsMealsAllowanceNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME_TEMP.IsMealsAllowanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsMealsAllowanceNull() {
                this[this.tableLFS_PROJECT_TIME_TEMP.IsMealsAllowanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFairWageNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME_TEMP.FairWageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFairWageNull() {
                this[this.tableLFS_PROJECT_TIME_TEMP.FairWageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobClassTypeNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME_TEMP.JobClassTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobClassTypeNull() {
                this[this.tableLFS_PROJECT_TIME_TEMP.JobClassTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_TIME_SECTIONRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_TIME_SECTIONDataTable tableLFS_PROJECT_TIME_SECTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_TIME_SECTIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_TIME_SECTION = ((LFS_PROJECT_TIME_SECTIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectTimeID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TIME_SECTION.ProjectTimeIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_SECTION.ProjectTimeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionID {
                get {
                    return ((string)(this[this.tableLFS_PROJECT_TIME_SECTION.SectionIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_SECTION.SectionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FlowOrderID {
                get {
                    return ((string)(this[this.tableLFS_PROJECT_TIME_SECTION.FlowOrderIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_SECTION.FlowOrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Completed {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TIME_SECTION.CompletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_SECTION.CompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date_ {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_PROJECT_TIME_SECTION.Date_Column]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_SECTION.Date_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PercentageOpened {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TIME_SECTION.PercentageOpenedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_SECTION.PercentageOpenedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PercentageBrushed {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TIME_SECTION.PercentageBrushedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_SECTION.PercentageBrushedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TIME_SECTION.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_SECTION.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TIME_SECTION.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_SECTION.COMPANY_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_TIME_SECTION_TEMPRow : global::System.Data.DataRow {
            
            private LFS_PROJECT_TIME_SECTION_TEMPDataTable tableLFS_PROJECT_TIME_SECTION_TEMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_TIME_SECTION_TEMPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_TIME_SECTION_TEMP = ((LFS_PROJECT_TIME_SECTION_TEMPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectTimeID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TIME_SECTION_TEMP.ProjectTimeIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_SECTION_TEMP.ProjectTimeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionID {
                get {
                    return ((string)(this[this.tableLFS_PROJECT_TIME_SECTION_TEMP.SectionIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_SECTION_TEMP.SectionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FlowOrderID {
                get {
                    return ((string)(this[this.tableLFS_PROJECT_TIME_SECTION_TEMP.FlowOrderIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_SECTION_TEMP.FlowOrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Completed {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TIME_SECTION_TEMP.CompletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_SECTION_TEMP.CompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date_ {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_PROJECT_TIME_SECTION_TEMP.Date_Column]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_SECTION_TEMP.Date_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PercentageOpened {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TIME_SECTION_TEMP.PercentageOpenedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_SECTION_TEMP.PercentageOpenedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PercentageBrushed {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TIME_SECTION_TEMP.PercentageBrushedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_SECTION_TEMP.PercentageBrushedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TIME_SECTION_TEMP.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_SECTION_TEMP.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TIME_SECTION_TEMP.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME_SECTION_TEMP.COMPANY_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_PROJECT_TIMERow : global::System.Data.DataRow {
            
            private LFS_PROJECT_TIMEDataTable tableLFS_PROJECT_TIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_PROJECT_TIMERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_PROJECT_TIME = ((LFS_PROJECT_TIMEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectTimeID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TIME.ProjectTimeIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.ProjectTimeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TIME.EmployeeIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompaniesID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TIME.CompaniesIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.CompaniesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TIME.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date_ {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_PROJECT_TIME.Date_Column]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.Date_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_PROJECT_TIME.StartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartTime\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.StartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_PROJECT_TIME.EndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndTime\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Offset {
                get {
                    try {
                        return ((double)(this[this.tableLFS_PROJECT_TIME.OffsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Offset\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.OffsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ProjectTime {
                get {
                    return ((double)(this[this.tableLFS_PROJECT_TIME.ProjectTimeColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.ProjectTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkingDetails {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TIME.WorkingDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkingDetails\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.WorkingDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TIME.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MealsCountry {
                get {
                    try {
                        return ((long)(this[this.tableLFS_PROJECT_TIME.MealsCountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MealsCountry\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.MealsCountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MealsAllowanceType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TIME.MealsAllowanceTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MealsAllowanceType\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.MealsAllowanceTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MealsAllowance {
                get {
                    return ((decimal)(this[this.tableLFS_PROJECT_TIME.MealsAllowanceColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.MealsAllowanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UnitID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT_TIME.UnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitID\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.UnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TowedUnitID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT_TIME.TowedUnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TowedUnitID\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.TowedUnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProjectTimeState {
                get {
                    return ((string)(this[this.tableLFS_PROJECT_TIME.ProjectTimeStateColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.ProjectTimeStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TIME.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TIME.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Work_ {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TIME.Work_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Work_\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.Work_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Function_ {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TIME.Function_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Function_\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.Function_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_PROJECT_TIME.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApprovedByID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT_TIME.ApprovedByIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovedByID\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.ApprovedByIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FairWage {
                get {
                    return ((bool)(this[this.tableLFS_PROJECT_TIME.FairWageColumn]));
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.FairWageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobClassType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_PROJECT_TIME.JobClassTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobClassType\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.JobClassTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreatedByID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT_TIME.CreatedByIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedByID\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.CreatedByIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_PROJECT_TIME.CreateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreateDate\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.CreateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdateByID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT_TIME.UpdateByIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdateByID\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.UpdateByIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UpdateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_PROJECT_TIME.UpdateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdateDate\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.UpdateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeletedByID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_PROJECT_TIME.DeletedByIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedByID\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.DeletedByIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeleteDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_PROJECT_TIME.DeleteDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeleteDate\' in table \'LFS_PROJECT_TIME\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_PROJECT_TIME.DeleteDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartTimeNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.StartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartTimeNull() {
                this[this.tableLFS_PROJECT_TIME.StartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndTimeNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.EndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndTimeNull() {
                this[this.tableLFS_PROJECT_TIME.EndTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOffsetNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.OffsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOffsetNull() {
                this[this.tableLFS_PROJECT_TIME.OffsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkingDetailsNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.WorkingDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkingDetailsNull() {
                this[this.tableLFS_PROJECT_TIME.WorkingDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableLFS_PROJECT_TIME.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMealsCountryNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.MealsCountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMealsCountryNull() {
                this[this.tableLFS_PROJECT_TIME.MealsCountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMealsAllowanceTypeNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.MealsAllowanceTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMealsAllowanceTypeNull() {
                this[this.tableLFS_PROJECT_TIME.MealsAllowanceTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitIDNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.UnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitIDNull() {
                this[this.tableLFS_PROJECT_TIME.UnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTowedUnitIDNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.TowedUnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTowedUnitIDNull() {
                this[this.tableLFS_PROJECT_TIME.TowedUnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_PROJECT_TIME.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWork_Null() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.Work_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWork_Null() {
                this[this.tableLFS_PROJECT_TIME.Work_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFunction_Null() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.Function_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFunction_Null() {
                this[this.tableLFS_PROJECT_TIME.Function_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovedByIDNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.ApprovedByIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovedByIDNull() {
                this[this.tableLFS_PROJECT_TIME.ApprovedByIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobClassTypeNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.JobClassTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobClassTypeNull() {
                this[this.tableLFS_PROJECT_TIME.JobClassTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByIDNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.CreatedByIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByIDNull() {
                this[this.tableLFS_PROJECT_TIME.CreatedByIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreateDateNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.CreateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreateDateNull() {
                this[this.tableLFS_PROJECT_TIME.CreateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateByIDNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.UpdateByIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateByIDNull() {
                this[this.tableLFS_PROJECT_TIME.UpdateByIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateDateNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.UpdateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateDateNull() {
                this[this.tableLFS_PROJECT_TIME.UpdateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByIDNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.DeletedByIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByIDNull() {
                this[this.tableLFS_PROJECT_TIME.DeletedByIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleteDateNull() {
                return this.IsNull(this.tableLFS_PROJECT_TIME.DeleteDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeleteDateNull() {
                this[this.tableLFS_PROJECT_TIME.DeleteDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_TIME_TEMPRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_TIME_TEMPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_TEMPRowChangeEvent(LFS_PROJECT_TIME_TEMPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_TEMPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_TIME_SECTIONRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_TIME_SECTIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_SECTIONRowChangeEvent(LFS_PROJECT_TIME_SECTIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_SECTIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_TIME_SECTION_TEMPRowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_TIME_SECTION_TEMPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_SECTION_TEMPRowChangeEvent(LFS_PROJECT_TIME_SECTION_TEMPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIME_SECTION_TEMPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_PROJECT_TIMERowChangeEvent : global::System.EventArgs {
            
            private LFS_PROJECT_TIMERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIMERowChangeEvent(LFS_PROJECT_TIMERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_PROJECT_TIMERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591