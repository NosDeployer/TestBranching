//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.LabourHours.Vacations {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("VacationsTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class VacationsTDS : global::System.Data.DataSet {
        
        private LFS_VACATION_NONWORKING_DAYSDataTable tableLFS_VACATION_NONWORKING_DAYS;
        
        private LFS_VACATION_DAYSDataTable tableLFS_VACATION_DAYS;
        
        private LFS_VACATION_REQUESTSDataTable tableLFS_VACATION_REQUESTS;
        
        private LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSDataTable tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public VacationsTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected VacationsTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LFS_VACATION_NONWORKING_DAYS"] != null)) {
                    base.Tables.Add(new LFS_VACATION_NONWORKING_DAYSDataTable(ds.Tables["LFS_VACATION_NONWORKING_DAYS"]));
                }
                if ((ds.Tables["LFS_VACATION_DAYS"] != null)) {
                    base.Tables.Add(new LFS_VACATION_DAYSDataTable(ds.Tables["LFS_VACATION_DAYS"]));
                }
                if ((ds.Tables["LFS_VACATION_REQUESTS"] != null)) {
                    base.Tables.Add(new LFS_VACATION_REQUESTSDataTable(ds.Tables["LFS_VACATION_REQUESTS"]));
                }
                if ((ds.Tables["LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS"] != null)) {
                    base.Tables.Add(new LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSDataTable(ds.Tables["LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_VACATION_NONWORKING_DAYSDataTable LFS_VACATION_NONWORKING_DAYS {
            get {
                return this.tableLFS_VACATION_NONWORKING_DAYS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_VACATION_DAYSDataTable LFS_VACATION_DAYS {
            get {
                return this.tableLFS_VACATION_DAYS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_VACATION_REQUESTSDataTable LFS_VACATION_REQUESTS {
            get {
                return this.tableLFS_VACATION_REQUESTS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSDataTable LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS {
            get {
                return this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            VacationsTDS cln = ((VacationsTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LFS_VACATION_NONWORKING_DAYS"] != null)) {
                    base.Tables.Add(new LFS_VACATION_NONWORKING_DAYSDataTable(ds.Tables["LFS_VACATION_NONWORKING_DAYS"]));
                }
                if ((ds.Tables["LFS_VACATION_DAYS"] != null)) {
                    base.Tables.Add(new LFS_VACATION_DAYSDataTable(ds.Tables["LFS_VACATION_DAYS"]));
                }
                if ((ds.Tables["LFS_VACATION_REQUESTS"] != null)) {
                    base.Tables.Add(new LFS_VACATION_REQUESTSDataTable(ds.Tables["LFS_VACATION_REQUESTS"]));
                }
                if ((ds.Tables["LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS"] != null)) {
                    base.Tables.Add(new LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSDataTable(ds.Tables["LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableLFS_VACATION_NONWORKING_DAYS = ((LFS_VACATION_NONWORKING_DAYSDataTable)(base.Tables["LFS_VACATION_NONWORKING_DAYS"]));
            if ((initTable == true)) {
                if ((this.tableLFS_VACATION_NONWORKING_DAYS != null)) {
                    this.tableLFS_VACATION_NONWORKING_DAYS.InitVars();
                }
            }
            this.tableLFS_VACATION_DAYS = ((LFS_VACATION_DAYSDataTable)(base.Tables["LFS_VACATION_DAYS"]));
            if ((initTable == true)) {
                if ((this.tableLFS_VACATION_DAYS != null)) {
                    this.tableLFS_VACATION_DAYS.InitVars();
                }
            }
            this.tableLFS_VACATION_REQUESTS = ((LFS_VACATION_REQUESTSDataTable)(base.Tables["LFS_VACATION_REQUESTS"]));
            if ((initTable == true)) {
                if ((this.tableLFS_VACATION_REQUESTS != null)) {
                    this.tableLFS_VACATION_REQUESTS.InitVars();
                }
            }
            this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS = ((LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSDataTable)(base.Tables["LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS"]));
            if ((initTable == true)) {
                if ((this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS != null)) {
                    this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "VacationsTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/VacationsTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLFS_VACATION_NONWORKING_DAYS = new LFS_VACATION_NONWORKING_DAYSDataTable();
            base.Tables.Add(this.tableLFS_VACATION_NONWORKING_DAYS);
            this.tableLFS_VACATION_DAYS = new LFS_VACATION_DAYSDataTable();
            base.Tables.Add(this.tableLFS_VACATION_DAYS);
            this.tableLFS_VACATION_REQUESTS = new LFS_VACATION_REQUESTSDataTable();
            base.Tables.Add(this.tableLFS_VACATION_REQUESTS);
            this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS = new LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSDataTable();
            base.Tables.Add(this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_VACATION_NONWORKING_DAYS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_VACATION_DAYS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_VACATION_REQUESTS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            VacationsTDS ds = new VacationsTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void LFS_VACATION_NONWORKING_DAYSRowChangeEventHandler(object sender, LFS_VACATION_NONWORKING_DAYSRowChangeEvent e);
        
        public delegate void LFS_VACATION_DAYSRowChangeEventHandler(object sender, LFS_VACATION_DAYSRowChangeEvent e);
        
        public delegate void LFS_VACATION_REQUESTSRowChangeEventHandler(object sender, LFS_VACATION_REQUESTSRowChangeEvent e);
        
        public delegate void LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowChangeEventHandler(object sender, LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_VACATION_NONWORKING_DAYSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnNonWorkingDayID;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnCompanyLevelID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_NONWORKING_DAYSDataTable() {
                this.TableName = "LFS_VACATION_NONWORKING_DAYS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_VACATION_NONWORKING_DAYSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_VACATION_NONWORKING_DAYSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NonWorkingDayIDColumn {
                get {
                    return this.columnNonWorkingDayID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyLevelIDColumn {
                get {
                    return this.columnCompanyLevelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_NONWORKING_DAYSRow this[int index] {
                get {
                    return ((LFS_VACATION_NONWORKING_DAYSRow)(this.Rows[index]));
                }
            }
            
            public event LFS_VACATION_NONWORKING_DAYSRowChangeEventHandler LFS_VACATION_NONWORKING_DAYSRowChanging;
            
            public event LFS_VACATION_NONWORKING_DAYSRowChangeEventHandler LFS_VACATION_NONWORKING_DAYSRowChanged;
            
            public event LFS_VACATION_NONWORKING_DAYSRowChangeEventHandler LFS_VACATION_NONWORKING_DAYSRowDeleting;
            
            public event LFS_VACATION_NONWORKING_DAYSRowChangeEventHandler LFS_VACATION_NONWORKING_DAYSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_VACATION_NONWORKING_DAYSRow(LFS_VACATION_NONWORKING_DAYSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_NONWORKING_DAYSRow AddLFS_VACATION_NONWORKING_DAYSRow(System.DateTime Date, int CompanyLevelID, string Description, bool Deleted, int COMPANY_ID) {
                LFS_VACATION_NONWORKING_DAYSRow rowLFS_VACATION_NONWORKING_DAYSRow = ((LFS_VACATION_NONWORKING_DAYSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Date,
                        CompanyLevelID,
                        Description,
                        Deleted,
                        COMPANY_ID};
                rowLFS_VACATION_NONWORKING_DAYSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_VACATION_NONWORKING_DAYSRow);
                return rowLFS_VACATION_NONWORKING_DAYSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_NONWORKING_DAYSRow FindByNonWorkingDayID(int NonWorkingDayID) {
                return ((LFS_VACATION_NONWORKING_DAYSRow)(this.Rows.Find(new object[] {
                            NonWorkingDayID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_VACATION_NONWORKING_DAYSDataTable cln = ((LFS_VACATION_NONWORKING_DAYSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_VACATION_NONWORKING_DAYSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNonWorkingDayID = base.Columns["NonWorkingDayID"];
                this.columnDate = base.Columns["Date"];
                this.columnCompanyLevelID = base.Columns["CompanyLevelID"];
                this.columnDescription = base.Columns["Description"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNonWorkingDayID = new global::System.Data.DataColumn("NonWorkingDayID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonWorkingDayID);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnCompanyLevelID = new global::System.Data.DataColumn("CompanyLevelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyLevelID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNonWorkingDayID}, true));
                this.columnNonWorkingDayID.AutoIncrement = true;
                this.columnNonWorkingDayID.AutoIncrementSeed = -1;
                this.columnNonWorkingDayID.AutoIncrementStep = -1;
                this.columnNonWorkingDayID.AllowDBNull = false;
                this.columnNonWorkingDayID.ReadOnly = true;
                this.columnNonWorkingDayID.Unique = true;
                this.columnDate.AllowDBNull = false;
                this.columnCompanyLevelID.AllowDBNull = false;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 50;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_NONWORKING_DAYSRow NewLFS_VACATION_NONWORKING_DAYSRow() {
                return ((LFS_VACATION_NONWORKING_DAYSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_VACATION_NONWORKING_DAYSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_VACATION_NONWORKING_DAYSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_VACATION_NONWORKING_DAYSRowChanged != null)) {
                    this.LFS_VACATION_NONWORKING_DAYSRowChanged(this, new LFS_VACATION_NONWORKING_DAYSRowChangeEvent(((LFS_VACATION_NONWORKING_DAYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_VACATION_NONWORKING_DAYSRowChanging != null)) {
                    this.LFS_VACATION_NONWORKING_DAYSRowChanging(this, new LFS_VACATION_NONWORKING_DAYSRowChangeEvent(((LFS_VACATION_NONWORKING_DAYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_VACATION_NONWORKING_DAYSRowDeleted != null)) {
                    this.LFS_VACATION_NONWORKING_DAYSRowDeleted(this, new LFS_VACATION_NONWORKING_DAYSRowChangeEvent(((LFS_VACATION_NONWORKING_DAYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_VACATION_NONWORKING_DAYSRowDeleting != null)) {
                    this.LFS_VACATION_NONWORKING_DAYSRowDeleting(this, new LFS_VACATION_NONWORKING_DAYSRowChangeEvent(((LFS_VACATION_NONWORKING_DAYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_VACATION_NONWORKING_DAYSRow(LFS_VACATION_NONWORKING_DAYSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VacationsTDS ds = new VacationsTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_VACATION_NONWORKING_DAYSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_VACATION_DAYSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnVacationID;
            
            private global::System.Data.DataColumn columnRequestID;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnEndDate;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnPaymentType;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_DAYSDataTable() {
                this.TableName = "LFS_VACATION_DAYS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_VACATION_DAYSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_VACATION_DAYSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VacationIDColumn {
                get {
                    return this.columnVacationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestIDColumn {
                get {
                    return this.columnRequestID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentTypeColumn {
                get {
                    return this.columnPaymentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_DAYSRow this[int index] {
                get {
                    return ((LFS_VACATION_DAYSRow)(this.Rows[index]));
                }
            }
            
            public event LFS_VACATION_DAYSRowChangeEventHandler LFS_VACATION_DAYSRowChanging;
            
            public event LFS_VACATION_DAYSRowChangeEventHandler LFS_VACATION_DAYSRowChanged;
            
            public event LFS_VACATION_DAYSRowChangeEventHandler LFS_VACATION_DAYSRowDeleting;
            
            public event LFS_VACATION_DAYSRowChangeEventHandler LFS_VACATION_DAYSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_VACATION_DAYSRow(LFS_VACATION_DAYSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_DAYSRow AddLFS_VACATION_DAYSRow(int RequestID, System.DateTime StartDate, System.DateTime EndDate, string Description, string PaymentType, bool Deleted, int COMPANY_ID) {
                LFS_VACATION_DAYSRow rowLFS_VACATION_DAYSRow = ((LFS_VACATION_DAYSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RequestID,
                        StartDate,
                        EndDate,
                        Description,
                        PaymentType,
                        Deleted,
                        COMPANY_ID};
                rowLFS_VACATION_DAYSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_VACATION_DAYSRow);
                return rowLFS_VACATION_DAYSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_DAYSRow FindByVacationID(int VacationID) {
                return ((LFS_VACATION_DAYSRow)(this.Rows.Find(new object[] {
                            VacationID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_VACATION_DAYSDataTable cln = ((LFS_VACATION_DAYSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_VACATION_DAYSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVacationID = base.Columns["VacationID"];
                this.columnRequestID = base.Columns["RequestID"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnEndDate = base.Columns["EndDate"];
                this.columnDescription = base.Columns["Description"];
                this.columnPaymentType = base.Columns["PaymentType"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVacationID = new global::System.Data.DataColumn("VacationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacationID);
                this.columnRequestID = new global::System.Data.DataColumn("RequestID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestID);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnPaymentType = new global::System.Data.DataColumn("PaymentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentType);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVacationID}, true));
                this.columnVacationID.AutoIncrement = true;
                this.columnVacationID.AutoIncrementSeed = -1;
                this.columnVacationID.AutoIncrementStep = -1;
                this.columnVacationID.AllowDBNull = false;
                this.columnVacationID.ReadOnly = true;
                this.columnVacationID.Unique = true;
                this.columnRequestID.AllowDBNull = false;
                this.columnStartDate.AllowDBNull = false;
                this.columnEndDate.AllowDBNull = false;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 50;
                this.columnPaymentType.AllowDBNull = false;
                this.columnPaymentType.MaxLength = 50;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_DAYSRow NewLFS_VACATION_DAYSRow() {
                return ((LFS_VACATION_DAYSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_VACATION_DAYSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_VACATION_DAYSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_VACATION_DAYSRowChanged != null)) {
                    this.LFS_VACATION_DAYSRowChanged(this, new LFS_VACATION_DAYSRowChangeEvent(((LFS_VACATION_DAYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_VACATION_DAYSRowChanging != null)) {
                    this.LFS_VACATION_DAYSRowChanging(this, new LFS_VACATION_DAYSRowChangeEvent(((LFS_VACATION_DAYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_VACATION_DAYSRowDeleted != null)) {
                    this.LFS_VACATION_DAYSRowDeleted(this, new LFS_VACATION_DAYSRowChangeEvent(((LFS_VACATION_DAYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_VACATION_DAYSRowDeleting != null)) {
                    this.LFS_VACATION_DAYSRowDeleting(this, new LFS_VACATION_DAYSRowChangeEvent(((LFS_VACATION_DAYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_VACATION_DAYSRow(LFS_VACATION_DAYSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VacationsTDS ds = new VacationsTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_VACATION_DAYSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_VACATION_REQUESTSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRequestID;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnEndDate;
            
            private global::System.Data.DataColumn columnTotalPaidVacationDays;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnDetails;
            
            private global::System.Data.DataColumn columnRejectReason;
            
            private global::System.Data.DataColumn columnCancelReason;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_REQUESTSDataTable() {
                this.TableName = "LFS_VACATION_REQUESTS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_VACATION_REQUESTSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_VACATION_REQUESTSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestIDColumn {
                get {
                    return this.columnRequestID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPaidVacationDaysColumn {
                get {
                    return this.columnTotalPaidVacationDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailsColumn {
                get {
                    return this.columnDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RejectReasonColumn {
                get {
                    return this.columnRejectReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CancelReasonColumn {
                get {
                    return this.columnCancelReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_REQUESTSRow this[int index] {
                get {
                    return ((LFS_VACATION_REQUESTSRow)(this.Rows[index]));
                }
            }
            
            public event LFS_VACATION_REQUESTSRowChangeEventHandler LFS_VACATION_REQUESTSRowChanging;
            
            public event LFS_VACATION_REQUESTSRowChangeEventHandler LFS_VACATION_REQUESTSRowChanged;
            
            public event LFS_VACATION_REQUESTSRowChangeEventHandler LFS_VACATION_REQUESTSRowDeleting;
            
            public event LFS_VACATION_REQUESTSRowChangeEventHandler LFS_VACATION_REQUESTSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_VACATION_REQUESTSRow(LFS_VACATION_REQUESTSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_REQUESTSRow AddLFS_VACATION_REQUESTSRow(int EmployeeID, System.DateTime StartDate, System.DateTime EndDate, double TotalPaidVacationDays, string State, string Comments, string Details, string RejectReason, string CancelReason, bool Deleted, int COMPANY_ID) {
                LFS_VACATION_REQUESTSRow rowLFS_VACATION_REQUESTSRow = ((LFS_VACATION_REQUESTSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EmployeeID,
                        StartDate,
                        EndDate,
                        TotalPaidVacationDays,
                        State,
                        Comments,
                        Details,
                        RejectReason,
                        CancelReason,
                        Deleted,
                        COMPANY_ID};
                rowLFS_VACATION_REQUESTSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_VACATION_REQUESTSRow);
                return rowLFS_VACATION_REQUESTSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_REQUESTSRow FindByRequestID(int RequestID) {
                return ((LFS_VACATION_REQUESTSRow)(this.Rows.Find(new object[] {
                            RequestID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_VACATION_REQUESTSDataTable cln = ((LFS_VACATION_REQUESTSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_VACATION_REQUESTSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRequestID = base.Columns["RequestID"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnEndDate = base.Columns["EndDate"];
                this.columnTotalPaidVacationDays = base.Columns["TotalPaidVacationDays"];
                this.columnState = base.Columns["State"];
                this.columnComments = base.Columns["Comments"];
                this.columnDetails = base.Columns["Details"];
                this.columnRejectReason = base.Columns["RejectReason"];
                this.columnCancelReason = base.Columns["CancelReason"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRequestID = new global::System.Data.DataColumn("RequestID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestID);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnTotalPaidVacationDays = new global::System.Data.DataColumn("TotalPaidVacationDays", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPaidVacationDays);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnDetails = new global::System.Data.DataColumn("Details", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetails);
                this.columnRejectReason = new global::System.Data.DataColumn("RejectReason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRejectReason);
                this.columnCancelReason = new global::System.Data.DataColumn("CancelReason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancelReason);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRequestID}, true));
                this.columnRequestID.AutoIncrement = true;
                this.columnRequestID.AutoIncrementSeed = -1;
                this.columnRequestID.AutoIncrementStep = -1;
                this.columnRequestID.AllowDBNull = false;
                this.columnRequestID.ReadOnly = true;
                this.columnRequestID.Unique = true;
                this.columnEmployeeID.AllowDBNull = false;
                this.columnStartDate.AllowDBNull = false;
                this.columnEndDate.AllowDBNull = false;
                this.columnTotalPaidVacationDays.AllowDBNull = false;
                this.columnState.AllowDBNull = false;
                this.columnState.MaxLength = 25;
                this.columnComments.MaxLength = 2147483647;
                this.columnDetails.MaxLength = 2147483647;
                this.columnRejectReason.MaxLength = 2147483647;
                this.columnCancelReason.MaxLength = 2147483647;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_REQUESTSRow NewLFS_VACATION_REQUESTSRow() {
                return ((LFS_VACATION_REQUESTSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_VACATION_REQUESTSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_VACATION_REQUESTSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_VACATION_REQUESTSRowChanged != null)) {
                    this.LFS_VACATION_REQUESTSRowChanged(this, new LFS_VACATION_REQUESTSRowChangeEvent(((LFS_VACATION_REQUESTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_VACATION_REQUESTSRowChanging != null)) {
                    this.LFS_VACATION_REQUESTSRowChanging(this, new LFS_VACATION_REQUESTSRowChangeEvent(((LFS_VACATION_REQUESTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_VACATION_REQUESTSRowDeleted != null)) {
                    this.LFS_VACATION_REQUESTSRowDeleted(this, new LFS_VACATION_REQUESTSRowChangeEvent(((LFS_VACATION_REQUESTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_VACATION_REQUESTSRowDeleting != null)) {
                    this.LFS_VACATION_REQUESTSRowDeleting(this, new LFS_VACATION_REQUESTSRowChangeEvent(((LFS_VACATION_REQUESTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_VACATION_REQUESTSRow(LFS_VACATION_REQUESTSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VacationsTDS ds = new VacationsTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_VACATION_REQUESTSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnYear;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnVacationDays;
            
            private global::System.Data.DataColumn columnTotalTakenVacationDays;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnCarryOverDays;
            
            private global::System.Data.DataColumn columnTotalVacationDays;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSDataTable() {
                this.TableName = "LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearColumn {
                get {
                    return this.columnYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VacationDaysColumn {
                get {
                    return this.columnVacationDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalTakenVacationDaysColumn {
                get {
                    return this.columnTotalTakenVacationDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarryOverDaysColumn {
                get {
                    return this.columnCarryOverDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalVacationDaysColumn {
                get {
                    return this.columnTotalVacationDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow this[int index] {
                get {
                    return ((LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow)(this.Rows[index]));
                }
            }
            
            public event LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowChangeEventHandler LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowChanging;
            
            public event LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowChangeEventHandler LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowChanged;
            
            public event LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowChangeEventHandler LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowDeleting;
            
            public event LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowChangeEventHandler LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow(LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow AddLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow(int Year, int EmployeeID, double VacationDays, double TotalTakenVacationDays, bool Deleted, int COMPANY_ID, double CarryOverDays, double TotalVacationDays) {
                LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow rowLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow = ((LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Year,
                        EmployeeID,
                        VacationDays,
                        TotalTakenVacationDays,
                        Deleted,
                        COMPANY_ID,
                        CarryOverDays,
                        TotalVacationDays};
                rowLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow);
                return rowLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow FindByYearEmployeeID(int Year, int EmployeeID) {
                return ((LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow)(this.Rows.Find(new object[] {
                            Year,
                            EmployeeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSDataTable cln = ((LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnYear = base.Columns["Year"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnVacationDays = base.Columns["VacationDays"];
                this.columnTotalTakenVacationDays = base.Columns["TotalTakenVacationDays"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnCarryOverDays = base.Columns["CarryOverDays"];
                this.columnTotalVacationDays = base.Columns["TotalVacationDays"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnYear = new global::System.Data.DataColumn("Year", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnVacationDays = new global::System.Data.DataColumn("VacationDays", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacationDays);
                this.columnTotalTakenVacationDays = new global::System.Data.DataColumn("TotalTakenVacationDays", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTakenVacationDays);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnCarryOverDays = new global::System.Data.DataColumn("CarryOverDays", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarryOverDays);
                this.columnTotalVacationDays = new global::System.Data.DataColumn("TotalVacationDays", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalVacationDays);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnYear,
                                this.columnEmployeeID}, true));
                this.columnYear.AllowDBNull = false;
                this.columnEmployeeID.AllowDBNull = false;
                this.columnVacationDays.AllowDBNull = false;
                this.columnTotalTakenVacationDays.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnCarryOverDays.AllowDBNull = false;
                this.columnTotalVacationDays.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow NewLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow() {
                return ((LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowChanged != null)) {
                    this.LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowChanged(this, new LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowChangeEvent(((LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowChanging != null)) {
                    this.LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowChanging(this, new LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowChangeEvent(((LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowDeleted != null)) {
                    this.LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowDeleted(this, new LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowChangeEvent(((LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowDeleting != null)) {
                    this.LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowDeleting(this, new LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowChangeEvent(((LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow(LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VacationsTDS ds = new VacationsTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_VACATION_NONWORKING_DAYSRow : global::System.Data.DataRow {
            
            private LFS_VACATION_NONWORKING_DAYSDataTable tableLFS_VACATION_NONWORKING_DAYS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_VACATION_NONWORKING_DAYSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_VACATION_NONWORKING_DAYS = ((LFS_VACATION_NONWORKING_DAYSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NonWorkingDayID {
                get {
                    return ((int)(this[this.tableLFS_VACATION_NONWORKING_DAYS.NonWorkingDayIDColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_NONWORKING_DAYS.NonWorkingDayIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_VACATION_NONWORKING_DAYS.DateColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_NONWORKING_DAYS.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompanyLevelID {
                get {
                    return ((int)(this[this.tableLFS_VACATION_NONWORKING_DAYS.CompanyLevelIDColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_NONWORKING_DAYS.CompanyLevelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    return ((string)(this[this.tableLFS_VACATION_NONWORKING_DAYS.DescriptionColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_NONWORKING_DAYS.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_VACATION_NONWORKING_DAYS.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_NONWORKING_DAYS.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_VACATION_NONWORKING_DAYS.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_NONWORKING_DAYS.COMPANY_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_VACATION_DAYSRow : global::System.Data.DataRow {
            
            private LFS_VACATION_DAYSDataTable tableLFS_VACATION_DAYS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_VACATION_DAYSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_VACATION_DAYS = ((LFS_VACATION_DAYSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VacationID {
                get {
                    return ((int)(this[this.tableLFS_VACATION_DAYS.VacationIDColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_DAYS.VacationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RequestID {
                get {
                    return ((int)(this[this.tableLFS_VACATION_DAYS.RequestIDColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_DAYS.RequestIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_VACATION_DAYS.StartDateColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_DAYS.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndDate {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_VACATION_DAYS.EndDateColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_DAYS.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    return ((string)(this[this.tableLFS_VACATION_DAYS.DescriptionColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_DAYS.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaymentType {
                get {
                    return ((string)(this[this.tableLFS_VACATION_DAYS.PaymentTypeColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_DAYS.PaymentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_VACATION_DAYS.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_DAYS.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_VACATION_DAYS.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_DAYS.COMPANY_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_VACATION_REQUESTSRow : global::System.Data.DataRow {
            
            private LFS_VACATION_REQUESTSDataTable tableLFS_VACATION_REQUESTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_VACATION_REQUESTSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_VACATION_REQUESTS = ((LFS_VACATION_REQUESTSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RequestID {
                get {
                    return ((int)(this[this.tableLFS_VACATION_REQUESTS.RequestIDColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_REQUESTS.RequestIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableLFS_VACATION_REQUESTS.EmployeeIDColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_REQUESTS.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_VACATION_REQUESTS.StartDateColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_REQUESTS.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndDate {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_VACATION_REQUESTS.EndDateColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_REQUESTS.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TotalPaidVacationDays {
                get {
                    return ((double)(this[this.tableLFS_VACATION_REQUESTS.TotalPaidVacationDaysColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_REQUESTS.TotalPaidVacationDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    return ((string)(this[this.tableLFS_VACATION_REQUESTS.StateColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_REQUESTS.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_VACATION_REQUESTS.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_VACATION_REQUESTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_VACATION_REQUESTS.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Details {
                get {
                    try {
                        return ((string)(this[this.tableLFS_VACATION_REQUESTS.DetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Details\' in table \'LFS_VACATION_REQUESTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_VACATION_REQUESTS.DetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RejectReason {
                get {
                    try {
                        return ((string)(this[this.tableLFS_VACATION_REQUESTS.RejectReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RejectReason\' in table \'LFS_VACATION_REQUESTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_VACATION_REQUESTS.RejectReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CancelReason {
                get {
                    try {
                        return ((string)(this[this.tableLFS_VACATION_REQUESTS.CancelReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CancelReason\' in table \'LFS_VACATION_REQUESTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_VACATION_REQUESTS.CancelReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_VACATION_REQUESTS.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_REQUESTS.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_VACATION_REQUESTS.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_REQUESTS.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_VACATION_REQUESTS.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_VACATION_REQUESTS.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetailsNull() {
                return this.IsNull(this.tableLFS_VACATION_REQUESTS.DetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetailsNull() {
                this[this.tableLFS_VACATION_REQUESTS.DetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRejectReasonNull() {
                return this.IsNull(this.tableLFS_VACATION_REQUESTS.RejectReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRejectReasonNull() {
                this[this.tableLFS_VACATION_REQUESTS.RejectReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCancelReasonNull() {
                return this.IsNull(this.tableLFS_VACATION_REQUESTS.CancelReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCancelReasonNull() {
                this[this.tableLFS_VACATION_REQUESTS.CancelReasonColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow : global::System.Data.DataRow {
            
            private LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSDataTable tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS = ((LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Year {
                get {
                    return ((int)(this[this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS.YearColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS.YearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS.EmployeeIDColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VacationDays {
                get {
                    return ((double)(this[this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS.VacationDaysColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS.VacationDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TotalTakenVacationDays {
                get {
                    return ((double)(this[this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS.TotalTakenVacationDaysColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS.TotalTakenVacationDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CarryOverDays {
                get {
                    return ((double)(this[this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS.CarryOverDaysColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS.CarryOverDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TotalVacationDays {
                get {
                    return ((double)(this[this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS.TotalVacationDaysColumn]));
                }
                set {
                    this[this.tableLFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONS.TotalVacationDaysColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_VACATION_NONWORKING_DAYSRowChangeEvent : global::System.EventArgs {
            
            private LFS_VACATION_NONWORKING_DAYSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_NONWORKING_DAYSRowChangeEvent(LFS_VACATION_NONWORKING_DAYSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_NONWORKING_DAYSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_VACATION_DAYSRowChangeEvent : global::System.EventArgs {
            
            private LFS_VACATION_DAYSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_DAYSRowChangeEvent(LFS_VACATION_DAYSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_DAYSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_VACATION_REQUESTSRowChangeEvent : global::System.EventArgs {
            
            private LFS_VACATION_REQUESTSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_REQUESTSRowChangeEvent(LFS_VACATION_REQUESTSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_REQUESTSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowChangeEvent : global::System.EventArgs {
            
            private LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRowChangeEvent(LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_VACATION_EMPLOYEE_MAX_PAID_VACATIONSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591