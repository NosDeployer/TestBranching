//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3625
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.CWP.Works {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("WorkTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class WorkTDS : global::System.Data.DataSet {
        
        private LFS_WORK_FULLLENGTHLINING_M1DataTable tableLFS_WORK_FULLLENGTHLINING_M1;
        
        private LFS_WORK_FULLLENGTHLINING_P1DataTable tableLFS_WORK_FULLLENGTHLINING_P1;
        
        private LFS_WORK_REHABASSESSMENTDataTable tableLFS_WORK_REHABASSESSMENT;
        
        private LFS_WORKDataTable tableLFS_WORK;
        
        private LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONDataTable tableLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION;
        
        private LFS_WORK_FULLLENGTHLINING_M2DataTable tableLFS_WORK_FULLLENGTHLINING_M2;
        
        private LFS_WORK_POINT_REPAIRSDataTable tableLFS_WORK_POINT_REPAIRS;
        
        private LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZEDataTable tableLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE;
        
        private LFS_WORK_JUNCTIONLINING_FLANGEDataTable tableLFS_WORK_JUNCTIONLINING_FLANGE;
        
        private LFS_WORK_JUNCTIONLINING_FLANGE_GASKETDataTable tableLFS_WORK_JUNCTIONLINING_FLANGE_GASKET;
        
        private LFS_WORK_FULLLENGTHLININGDataTable tableLFS_WORK_FULLLENGTHLINING;
        
        private LFS_WORK_COMMENTDataTable tableLFS_WORK_COMMENT;
        
        private LFS_WORK_HISTORYDataTable tableLFS_WORK_HISTORY;
        
        private LFS_WORK_JUNCTIONLINING_SECTIONDataTable tableLFS_WORK_JUNCTIONLINING_SECTION;
        
        private LFS_WORK_FULLLENGTHLINING_RESINSDataTable tableLFS_WORK_FULLLENGTHLINING_RESINS;
        
        private LFS_WORK_FULLLENGTHLINING_CATALYSTSDataTable tableLFS_WORK_FULLLENGTHLINING_CATALYSTS;
        
        private LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSDataTable tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS;
        
        private LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD;
        
        private LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS;
        
        private LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable tableLFS_WORK_FULLLENGTHLINING_INVERSION;
        
        private LFS_WORK_FULLLENGTHLINING_WETOUTDataTable tableLFS_WORK_FULLLENGTHLINING_WETOUT;
        
        private LFS_WORK_MANHOLE_REHABILITATIONDataTable tableLFS_WORK_MANHOLE_REHABILITATION;
        
        private LFS_WORK_MANHOLE_REHABILITATION_BATCHDataTable tableLFS_WORK_MANHOLE_REHABILITATION_BATCH;
        
        private LFS_WORK_JUNCTIONLINING_LATERALDataTable tableLFS_WORK_JUNCTIONLINING_LATERAL;
        
        private LFS_WORK_POINT_REPAIRS_REPAIRDataTable tableLFS_WORK_POINT_REPAIRS_REPAIR;
        
        private LFS_WORK_FULLLENGTHLINING_M1_LATERALDataTable tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL;
        
        private global::System.Data.DataRelation relationFK_LFS_WORK_LFS_WORK_REHABASSESSMENT;
        
        private global::System.Data.DataRelation relationLFS_WORK_LFS_WORK_POINT_REPAIRS;
        
        private global::System.Data.DataRelation relationLFS_WORK_JUNCTIONLINING_FLANGE_LFS_WORK_JUNCTIONLINING_FLANGE_GASKET;
        
        private global::System.Data.DataRelation relationLFS_WORK_FULLLENGTHLINING_LFS_WORK_FULLLENGTHLINING_M2;
        
        private global::System.Data.DataRelation relationLFS_WORK_LFS_WORK_FULLLENGTHLINING;
        
        private global::System.Data.DataRelation relationLFS_WORK_LFS_WORK_HISTORY;
        
        private global::System.Data.DataRelation relationLFS_WORK_LFS_WORK_COMMENT;
        
        private global::System.Data.DataRelation relationLFS_WORK_FULLLENGTHLINING_CATALYSTS_LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS;
        
        private global::System.Data.DataRelation relationFK_LFS_WORK_MANHOLE_REHABILITATION_BATCH_LFS_WORK_MANHOLE_REHABILITATION2;
        
        private global::System.Data.DataRelation relationLFS_WORK_MANHOLE_REHABILITATION_LFS_WORK;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WorkTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected WorkTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_M1"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_M1DataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_M1"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_P1"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_P1DataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_P1"]));
                }
                if ((ds.Tables["LFS_WORK_REHABASSESSMENT"] != null)) {
                    base.Tables.Add(new LFS_WORK_REHABASSESSMENTDataTable(ds.Tables["LFS_WORK_REHABASSESSMENT"]));
                }
                if ((ds.Tables["LFS_WORK"] != null)) {
                    base.Tables.Add(new LFS_WORKDataTable(ds.Tables["LFS_WORK"]));
                }
                if ((ds.Tables["LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION"] != null)) {
                    base.Tables.Add(new LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONDataTable(ds.Tables["LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_M2"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_M2DataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_M2"]));
                }
                if ((ds.Tables["LFS_WORK_POINT_REPAIRS"] != null)) {
                    base.Tables.Add(new LFS_WORK_POINT_REPAIRSDataTable(ds.Tables["LFS_WORK_POINT_REPAIRS"]));
                }
                if ((ds.Tables["LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE"] != null)) {
                    base.Tables.Add(new LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZEDataTable(ds.Tables["LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE"]));
                }
                if ((ds.Tables["LFS_WORK_JUNCTIONLINING_FLANGE"] != null)) {
                    base.Tables.Add(new LFS_WORK_JUNCTIONLINING_FLANGEDataTable(ds.Tables["LFS_WORK_JUNCTIONLINING_FLANGE"]));
                }
                if ((ds.Tables["LFS_WORK_JUNCTIONLINING_FLANGE_GASKET"] != null)) {
                    base.Tables.Add(new LFS_WORK_JUNCTIONLINING_FLANGE_GASKETDataTable(ds.Tables["LFS_WORK_JUNCTIONLINING_FLANGE_GASKET"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLININGDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING"]));
                }
                if ((ds.Tables["LFS_WORK_COMMENT"] != null)) {
                    base.Tables.Add(new LFS_WORK_COMMENTDataTable(ds.Tables["LFS_WORK_COMMENT"]));
                }
                if ((ds.Tables["LFS_WORK_HISTORY"] != null)) {
                    base.Tables.Add(new LFS_WORK_HISTORYDataTable(ds.Tables["LFS_WORK_HISTORY"]));
                }
                if ((ds.Tables["LFS_WORK_JUNCTIONLINING_SECTION"] != null)) {
                    base.Tables.Add(new LFS_WORK_JUNCTIONLINING_SECTIONDataTable(ds.Tables["LFS_WORK_JUNCTIONLINING_SECTION"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_RESINS"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_RESINSDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_RESINS"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_CATALYSTS"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_CATALYSTSDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_CATALYSTS"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_WETOUTDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT"]));
                }
                if ((ds.Tables["LFS_WORK_MANHOLE_REHABILITATION"] != null)) {
                    base.Tables.Add(new LFS_WORK_MANHOLE_REHABILITATIONDataTable(ds.Tables["LFS_WORK_MANHOLE_REHABILITATION"]));
                }
                if ((ds.Tables["LFS_WORK_MANHOLE_REHABILITATION_BATCH"] != null)) {
                    base.Tables.Add(new LFS_WORK_MANHOLE_REHABILITATION_BATCHDataTable(ds.Tables["LFS_WORK_MANHOLE_REHABILITATION_BATCH"]));
                }
                if ((ds.Tables["LFS_WORK_JUNCTIONLINING_LATERAL"] != null)) {
                    base.Tables.Add(new LFS_WORK_JUNCTIONLINING_LATERALDataTable(ds.Tables["LFS_WORK_JUNCTIONLINING_LATERAL"]));
                }
                if ((ds.Tables["LFS_WORK_POINT_REPAIRS_REPAIR"] != null)) {
                    base.Tables.Add(new LFS_WORK_POINT_REPAIRS_REPAIRDataTable(ds.Tables["LFS_WORK_POINT_REPAIRS_REPAIR"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_M1_LATERAL"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_M1_LATERALDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_M1_LATERAL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_FULLLENGTHLINING_M1DataTable LFS_WORK_FULLLENGTHLINING_M1 {
            get {
                return this.tableLFS_WORK_FULLLENGTHLINING_M1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_FULLLENGTHLINING_P1DataTable LFS_WORK_FULLLENGTHLINING_P1 {
            get {
                return this.tableLFS_WORK_FULLLENGTHLINING_P1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_REHABASSESSMENTDataTable LFS_WORK_REHABASSESSMENT {
            get {
                return this.tableLFS_WORK_REHABASSESSMENT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORKDataTable LFS_WORK {
            get {
                return this.tableLFS_WORK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONDataTable LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION {
            get {
                return this.tableLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_FULLLENGTHLINING_M2DataTable LFS_WORK_FULLLENGTHLINING_M2 {
            get {
                return this.tableLFS_WORK_FULLLENGTHLINING_M2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_POINT_REPAIRSDataTable LFS_WORK_POINT_REPAIRS {
            get {
                return this.tableLFS_WORK_POINT_REPAIRS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZEDataTable LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE {
            get {
                return this.tableLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_JUNCTIONLINING_FLANGEDataTable LFS_WORK_JUNCTIONLINING_FLANGE {
            get {
                return this.tableLFS_WORK_JUNCTIONLINING_FLANGE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_JUNCTIONLINING_FLANGE_GASKETDataTable LFS_WORK_JUNCTIONLINING_FLANGE_GASKET {
            get {
                return this.tableLFS_WORK_JUNCTIONLINING_FLANGE_GASKET;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_FULLLENGTHLININGDataTable LFS_WORK_FULLLENGTHLINING {
            get {
                return this.tableLFS_WORK_FULLLENGTHLINING;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_COMMENTDataTable LFS_WORK_COMMENT {
            get {
                return this.tableLFS_WORK_COMMENT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_HISTORYDataTable LFS_WORK_HISTORY {
            get {
                return this.tableLFS_WORK_HISTORY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_JUNCTIONLINING_SECTIONDataTable LFS_WORK_JUNCTIONLINING_SECTION {
            get {
                return this.tableLFS_WORK_JUNCTIONLINING_SECTION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_FULLLENGTHLINING_RESINSDataTable LFS_WORK_FULLLENGTHLINING_RESINS {
            get {
                return this.tableLFS_WORK_FULLLENGTHLINING_RESINS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_FULLLENGTHLINING_CATALYSTSDataTable LFS_WORK_FULLLENGTHLINING_CATALYSTS {
            get {
                return this.tableLFS_WORK_FULLLENGTHLINING_CATALYSTS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSDataTable LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS {
            get {
                return this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD {
            get {
                return this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS {
            get {
                return this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable LFS_WORK_FULLLENGTHLINING_INVERSION {
            get {
                return this.tableLFS_WORK_FULLLENGTHLINING_INVERSION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_FULLLENGTHLINING_WETOUTDataTable LFS_WORK_FULLLENGTHLINING_WETOUT {
            get {
                return this.tableLFS_WORK_FULLLENGTHLINING_WETOUT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_MANHOLE_REHABILITATIONDataTable LFS_WORK_MANHOLE_REHABILITATION {
            get {
                return this.tableLFS_WORK_MANHOLE_REHABILITATION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_MANHOLE_REHABILITATION_BATCHDataTable LFS_WORK_MANHOLE_REHABILITATION_BATCH {
            get {
                return this.tableLFS_WORK_MANHOLE_REHABILITATION_BATCH;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_JUNCTIONLINING_LATERALDataTable LFS_WORK_JUNCTIONLINING_LATERAL {
            get {
                return this.tableLFS_WORK_JUNCTIONLINING_LATERAL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_POINT_REPAIRS_REPAIRDataTable LFS_WORK_POINT_REPAIRS_REPAIR {
            get {
                return this.tableLFS_WORK_POINT_REPAIRS_REPAIR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_FULLLENGTHLINING_M1_LATERALDataTable LFS_WORK_FULLLENGTHLINING_M1_LATERAL {
            get {
                return this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            WorkTDS cln = ((WorkTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_M1"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_M1DataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_M1"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_P1"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_P1DataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_P1"]));
                }
                if ((ds.Tables["LFS_WORK_REHABASSESSMENT"] != null)) {
                    base.Tables.Add(new LFS_WORK_REHABASSESSMENTDataTable(ds.Tables["LFS_WORK_REHABASSESSMENT"]));
                }
                if ((ds.Tables["LFS_WORK"] != null)) {
                    base.Tables.Add(new LFS_WORKDataTable(ds.Tables["LFS_WORK"]));
                }
                if ((ds.Tables["LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION"] != null)) {
                    base.Tables.Add(new LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONDataTable(ds.Tables["LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_M2"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_M2DataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_M2"]));
                }
                if ((ds.Tables["LFS_WORK_POINT_REPAIRS"] != null)) {
                    base.Tables.Add(new LFS_WORK_POINT_REPAIRSDataTable(ds.Tables["LFS_WORK_POINT_REPAIRS"]));
                }
                if ((ds.Tables["LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE"] != null)) {
                    base.Tables.Add(new LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZEDataTable(ds.Tables["LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE"]));
                }
                if ((ds.Tables["LFS_WORK_JUNCTIONLINING_FLANGE"] != null)) {
                    base.Tables.Add(new LFS_WORK_JUNCTIONLINING_FLANGEDataTable(ds.Tables["LFS_WORK_JUNCTIONLINING_FLANGE"]));
                }
                if ((ds.Tables["LFS_WORK_JUNCTIONLINING_FLANGE_GASKET"] != null)) {
                    base.Tables.Add(new LFS_WORK_JUNCTIONLINING_FLANGE_GASKETDataTable(ds.Tables["LFS_WORK_JUNCTIONLINING_FLANGE_GASKET"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLININGDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING"]));
                }
                if ((ds.Tables["LFS_WORK_COMMENT"] != null)) {
                    base.Tables.Add(new LFS_WORK_COMMENTDataTable(ds.Tables["LFS_WORK_COMMENT"]));
                }
                if ((ds.Tables["LFS_WORK_HISTORY"] != null)) {
                    base.Tables.Add(new LFS_WORK_HISTORYDataTable(ds.Tables["LFS_WORK_HISTORY"]));
                }
                if ((ds.Tables["LFS_WORK_JUNCTIONLINING_SECTION"] != null)) {
                    base.Tables.Add(new LFS_WORK_JUNCTIONLINING_SECTIONDataTable(ds.Tables["LFS_WORK_JUNCTIONLINING_SECTION"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_RESINS"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_RESINSDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_RESINS"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_CATALYSTS"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_CATALYSTSDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_CATALYSTS"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_WETOUTDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT"]));
                }
                if ((ds.Tables["LFS_WORK_MANHOLE_REHABILITATION"] != null)) {
                    base.Tables.Add(new LFS_WORK_MANHOLE_REHABILITATIONDataTable(ds.Tables["LFS_WORK_MANHOLE_REHABILITATION"]));
                }
                if ((ds.Tables["LFS_WORK_MANHOLE_REHABILITATION_BATCH"] != null)) {
                    base.Tables.Add(new LFS_WORK_MANHOLE_REHABILITATION_BATCHDataTable(ds.Tables["LFS_WORK_MANHOLE_REHABILITATION_BATCH"]));
                }
                if ((ds.Tables["LFS_WORK_JUNCTIONLINING_LATERAL"] != null)) {
                    base.Tables.Add(new LFS_WORK_JUNCTIONLINING_LATERALDataTable(ds.Tables["LFS_WORK_JUNCTIONLINING_LATERAL"]));
                }
                if ((ds.Tables["LFS_WORK_POINT_REPAIRS_REPAIR"] != null)) {
                    base.Tables.Add(new LFS_WORK_POINT_REPAIRS_REPAIRDataTable(ds.Tables["LFS_WORK_POINT_REPAIRS_REPAIR"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_M1_LATERAL"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_M1_LATERALDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_M1_LATERAL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableLFS_WORK_FULLLENGTHLINING_M1 = ((LFS_WORK_FULLLENGTHLINING_M1DataTable)(base.Tables["LFS_WORK_FULLLENGTHLINING_M1"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_FULLLENGTHLINING_M1 != null)) {
                    this.tableLFS_WORK_FULLLENGTHLINING_M1.InitVars();
                }
            }
            this.tableLFS_WORK_FULLLENGTHLINING_P1 = ((LFS_WORK_FULLLENGTHLINING_P1DataTable)(base.Tables["LFS_WORK_FULLLENGTHLINING_P1"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_FULLLENGTHLINING_P1 != null)) {
                    this.tableLFS_WORK_FULLLENGTHLINING_P1.InitVars();
                }
            }
            this.tableLFS_WORK_REHABASSESSMENT = ((LFS_WORK_REHABASSESSMENTDataTable)(base.Tables["LFS_WORK_REHABASSESSMENT"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_REHABASSESSMENT != null)) {
                    this.tableLFS_WORK_REHABASSESSMENT.InitVars();
                }
            }
            this.tableLFS_WORK = ((LFS_WORKDataTable)(base.Tables["LFS_WORK"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK != null)) {
                    this.tableLFS_WORK.InitVars();
                }
            }
            this.tableLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION = ((LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONDataTable)(base.Tables["LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION != null)) {
                    this.tableLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION.InitVars();
                }
            }
            this.tableLFS_WORK_FULLLENGTHLINING_M2 = ((LFS_WORK_FULLLENGTHLINING_M2DataTable)(base.Tables["LFS_WORK_FULLLENGTHLINING_M2"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_FULLLENGTHLINING_M2 != null)) {
                    this.tableLFS_WORK_FULLLENGTHLINING_M2.InitVars();
                }
            }
            this.tableLFS_WORK_POINT_REPAIRS = ((LFS_WORK_POINT_REPAIRSDataTable)(base.Tables["LFS_WORK_POINT_REPAIRS"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_POINT_REPAIRS != null)) {
                    this.tableLFS_WORK_POINT_REPAIRS.InitVars();
                }
            }
            this.tableLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE = ((LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZEDataTable)(base.Tables["LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE != null)) {
                    this.tableLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE.InitVars();
                }
            }
            this.tableLFS_WORK_JUNCTIONLINING_FLANGE = ((LFS_WORK_JUNCTIONLINING_FLANGEDataTable)(base.Tables["LFS_WORK_JUNCTIONLINING_FLANGE"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_JUNCTIONLINING_FLANGE != null)) {
                    this.tableLFS_WORK_JUNCTIONLINING_FLANGE.InitVars();
                }
            }
            this.tableLFS_WORK_JUNCTIONLINING_FLANGE_GASKET = ((LFS_WORK_JUNCTIONLINING_FLANGE_GASKETDataTable)(base.Tables["LFS_WORK_JUNCTIONLINING_FLANGE_GASKET"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_JUNCTIONLINING_FLANGE_GASKET != null)) {
                    this.tableLFS_WORK_JUNCTIONLINING_FLANGE_GASKET.InitVars();
                }
            }
            this.tableLFS_WORK_FULLLENGTHLINING = ((LFS_WORK_FULLLENGTHLININGDataTable)(base.Tables["LFS_WORK_FULLLENGTHLINING"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_FULLLENGTHLINING != null)) {
                    this.tableLFS_WORK_FULLLENGTHLINING.InitVars();
                }
            }
            this.tableLFS_WORK_COMMENT = ((LFS_WORK_COMMENTDataTable)(base.Tables["LFS_WORK_COMMENT"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_COMMENT != null)) {
                    this.tableLFS_WORK_COMMENT.InitVars();
                }
            }
            this.tableLFS_WORK_HISTORY = ((LFS_WORK_HISTORYDataTable)(base.Tables["LFS_WORK_HISTORY"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_HISTORY != null)) {
                    this.tableLFS_WORK_HISTORY.InitVars();
                }
            }
            this.tableLFS_WORK_JUNCTIONLINING_SECTION = ((LFS_WORK_JUNCTIONLINING_SECTIONDataTable)(base.Tables["LFS_WORK_JUNCTIONLINING_SECTION"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_JUNCTIONLINING_SECTION != null)) {
                    this.tableLFS_WORK_JUNCTIONLINING_SECTION.InitVars();
                }
            }
            this.tableLFS_WORK_FULLLENGTHLINING_RESINS = ((LFS_WORK_FULLLENGTHLINING_RESINSDataTable)(base.Tables["LFS_WORK_FULLLENGTHLINING_RESINS"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_FULLLENGTHLINING_RESINS != null)) {
                    this.tableLFS_WORK_FULLLENGTHLINING_RESINS.InitVars();
                }
            }
            this.tableLFS_WORK_FULLLENGTHLINING_CATALYSTS = ((LFS_WORK_FULLLENGTHLINING_CATALYSTSDataTable)(base.Tables["LFS_WORK_FULLLENGTHLINING_CATALYSTS"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_FULLLENGTHLINING_CATALYSTS != null)) {
                    this.tableLFS_WORK_FULLLENGTHLINING_CATALYSTS.InitVars();
                }
            }
            this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS = ((LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSDataTable)(base.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS != null)) {
                    this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.InitVars();
                }
            }
            this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD = ((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable)(base.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD != null)) {
                    this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.InitVars();
                }
            }
            this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS = ((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable)(base.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS != null)) {
                    this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.InitVars();
                }
            }
            this.tableLFS_WORK_FULLLENGTHLINING_INVERSION = ((LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable)(base.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_FULLLENGTHLINING_INVERSION != null)) {
                    this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.InitVars();
                }
            }
            this.tableLFS_WORK_FULLLENGTHLINING_WETOUT = ((LFS_WORK_FULLLENGTHLINING_WETOUTDataTable)(base.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_FULLLENGTHLINING_WETOUT != null)) {
                    this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.InitVars();
                }
            }
            this.tableLFS_WORK_MANHOLE_REHABILITATION = ((LFS_WORK_MANHOLE_REHABILITATIONDataTable)(base.Tables["LFS_WORK_MANHOLE_REHABILITATION"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_MANHOLE_REHABILITATION != null)) {
                    this.tableLFS_WORK_MANHOLE_REHABILITATION.InitVars();
                }
            }
            this.tableLFS_WORK_MANHOLE_REHABILITATION_BATCH = ((LFS_WORK_MANHOLE_REHABILITATION_BATCHDataTable)(base.Tables["LFS_WORK_MANHOLE_REHABILITATION_BATCH"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_MANHOLE_REHABILITATION_BATCH != null)) {
                    this.tableLFS_WORK_MANHOLE_REHABILITATION_BATCH.InitVars();
                }
            }
            this.tableLFS_WORK_JUNCTIONLINING_LATERAL = ((LFS_WORK_JUNCTIONLINING_LATERALDataTable)(base.Tables["LFS_WORK_JUNCTIONLINING_LATERAL"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_JUNCTIONLINING_LATERAL != null)) {
                    this.tableLFS_WORK_JUNCTIONLINING_LATERAL.InitVars();
                }
            }
            this.tableLFS_WORK_POINT_REPAIRS_REPAIR = ((LFS_WORK_POINT_REPAIRS_REPAIRDataTable)(base.Tables["LFS_WORK_POINT_REPAIRS_REPAIR"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_POINT_REPAIRS_REPAIR != null)) {
                    this.tableLFS_WORK_POINT_REPAIRS_REPAIR.InitVars();
                }
            }
            this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL = ((LFS_WORK_FULLLENGTHLINING_M1_LATERALDataTable)(base.Tables["LFS_WORK_FULLLENGTHLINING_M1_LATERAL"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL != null)) {
                    this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.InitVars();
                }
            }
            this.relationFK_LFS_WORK_LFS_WORK_REHABASSESSMENT = this.Relations["FK_LFS_WORK_LFS_WORK_REHABASSESSMENT"];
            this.relationLFS_WORK_LFS_WORK_POINT_REPAIRS = this.Relations["LFS_WORK_LFS_WORK_POINT_REPAIRS"];
            this.relationLFS_WORK_JUNCTIONLINING_FLANGE_LFS_WORK_JUNCTIONLINING_FLANGE_GASKET = this.Relations["LFS_WORK_JUNCTIONLINING_FLANGE_LFS_WORK_JUNCTIONLINING_FLANGE_GASKET"];
            this.relationLFS_WORK_FULLLENGTHLINING_LFS_WORK_FULLLENGTHLINING_M2 = this.Relations["LFS_WORK_FULLLENGTHLINING_LFS_WORK_FULLLENGTHLINING_M2"];
            this.relationLFS_WORK_LFS_WORK_FULLLENGTHLINING = this.Relations["LFS_WORK_LFS_WORK_FULLLENGTHLINING"];
            this.relationLFS_WORK_LFS_WORK_HISTORY = this.Relations["LFS_WORK_LFS_WORK_HISTORY"];
            this.relationLFS_WORK_LFS_WORK_COMMENT = this.Relations["LFS_WORK_LFS_WORK_COMMENT"];
            this.relationLFS_WORK_FULLLENGTHLINING_CATALYSTS_LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS = this.Relations["LFS_WORK_FULLLENGTHLINING_CATALYSTS_LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS"];
            this.relationFK_LFS_WORK_MANHOLE_REHABILITATION_BATCH_LFS_WORK_MANHOLE_REHABILITATION2 = this.Relations["FK_LFS_WORK_MANHOLE_REHABILITATION_BATCH_LFS_WORK_MANHOLE_REHABILITATION2"];
            this.relationLFS_WORK_MANHOLE_REHABILITATION_LFS_WORK = this.Relations["LFS_WORK_MANHOLE_REHABILITATION_LFS_WORK"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "WorkTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/WorkTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLFS_WORK_FULLLENGTHLINING_M1 = new LFS_WORK_FULLLENGTHLINING_M1DataTable();
            base.Tables.Add(this.tableLFS_WORK_FULLLENGTHLINING_M1);
            this.tableLFS_WORK_FULLLENGTHLINING_P1 = new LFS_WORK_FULLLENGTHLINING_P1DataTable();
            base.Tables.Add(this.tableLFS_WORK_FULLLENGTHLINING_P1);
            this.tableLFS_WORK_REHABASSESSMENT = new LFS_WORK_REHABASSESSMENTDataTable();
            base.Tables.Add(this.tableLFS_WORK_REHABASSESSMENT);
            this.tableLFS_WORK = new LFS_WORKDataTable();
            base.Tables.Add(this.tableLFS_WORK);
            this.tableLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION = new LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONDataTable();
            base.Tables.Add(this.tableLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION);
            this.tableLFS_WORK_FULLLENGTHLINING_M2 = new LFS_WORK_FULLLENGTHLINING_M2DataTable();
            base.Tables.Add(this.tableLFS_WORK_FULLLENGTHLINING_M2);
            this.tableLFS_WORK_POINT_REPAIRS = new LFS_WORK_POINT_REPAIRSDataTable();
            base.Tables.Add(this.tableLFS_WORK_POINT_REPAIRS);
            this.tableLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE = new LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZEDataTable();
            base.Tables.Add(this.tableLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE);
            this.tableLFS_WORK_JUNCTIONLINING_FLANGE = new LFS_WORK_JUNCTIONLINING_FLANGEDataTable();
            base.Tables.Add(this.tableLFS_WORK_JUNCTIONLINING_FLANGE);
            this.tableLFS_WORK_JUNCTIONLINING_FLANGE_GASKET = new LFS_WORK_JUNCTIONLINING_FLANGE_GASKETDataTable();
            base.Tables.Add(this.tableLFS_WORK_JUNCTIONLINING_FLANGE_GASKET);
            this.tableLFS_WORK_FULLLENGTHLINING = new LFS_WORK_FULLLENGTHLININGDataTable();
            base.Tables.Add(this.tableLFS_WORK_FULLLENGTHLINING);
            this.tableLFS_WORK_COMMENT = new LFS_WORK_COMMENTDataTable();
            base.Tables.Add(this.tableLFS_WORK_COMMENT);
            this.tableLFS_WORK_HISTORY = new LFS_WORK_HISTORYDataTable();
            base.Tables.Add(this.tableLFS_WORK_HISTORY);
            this.tableLFS_WORK_JUNCTIONLINING_SECTION = new LFS_WORK_JUNCTIONLINING_SECTIONDataTable();
            base.Tables.Add(this.tableLFS_WORK_JUNCTIONLINING_SECTION);
            this.tableLFS_WORK_FULLLENGTHLINING_RESINS = new LFS_WORK_FULLLENGTHLINING_RESINSDataTable();
            base.Tables.Add(this.tableLFS_WORK_FULLLENGTHLINING_RESINS);
            this.tableLFS_WORK_FULLLENGTHLINING_CATALYSTS = new LFS_WORK_FULLLENGTHLINING_CATALYSTSDataTable();
            base.Tables.Add(this.tableLFS_WORK_FULLLENGTHLINING_CATALYSTS);
            this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS = new LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSDataTable();
            base.Tables.Add(this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS);
            this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD = new LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable();
            base.Tables.Add(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD);
            this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS = new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable();
            base.Tables.Add(this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS);
            this.tableLFS_WORK_FULLLENGTHLINING_INVERSION = new LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable();
            base.Tables.Add(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION);
            this.tableLFS_WORK_FULLLENGTHLINING_WETOUT = new LFS_WORK_FULLLENGTHLINING_WETOUTDataTable();
            base.Tables.Add(this.tableLFS_WORK_FULLLENGTHLINING_WETOUT);
            this.tableLFS_WORK_MANHOLE_REHABILITATION = new LFS_WORK_MANHOLE_REHABILITATIONDataTable();
            base.Tables.Add(this.tableLFS_WORK_MANHOLE_REHABILITATION);
            this.tableLFS_WORK_MANHOLE_REHABILITATION_BATCH = new LFS_WORK_MANHOLE_REHABILITATION_BATCHDataTable();
            base.Tables.Add(this.tableLFS_WORK_MANHOLE_REHABILITATION_BATCH);
            this.tableLFS_WORK_JUNCTIONLINING_LATERAL = new LFS_WORK_JUNCTIONLINING_LATERALDataTable();
            base.Tables.Add(this.tableLFS_WORK_JUNCTIONLINING_LATERAL);
            this.tableLFS_WORK_POINT_REPAIRS_REPAIR = new LFS_WORK_POINT_REPAIRS_REPAIRDataTable();
            base.Tables.Add(this.tableLFS_WORK_POINT_REPAIRS_REPAIR);
            this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL = new LFS_WORK_FULLLENGTHLINING_M1_LATERALDataTable();
            base.Tables.Add(this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL);
            this.relationFK_LFS_WORK_LFS_WORK_REHABASSESSMENT = new global::System.Data.DataRelation("FK_LFS_WORK_LFS_WORK_REHABASSESSMENT", new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK.WorkIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK_REHABASSESSMENT.WorkIDColumn}, false);
            this.Relations.Add(this.relationFK_LFS_WORK_LFS_WORK_REHABASSESSMENT);
            this.relationLFS_WORK_LFS_WORK_POINT_REPAIRS = new global::System.Data.DataRelation("LFS_WORK_LFS_WORK_POINT_REPAIRS", new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK.WorkIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK_POINT_REPAIRS.WorkIDColumn}, false);
            this.Relations.Add(this.relationLFS_WORK_LFS_WORK_POINT_REPAIRS);
            this.relationLFS_WORK_JUNCTIONLINING_FLANGE_LFS_WORK_JUNCTIONLINING_FLANGE_GASKET = new global::System.Data.DataRelation("LFS_WORK_JUNCTIONLINING_FLANGE_LFS_WORK_JUNCTIONLINING_FLANGE_GASKET", new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK_JUNCTIONLINING_FLANGE.FlangeColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK_JUNCTIONLINING_FLANGE_GASKET.FlangeColumn}, false);
            this.Relations.Add(this.relationLFS_WORK_JUNCTIONLINING_FLANGE_LFS_WORK_JUNCTIONLINING_FLANGE_GASKET);
            this.relationLFS_WORK_FULLLENGTHLINING_LFS_WORK_FULLLENGTHLINING_M2 = new global::System.Data.DataRelation("LFS_WORK_FULLLENGTHLINING_LFS_WORK_FULLLENGTHLINING_M2", new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK_FULLLENGTHLINING.WorkIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK_FULLLENGTHLINING_M2.WorkIDColumn}, false);
            this.Relations.Add(this.relationLFS_WORK_FULLLENGTHLINING_LFS_WORK_FULLLENGTHLINING_M2);
            this.relationLFS_WORK_LFS_WORK_FULLLENGTHLINING = new global::System.Data.DataRelation("LFS_WORK_LFS_WORK_FULLLENGTHLINING", new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK.WorkIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK_FULLLENGTHLINING.WorkIDColumn}, false);
            this.Relations.Add(this.relationLFS_WORK_LFS_WORK_FULLLENGTHLINING);
            this.relationLFS_WORK_LFS_WORK_HISTORY = new global::System.Data.DataRelation("LFS_WORK_LFS_WORK_HISTORY", new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK.WorkIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK_HISTORY.WorkIDColumn}, false);
            this.Relations.Add(this.relationLFS_WORK_LFS_WORK_HISTORY);
            this.relationLFS_WORK_LFS_WORK_COMMENT = new global::System.Data.DataRelation("LFS_WORK_LFS_WORK_COMMENT", new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK.WorkIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK_COMMENT.WorkIDColumn}, false);
            this.Relations.Add(this.relationLFS_WORK_LFS_WORK_COMMENT);
            this.relationLFS_WORK_FULLLENGTHLINING_CATALYSTS_LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS = new global::System.Data.DataRelation("LFS_WORK_FULLLENGTHLINING_CATALYSTS_LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS", new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK_FULLLENGTHLINING_CATALYSTS.CatalystIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.CatalystIDColumn}, false);
            this.Relations.Add(this.relationLFS_WORK_FULLLENGTHLINING_CATALYSTS_LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS);
            this.relationFK_LFS_WORK_MANHOLE_REHABILITATION_BATCH_LFS_WORK_MANHOLE_REHABILITATION2 = new global::System.Data.DataRelation("FK_LFS_WORK_MANHOLE_REHABILITATION_BATCH_LFS_WORK_MANHOLE_REHABILITATION2", new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK_MANHOLE_REHABILITATION_BATCH.BatchIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK_MANHOLE_REHABILITATION.BatchIDColumn}, false);
            this.Relations.Add(this.relationFK_LFS_WORK_MANHOLE_REHABILITATION_BATCH_LFS_WORK_MANHOLE_REHABILITATION2);
            this.relationLFS_WORK_MANHOLE_REHABILITATION_LFS_WORK = new global::System.Data.DataRelation("LFS_WORK_MANHOLE_REHABILITATION_LFS_WORK", new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK_MANHOLE_REHABILITATION.WorkIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_WORK.WorkIDColumn}, false);
            this.Relations.Add(this.relationLFS_WORK_MANHOLE_REHABILITATION_LFS_WORK);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_FULLLENGTHLINING_M1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_FULLLENGTHLINING_P1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_REHABASSESSMENT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_FULLLENGTHLINING_M2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_POINT_REPAIRS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_JUNCTIONLINING_FLANGE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_JUNCTIONLINING_FLANGE_GASKET() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_FULLLENGTHLINING() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_COMMENT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_HISTORY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_JUNCTIONLINING_SECTION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_FULLLENGTHLINING_RESINS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_FULLLENGTHLINING_CATALYSTS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_FULLLENGTHLINING_INVERSION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_FULLLENGTHLINING_WETOUT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_MANHOLE_REHABILITATION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_MANHOLE_REHABILITATION_BATCH() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_JUNCTIONLINING_LATERAL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_POINT_REPAIRS_REPAIR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_FULLLENGTHLINING_M1_LATERAL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            WorkTDS ds = new WorkTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void LFS_WORK_FULLLENGTHLINING_M1RowChangeEventHandler(object sender, LFS_WORK_FULLLENGTHLINING_M1RowChangeEvent e);
        
        public delegate void LFS_WORK_FULLLENGTHLINING_P1RowChangeEventHandler(object sender, LFS_WORK_FULLLENGTHLINING_P1RowChangeEvent e);
        
        public delegate void LFS_WORK_REHABASSESSMENTRowChangeEventHandler(object sender, LFS_WORK_REHABASSESSMENTRowChangeEvent e);
        
        public delegate void LFS_WORKRowChangeEventHandler(object sender, LFS_WORKRowChangeEvent e);
        
        public delegate void LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowChangeEventHandler(object sender, LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowChangeEvent e);
        
        public delegate void LFS_WORK_FULLLENGTHLINING_M2RowChangeEventHandler(object sender, LFS_WORK_FULLLENGTHLINING_M2RowChangeEvent e);
        
        public delegate void LFS_WORK_POINT_REPAIRSRowChangeEventHandler(object sender, LFS_WORK_POINT_REPAIRSRowChangeEvent e);
        
        public delegate void LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowChangeEventHandler(object sender, LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowChangeEvent e);
        
        public delegate void LFS_WORK_JUNCTIONLINING_FLANGERowChangeEventHandler(object sender, LFS_WORK_JUNCTIONLINING_FLANGERowChangeEvent e);
        
        public delegate void LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowChangeEventHandler(object sender, LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowChangeEvent e);
        
        public delegate void LFS_WORK_FULLLENGTHLININGRowChangeEventHandler(object sender, LFS_WORK_FULLLENGTHLININGRowChangeEvent e);
        
        public delegate void LFS_WORK_COMMENTRowChangeEventHandler(object sender, LFS_WORK_COMMENTRowChangeEvent e);
        
        public delegate void LFS_WORK_HISTORYRowChangeEventHandler(object sender, LFS_WORK_HISTORYRowChangeEvent e);
        
        public delegate void LFS_WORK_JUNCTIONLINING_SECTIONRowChangeEventHandler(object sender, LFS_WORK_JUNCTIONLINING_SECTIONRowChangeEvent e);
        
        public delegate void LFS_WORK_FULLLENGTHLINING_RESINSRowChangeEventHandler(object sender, LFS_WORK_FULLLENGTHLINING_RESINSRowChangeEvent e);
        
        public delegate void LFS_WORK_FULLLENGTHLINING_CATALYSTSRowChangeEventHandler(object sender, LFS_WORK_FULLLENGTHLINING_CATALYSTSRowChangeEvent e);
        
        public delegate void LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowChangeEventHandler(object sender, LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowChangeEvent e);
        
        public delegate void LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEventHandler(object sender, LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEvent e);
        
        public delegate void LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEventHandler(object sender, LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEvent e);
        
        public delegate void LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEventHandler(object sender, LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEvent e);
        
        public delegate void LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEventHandler(object sender, LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEvent e);
        
        public delegate void LFS_WORK_MANHOLE_REHABILITATIONRowChangeEventHandler(object sender, LFS_WORK_MANHOLE_REHABILITATIONRowChangeEvent e);
        
        public delegate void LFS_WORK_MANHOLE_REHABILITATION_BATCHRowChangeEventHandler(object sender, LFS_WORK_MANHOLE_REHABILITATION_BATCHRowChangeEvent e);
        
        public delegate void LFS_WORK_JUNCTIONLINING_LATERALRowChangeEventHandler(object sender, LFS_WORK_JUNCTIONLINING_LATERALRowChangeEvent e);
        
        public delegate void LFS_WORK_POINT_REPAIRS_REPAIRRowChangeEventHandler(object sender, LFS_WORK_POINT_REPAIRS_REPAIRRowChangeEvent e);
        
        public delegate void LFS_WORK_FULLLENGTHLINING_M1_LATERALRowChangeEventHandler(object sender, LFS_WORK_FULLLENGTHLINING_M1_LATERALRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_FULLLENGTHLINING_M1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnMeasurementTakenBy;
            
            private global::System.Data.DataColumn columnTrafficControl;
            
            private global::System.Data.DataColumn columnSiteDetails;
            
            private global::System.Data.DataColumn columnPipeSizeChange;
            
            private global::System.Data.DataColumn columnStandardBypass;
            
            private global::System.Data.DataColumn columnStandardBypassComments;
            
            private global::System.Data.DataColumn columnTrafficControlDetails;
            
            private global::System.Data.DataColumn columnMeasurementType;
            
            private global::System.Data.DataColumn columnMeasurementFromMH;
            
            private global::System.Data.DataColumn columnVideoDoneFromMH;
            
            private global::System.Data.DataColumn columnVideoDoneToMH;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnAccessType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M1DataTable() {
                this.TableName = "LFS_WORK_FULLLENGTHLINING_M1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_M1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_FULLLENGTHLINING_M1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementTakenByColumn {
                get {
                    return this.columnMeasurementTakenBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrafficControlColumn {
                get {
                    return this.columnTrafficControl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteDetailsColumn {
                get {
                    return this.columnSiteDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PipeSizeChangeColumn {
                get {
                    return this.columnPipeSizeChange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardBypassColumn {
                get {
                    return this.columnStandardBypass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardBypassCommentsColumn {
                get {
                    return this.columnStandardBypassComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrafficControlDetailsColumn {
                get {
                    return this.columnTrafficControlDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementTypeColumn {
                get {
                    return this.columnMeasurementType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementFromMHColumn {
                get {
                    return this.columnMeasurementFromMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoDoneFromMHColumn {
                get {
                    return this.columnVideoDoneFromMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoDoneToMHColumn {
                get {
                    return this.columnVideoDoneToMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccessTypeColumn {
                get {
                    return this.columnAccessType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M1Row this[int index] {
                get {
                    return ((LFS_WORK_FULLLENGTHLINING_M1Row)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_FULLLENGTHLINING_M1RowChangeEventHandler LFS_WORK_FULLLENGTHLINING_M1RowChanging;
            
            public event LFS_WORK_FULLLENGTHLINING_M1RowChangeEventHandler LFS_WORK_FULLLENGTHLINING_M1RowChanged;
            
            public event LFS_WORK_FULLLENGTHLINING_M1RowChangeEventHandler LFS_WORK_FULLLENGTHLINING_M1RowDeleting;
            
            public event LFS_WORK_FULLLENGTHLINING_M1RowChangeEventHandler LFS_WORK_FULLLENGTHLINING_M1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_FULLLENGTHLINING_M1Row(LFS_WORK_FULLLENGTHLINING_M1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M1Row AddLFS_WORK_FULLLENGTHLINING_M1Row(int WorkID, string MeasurementTakenBy, string TrafficControl, string SiteDetails, bool PipeSizeChange, bool StandardBypass, string StandardBypassComments, string TrafficControlDetails, string MeasurementType, string MeasurementFromMH, string VideoDoneFromMH, string VideoDoneToMH, bool Deleted, int COMPANY_ID, string AccessType) {
                LFS_WORK_FULLLENGTHLINING_M1Row rowLFS_WORK_FULLLENGTHLINING_M1Row = ((LFS_WORK_FULLLENGTHLINING_M1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        MeasurementTakenBy,
                        TrafficControl,
                        SiteDetails,
                        PipeSizeChange,
                        StandardBypass,
                        StandardBypassComments,
                        TrafficControlDetails,
                        MeasurementType,
                        MeasurementFromMH,
                        VideoDoneFromMH,
                        VideoDoneToMH,
                        Deleted,
                        COMPANY_ID,
                        AccessType};
                rowLFS_WORK_FULLLENGTHLINING_M1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_FULLLENGTHLINING_M1Row);
                return rowLFS_WORK_FULLLENGTHLINING_M1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M1Row FindByWorkID(int WorkID) {
                return ((LFS_WORK_FULLLENGTHLINING_M1Row)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_FULLLENGTHLINING_M1DataTable cln = ((LFS_WORK_FULLLENGTHLINING_M1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_FULLLENGTHLINING_M1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnMeasurementTakenBy = base.Columns["MeasurementTakenBy"];
                this.columnTrafficControl = base.Columns["TrafficControl"];
                this.columnSiteDetails = base.Columns["SiteDetails"];
                this.columnPipeSizeChange = base.Columns["PipeSizeChange"];
                this.columnStandardBypass = base.Columns["StandardBypass"];
                this.columnStandardBypassComments = base.Columns["StandardBypassComments"];
                this.columnTrafficControlDetails = base.Columns["TrafficControlDetails"];
                this.columnMeasurementType = base.Columns["MeasurementType"];
                this.columnMeasurementFromMH = base.Columns["MeasurementFromMH"];
                this.columnVideoDoneFromMH = base.Columns["VideoDoneFromMH"];
                this.columnVideoDoneToMH = base.Columns["VideoDoneToMH"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnAccessType = base.Columns["AccessType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnMeasurementTakenBy = new global::System.Data.DataColumn("MeasurementTakenBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementTakenBy);
                this.columnTrafficControl = new global::System.Data.DataColumn("TrafficControl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrafficControl);
                this.columnSiteDetails = new global::System.Data.DataColumn("SiteDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteDetails);
                this.columnPipeSizeChange = new global::System.Data.DataColumn("PipeSizeChange", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeSizeChange);
                this.columnStandardBypass = new global::System.Data.DataColumn("StandardBypass", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardBypass);
                this.columnStandardBypassComments = new global::System.Data.DataColumn("StandardBypassComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardBypassComments);
                this.columnTrafficControlDetails = new global::System.Data.DataColumn("TrafficControlDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrafficControlDetails);
                this.columnMeasurementType = new global::System.Data.DataColumn("MeasurementType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementType);
                this.columnMeasurementFromMH = new global::System.Data.DataColumn("MeasurementFromMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementFromMH);
                this.columnVideoDoneFromMH = new global::System.Data.DataColumn("VideoDoneFromMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoDoneFromMH);
                this.columnVideoDoneToMH = new global::System.Data.DataColumn("VideoDoneToMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoDoneToMH);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnAccessType = new global::System.Data.DataColumn("AccessType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccessType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.Unique = true;
                this.columnMeasurementTakenBy.MaxLength = 255;
                this.columnTrafficControl.MaxLength = 100;
                this.columnSiteDetails.MaxLength = 100;
                this.columnPipeSizeChange.AllowDBNull = false;
                this.columnStandardBypass.AllowDBNull = false;
                this.columnStandardBypassComments.MaxLength = 1073741823;
                this.columnTrafficControlDetails.MaxLength = 1073741823;
                this.columnMeasurementType.MaxLength = 100;
                this.columnMeasurementFromMH.MaxLength = 25;
                this.columnVideoDoneFromMH.MaxLength = 25;
                this.columnVideoDoneToMH.MaxLength = 25;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnAccessType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M1Row NewLFS_WORK_FULLLENGTHLINING_M1Row() {
                return ((LFS_WORK_FULLLENGTHLINING_M1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_FULLLENGTHLINING_M1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_FULLLENGTHLINING_M1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_M1RowChanged != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_M1RowChanged(this, new LFS_WORK_FULLLENGTHLINING_M1RowChangeEvent(((LFS_WORK_FULLLENGTHLINING_M1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_M1RowChanging != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_M1RowChanging(this, new LFS_WORK_FULLLENGTHLINING_M1RowChangeEvent(((LFS_WORK_FULLLENGTHLINING_M1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_M1RowDeleted != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_M1RowDeleted(this, new LFS_WORK_FULLLENGTHLINING_M1RowChangeEvent(((LFS_WORK_FULLLENGTHLINING_M1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_M1RowDeleting != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_M1RowDeleting(this, new LFS_WORK_FULLLENGTHLINING_M1RowChangeEvent(((LFS_WORK_FULLLENGTHLINING_M1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_FULLLENGTHLINING_M1Row(LFS_WORK_FULLLENGTHLINING_M1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_FULLLENGTHLINING_M1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_FULLLENGTHLINING_P1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnCXIsRemoved;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnRoboticPrepCompleted;
            
            private global::System.Data.DataColumn columnRoboticPrepCompletedDate;
            
            private global::System.Data.DataColumn columnP1Completed;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_P1DataTable() {
                this.TableName = "LFS_WORK_FULLLENGTHLINING_P1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_P1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_FULLLENGTHLINING_P1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CXIsRemovedColumn {
                get {
                    return this.columnCXIsRemoved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoboticPrepCompletedColumn {
                get {
                    return this.columnRoboticPrepCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoboticPrepCompletedDateColumn {
                get {
                    return this.columnRoboticPrepCompletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P1CompletedColumn {
                get {
                    return this.columnP1Completed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_P1Row this[int index] {
                get {
                    return ((LFS_WORK_FULLLENGTHLINING_P1Row)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_FULLLENGTHLINING_P1RowChangeEventHandler LFS_WORK_FULLLENGTHLINING_P1RowChanging;
            
            public event LFS_WORK_FULLLENGTHLINING_P1RowChangeEventHandler LFS_WORK_FULLLENGTHLINING_P1RowChanged;
            
            public event LFS_WORK_FULLLENGTHLINING_P1RowChangeEventHandler LFS_WORK_FULLLENGTHLINING_P1RowDeleting;
            
            public event LFS_WORK_FULLLENGTHLINING_P1RowChangeEventHandler LFS_WORK_FULLLENGTHLINING_P1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_FULLLENGTHLINING_P1Row(LFS_WORK_FULLLENGTHLINING_P1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_P1Row AddLFS_WORK_FULLLENGTHLINING_P1Row(int WorkID, int CXIsRemoved, bool Deleted, int COMPANY_ID, bool RoboticPrepCompleted, System.DateTime RoboticPrepCompletedDate, bool P1Completed) {
                LFS_WORK_FULLLENGTHLINING_P1Row rowLFS_WORK_FULLLENGTHLINING_P1Row = ((LFS_WORK_FULLLENGTHLINING_P1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        CXIsRemoved,
                        Deleted,
                        COMPANY_ID,
                        RoboticPrepCompleted,
                        RoboticPrepCompletedDate,
                        P1Completed};
                rowLFS_WORK_FULLLENGTHLINING_P1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_FULLLENGTHLINING_P1Row);
                return rowLFS_WORK_FULLLENGTHLINING_P1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_P1Row FindByWorkID(int WorkID) {
                return ((LFS_WORK_FULLLENGTHLINING_P1Row)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_FULLLENGTHLINING_P1DataTable cln = ((LFS_WORK_FULLLENGTHLINING_P1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_FULLLENGTHLINING_P1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnCXIsRemoved = base.Columns["CXIsRemoved"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnRoboticPrepCompleted = base.Columns["RoboticPrepCompleted"];
                this.columnRoboticPrepCompletedDate = base.Columns["RoboticPrepCompletedDate"];
                this.columnP1Completed = base.Columns["P1Completed"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnCXIsRemoved = new global::System.Data.DataColumn("CXIsRemoved", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXIsRemoved);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnRoboticPrepCompleted = new global::System.Data.DataColumn("RoboticPrepCompleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticPrepCompleted);
                this.columnRoboticPrepCompletedDate = new global::System.Data.DataColumn("RoboticPrepCompletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticPrepCompletedDate);
                this.columnP1Completed = new global::System.Data.DataColumn("P1Completed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP1Completed);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.Unique = true;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnRoboticPrepCompleted.AllowDBNull = false;
                this.columnP1Completed.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_P1Row NewLFS_WORK_FULLLENGTHLINING_P1Row() {
                return ((LFS_WORK_FULLLENGTHLINING_P1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_FULLLENGTHLINING_P1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_FULLLENGTHLINING_P1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_P1RowChanged != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_P1RowChanged(this, new LFS_WORK_FULLLENGTHLINING_P1RowChangeEvent(((LFS_WORK_FULLLENGTHLINING_P1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_P1RowChanging != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_P1RowChanging(this, new LFS_WORK_FULLLENGTHLINING_P1RowChangeEvent(((LFS_WORK_FULLLENGTHLINING_P1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_P1RowDeleted != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_P1RowDeleted(this, new LFS_WORK_FULLLENGTHLINING_P1RowChangeEvent(((LFS_WORK_FULLLENGTHLINING_P1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_P1RowDeleting != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_P1RowDeleting(this, new LFS_WORK_FULLLENGTHLINING_P1RowChangeEvent(((LFS_WORK_FULLLENGTHLINING_P1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_FULLLENGTHLINING_P1Row(LFS_WORK_FULLLENGTHLINING_P1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_FULLLENGTHLINING_P1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_REHABASSESSMENTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnPreFlushDate;
            
            private global::System.Data.DataColumn columnPreVideoDate;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_REHABASSESSMENTDataTable() {
                this.TableName = "LFS_WORK_REHABASSESSMENT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_REHABASSESSMENTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_REHABASSESSMENTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreFlushDateColumn {
                get {
                    return this.columnPreFlushDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreVideoDateColumn {
                get {
                    return this.columnPreVideoDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_REHABASSESSMENTRow this[int index] {
                get {
                    return ((LFS_WORK_REHABASSESSMENTRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_REHABASSESSMENTRowChangeEventHandler LFS_WORK_REHABASSESSMENTRowChanging;
            
            public event LFS_WORK_REHABASSESSMENTRowChangeEventHandler LFS_WORK_REHABASSESSMENTRowChanged;
            
            public event LFS_WORK_REHABASSESSMENTRowChangeEventHandler LFS_WORK_REHABASSESSMENTRowDeleting;
            
            public event LFS_WORK_REHABASSESSMENTRowChangeEventHandler LFS_WORK_REHABASSESSMENTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_REHABASSESSMENTRow(LFS_WORK_REHABASSESSMENTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_REHABASSESSMENTRow AddLFS_WORK_REHABASSESSMENTRow(LFS_WORKRow parentLFS_WORKRowByFK_LFS_WORK_LFS_WORK_REHABASSESSMENT, System.DateTime PreFlushDate, System.DateTime PreVideoDate, bool Deleted, int COMPANY_ID) {
                LFS_WORK_REHABASSESSMENTRow rowLFS_WORK_REHABASSESSMENTRow = ((LFS_WORK_REHABASSESSMENTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PreFlushDate,
                        PreVideoDate,
                        Deleted,
                        COMPANY_ID};
                if ((parentLFS_WORKRowByFK_LFS_WORK_LFS_WORK_REHABASSESSMENT != null)) {
                    columnValuesArray[0] = parentLFS_WORKRowByFK_LFS_WORK_LFS_WORK_REHABASSESSMENT[0];
                }
                rowLFS_WORK_REHABASSESSMENTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_REHABASSESSMENTRow);
                return rowLFS_WORK_REHABASSESSMENTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_REHABASSESSMENTRow FindByWorkID(int WorkID) {
                return ((LFS_WORK_REHABASSESSMENTRow)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_REHABASSESSMENTDataTable cln = ((LFS_WORK_REHABASSESSMENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_REHABASSESSMENTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnPreFlushDate = base.Columns["PreFlushDate"];
                this.columnPreVideoDate = base.Columns["PreVideoDate"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnPreFlushDate = new global::System.Data.DataColumn("PreFlushDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreFlushDate);
                this.columnPreVideoDate = new global::System.Data.DataColumn("PreVideoDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreVideoDate);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.Unique = true;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_REHABASSESSMENTRow NewLFS_WORK_REHABASSESSMENTRow() {
                return ((LFS_WORK_REHABASSESSMENTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_REHABASSESSMENTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_REHABASSESSMENTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_REHABASSESSMENTRowChanged != null)) {
                    this.LFS_WORK_REHABASSESSMENTRowChanged(this, new LFS_WORK_REHABASSESSMENTRowChangeEvent(((LFS_WORK_REHABASSESSMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_REHABASSESSMENTRowChanging != null)) {
                    this.LFS_WORK_REHABASSESSMENTRowChanging(this, new LFS_WORK_REHABASSESSMENTRowChangeEvent(((LFS_WORK_REHABASSESSMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_REHABASSESSMENTRowDeleted != null)) {
                    this.LFS_WORK_REHABASSESSMENTRowDeleted(this, new LFS_WORK_REHABASSESSMENTRowChangeEvent(((LFS_WORK_REHABASSESSMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_REHABASSESSMENTRowDeleting != null)) {
                    this.LFS_WORK_REHABASSESSMENTRowDeleting(this, new LFS_WORK_REHABASSESSMENTRowChangeEvent(((LFS_WORK_REHABASSESSMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_REHABASSESSMENTRow(LFS_WORK_REHABASSESSMENTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_REHABASSESSMENTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORKDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnAssetID;
            
            private global::System.Data.DataColumn columnWorkType;
            
            private global::System.Data.DataColumn columnLIBRARY_CATEGORIES_ID;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnHistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORKDataTable() {
                this.TableName = "LFS_WORK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetIDColumn {
                get {
                    return this.columnAssetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkTypeColumn {
                get {
                    return this.columnWorkType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIBRARY_CATEGORIES_IDColumn {
                get {
                    return this.columnLIBRARY_CATEGORIES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryColumn {
                get {
                    return this.columnHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORKRow this[int index] {
                get {
                    return ((LFS_WORKRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORKRowChangeEventHandler LFS_WORKRowChanging;
            
            public event LFS_WORKRowChangeEventHandler LFS_WORKRowChanged;
            
            public event LFS_WORKRowChangeEventHandler LFS_WORKRowDeleting;
            
            public event LFS_WORKRowChangeEventHandler LFS_WORKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORKRow(LFS_WORKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORKRow AddLFS_WORKRow(int ProjectID, int AssetID, string WorkType, int LIBRARY_CATEGORIES_ID, bool Deleted, int COMPANY_ID, string Comments, string History) {
                LFS_WORKRow rowLFS_WORKRow = ((LFS_WORKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ProjectID,
                        AssetID,
                        WorkType,
                        LIBRARY_CATEGORIES_ID,
                        Deleted,
                        COMPANY_ID,
                        Comments,
                        History};
                rowLFS_WORKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORKRow);
                return rowLFS_WORKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORKRow FindByWorkID(int WorkID) {
                return ((LFS_WORKRow)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORKDataTable cln = ((LFS_WORKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnAssetID = base.Columns["AssetID"];
                this.columnWorkType = base.Columns["WorkType"];
                this.columnLIBRARY_CATEGORIES_ID = base.Columns["LIBRARY_CATEGORIES_ID"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnComments = base.Columns["Comments"];
                this.columnHistory = base.Columns["History"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnAssetID = new global::System.Data.DataColumn("AssetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetID);
                this.columnWorkType = new global::System.Data.DataColumn("WorkType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkType);
                this.columnLIBRARY_CATEGORIES_ID = new global::System.Data.DataColumn("LIBRARY_CATEGORIES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIBRARY_CATEGORIES_ID);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnHistory = new global::System.Data.DataColumn("History", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistory);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AutoIncrement = true;
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.ReadOnly = true;
                this.columnWorkID.Unique = true;
                this.columnProjectID.AllowDBNull = false;
                this.columnAssetID.AllowDBNull = false;
                this.columnWorkType.AllowDBNull = false;
                this.columnWorkType.MaxLength = 50;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORKRow NewLFS_WORKRow() {
                return ((LFS_WORKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORKRowChanged != null)) {
                    this.LFS_WORKRowChanged(this, new LFS_WORKRowChangeEvent(((LFS_WORKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORKRowChanging != null)) {
                    this.LFS_WORKRowChanging(this, new LFS_WORKRowChangeEvent(((LFS_WORKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORKRowDeleted != null)) {
                    this.LFS_WORKRowDeleted(this, new LFS_WORKRowChangeEvent(((LFS_WORKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORKRowDeleting != null)) {
                    this.LFS_WORKRowDeleting(this, new LFS_WORKRowChangeEvent(((LFS_WORKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORKRow(LFS_WORKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnAbbreviation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONDataTable() {
                this.TableName = "LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbbreviationColumn {
                get {
                    return this.columnAbbreviation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow this[int index] {
                get {
                    return ((LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowChangeEventHandler LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowChanging;
            
            public event LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowChangeEventHandler LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowChanged;
            
            public event LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowChangeEventHandler LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowDeleting;
            
            public event LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowChangeEventHandler LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow(LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow AddLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow(string Name, int COMPANY_ID, string Abbreviation) {
                LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow rowLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow = ((LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name,
                        COMPANY_ID,
                        Abbreviation};
                rowLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow);
                return rowLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow FindByNameCOMPANY_ID(string Name, int COMPANY_ID) {
                return ((LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow)(this.Rows.Find(new object[] {
                            Name,
                            COMPANY_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONDataTable cln = ((LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnAbbreviation = base.Columns["Abbreviation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnAbbreviation = new global::System.Data.DataColumn("Abbreviation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbbreviation);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnName,
                                this.columnCOMPANY_ID}, true));
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 50;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnAbbreviation.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow NewLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow() {
                return ((LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowChanged != null)) {
                    this.LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowChanged(this, new LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowChangeEvent(((LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowChanging != null)) {
                    this.LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowChanging(this, new LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowChangeEvent(((LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowDeleted != null)) {
                    this.LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowDeleted(this, new LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowChangeEvent(((LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowDeleting != null)) {
                    this.LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowDeleting(this, new LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowChangeEvent(((LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow(LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_FULLLENGTHLINING_M2DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnVideoLength;
            
            private global::System.Data.DataColumn columnMeasurementTakenBy;
            
            private global::System.Data.DataColumn columnDropPipe;
            
            private global::System.Data.DataColumn columnDropPipeInvertDepth;
            
            private global::System.Data.DataColumn columnCappedLaterals;
            
            private global::System.Data.DataColumn columnLineWithID;
            
            private global::System.Data.DataColumn columnHydrantAddress;
            
            private global::System.Data.DataColumn columnHydroWireWithin10FtOfInversionMH;
            
            private global::System.Data.DataColumn columnDistanceToInversionMH;
            
            private global::System.Data.DataColumn columnSurfaceGrade;
            
            private global::System.Data.DataColumn columnHydroPulley;
            
            private global::System.Data.DataColumn columnFridgeCart;
            
            private global::System.Data.DataColumn columnTwoPump;
            
            private global::System.Data.DataColumn columnSixBypass;
            
            private global::System.Data.DataColumn columnScaffolding;
            
            private global::System.Data.DataColumn columnWinchExtention;
            
            private global::System.Data.DataColumn columnExtraGenerator;
            
            private global::System.Data.DataColumn columnGreyCableExtension;
            
            private global::System.Data.DataColumn columnEasementMats;
            
            private global::System.Data.DataColumn columnRampRequired;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnCameraSkid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M2DataTable() {
                this.TableName = "LFS_WORK_FULLLENGTHLINING_M2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_M2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_FULLLENGTHLINING_M2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoLengthColumn {
                get {
                    return this.columnVideoLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementTakenByColumn {
                get {
                    return this.columnMeasurementTakenBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DropPipeColumn {
                get {
                    return this.columnDropPipe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DropPipeInvertDepthColumn {
                get {
                    return this.columnDropPipeInvertDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CappedLateralsColumn {
                get {
                    return this.columnCappedLaterals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineWithIDColumn {
                get {
                    return this.columnLineWithID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HydrantAddressColumn {
                get {
                    return this.columnHydrantAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HydroWireWithin10FtOfInversionMHColumn {
                get {
                    return this.columnHydroWireWithin10FtOfInversionMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceToInversionMHColumn {
                get {
                    return this.columnDistanceToInversionMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SurfaceGradeColumn {
                get {
                    return this.columnSurfaceGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HydroPulleyColumn {
                get {
                    return this.columnHydroPulley;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FridgeCartColumn {
                get {
                    return this.columnFridgeCart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TwoPumpColumn {
                get {
                    return this.columnTwoPump;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SixBypassColumn {
                get {
                    return this.columnSixBypass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScaffoldingColumn {
                get {
                    return this.columnScaffolding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WinchExtentionColumn {
                get {
                    return this.columnWinchExtention;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraGeneratorColumn {
                get {
                    return this.columnExtraGenerator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GreyCableExtensionColumn {
                get {
                    return this.columnGreyCableExtension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EasementMatsColumn {
                get {
                    return this.columnEasementMats;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RampRequiredColumn {
                get {
                    return this.columnRampRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CameraSkidColumn {
                get {
                    return this.columnCameraSkid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M2Row this[int index] {
                get {
                    return ((LFS_WORK_FULLLENGTHLINING_M2Row)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_FULLLENGTHLINING_M2RowChangeEventHandler LFS_WORK_FULLLENGTHLINING_M2RowChanging;
            
            public event LFS_WORK_FULLLENGTHLINING_M2RowChangeEventHandler LFS_WORK_FULLLENGTHLINING_M2RowChanged;
            
            public event LFS_WORK_FULLLENGTHLINING_M2RowChangeEventHandler LFS_WORK_FULLLENGTHLINING_M2RowDeleting;
            
            public event LFS_WORK_FULLLENGTHLINING_M2RowChangeEventHandler LFS_WORK_FULLLENGTHLINING_M2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_FULLLENGTHLINING_M2Row(LFS_WORK_FULLLENGTHLINING_M2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M2Row AddLFS_WORK_FULLLENGTHLINING_M2Row(
                        LFS_WORK_FULLLENGTHLININGRow parentLFS_WORK_FULLLENGTHLININGRowByLFS_WORK_FULLLENGTHLINING_LFS_WORK_FULLLENGTHLINING_M2, 
                        string VideoLength, 
                        string MeasurementTakenBy, 
                        bool DropPipe, 
                        string DropPipeInvertDepth, 
                        int CappedLaterals, 
                        string LineWithID, 
                        string HydrantAddress, 
                        string HydroWireWithin10FtOfInversionMH, 
                        string DistanceToInversionMH, 
                        string SurfaceGrade, 
                        bool HydroPulley, 
                        bool FridgeCart, 
                        bool TwoPump, 
                        bool SixBypass, 
                        bool Scaffolding, 
                        bool WinchExtention, 
                        bool ExtraGenerator, 
                        bool GreyCableExtension, 
                        bool EasementMats, 
                        bool RampRequired, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        bool CameraSkid) {
                LFS_WORK_FULLLENGTHLINING_M2Row rowLFS_WORK_FULLLENGTHLINING_M2Row = ((LFS_WORK_FULLLENGTHLINING_M2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        VideoLength,
                        MeasurementTakenBy,
                        DropPipe,
                        DropPipeInvertDepth,
                        CappedLaterals,
                        LineWithID,
                        HydrantAddress,
                        HydroWireWithin10FtOfInversionMH,
                        DistanceToInversionMH,
                        SurfaceGrade,
                        HydroPulley,
                        FridgeCart,
                        TwoPump,
                        SixBypass,
                        Scaffolding,
                        WinchExtention,
                        ExtraGenerator,
                        GreyCableExtension,
                        EasementMats,
                        RampRequired,
                        Deleted,
                        COMPANY_ID,
                        CameraSkid};
                if ((parentLFS_WORK_FULLLENGTHLININGRowByLFS_WORK_FULLLENGTHLINING_LFS_WORK_FULLLENGTHLINING_M2 != null)) {
                    columnValuesArray[0] = parentLFS_WORK_FULLLENGTHLININGRowByLFS_WORK_FULLLENGTHLINING_LFS_WORK_FULLLENGTHLINING_M2[0];
                }
                rowLFS_WORK_FULLLENGTHLINING_M2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_FULLLENGTHLINING_M2Row);
                return rowLFS_WORK_FULLLENGTHLINING_M2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M2Row FindByWorkID(int WorkID) {
                return ((LFS_WORK_FULLLENGTHLINING_M2Row)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_FULLLENGTHLINING_M2DataTable cln = ((LFS_WORK_FULLLENGTHLINING_M2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_FULLLENGTHLINING_M2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnVideoLength = base.Columns["VideoLength"];
                this.columnMeasurementTakenBy = base.Columns["MeasurementTakenBy"];
                this.columnDropPipe = base.Columns["DropPipe"];
                this.columnDropPipeInvertDepth = base.Columns["DropPipeInvertDepth"];
                this.columnCappedLaterals = base.Columns["CappedLaterals"];
                this.columnLineWithID = base.Columns["LineWithID"];
                this.columnHydrantAddress = base.Columns["HydrantAddress"];
                this.columnHydroWireWithin10FtOfInversionMH = base.Columns["HydroWireWithin10FtOfInversionMH"];
                this.columnDistanceToInversionMH = base.Columns["DistanceToInversionMH"];
                this.columnSurfaceGrade = base.Columns["SurfaceGrade"];
                this.columnHydroPulley = base.Columns["HydroPulley"];
                this.columnFridgeCart = base.Columns["FridgeCart"];
                this.columnTwoPump = base.Columns["TwoPump"];
                this.columnSixBypass = base.Columns["SixBypass"];
                this.columnScaffolding = base.Columns["Scaffolding"];
                this.columnWinchExtention = base.Columns["WinchExtention"];
                this.columnExtraGenerator = base.Columns["ExtraGenerator"];
                this.columnGreyCableExtension = base.Columns["GreyCableExtension"];
                this.columnEasementMats = base.Columns["EasementMats"];
                this.columnRampRequired = base.Columns["RampRequired"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnCameraSkid = base.Columns["CameraSkid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnVideoLength = new global::System.Data.DataColumn("VideoLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoLength);
                this.columnMeasurementTakenBy = new global::System.Data.DataColumn("MeasurementTakenBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementTakenBy);
                this.columnDropPipe = new global::System.Data.DataColumn("DropPipe", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropPipe);
                this.columnDropPipeInvertDepth = new global::System.Data.DataColumn("DropPipeInvertDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropPipeInvertDepth);
                this.columnCappedLaterals = new global::System.Data.DataColumn("CappedLaterals", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCappedLaterals);
                this.columnLineWithID = new global::System.Data.DataColumn("LineWithID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineWithID);
                this.columnHydrantAddress = new global::System.Data.DataColumn("HydrantAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydrantAddress);
                this.columnHydroWireWithin10FtOfInversionMH = new global::System.Data.DataColumn("HydroWireWithin10FtOfInversionMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydroWireWithin10FtOfInversionMH);
                this.columnDistanceToInversionMH = new global::System.Data.DataColumn("DistanceToInversionMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceToInversionMH);
                this.columnSurfaceGrade = new global::System.Data.DataColumn("SurfaceGrade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurfaceGrade);
                this.columnHydroPulley = new global::System.Data.DataColumn("HydroPulley", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydroPulley);
                this.columnFridgeCart = new global::System.Data.DataColumn("FridgeCart", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFridgeCart);
                this.columnTwoPump = new global::System.Data.DataColumn("TwoPump", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTwoPump);
                this.columnSixBypass = new global::System.Data.DataColumn("SixBypass", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSixBypass);
                this.columnScaffolding = new global::System.Data.DataColumn("Scaffolding", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffolding);
                this.columnWinchExtention = new global::System.Data.DataColumn("WinchExtention", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWinchExtention);
                this.columnExtraGenerator = new global::System.Data.DataColumn("ExtraGenerator", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraGenerator);
                this.columnGreyCableExtension = new global::System.Data.DataColumn("GreyCableExtension", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGreyCableExtension);
                this.columnEasementMats = new global::System.Data.DataColumn("EasementMats", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEasementMats);
                this.columnRampRequired = new global::System.Data.DataColumn("RampRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRampRequired);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnCameraSkid = new global::System.Data.DataColumn("CameraSkid", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCameraSkid);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.Unique = true;
                this.columnVideoLength.MaxLength = 25;
                this.columnMeasurementTakenBy.MaxLength = 255;
                this.columnDropPipe.AllowDBNull = false;
                this.columnDropPipeInvertDepth.MaxLength = 25;
                this.columnLineWithID.MaxLength = 50;
                this.columnHydrantAddress.MaxLength = 100;
                this.columnHydroWireWithin10FtOfInversionMH.MaxLength = 10;
                this.columnDistanceToInversionMH.MaxLength = 25;
                this.columnSurfaceGrade.MaxLength = 100;
                this.columnHydroPulley.AllowDBNull = false;
                this.columnFridgeCart.AllowDBNull = false;
                this.columnTwoPump.AllowDBNull = false;
                this.columnSixBypass.AllowDBNull = false;
                this.columnScaffolding.AllowDBNull = false;
                this.columnWinchExtention.AllowDBNull = false;
                this.columnExtraGenerator.AllowDBNull = false;
                this.columnGreyCableExtension.AllowDBNull = false;
                this.columnEasementMats.AllowDBNull = false;
                this.columnRampRequired.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnCameraSkid.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M2Row NewLFS_WORK_FULLLENGTHLINING_M2Row() {
                return ((LFS_WORK_FULLLENGTHLINING_M2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_FULLLENGTHLINING_M2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_FULLLENGTHLINING_M2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_M2RowChanged != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_M2RowChanged(this, new LFS_WORK_FULLLENGTHLINING_M2RowChangeEvent(((LFS_WORK_FULLLENGTHLINING_M2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_M2RowChanging != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_M2RowChanging(this, new LFS_WORK_FULLLENGTHLINING_M2RowChangeEvent(((LFS_WORK_FULLLENGTHLINING_M2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_M2RowDeleted != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_M2RowDeleted(this, new LFS_WORK_FULLLENGTHLINING_M2RowChangeEvent(((LFS_WORK_FULLLENGTHLINING_M2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_M2RowDeleting != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_M2RowDeleting(this, new LFS_WORK_FULLLENGTHLINING_M2RowChangeEvent(((LFS_WORK_FULLLENGTHLINING_M2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_FULLLENGTHLINING_M2Row(LFS_WORK_FULLLENGTHLINING_M2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_FULLLENGTHLINING_M2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_POINT_REPAIRSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnClientID;
            
            private global::System.Data.DataColumn columnMeasurementTakenBy;
            
            private global::System.Data.DataColumn columnRepairConfirmationDate;
            
            private global::System.Data.DataColumn columnBypassRequired;
            
            private global::System.Data.DataColumn columnRoboticDistances;
            
            private global::System.Data.DataColumn columnProposedLiningDate;
            
            private global::System.Data.DataColumn columnDeadlineLiningDate;
            
            private global::System.Data.DataColumn columnFinalVideoDate;
            
            private global::System.Data.DataColumn columnEstimatedJoints;
            
            private global::System.Data.DataColumn columnJointsTestSealed;
            
            private global::System.Data.DataColumn columnIssueIdentified;
            
            private global::System.Data.DataColumn columnIssueLFS;
            
            private global::System.Data.DataColumn columnIssueClient;
            
            private global::System.Data.DataColumn columnIssueSales;
            
            private global::System.Data.DataColumn columnIssueGivenToClient;
            
            private global::System.Data.DataColumn columnIssueResolved;
            
            private global::System.Data.DataColumn columnIssueInvestigation;
            
            private global::System.Data.DataColumn columnRepairID;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRSDataTable() {
                this.TableName = "LFS_WORK_POINT_REPAIRS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_POINT_REPAIRSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_POINT_REPAIRSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementTakenByColumn {
                get {
                    return this.columnMeasurementTakenBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RepairConfirmationDateColumn {
                get {
                    return this.columnRepairConfirmationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BypassRequiredColumn {
                get {
                    return this.columnBypassRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoboticDistancesColumn {
                get {
                    return this.columnRoboticDistances;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProposedLiningDateColumn {
                get {
                    return this.columnProposedLiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeadlineLiningDateColumn {
                get {
                    return this.columnDeadlineLiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinalVideoDateColumn {
                get {
                    return this.columnFinalVideoDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimatedJointsColumn {
                get {
                    return this.columnEstimatedJoints;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JointsTestSealedColumn {
                get {
                    return this.columnJointsTestSealed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueIdentifiedColumn {
                get {
                    return this.columnIssueIdentified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueLFSColumn {
                get {
                    return this.columnIssueLFS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueClientColumn {
                get {
                    return this.columnIssueClient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueSalesColumn {
                get {
                    return this.columnIssueSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueGivenToClientColumn {
                get {
                    return this.columnIssueGivenToClient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueResolvedColumn {
                get {
                    return this.columnIssueResolved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueInvestigationColumn {
                get {
                    return this.columnIssueInvestigation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RepairIDColumn {
                get {
                    return this.columnRepairID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRSRow this[int index] {
                get {
                    return ((LFS_WORK_POINT_REPAIRSRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_POINT_REPAIRSRowChangeEventHandler LFS_WORK_POINT_REPAIRSRowChanging;
            
            public event LFS_WORK_POINT_REPAIRSRowChangeEventHandler LFS_WORK_POINT_REPAIRSRowChanged;
            
            public event LFS_WORK_POINT_REPAIRSRowChangeEventHandler LFS_WORK_POINT_REPAIRSRowDeleting;
            
            public event LFS_WORK_POINT_REPAIRSRowChangeEventHandler LFS_WORK_POINT_REPAIRSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_POINT_REPAIRSRow(LFS_WORK_POINT_REPAIRSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRSRow AddLFS_WORK_POINT_REPAIRSRow(
                        LFS_WORKRow parentLFS_WORKRowByLFS_WORK_LFS_WORK_POINT_REPAIRS, 
                        string ClientID, 
                        string MeasurementTakenBy, 
                        System.DateTime RepairConfirmationDate, 
                        bool BypassRequired, 
                        string RoboticDistances, 
                        System.DateTime ProposedLiningDate, 
                        System.DateTime DeadlineLiningDate, 
                        System.DateTime FinalVideoDate, 
                        int EstimatedJoints, 
                        int JointsTestSealed, 
                        bool IssueIdentified, 
                        bool IssueLFS, 
                        bool IssueClient, 
                        bool IssueSales, 
                        bool IssueGivenToClient, 
                        bool IssueResolved, 
                        bool IssueInvestigation, 
                        string RepairID, 
                        bool Deleted, 
                        int COMPANY_ID) {
                LFS_WORK_POINT_REPAIRSRow rowLFS_WORK_POINT_REPAIRSRow = ((LFS_WORK_POINT_REPAIRSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ClientID,
                        MeasurementTakenBy,
                        RepairConfirmationDate,
                        BypassRequired,
                        RoboticDistances,
                        ProposedLiningDate,
                        DeadlineLiningDate,
                        FinalVideoDate,
                        EstimatedJoints,
                        JointsTestSealed,
                        IssueIdentified,
                        IssueLFS,
                        IssueClient,
                        IssueSales,
                        IssueGivenToClient,
                        IssueResolved,
                        IssueInvestigation,
                        RepairID,
                        Deleted,
                        COMPANY_ID};
                if ((parentLFS_WORKRowByLFS_WORK_LFS_WORK_POINT_REPAIRS != null)) {
                    columnValuesArray[0] = parentLFS_WORKRowByLFS_WORK_LFS_WORK_POINT_REPAIRS[0];
                }
                rowLFS_WORK_POINT_REPAIRSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_POINT_REPAIRSRow);
                return rowLFS_WORK_POINT_REPAIRSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRSRow FindByWorkID(int WorkID) {
                return ((LFS_WORK_POINT_REPAIRSRow)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_POINT_REPAIRSDataTable cln = ((LFS_WORK_POINT_REPAIRSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_POINT_REPAIRSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnClientID = base.Columns["ClientID"];
                this.columnMeasurementTakenBy = base.Columns["MeasurementTakenBy"];
                this.columnRepairConfirmationDate = base.Columns["RepairConfirmationDate"];
                this.columnBypassRequired = base.Columns["BypassRequired"];
                this.columnRoboticDistances = base.Columns["RoboticDistances"];
                this.columnProposedLiningDate = base.Columns["ProposedLiningDate"];
                this.columnDeadlineLiningDate = base.Columns["DeadlineLiningDate"];
                this.columnFinalVideoDate = base.Columns["FinalVideoDate"];
                this.columnEstimatedJoints = base.Columns["EstimatedJoints"];
                this.columnJointsTestSealed = base.Columns["JointsTestSealed"];
                this.columnIssueIdentified = base.Columns["IssueIdentified"];
                this.columnIssueLFS = base.Columns["IssueLFS"];
                this.columnIssueClient = base.Columns["IssueClient"];
                this.columnIssueSales = base.Columns["IssueSales"];
                this.columnIssueGivenToClient = base.Columns["IssueGivenToClient"];
                this.columnIssueResolved = base.Columns["IssueResolved"];
                this.columnIssueInvestigation = base.Columns["IssueInvestigation"];
                this.columnRepairID = base.Columns["RepairID"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnClientID = new global::System.Data.DataColumn("ClientID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnMeasurementTakenBy = new global::System.Data.DataColumn("MeasurementTakenBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementTakenBy);
                this.columnRepairConfirmationDate = new global::System.Data.DataColumn("RepairConfirmationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepairConfirmationDate);
                this.columnBypassRequired = new global::System.Data.DataColumn("BypassRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBypassRequired);
                this.columnRoboticDistances = new global::System.Data.DataColumn("RoboticDistances", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticDistances);
                this.columnProposedLiningDate = new global::System.Data.DataColumn("ProposedLiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProposedLiningDate);
                this.columnDeadlineLiningDate = new global::System.Data.DataColumn("DeadlineLiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeadlineLiningDate);
                this.columnFinalVideoDate = new global::System.Data.DataColumn("FinalVideoDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalVideoDate);
                this.columnEstimatedJoints = new global::System.Data.DataColumn("EstimatedJoints", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimatedJoints);
                this.columnJointsTestSealed = new global::System.Data.DataColumn("JointsTestSealed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJointsTestSealed);
                this.columnIssueIdentified = new global::System.Data.DataColumn("IssueIdentified", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueIdentified);
                this.columnIssueLFS = new global::System.Data.DataColumn("IssueLFS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueLFS);
                this.columnIssueClient = new global::System.Data.DataColumn("IssueClient", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueClient);
                this.columnIssueSales = new global::System.Data.DataColumn("IssueSales", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueSales);
                this.columnIssueGivenToClient = new global::System.Data.DataColumn("IssueGivenToClient", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueGivenToClient);
                this.columnIssueResolved = new global::System.Data.DataColumn("IssueResolved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueResolved);
                this.columnIssueInvestigation = new global::System.Data.DataColumn("IssueInvestigation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueInvestigation);
                this.columnRepairID = new global::System.Data.DataColumn("RepairID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepairID);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.Unique = true;
                this.columnClientID.MaxLength = 50;
                this.columnMeasurementTakenBy.MaxLength = 255;
                this.columnBypassRequired.AllowDBNull = false;
                this.columnRoboticDistances.MaxLength = 50;
                this.columnIssueIdentified.AllowDBNull = false;
                this.columnIssueLFS.AllowDBNull = false;
                this.columnIssueClient.AllowDBNull = false;
                this.columnIssueSales.AllowDBNull = false;
                this.columnIssueGivenToClient.AllowDBNull = false;
                this.columnIssueResolved.AllowDBNull = false;
                this.columnIssueInvestigation.AllowDBNull = false;
                this.columnRepairID.MaxLength = 10;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRSRow NewLFS_WORK_POINT_REPAIRSRow() {
                return ((LFS_WORK_POINT_REPAIRSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_POINT_REPAIRSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_POINT_REPAIRSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_POINT_REPAIRSRowChanged != null)) {
                    this.LFS_WORK_POINT_REPAIRSRowChanged(this, new LFS_WORK_POINT_REPAIRSRowChangeEvent(((LFS_WORK_POINT_REPAIRSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_POINT_REPAIRSRowChanging != null)) {
                    this.LFS_WORK_POINT_REPAIRSRowChanging(this, new LFS_WORK_POINT_REPAIRSRowChangeEvent(((LFS_WORK_POINT_REPAIRSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_POINT_REPAIRSRowDeleted != null)) {
                    this.LFS_WORK_POINT_REPAIRSRowDeleted(this, new LFS_WORK_POINT_REPAIRSRowChangeEvent(((LFS_WORK_POINT_REPAIRSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_POINT_REPAIRSRowDeleting != null)) {
                    this.LFS_WORK_POINT_REPAIRSRowDeleting(this, new LFS_WORK_POINT_REPAIRSRowChangeEvent(((LFS_WORK_POINT_REPAIRSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_POINT_REPAIRSRow(LFS_WORK_POINT_REPAIRSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_POINT_REPAIRSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSize_;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZEDataTable() {
                this.TableName = "LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Size_Column {
                get {
                    return this.columnSize_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow this[int index] {
                get {
                    return ((LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowChangeEventHandler LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowChanging;
            
            public event LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowChangeEventHandler LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowChanged;
            
            public event LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowChangeEventHandler LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowDeleting;
            
            public event LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowChangeEventHandler LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow(LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow AddLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow(string Size_, int COMPANY_ID, bool Deleted) {
                LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow rowLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow = ((LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Size_,
                        COMPANY_ID,
                        Deleted};
                rowLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow);
                return rowLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow FindBySize_COMPANY_ID(string Size_, int COMPANY_ID) {
                return ((LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow)(this.Rows.Find(new object[] {
                            Size_,
                            COMPANY_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZEDataTable cln = ((LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSize_ = base.Columns["Size_"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnDeleted = base.Columns["Deleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSize_ = new global::System.Data.DataColumn("Size_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSize_,
                                this.columnCOMPANY_ID}, true));
                this.columnSize_.AllowDBNull = false;
                this.columnSize_.MaxLength = 100;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow NewLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow() {
                return ((LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowChanged != null)) {
                    this.LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowChanged(this, new LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowChangeEvent(((LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowChanging != null)) {
                    this.LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowChanging(this, new LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowChangeEvent(((LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowDeleted != null)) {
                    this.LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowDeleted(this, new LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowChangeEvent(((LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowDeleting != null)) {
                    this.LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowDeleting(this, new LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowChangeEvent(((LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow(LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_JUNCTIONLINING_FLANGEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFlange;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_FLANGEDataTable() {
                this.TableName = "LFS_WORK_JUNCTIONLINING_FLANGE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_JUNCTIONLINING_FLANGEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_JUNCTIONLINING_FLANGEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlangeColumn {
                get {
                    return this.columnFlange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_FLANGERow this[int index] {
                get {
                    return ((LFS_WORK_JUNCTIONLINING_FLANGERow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_JUNCTIONLINING_FLANGERowChangeEventHandler LFS_WORK_JUNCTIONLINING_FLANGERowChanging;
            
            public event LFS_WORK_JUNCTIONLINING_FLANGERowChangeEventHandler LFS_WORK_JUNCTIONLINING_FLANGERowChanged;
            
            public event LFS_WORK_JUNCTIONLINING_FLANGERowChangeEventHandler LFS_WORK_JUNCTIONLINING_FLANGERowDeleting;
            
            public event LFS_WORK_JUNCTIONLINING_FLANGERowChangeEventHandler LFS_WORK_JUNCTIONLINING_FLANGERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_JUNCTIONLINING_FLANGERow(LFS_WORK_JUNCTIONLINING_FLANGERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_FLANGERow AddLFS_WORK_JUNCTIONLINING_FLANGERow(string Flange, int COMPANY_ID) {
                LFS_WORK_JUNCTIONLINING_FLANGERow rowLFS_WORK_JUNCTIONLINING_FLANGERow = ((LFS_WORK_JUNCTIONLINING_FLANGERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Flange,
                        COMPANY_ID};
                rowLFS_WORK_JUNCTIONLINING_FLANGERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_JUNCTIONLINING_FLANGERow);
                return rowLFS_WORK_JUNCTIONLINING_FLANGERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_FLANGERow FindByFlangeCOMPANY_ID(string Flange, int COMPANY_ID) {
                return ((LFS_WORK_JUNCTIONLINING_FLANGERow)(this.Rows.Find(new object[] {
                            Flange,
                            COMPANY_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_JUNCTIONLINING_FLANGEDataTable cln = ((LFS_WORK_JUNCTIONLINING_FLANGEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_JUNCTIONLINING_FLANGEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFlange = base.Columns["Flange"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFlange = new global::System.Data.DataColumn("Flange", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlange);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFlange,
                                this.columnCOMPANY_ID}, true));
                this.columnFlange.AllowDBNull = false;
                this.columnFlange.MaxLength = 50;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_FLANGERow NewLFS_WORK_JUNCTIONLINING_FLANGERow() {
                return ((LFS_WORK_JUNCTIONLINING_FLANGERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_JUNCTIONLINING_FLANGERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_JUNCTIONLINING_FLANGERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_JUNCTIONLINING_FLANGERowChanged != null)) {
                    this.LFS_WORK_JUNCTIONLINING_FLANGERowChanged(this, new LFS_WORK_JUNCTIONLINING_FLANGERowChangeEvent(((LFS_WORK_JUNCTIONLINING_FLANGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_JUNCTIONLINING_FLANGERowChanging != null)) {
                    this.LFS_WORK_JUNCTIONLINING_FLANGERowChanging(this, new LFS_WORK_JUNCTIONLINING_FLANGERowChangeEvent(((LFS_WORK_JUNCTIONLINING_FLANGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_JUNCTIONLINING_FLANGERowDeleted != null)) {
                    this.LFS_WORK_JUNCTIONLINING_FLANGERowDeleted(this, new LFS_WORK_JUNCTIONLINING_FLANGERowChangeEvent(((LFS_WORK_JUNCTIONLINING_FLANGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_JUNCTIONLINING_FLANGERowDeleting != null)) {
                    this.LFS_WORK_JUNCTIONLINING_FLANGERowDeleting(this, new LFS_WORK_JUNCTIONLINING_FLANGERowChangeEvent(((LFS_WORK_JUNCTIONLINING_FLANGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_JUNCTIONLINING_FLANGERow(LFS_WORK_JUNCTIONLINING_FLANGERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_JUNCTIONLINING_FLANGEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_JUNCTIONLINING_FLANGE_GASKETDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFlange;
            
            private global::System.Data.DataColumn columnGasket;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_FLANGE_GASKETDataTable() {
                this.TableName = "LFS_WORK_JUNCTIONLINING_FLANGE_GASKET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_JUNCTIONLINING_FLANGE_GASKETDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_JUNCTIONLINING_FLANGE_GASKETDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlangeColumn {
                get {
                    return this.columnFlange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GasketColumn {
                get {
                    return this.columnGasket;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow this[int index] {
                get {
                    return ((LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowChangeEventHandler LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowChanging;
            
            public event LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowChangeEventHandler LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowChanged;
            
            public event LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowChangeEventHandler LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowDeleting;
            
            public event LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowChangeEventHandler LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow(LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow AddLFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow(LFS_WORK_JUNCTIONLINING_FLANGERow parentLFS_WORK_JUNCTIONLINING_FLANGERowByLFS_WORK_JUNCTIONLINING_FLANGE_LFS_WORK_JUNCTIONLINING_FLANGE_GASKET, string Gasket, int COMPANY_ID) {
                LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow rowLFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow = ((LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Gasket,
                        COMPANY_ID};
                if ((parentLFS_WORK_JUNCTIONLINING_FLANGERowByLFS_WORK_JUNCTIONLINING_FLANGE_LFS_WORK_JUNCTIONLINING_FLANGE_GASKET != null)) {
                    columnValuesArray[0] = parentLFS_WORK_JUNCTIONLINING_FLANGERowByLFS_WORK_JUNCTIONLINING_FLANGE_LFS_WORK_JUNCTIONLINING_FLANGE_GASKET[0];
                }
                rowLFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow);
                return rowLFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow FindByFlangeGasketCOMPANY_ID(string Flange, string Gasket, int COMPANY_ID) {
                return ((LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow)(this.Rows.Find(new object[] {
                            Flange,
                            Gasket,
                            COMPANY_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_JUNCTIONLINING_FLANGE_GASKETDataTable cln = ((LFS_WORK_JUNCTIONLINING_FLANGE_GASKETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_JUNCTIONLINING_FLANGE_GASKETDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFlange = base.Columns["Flange"];
                this.columnGasket = base.Columns["Gasket"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFlange = new global::System.Data.DataColumn("Flange", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlange);
                this.columnGasket = new global::System.Data.DataColumn("Gasket", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGasket);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFlange,
                                this.columnGasket,
                                this.columnCOMPANY_ID}, true));
                this.columnFlange.AllowDBNull = false;
                this.columnFlange.MaxLength = 50;
                this.columnGasket.AllowDBNull = false;
                this.columnGasket.MaxLength = 50;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow NewLFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow() {
                return ((LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowChanged != null)) {
                    this.LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowChanged(this, new LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowChangeEvent(((LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowChanging != null)) {
                    this.LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowChanging(this, new LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowChangeEvent(((LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowDeleted != null)) {
                    this.LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowDeleted(this, new LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowChangeEvent(((LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowDeleting != null)) {
                    this.LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowDeleting(this, new LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowChangeEvent(((LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow(LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_JUNCTIONLINING_FLANGE_GASKETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_FULLLENGTHLININGDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnClientID;
            
            private global::System.Data.DataColumn columnProposedLiningDate;
            
            private global::System.Data.DataColumn columnDeadlineLiningDate;
            
            private global::System.Data.DataColumn columnP1Date;
            
            private global::System.Data.DataColumn columnM1Date;
            
            private global::System.Data.DataColumn columnM2Date;
            
            private global::System.Data.DataColumn columnInstallDate;
            
            private global::System.Data.DataColumn columnFinalVideoDate;
            
            private global::System.Data.DataColumn columnIssueIdentified;
            
            private global::System.Data.DataColumn columnIssueLFS;
            
            private global::System.Data.DataColumn columnIssueClient;
            
            private global::System.Data.DataColumn columnIssueSales;
            
            private global::System.Data.DataColumn columnIssueGivenToClient;
            
            private global::System.Data.DataColumn columnIssueResolved;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnIssueInvestigation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLININGDataTable() {
                this.TableName = "LFS_WORK_FULLLENGTHLINING";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLININGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_FULLLENGTHLININGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProposedLiningDateColumn {
                get {
                    return this.columnProposedLiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeadlineLiningDateColumn {
                get {
                    return this.columnDeadlineLiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P1DateColumn {
                get {
                    return this.columnP1Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M1DateColumn {
                get {
                    return this.columnM1Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M2DateColumn {
                get {
                    return this.columnM2Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallDateColumn {
                get {
                    return this.columnInstallDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinalVideoDateColumn {
                get {
                    return this.columnFinalVideoDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueIdentifiedColumn {
                get {
                    return this.columnIssueIdentified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueLFSColumn {
                get {
                    return this.columnIssueLFS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueClientColumn {
                get {
                    return this.columnIssueClient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueSalesColumn {
                get {
                    return this.columnIssueSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueGivenToClientColumn {
                get {
                    return this.columnIssueGivenToClient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueResolvedColumn {
                get {
                    return this.columnIssueResolved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueInvestigationColumn {
                get {
                    return this.columnIssueInvestigation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLININGRow this[int index] {
                get {
                    return ((LFS_WORK_FULLLENGTHLININGRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_FULLLENGTHLININGRowChangeEventHandler LFS_WORK_FULLLENGTHLININGRowChanging;
            
            public event LFS_WORK_FULLLENGTHLININGRowChangeEventHandler LFS_WORK_FULLLENGTHLININGRowChanged;
            
            public event LFS_WORK_FULLLENGTHLININGRowChangeEventHandler LFS_WORK_FULLLENGTHLININGRowDeleting;
            
            public event LFS_WORK_FULLLENGTHLININGRowChangeEventHandler LFS_WORK_FULLLENGTHLININGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_FULLLENGTHLININGRow(LFS_WORK_FULLLENGTHLININGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLININGRow AddLFS_WORK_FULLLENGTHLININGRow(
                        LFS_WORKRow parentLFS_WORKRowByLFS_WORK_LFS_WORK_FULLLENGTHLINING, 
                        string ClientID, 
                        System.DateTime ProposedLiningDate, 
                        System.DateTime DeadlineLiningDate, 
                        System.DateTime P1Date, 
                        System.DateTime M1Date, 
                        System.DateTime M2Date, 
                        System.DateTime InstallDate, 
                        System.DateTime FinalVideoDate, 
                        bool IssueIdentified, 
                        bool IssueLFS, 
                        bool IssueClient, 
                        bool IssueSales, 
                        bool IssueGivenToClient, 
                        bool IssueResolved, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        bool IssueInvestigation) {
                LFS_WORK_FULLLENGTHLININGRow rowLFS_WORK_FULLLENGTHLININGRow = ((LFS_WORK_FULLLENGTHLININGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ClientID,
                        ProposedLiningDate,
                        DeadlineLiningDate,
                        P1Date,
                        M1Date,
                        M2Date,
                        InstallDate,
                        FinalVideoDate,
                        IssueIdentified,
                        IssueLFS,
                        IssueClient,
                        IssueSales,
                        IssueGivenToClient,
                        IssueResolved,
                        Deleted,
                        COMPANY_ID,
                        IssueInvestigation};
                if ((parentLFS_WORKRowByLFS_WORK_LFS_WORK_FULLLENGTHLINING != null)) {
                    columnValuesArray[0] = parentLFS_WORKRowByLFS_WORK_LFS_WORK_FULLLENGTHLINING[0];
                }
                rowLFS_WORK_FULLLENGTHLININGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_FULLLENGTHLININGRow);
                return rowLFS_WORK_FULLLENGTHLININGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLININGRow FindByWorkID(int WorkID) {
                return ((LFS_WORK_FULLLENGTHLININGRow)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_FULLLENGTHLININGDataTable cln = ((LFS_WORK_FULLLENGTHLININGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_FULLLENGTHLININGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnClientID = base.Columns["ClientID"];
                this.columnProposedLiningDate = base.Columns["ProposedLiningDate"];
                this.columnDeadlineLiningDate = base.Columns["DeadlineLiningDate"];
                this.columnP1Date = base.Columns["P1Date"];
                this.columnM1Date = base.Columns["M1Date"];
                this.columnM2Date = base.Columns["M2Date"];
                this.columnInstallDate = base.Columns["InstallDate"];
                this.columnFinalVideoDate = base.Columns["FinalVideoDate"];
                this.columnIssueIdentified = base.Columns["IssueIdentified"];
                this.columnIssueLFS = base.Columns["IssueLFS"];
                this.columnIssueClient = base.Columns["IssueClient"];
                this.columnIssueSales = base.Columns["IssueSales"];
                this.columnIssueGivenToClient = base.Columns["IssueGivenToClient"];
                this.columnIssueResolved = base.Columns["IssueResolved"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnIssueInvestigation = base.Columns["IssueInvestigation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnClientID = new global::System.Data.DataColumn("ClientID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnProposedLiningDate = new global::System.Data.DataColumn("ProposedLiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProposedLiningDate);
                this.columnDeadlineLiningDate = new global::System.Data.DataColumn("DeadlineLiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeadlineLiningDate);
                this.columnP1Date = new global::System.Data.DataColumn("P1Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP1Date);
                this.columnM1Date = new global::System.Data.DataColumn("M1Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM1Date);
                this.columnM2Date = new global::System.Data.DataColumn("M2Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM2Date);
                this.columnInstallDate = new global::System.Data.DataColumn("InstallDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallDate);
                this.columnFinalVideoDate = new global::System.Data.DataColumn("FinalVideoDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalVideoDate);
                this.columnIssueIdentified = new global::System.Data.DataColumn("IssueIdentified", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueIdentified);
                this.columnIssueLFS = new global::System.Data.DataColumn("IssueLFS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueLFS);
                this.columnIssueClient = new global::System.Data.DataColumn("IssueClient", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueClient);
                this.columnIssueSales = new global::System.Data.DataColumn("IssueSales", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueSales);
                this.columnIssueGivenToClient = new global::System.Data.DataColumn("IssueGivenToClient", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueGivenToClient);
                this.columnIssueResolved = new global::System.Data.DataColumn("IssueResolved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueResolved);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnIssueInvestigation = new global::System.Data.DataColumn("IssueInvestigation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueInvestigation);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.Unique = true;
                this.columnClientID.MaxLength = 50;
                this.columnIssueIdentified.AllowDBNull = false;
                this.columnIssueLFS.AllowDBNull = false;
                this.columnIssueClient.AllowDBNull = false;
                this.columnIssueSales.AllowDBNull = false;
                this.columnIssueGivenToClient.AllowDBNull = false;
                this.columnIssueResolved.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnIssueInvestigation.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLININGRow NewLFS_WORK_FULLLENGTHLININGRow() {
                return ((LFS_WORK_FULLLENGTHLININGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_FULLLENGTHLININGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_FULLLENGTHLININGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_FULLLENGTHLININGRowChanged != null)) {
                    this.LFS_WORK_FULLLENGTHLININGRowChanged(this, new LFS_WORK_FULLLENGTHLININGRowChangeEvent(((LFS_WORK_FULLLENGTHLININGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_FULLLENGTHLININGRowChanging != null)) {
                    this.LFS_WORK_FULLLENGTHLININGRowChanging(this, new LFS_WORK_FULLLENGTHLININGRowChangeEvent(((LFS_WORK_FULLLENGTHLININGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_FULLLENGTHLININGRowDeleted != null)) {
                    this.LFS_WORK_FULLLENGTHLININGRowDeleted(this, new LFS_WORK_FULLLENGTHLININGRowChangeEvent(((LFS_WORK_FULLLENGTHLININGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_FULLLENGTHLININGRowDeleting != null)) {
                    this.LFS_WORK_FULLLENGTHLININGRowDeleting(this, new LFS_WORK_FULLLENGTHLININGRowChangeEvent(((LFS_WORK_FULLLENGTHLININGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_FULLLENGTHLININGRow(LFS_WORK_FULLLENGTHLININGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_FULLLENGTHLININGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_COMMENTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnSubject;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnDateTime_;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnLIBRARY_FILES_ID;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnWorkType;
            
            private global::System.Data.DataColumn columnUserFullName;
            
            private global::System.Data.DataColumn columnCreationDateTime;
            
            private global::System.Data.DataColumn columnToHistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_COMMENTDataTable() {
                this.TableName = "LFS_WORK_COMMENT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_COMMENTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_COMMENTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTime_Column {
                get {
                    return this.columnDateTime_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIBRARY_FILES_IDColumn {
                get {
                    return this.columnLIBRARY_FILES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkTypeColumn {
                get {
                    return this.columnWorkType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserFullNameColumn {
                get {
                    return this.columnUserFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreationDateTimeColumn {
                get {
                    return this.columnCreationDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToHistoryColumn {
                get {
                    return this.columnToHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_COMMENTRow this[int index] {
                get {
                    return ((LFS_WORK_COMMENTRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_COMMENTRowChangeEventHandler LFS_WORK_COMMENTRowChanging;
            
            public event LFS_WORK_COMMENTRowChangeEventHandler LFS_WORK_COMMENTRowChanged;
            
            public event LFS_WORK_COMMENTRowChangeEventHandler LFS_WORK_COMMENTRowDeleting;
            
            public event LFS_WORK_COMMENTRowChangeEventHandler LFS_WORK_COMMENTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_COMMENTRow(LFS_WORK_COMMENTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_COMMENTRow AddLFS_WORK_COMMENTRow(LFS_WORKRow parentLFS_WORKRowByLFS_WORK_LFS_WORK_COMMENT, int RefID, string Type, string Subject, int UserID, System.DateTime DateTime_, string Comment, int LIBRARY_FILES_ID, bool Deleted, int COMPANY_ID, string WorkType, string UserFullName, System.DateTime CreationDateTime, bool ToHistory) {
                LFS_WORK_COMMENTRow rowLFS_WORK_COMMENTRow = ((LFS_WORK_COMMENTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RefID,
                        Type,
                        Subject,
                        UserID,
                        DateTime_,
                        Comment,
                        LIBRARY_FILES_ID,
                        Deleted,
                        COMPANY_ID,
                        WorkType,
                        UserFullName,
                        CreationDateTime,
                        ToHistory};
                if ((parentLFS_WORKRowByLFS_WORK_LFS_WORK_COMMENT != null)) {
                    columnValuesArray[0] = parentLFS_WORKRowByLFS_WORK_LFS_WORK_COMMENT[0];
                }
                rowLFS_WORK_COMMENTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_COMMENTRow);
                return rowLFS_WORK_COMMENTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_COMMENTRow FindByWorkIDRefID(int WorkID, int RefID) {
                return ((LFS_WORK_COMMENTRow)(this.Rows.Find(new object[] {
                            WorkID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_COMMENTDataTable cln = ((LFS_WORK_COMMENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_COMMENTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnType = base.Columns["Type"];
                this.columnSubject = base.Columns["Subject"];
                this.columnUserID = base.Columns["UserID"];
                this.columnDateTime_ = base.Columns["DateTime_"];
                this.columnComment = base.Columns["Comment"];
                this.columnLIBRARY_FILES_ID = base.Columns["LIBRARY_FILES_ID"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnWorkType = base.Columns["WorkType"];
                this.columnUserFullName = base.Columns["UserFullName"];
                this.columnCreationDateTime = base.Columns["CreationDateTime"];
                this.columnToHistory = base.Columns["ToHistory"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnSubject = new global::System.Data.DataColumn("Subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnDateTime_ = new global::System.Data.DataColumn("DateTime_", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTime_);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnLIBRARY_FILES_ID = new global::System.Data.DataColumn("LIBRARY_FILES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIBRARY_FILES_ID);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnWorkType = new global::System.Data.DataColumn("WorkType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkType);
                this.columnUserFullName = new global::System.Data.DataColumn("UserFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserFullName);
                this.columnCreationDateTime = new global::System.Data.DataColumn("CreationDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDateTime);
                this.columnToHistory = new global::System.Data.DataColumn("ToHistory", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToHistory);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID,
                                this.columnRefID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnType.MaxLength = 50;
                this.columnSubject.AllowDBNull = false;
                this.columnSubject.MaxLength = 255;
                this.columnUserID.AllowDBNull = false;
                this.columnComment.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnWorkType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_COMMENTRow NewLFS_WORK_COMMENTRow() {
                return ((LFS_WORK_COMMENTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_COMMENTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_COMMENTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_COMMENTRowChanged != null)) {
                    this.LFS_WORK_COMMENTRowChanged(this, new LFS_WORK_COMMENTRowChangeEvent(((LFS_WORK_COMMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_COMMENTRowChanging != null)) {
                    this.LFS_WORK_COMMENTRowChanging(this, new LFS_WORK_COMMENTRowChangeEvent(((LFS_WORK_COMMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_COMMENTRowDeleted != null)) {
                    this.LFS_WORK_COMMENTRowDeleted(this, new LFS_WORK_COMMENTRowChangeEvent(((LFS_WORK_COMMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_COMMENTRowDeleting != null)) {
                    this.LFS_WORK_COMMENTRowDeleting(this, new LFS_WORK_COMMENTRowChangeEvent(((LFS_WORK_COMMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_COMMENTRow(LFS_WORK_COMMENTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_COMMENTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_HISTORYDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnSubject;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnDateTime_;
            
            private global::System.Data.DataColumn columnHistory;
            
            private global::System.Data.DataColumn columnLIBRARY_FILES_ID;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnWorkType;
            
            private global::System.Data.DataColumn columnUserFullName;
            
            private global::System.Data.DataColumn columnCreationDateTime;
            
            private global::System.Data.DataColumn columnToComments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_HISTORYDataTable() {
                this.TableName = "LFS_WORK_HISTORY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_HISTORYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_HISTORYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTime_Column {
                get {
                    return this.columnDateTime_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryColumn {
                get {
                    return this.columnHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIBRARY_FILES_IDColumn {
                get {
                    return this.columnLIBRARY_FILES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkTypeColumn {
                get {
                    return this.columnWorkType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserFullNameColumn {
                get {
                    return this.columnUserFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreationDateTimeColumn {
                get {
                    return this.columnCreationDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToCommentsColumn {
                get {
                    return this.columnToComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_HISTORYRow this[int index] {
                get {
                    return ((LFS_WORK_HISTORYRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_HISTORYRowChangeEventHandler LFS_WORK_HISTORYRowChanging;
            
            public event LFS_WORK_HISTORYRowChangeEventHandler LFS_WORK_HISTORYRowChanged;
            
            public event LFS_WORK_HISTORYRowChangeEventHandler LFS_WORK_HISTORYRowDeleting;
            
            public event LFS_WORK_HISTORYRowChangeEventHandler LFS_WORK_HISTORYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_HISTORYRow(LFS_WORK_HISTORYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_HISTORYRow AddLFS_WORK_HISTORYRow(LFS_WORKRow parentLFS_WORKRowByLFS_WORK_LFS_WORK_HISTORY, int RefID, string Type, string Subject, int UserID, System.DateTime DateTime_, string History, int LIBRARY_FILES_ID, bool Deleted, int COMPANY_ID, string WorkType, string UserFullName, System.DateTime CreationDateTime, bool ToComments) {
                LFS_WORK_HISTORYRow rowLFS_WORK_HISTORYRow = ((LFS_WORK_HISTORYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RefID,
                        Type,
                        Subject,
                        UserID,
                        DateTime_,
                        History,
                        LIBRARY_FILES_ID,
                        Deleted,
                        COMPANY_ID,
                        WorkType,
                        UserFullName,
                        CreationDateTime,
                        ToComments};
                if ((parentLFS_WORKRowByLFS_WORK_LFS_WORK_HISTORY != null)) {
                    columnValuesArray[0] = parentLFS_WORKRowByLFS_WORK_LFS_WORK_HISTORY[0];
                }
                rowLFS_WORK_HISTORYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_HISTORYRow);
                return rowLFS_WORK_HISTORYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_HISTORYRow FindByWorkIDRefID(int WorkID, int RefID) {
                return ((LFS_WORK_HISTORYRow)(this.Rows.Find(new object[] {
                            WorkID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_HISTORYDataTable cln = ((LFS_WORK_HISTORYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_HISTORYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnType = base.Columns["Type"];
                this.columnSubject = base.Columns["Subject"];
                this.columnUserID = base.Columns["UserID"];
                this.columnDateTime_ = base.Columns["DateTime_"];
                this.columnHistory = base.Columns["History"];
                this.columnLIBRARY_FILES_ID = base.Columns["LIBRARY_FILES_ID"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnWorkType = base.Columns["WorkType"];
                this.columnUserFullName = base.Columns["UserFullName"];
                this.columnCreationDateTime = base.Columns["CreationDateTime"];
                this.columnToComments = base.Columns["ToComments"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnSubject = new global::System.Data.DataColumn("Subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnDateTime_ = new global::System.Data.DataColumn("DateTime_", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTime_);
                this.columnHistory = new global::System.Data.DataColumn("History", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistory);
                this.columnLIBRARY_FILES_ID = new global::System.Data.DataColumn("LIBRARY_FILES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIBRARY_FILES_ID);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnWorkType = new global::System.Data.DataColumn("WorkType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkType);
                this.columnUserFullName = new global::System.Data.DataColumn("UserFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserFullName);
                this.columnCreationDateTime = new global::System.Data.DataColumn("CreationDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDateTime);
                this.columnToComments = new global::System.Data.DataColumn("ToComments", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToComments);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID,
                                this.columnRefID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnType.MaxLength = 50;
                this.columnSubject.AllowDBNull = false;
                this.columnSubject.MaxLength = 255;
                this.columnUserID.AllowDBNull = false;
                this.columnHistory.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnWorkType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_HISTORYRow NewLFS_WORK_HISTORYRow() {
                return ((LFS_WORK_HISTORYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_HISTORYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_HISTORYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_HISTORYRowChanged != null)) {
                    this.LFS_WORK_HISTORYRowChanged(this, new LFS_WORK_HISTORYRowChangeEvent(((LFS_WORK_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_HISTORYRowChanging != null)) {
                    this.LFS_WORK_HISTORYRowChanging(this, new LFS_WORK_HISTORYRowChangeEvent(((LFS_WORK_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_HISTORYRowDeleted != null)) {
                    this.LFS_WORK_HISTORYRowDeleted(this, new LFS_WORK_HISTORYRowChangeEvent(((LFS_WORK_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_HISTORYRowDeleting != null)) {
                    this.LFS_WORK_HISTORYRowDeleting(this, new LFS_WORK_HISTORYRowChangeEvent(((LFS_WORK_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_HISTORYRow(LFS_WORK_HISTORYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_HISTORYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_JUNCTIONLINING_SECTIONDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnNumLats;
            
            private global::System.Data.DataColumn columnNotLinedYet;
            
            private global::System.Data.DataColumn columnAllMeasured;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnIssueWithLaterals;
            
            private global::System.Data.DataColumn columnNotMeasuredYet;
            
            private global::System.Data.DataColumn columnNotDeliveredYet;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnTrafficControl;
            
            private global::System.Data.DataColumn columnTrafficControlDetails;
            
            private global::System.Data.DataColumn columnStandardBypass;
            
            private global::System.Data.DataColumn columnStandardBypassComments;
            
            private global::System.Data.DataColumn columnAvailableToLine;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_SECTIONDataTable() {
                this.TableName = "LFS_WORK_JUNCTIONLINING_SECTION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_JUNCTIONLINING_SECTIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_JUNCTIONLINING_SECTIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumLatsColumn {
                get {
                    return this.columnNumLats;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotLinedYetColumn {
                get {
                    return this.columnNotLinedYet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllMeasuredColumn {
                get {
                    return this.columnAllMeasured;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueWithLateralsColumn {
                get {
                    return this.columnIssueWithLaterals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotMeasuredYetColumn {
                get {
                    return this.columnNotMeasuredYet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotDeliveredYetColumn {
                get {
                    return this.columnNotDeliveredYet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrafficControlColumn {
                get {
                    return this.columnTrafficControl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrafficControlDetailsColumn {
                get {
                    return this.columnTrafficControlDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardBypassColumn {
                get {
                    return this.columnStandardBypass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardBypassCommentsColumn {
                get {
                    return this.columnStandardBypassComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AvailableToLineColumn {
                get {
                    return this.columnAvailableToLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_SECTIONRow this[int index] {
                get {
                    return ((LFS_WORK_JUNCTIONLINING_SECTIONRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_JUNCTIONLINING_SECTIONRowChangeEventHandler LFS_WORK_JUNCTIONLINING_SECTIONRowChanging;
            
            public event LFS_WORK_JUNCTIONLINING_SECTIONRowChangeEventHandler LFS_WORK_JUNCTIONLINING_SECTIONRowChanged;
            
            public event LFS_WORK_JUNCTIONLINING_SECTIONRowChangeEventHandler LFS_WORK_JUNCTIONLINING_SECTIONRowDeleting;
            
            public event LFS_WORK_JUNCTIONLINING_SECTIONRowChangeEventHandler LFS_WORK_JUNCTIONLINING_SECTIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_JUNCTIONLINING_SECTIONRow(LFS_WORK_JUNCTIONLINING_SECTIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_SECTIONRow AddLFS_WORK_JUNCTIONLINING_SECTIONRow(int WorkID, int NumLats, int NotLinedYet, bool AllMeasured, bool Deleted, string IssueWithLaterals, int NotMeasuredYet, int NotDeliveredYet, int COMPANY_ID, string TrafficControl, string TrafficControlDetails, bool StandardBypass, string StandardBypassComments, int AvailableToLine) {
                LFS_WORK_JUNCTIONLINING_SECTIONRow rowLFS_WORK_JUNCTIONLINING_SECTIONRow = ((LFS_WORK_JUNCTIONLINING_SECTIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        NumLats,
                        NotLinedYet,
                        AllMeasured,
                        Deleted,
                        IssueWithLaterals,
                        NotMeasuredYet,
                        NotDeliveredYet,
                        COMPANY_ID,
                        TrafficControl,
                        TrafficControlDetails,
                        StandardBypass,
                        StandardBypassComments,
                        AvailableToLine};
                rowLFS_WORK_JUNCTIONLINING_SECTIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_JUNCTIONLINING_SECTIONRow);
                return rowLFS_WORK_JUNCTIONLINING_SECTIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_SECTIONRow FindByWorkID(int WorkID) {
                return ((LFS_WORK_JUNCTIONLINING_SECTIONRow)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_JUNCTIONLINING_SECTIONDataTable cln = ((LFS_WORK_JUNCTIONLINING_SECTIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_JUNCTIONLINING_SECTIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnNumLats = base.Columns["NumLats"];
                this.columnNotLinedYet = base.Columns["NotLinedYet"];
                this.columnAllMeasured = base.Columns["AllMeasured"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnIssueWithLaterals = base.Columns["IssueWithLaterals"];
                this.columnNotMeasuredYet = base.Columns["NotMeasuredYet"];
                this.columnNotDeliveredYet = base.Columns["NotDeliveredYet"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnTrafficControl = base.Columns["TrafficControl"];
                this.columnTrafficControlDetails = base.Columns["TrafficControlDetails"];
                this.columnStandardBypass = base.Columns["StandardBypass"];
                this.columnStandardBypassComments = base.Columns["StandardBypassComments"];
                this.columnAvailableToLine = base.Columns["AvailableToLine"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnNumLats = new global::System.Data.DataColumn("NumLats", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumLats);
                this.columnNotLinedYet = new global::System.Data.DataColumn("NotLinedYet", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotLinedYet);
                this.columnAllMeasured = new global::System.Data.DataColumn("AllMeasured", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllMeasured);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnIssueWithLaterals = new global::System.Data.DataColumn("IssueWithLaterals", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueWithLaterals);
                this.columnNotMeasuredYet = new global::System.Data.DataColumn("NotMeasuredYet", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotMeasuredYet);
                this.columnNotDeliveredYet = new global::System.Data.DataColumn("NotDeliveredYet", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotDeliveredYet);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnTrafficControl = new global::System.Data.DataColumn("TrafficControl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrafficControl);
                this.columnTrafficControlDetails = new global::System.Data.DataColumn("TrafficControlDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrafficControlDetails);
                this.columnStandardBypass = new global::System.Data.DataColumn("StandardBypass", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardBypass);
                this.columnStandardBypassComments = new global::System.Data.DataColumn("StandardBypassComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardBypassComments);
                this.columnAvailableToLine = new global::System.Data.DataColumn("AvailableToLine", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAvailableToLine);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.Unique = true;
                this.columnNumLats.AllowDBNull = false;
                this.columnNotLinedYet.AllowDBNull = false;
                this.columnAllMeasured.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnIssueWithLaterals.AllowDBNull = false;
                this.columnIssueWithLaterals.MaxLength = 50;
                this.columnNotMeasuredYet.AllowDBNull = false;
                this.columnNotDeliveredYet.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnTrafficControl.MaxLength = 100;
                this.columnTrafficControlDetails.MaxLength = 1073741823;
                this.columnStandardBypass.AllowDBNull = false;
                this.columnStandardBypassComments.MaxLength = 1073741823;
                this.columnAvailableToLine.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_SECTIONRow NewLFS_WORK_JUNCTIONLINING_SECTIONRow() {
                return ((LFS_WORK_JUNCTIONLINING_SECTIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_JUNCTIONLINING_SECTIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_JUNCTIONLINING_SECTIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_JUNCTIONLINING_SECTIONRowChanged != null)) {
                    this.LFS_WORK_JUNCTIONLINING_SECTIONRowChanged(this, new LFS_WORK_JUNCTIONLINING_SECTIONRowChangeEvent(((LFS_WORK_JUNCTIONLINING_SECTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_JUNCTIONLINING_SECTIONRowChanging != null)) {
                    this.LFS_WORK_JUNCTIONLINING_SECTIONRowChanging(this, new LFS_WORK_JUNCTIONLINING_SECTIONRowChangeEvent(((LFS_WORK_JUNCTIONLINING_SECTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_JUNCTIONLINING_SECTIONRowDeleted != null)) {
                    this.LFS_WORK_JUNCTIONLINING_SECTIONRowDeleted(this, new LFS_WORK_JUNCTIONLINING_SECTIONRowChangeEvent(((LFS_WORK_JUNCTIONLINING_SECTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_JUNCTIONLINING_SECTIONRowDeleting != null)) {
                    this.LFS_WORK_JUNCTIONLINING_SECTIONRowDeleting(this, new LFS_WORK_JUNCTIONLINING_SECTIONRowChangeEvent(((LFS_WORK_JUNCTIONLINING_SECTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_JUNCTIONLINING_SECTIONRow(LFS_WORK_JUNCTIONLINING_SECTIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_JUNCTIONLINING_SECTIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_FULLLENGTHLINING_RESINSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnResinID;
            
            private global::System.Data.DataColumn columnResinMake;
            
            private global::System.Data.DataColumn columnResinType;
            
            private global::System.Data.DataColumn columnResinNumber;
            
            private global::System.Data.DataColumn columnLbUsg;
            
            private global::System.Data.DataColumn columnLbDrums;
            
            private global::System.Data.DataColumn columnActiveResin;
            
            private global::System.Data.DataColumn columnApplyCatalystTo;
            
            private global::System.Data.DataColumn columnFilter;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_RESINSDataTable() {
                this.TableName = "LFS_WORK_FULLLENGTHLINING_RESINS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_RESINSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_FULLLENGTHLINING_RESINSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResinIDColumn {
                get {
                    return this.columnResinID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResinMakeColumn {
                get {
                    return this.columnResinMake;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResinTypeColumn {
                get {
                    return this.columnResinType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResinNumberColumn {
                get {
                    return this.columnResinNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LbUsgColumn {
                get {
                    return this.columnLbUsg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LbDrumsColumn {
                get {
                    return this.columnLbDrums;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActiveResinColumn {
                get {
                    return this.columnActiveResin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyCatalystToColumn {
                get {
                    return this.columnApplyCatalystTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilterColumn {
                get {
                    return this.columnFilter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_RESINSRow this[int index] {
                get {
                    return ((LFS_WORK_FULLLENGTHLINING_RESINSRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_FULLLENGTHLINING_RESINSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_RESINSRowChanging;
            
            public event LFS_WORK_FULLLENGTHLINING_RESINSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_RESINSRowChanged;
            
            public event LFS_WORK_FULLLENGTHLINING_RESINSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_RESINSRowDeleting;
            
            public event LFS_WORK_FULLLENGTHLINING_RESINSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_RESINSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_FULLLENGTHLINING_RESINSRow(LFS_WORK_FULLLENGTHLINING_RESINSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_RESINSRow AddLFS_WORK_FULLLENGTHLINING_RESINSRow(int ResinID, string ResinMake, string ResinType, string ResinNumber, double LbUsg, int LbDrums, double ActiveResin, string ApplyCatalystTo, double Filter, bool Deleted, int COMPANY_ID) {
                LFS_WORK_FULLLENGTHLINING_RESINSRow rowLFS_WORK_FULLLENGTHLINING_RESINSRow = ((LFS_WORK_FULLLENGTHLINING_RESINSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ResinID,
                        ResinMake,
                        ResinType,
                        ResinNumber,
                        LbUsg,
                        LbDrums,
                        ActiveResin,
                        ApplyCatalystTo,
                        Filter,
                        Deleted,
                        COMPANY_ID};
                rowLFS_WORK_FULLLENGTHLINING_RESINSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_FULLLENGTHLINING_RESINSRow);
                return rowLFS_WORK_FULLLENGTHLINING_RESINSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_RESINSRow FindByResinID(int ResinID) {
                return ((LFS_WORK_FULLLENGTHLINING_RESINSRow)(this.Rows.Find(new object[] {
                            ResinID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_FULLLENGTHLINING_RESINSDataTable cln = ((LFS_WORK_FULLLENGTHLINING_RESINSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_FULLLENGTHLINING_RESINSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnResinID = base.Columns["ResinID"];
                this.columnResinMake = base.Columns["ResinMake"];
                this.columnResinType = base.Columns["ResinType"];
                this.columnResinNumber = base.Columns["ResinNumber"];
                this.columnLbUsg = base.Columns["LbUsg"];
                this.columnLbDrums = base.Columns["LbDrums"];
                this.columnActiveResin = base.Columns["ActiveResin"];
                this.columnApplyCatalystTo = base.Columns["ApplyCatalystTo"];
                this.columnFilter = base.Columns["Filter"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnResinID = new global::System.Data.DataColumn("ResinID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResinID);
                this.columnResinMake = new global::System.Data.DataColumn("ResinMake", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResinMake);
                this.columnResinType = new global::System.Data.DataColumn("ResinType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResinType);
                this.columnResinNumber = new global::System.Data.DataColumn("ResinNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResinNumber);
                this.columnLbUsg = new global::System.Data.DataColumn("LbUsg", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLbUsg);
                this.columnLbDrums = new global::System.Data.DataColumn("LbDrums", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLbDrums);
                this.columnActiveResin = new global::System.Data.DataColumn("ActiveResin", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActiveResin);
                this.columnApplyCatalystTo = new global::System.Data.DataColumn("ApplyCatalystTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyCatalystTo);
                this.columnFilter = new global::System.Data.DataColumn("Filter", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilter);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnResinID}, true));
                this.columnResinID.AllowDBNull = false;
                this.columnResinID.Unique = true;
                this.columnResinMake.AllowDBNull = false;
                this.columnResinMake.MaxLength = 25;
                this.columnResinType.AllowDBNull = false;
                this.columnResinType.MaxLength = 25;
                this.columnResinNumber.AllowDBNull = false;
                this.columnResinNumber.MaxLength = 25;
                this.columnLbUsg.AllowDBNull = false;
                this.columnLbDrums.AllowDBNull = false;
                this.columnActiveResin.AllowDBNull = false;
                this.columnApplyCatalystTo.AllowDBNull = false;
                this.columnApplyCatalystTo.MaxLength = 25;
                this.columnFilter.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_RESINSRow NewLFS_WORK_FULLLENGTHLINING_RESINSRow() {
                return ((LFS_WORK_FULLLENGTHLINING_RESINSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_FULLLENGTHLINING_RESINSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_FULLLENGTHLINING_RESINSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_RESINSRowChanged != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_RESINSRowChanged(this, new LFS_WORK_FULLLENGTHLINING_RESINSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_RESINSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_RESINSRowChanging != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_RESINSRowChanging(this, new LFS_WORK_FULLLENGTHLINING_RESINSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_RESINSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_RESINSRowDeleted != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_RESINSRowDeleted(this, new LFS_WORK_FULLLENGTHLINING_RESINSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_RESINSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_RESINSRowDeleting != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_RESINSRowDeleting(this, new LFS_WORK_FULLLENGTHLINING_RESINSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_RESINSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_FULLLENGTHLINING_RESINSRow(LFS_WORK_FULLLENGTHLINING_RESINSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_FULLLENGTHLINING_RESINSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_FULLLENGTHLINING_CATALYSTSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCatalystID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnDefaultPercentageByWeight;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_CATALYSTSDataTable() {
                this.TableName = "LFS_WORK_FULLLENGTHLINING_CATALYSTS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_CATALYSTSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_FULLLENGTHLINING_CATALYSTSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CatalystIDColumn {
                get {
                    return this.columnCatalystID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DefaultPercentageByWeightColumn {
                get {
                    return this.columnDefaultPercentageByWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_CATALYSTSRow this[int index] {
                get {
                    return ((LFS_WORK_FULLLENGTHLINING_CATALYSTSRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_FULLLENGTHLINING_CATALYSTSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_CATALYSTSRowChanging;
            
            public event LFS_WORK_FULLLENGTHLINING_CATALYSTSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_CATALYSTSRowChanged;
            
            public event LFS_WORK_FULLLENGTHLINING_CATALYSTSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_CATALYSTSRowDeleting;
            
            public event LFS_WORK_FULLLENGTHLINING_CATALYSTSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_CATALYSTSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_FULLLENGTHLINING_CATALYSTSRow(LFS_WORK_FULLLENGTHLINING_CATALYSTSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_CATALYSTSRow AddLFS_WORK_FULLLENGTHLINING_CATALYSTSRow(int CatalystID, string Name, double DefaultPercentageByWeight, bool Deleted, int COMPANY_ID) {
                LFS_WORK_FULLLENGTHLINING_CATALYSTSRow rowLFS_WORK_FULLLENGTHLINING_CATALYSTSRow = ((LFS_WORK_FULLLENGTHLINING_CATALYSTSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CatalystID,
                        Name,
                        DefaultPercentageByWeight,
                        Deleted,
                        COMPANY_ID};
                rowLFS_WORK_FULLLENGTHLINING_CATALYSTSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_FULLLENGTHLINING_CATALYSTSRow);
                return rowLFS_WORK_FULLLENGTHLINING_CATALYSTSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_CATALYSTSRow FindByCatalystID(int CatalystID) {
                return ((LFS_WORK_FULLLENGTHLINING_CATALYSTSRow)(this.Rows.Find(new object[] {
                            CatalystID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_FULLLENGTHLINING_CATALYSTSDataTable cln = ((LFS_WORK_FULLLENGTHLINING_CATALYSTSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_FULLLENGTHLINING_CATALYSTSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCatalystID = base.Columns["CatalystID"];
                this.columnName = base.Columns["Name"];
                this.columnDefaultPercentageByWeight = base.Columns["DefaultPercentageByWeight"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCatalystID = new global::System.Data.DataColumn("CatalystID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCatalystID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnDefaultPercentageByWeight = new global::System.Data.DataColumn("DefaultPercentageByWeight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultPercentageByWeight);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCatalystID}, true));
                this.columnCatalystID.AllowDBNull = false;
                this.columnCatalystID.Unique = true;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 25;
                this.columnDefaultPercentageByWeight.AllowDBNull = false;
                this.columnDefaultPercentageByWeight.Caption = "DefaultPercentageByWeigh";
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_CATALYSTSRow NewLFS_WORK_FULLLENGTHLINING_CATALYSTSRow() {
                return ((LFS_WORK_FULLLENGTHLINING_CATALYSTSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_FULLLENGTHLINING_CATALYSTSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_FULLLENGTHLINING_CATALYSTSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_CATALYSTSRowChanged != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_CATALYSTSRowChanged(this, new LFS_WORK_FULLLENGTHLINING_CATALYSTSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_CATALYSTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_CATALYSTSRowChanging != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_CATALYSTSRowChanging(this, new LFS_WORK_FULLLENGTHLINING_CATALYSTSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_CATALYSTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_CATALYSTSRowDeleted != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_CATALYSTSRowDeleted(this, new LFS_WORK_FULLLENGTHLINING_CATALYSTSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_CATALYSTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_CATALYSTSRowDeleting != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_CATALYSTSRowDeleting(this, new LFS_WORK_FULLLENGTHLINING_CATALYSTSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_CATALYSTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_FULLLENGTHLINING_CATALYSTSRow(LFS_WORK_FULLLENGTHLINING_CATALYSTSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_FULLLENGTHLINING_CATALYSTSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnSubject;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnDateTime_;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnLIBRARY_FILES_ID;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnWorkType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSDataTable() {
                this.TableName = "LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTime_Column {
                get {
                    return this.columnDateTime_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIBRARY_FILES_IDColumn {
                get {
                    return this.columnLIBRARY_FILES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkTypeColumn {
                get {
                    return this.columnWorkType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow this[int index] {
                get {
                    return ((LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowChanging;
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowChanged;
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowDeleting;
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow(LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow AddLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow(int WorkID, int RefID, string Type, string Subject, int UserID, System.DateTime DateTime_, string Comment, int LIBRARY_FILES_ID, bool Deleted, int COMPANY_ID, string WorkType) {
                LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow rowLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow = ((LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        RefID,
                        Type,
                        Subject,
                        UserID,
                        DateTime_,
                        Comment,
                        LIBRARY_FILES_ID,
                        Deleted,
                        COMPANY_ID,
                        WorkType};
                rowLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow);
                return rowLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow FindByWorkIDRefID(int WorkID, int RefID) {
                return ((LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow)(this.Rows.Find(new object[] {
                            WorkID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSDataTable cln = ((LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnType = base.Columns["Type"];
                this.columnSubject = base.Columns["Subject"];
                this.columnUserID = base.Columns["UserID"];
                this.columnDateTime_ = base.Columns["DateTime_"];
                this.columnComment = base.Columns["Comment"];
                this.columnLIBRARY_FILES_ID = base.Columns["LIBRARY_FILES_ID"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnWorkType = base.Columns["WorkType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnSubject = new global::System.Data.DataColumn("Subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnDateTime_ = new global::System.Data.DataColumn("DateTime_", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTime_);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnLIBRARY_FILES_ID = new global::System.Data.DataColumn("LIBRARY_FILES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIBRARY_FILES_ID);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnWorkType = new global::System.Data.DataColumn("WorkType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID,
                                this.columnRefID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnType.AllowDBNull = false;
                this.columnType.MaxLength = 50;
                this.columnSubject.AllowDBNull = false;
                this.columnSubject.MaxLength = 255;
                this.columnUserID.AllowDBNull = false;
                this.columnDateTime_.AllowDBNull = false;
                this.columnComment.AllowDBNull = false;
                this.columnComment.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnWorkType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow NewLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow() {
                return ((LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowChanged != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowChanged(this, new LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowChanging != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowChanging(this, new LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowDeleted != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowDeleted(this, new LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowDeleting != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowDeleting(this, new LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow(LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnReadingTime;
            
            private global::System.Data.DataColumn columnHeadFt;
            
            private global::System.Data.DataColumn columnBoilerInF;
            
            private global::System.Data.DataColumn columnBoilerOutF;
            
            private global::System.Data.DataColumn columnPumpFlow;
            
            private global::System.Data.DataColumn columnPumpPsi;
            
            private global::System.Data.DataColumn columnMH1Top;
            
            private global::System.Data.DataColumn columnMH1Bot;
            
            private global::System.Data.DataColumn columnMH2Top;
            
            private global::System.Data.DataColumn columnMH2Bot;
            
            private global::System.Data.DataColumn columnMH3Top;
            
            private global::System.Data.DataColumn columnMH3Bot;
            
            private global::System.Data.DataColumn columnMH4Top;
            
            private global::System.Data.DataColumn columnMH4Bot;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable() {
                this.TableName = "LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReadingTimeColumn {
                get {
                    return this.columnReadingTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeadFtColumn {
                get {
                    return this.columnHeadFt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BoilerInFColumn {
                get {
                    return this.columnBoilerInF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BoilerOutFColumn {
                get {
                    return this.columnBoilerOutF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PumpFlowColumn {
                get {
                    return this.columnPumpFlow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PumpPsiColumn {
                get {
                    return this.columnPumpPsi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MH1TopColumn {
                get {
                    return this.columnMH1Top;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MH1BotColumn {
                get {
                    return this.columnMH1Bot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MH2TopColumn {
                get {
                    return this.columnMH2Top;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MH2BotColumn {
                get {
                    return this.columnMH2Bot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MH3TopColumn {
                get {
                    return this.columnMH3Top;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MH3BotColumn {
                get {
                    return this.columnMH3Bot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MH4TopColumn {
                get {
                    return this.columnMH4Top;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MH4BotColumn {
                get {
                    return this.columnMH4Bot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow this[int index] {
                get {
                    return ((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChanging;
            
            public event LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChanged;
            
            public event LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowDeleting;
            
            public event LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow(LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow AddLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow(
                        int WorkID, 
                        int RefID, 
                        System.DateTime ReadingTime, 
                        double HeadFt, 
                        double BoilerInF, 
                        double BoilerOutF, 
                        double PumpFlow, 
                        double PumpPsi, 
                        double MH1Top, 
                        double MH1Bot, 
                        double MH2Top, 
                        double MH2Bot, 
                        double MH3Top, 
                        double MH3Bot, 
                        double MH4Top, 
                        double MH4Bot, 
                        string Comments, 
                        bool Deleted, 
                        int COMPANY_ID) {
                LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow rowLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow = ((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        RefID,
                        ReadingTime,
                        HeadFt,
                        BoilerInF,
                        BoilerOutF,
                        PumpFlow,
                        PumpPsi,
                        MH1Top,
                        MH1Bot,
                        MH2Top,
                        MH2Bot,
                        MH3Top,
                        MH3Bot,
                        MH4Top,
                        MH4Bot,
                        Comments,
                        Deleted,
                        COMPANY_ID};
                rowLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow);
                return rowLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow FindByWorkIDRefID(int WorkID, int RefID) {
                return ((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow)(this.Rows.Find(new object[] {
                            WorkID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable cln = ((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnReadingTime = base.Columns["ReadingTime"];
                this.columnHeadFt = base.Columns["HeadFt"];
                this.columnBoilerInF = base.Columns["BoilerInF"];
                this.columnBoilerOutF = base.Columns["BoilerOutF"];
                this.columnPumpFlow = base.Columns["PumpFlow"];
                this.columnPumpPsi = base.Columns["PumpPsi"];
                this.columnMH1Top = base.Columns["MH1Top"];
                this.columnMH1Bot = base.Columns["MH1Bot"];
                this.columnMH2Top = base.Columns["MH2Top"];
                this.columnMH2Bot = base.Columns["MH2Bot"];
                this.columnMH3Top = base.Columns["MH3Top"];
                this.columnMH3Bot = base.Columns["MH3Bot"];
                this.columnMH4Top = base.Columns["MH4Top"];
                this.columnMH4Bot = base.Columns["MH4Bot"];
                this.columnComments = base.Columns["Comments"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnReadingTime = new global::System.Data.DataColumn("ReadingTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReadingTime);
                this.columnHeadFt = new global::System.Data.DataColumn("HeadFt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadFt);
                this.columnBoilerInF = new global::System.Data.DataColumn("BoilerInF", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoilerInF);
                this.columnBoilerOutF = new global::System.Data.DataColumn("BoilerOutF", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoilerOutF);
                this.columnPumpFlow = new global::System.Data.DataColumn("PumpFlow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumpFlow);
                this.columnPumpPsi = new global::System.Data.DataColumn("PumpPsi", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumpPsi);
                this.columnMH1Top = new global::System.Data.DataColumn("MH1Top", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMH1Top);
                this.columnMH1Bot = new global::System.Data.DataColumn("MH1Bot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMH1Bot);
                this.columnMH2Top = new global::System.Data.DataColumn("MH2Top", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMH2Top);
                this.columnMH2Bot = new global::System.Data.DataColumn("MH2Bot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMH2Bot);
                this.columnMH3Top = new global::System.Data.DataColumn("MH3Top", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMH3Top);
                this.columnMH3Bot = new global::System.Data.DataColumn("MH3Bot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMH3Bot);
                this.columnMH4Top = new global::System.Data.DataColumn("MH4Top", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMH4Top);
                this.columnMH4Bot = new global::System.Data.DataColumn("MH4Bot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMH4Bot);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID,
                                this.columnRefID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnComments.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow NewLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow() {
                return ((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChanged != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChanged(this, new LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChanging != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChanging(this, new LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowDeleted != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowDeleted(this, new LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowDeleting != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowDeleting(this, new LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow(LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnCatalystID;
            
            private global::System.Data.DataColumn columnPercentageByWeight;
            
            private global::System.Data.DataColumn columnLbsForMixQuantity;
            
            private global::System.Data.DataColumn columnLbsForDrum;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable() {
                this.TableName = "LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CatalystIDColumn {
                get {
                    return this.columnCatalystID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PercentageByWeightColumn {
                get {
                    return this.columnPercentageByWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LbsForMixQuantityColumn {
                get {
                    return this.columnLbsForMixQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LbsForDrumColumn {
                get {
                    return this.columnLbsForDrum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow this[int index] {
                get {
                    return ((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChanging;
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChanged;
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowDeleting;
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow(LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow AddLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow(int WorkID, int RefID, LFS_WORK_FULLLENGTHLINING_CATALYSTSRow parentLFS_WORK_FULLLENGTHLINING_CATALYSTSRowByLFS_WORK_FULLLENGTHLINING_CATALYSTS_LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS, double PercentageByWeight, double LbsForMixQuantity, string LbsForDrum, bool Deleted, int COMPANY_ID) {
                LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow rowLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow = ((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        RefID,
                        null,
                        PercentageByWeight,
                        LbsForMixQuantity,
                        LbsForDrum,
                        Deleted,
                        COMPANY_ID};
                if ((parentLFS_WORK_FULLLENGTHLINING_CATALYSTSRowByLFS_WORK_FULLLENGTHLINING_CATALYSTS_LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS != null)) {
                    columnValuesArray[2] = parentLFS_WORK_FULLLENGTHLINING_CATALYSTSRowByLFS_WORK_FULLLENGTHLINING_CATALYSTS_LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS[0];
                }
                rowLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow);
                return rowLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow FindByWorkIDRefID(int WorkID, int RefID) {
                return ((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow)(this.Rows.Find(new object[] {
                            WorkID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable cln = ((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnCatalystID = base.Columns["CatalystID"];
                this.columnPercentageByWeight = base.Columns["PercentageByWeight"];
                this.columnLbsForMixQuantity = base.Columns["LbsForMixQuantity"];
                this.columnLbsForDrum = base.Columns["LbsForDrum"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnCatalystID = new global::System.Data.DataColumn("CatalystID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCatalystID);
                this.columnPercentageByWeight = new global::System.Data.DataColumn("PercentageByWeight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageByWeight);
                this.columnLbsForMixQuantity = new global::System.Data.DataColumn("LbsForMixQuantity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLbsForMixQuantity);
                this.columnLbsForDrum = new global::System.Data.DataColumn("LbsForDrum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLbsForDrum);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID,
                                this.columnRefID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnCatalystID.AllowDBNull = false;
                this.columnPercentageByWeight.AllowDBNull = false;
                this.columnLbsForMixQuantity.AllowDBNull = false;
                this.columnLbsForDrum.AllowDBNull = false;
                this.columnLbsForDrum.MaxLength = 50;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow NewLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow() {
                return ((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChanged != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChanged(this, new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChanging != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChanging(this, new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowDeleted != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowDeleted(this, new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowDeleting != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowDeleting(this, new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow(LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnPipeType;
            
            private global::System.Data.DataColumn columnPipeCondition;
            
            private global::System.Data.DataColumn columnGroundMoisture;
            
            private global::System.Data.DataColumn columnBoilerSize;
            
            private global::System.Data.DataColumn columnPumpTotalCapacity;
            
            private global::System.Data.DataColumn columnLayFlatSize;
            
            private global::System.Data.DataColumn columnLayFlatQuantityTotal;
            
            private global::System.Data.DataColumn columnWaterStartTemp;
            
            private global::System.Data.DataColumn columnTemp1;
            
            private global::System.Data.DataColumn columnHoldAtT1;
            
            private global::System.Data.DataColumn columnTempT2;
            
            private global::System.Data.DataColumn columnCookAtT2;
            
            private global::System.Data.DataColumn columnCoolDownFor;
            
            private global::System.Data.DataColumn columnCoolToTemp;
            
            private global::System.Data.DataColumn columnDropInPipeRun;
            
            private global::System.Data.DataColumn columnPipeSlopOf;
            
            private global::System.Data.DataColumn columnF45F120;
            
            private global::System.Data.DataColumn columnHold;
            
            private global::System.Data.DataColumn columnF120F185;
            
            private global::System.Data.DataColumn columnCookTime;
            
            private global::System.Data.DataColumn columnCoolTime;
            
            private global::System.Data.DataColumn columnAproxTotal;
            
            private global::System.Data.DataColumn columnWaterChangesPerHour;
            
            private global::System.Data.DataColumn columnReturnWaterVelocity;
            
            private global::System.Data.DataColumn columnLayflatBackPressure;
            
            private global::System.Data.DataColumn columnPumpLiftAtIdealHead;
            
            private global::System.Data.DataColumn columnWaterToFillLinerColumn;
            
            private global::System.Data.DataColumn columnWaterPerFit;
            
            private global::System.Data.DataColumn columnInstallationResults;
            
            private global::System.Data.DataColumn columnLinerTubeLabel;
            
            private global::System.Data.DataColumn columnHeadsIdealLabel;
            
            private global::System.Data.DataColumn columnPumpingAndCirculationLabel;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable() {
                this.TableName = "LFS_WORK_FULLLENGTHLINING_INVERSION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PipeTypeColumn {
                get {
                    return this.columnPipeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PipeConditionColumn {
                get {
                    return this.columnPipeCondition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroundMoistureColumn {
                get {
                    return this.columnGroundMoisture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BoilerSizeColumn {
                get {
                    return this.columnBoilerSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PumpTotalCapacityColumn {
                get {
                    return this.columnPumpTotalCapacity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LayFlatSizeColumn {
                get {
                    return this.columnLayFlatSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LayFlatQuantityTotalColumn {
                get {
                    return this.columnLayFlatQuantityTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WaterStartTempColumn {
                get {
                    return this.columnWaterStartTemp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Temp1Column {
                get {
                    return this.columnTemp1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoldAtT1Column {
                get {
                    return this.columnHoldAtT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TempT2Column {
                get {
                    return this.columnTempT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CookAtT2Column {
                get {
                    return this.columnCookAtT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoolDownForColumn {
                get {
                    return this.columnCoolDownFor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoolToTempColumn {
                get {
                    return this.columnCoolToTemp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DropInPipeRunColumn {
                get {
                    return this.columnDropInPipeRun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PipeSlopOfColumn {
                get {
                    return this.columnPipeSlopOf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F45F120Column {
                get {
                    return this.columnF45F120;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoldColumn {
                get {
                    return this.columnHold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F120F185Column {
                get {
                    return this.columnF120F185;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CookTimeColumn {
                get {
                    return this.columnCookTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoolTimeColumn {
                get {
                    return this.columnCoolTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AproxTotalColumn {
                get {
                    return this.columnAproxTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WaterChangesPerHourColumn {
                get {
                    return this.columnWaterChangesPerHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnWaterVelocityColumn {
                get {
                    return this.columnReturnWaterVelocity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LayflatBackPressureColumn {
                get {
                    return this.columnLayflatBackPressure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PumpLiftAtIdealHeadColumn {
                get {
                    return this.columnPumpLiftAtIdealHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WaterToFillLinerColumnColumn {
                get {
                    return this.columnWaterToFillLinerColumn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WaterPerFitColumn {
                get {
                    return this.columnWaterPerFit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallationResultsColumn {
                get {
                    return this.columnInstallationResults;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerTubeLabelColumn {
                get {
                    return this.columnLinerTubeLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeadsIdealLabelColumn {
                get {
                    return this.columnHeadsIdealLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PumpingAndCirculationLabelColumn {
                get {
                    return this.columnPumpingAndCirculationLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSIONRow this[int index] {
                get {
                    return ((LFS_WORK_FULLLENGTHLINING_INVERSIONRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_INVERSIONRowChanging;
            
            public event LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_INVERSIONRowChanged;
            
            public event LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_INVERSIONRowDeleting;
            
            public event LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_INVERSIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_FULLLENGTHLINING_INVERSIONRow(LFS_WORK_FULLLENGTHLINING_INVERSIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSIONRow AddLFS_WORK_FULLLENGTHLINING_INVERSIONRow(
                        int WorkID, 
                        string Comment, 
                        string PipeType, 
                        string PipeCondition, 
                        string GroundMoisture, 
                        double BoilerSize, 
                        double PumpTotalCapacity, 
                        double LayFlatSize, 
                        double LayFlatQuantityTotal, 
                        double WaterStartTemp, 
                        double Temp1, 
                        double HoldAtT1, 
                        double TempT2, 
                        double CookAtT2, 
                        double CoolDownFor, 
                        double CoolToTemp, 
                        double DropInPipeRun, 
                        double PipeSlopOf, 
                        double F45F120, 
                        double Hold, 
                        double F120F185, 
                        double CookTime, 
                        double CoolTime, 
                        double AproxTotal, 
                        double WaterChangesPerHour, 
                        double ReturnWaterVelocity, 
                        double LayflatBackPressure, 
                        double PumpLiftAtIdealHead, 
                        double WaterToFillLinerColumn, 
                        double WaterPerFit, 
                        string InstallationResults, 
                        string LinerTubeLabel, 
                        string HeadsIdealLabel, 
                        string PumpingAndCirculationLabel, 
                        bool Deleted, 
                        int COMPANY_ID) {
                LFS_WORK_FULLLENGTHLINING_INVERSIONRow rowLFS_WORK_FULLLENGTHLINING_INVERSIONRow = ((LFS_WORK_FULLLENGTHLINING_INVERSIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        Comment,
                        PipeType,
                        PipeCondition,
                        GroundMoisture,
                        BoilerSize,
                        PumpTotalCapacity,
                        LayFlatSize,
                        LayFlatQuantityTotal,
                        WaterStartTemp,
                        Temp1,
                        HoldAtT1,
                        TempT2,
                        CookAtT2,
                        CoolDownFor,
                        CoolToTemp,
                        DropInPipeRun,
                        PipeSlopOf,
                        F45F120,
                        Hold,
                        F120F185,
                        CookTime,
                        CoolTime,
                        AproxTotal,
                        WaterChangesPerHour,
                        ReturnWaterVelocity,
                        LayflatBackPressure,
                        PumpLiftAtIdealHead,
                        WaterToFillLinerColumn,
                        WaterPerFit,
                        InstallationResults,
                        LinerTubeLabel,
                        HeadsIdealLabel,
                        PumpingAndCirculationLabel,
                        Deleted,
                        COMPANY_ID};
                rowLFS_WORK_FULLLENGTHLINING_INVERSIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_FULLLENGTHLINING_INVERSIONRow);
                return rowLFS_WORK_FULLLENGTHLINING_INVERSIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSIONRow FindByWorkID(int WorkID) {
                return ((LFS_WORK_FULLLENGTHLINING_INVERSIONRow)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable cln = ((LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnComment = base.Columns["Comment"];
                this.columnPipeType = base.Columns["PipeType"];
                this.columnPipeCondition = base.Columns["PipeCondition"];
                this.columnGroundMoisture = base.Columns["GroundMoisture"];
                this.columnBoilerSize = base.Columns["BoilerSize"];
                this.columnPumpTotalCapacity = base.Columns["PumpTotalCapacity"];
                this.columnLayFlatSize = base.Columns["LayFlatSize"];
                this.columnLayFlatQuantityTotal = base.Columns["LayFlatQuantityTotal"];
                this.columnWaterStartTemp = base.Columns["WaterStartTemp"];
                this.columnTemp1 = base.Columns["Temp1"];
                this.columnHoldAtT1 = base.Columns["HoldAtT1"];
                this.columnTempT2 = base.Columns["TempT2"];
                this.columnCookAtT2 = base.Columns["CookAtT2"];
                this.columnCoolDownFor = base.Columns["CoolDownFor"];
                this.columnCoolToTemp = base.Columns["CoolToTemp"];
                this.columnDropInPipeRun = base.Columns["DropInPipeRun"];
                this.columnPipeSlopOf = base.Columns["PipeSlopOf"];
                this.columnF45F120 = base.Columns["F45F120"];
                this.columnHold = base.Columns["Hold"];
                this.columnF120F185 = base.Columns["F120F185"];
                this.columnCookTime = base.Columns["CookTime"];
                this.columnCoolTime = base.Columns["CoolTime"];
                this.columnAproxTotal = base.Columns["AproxTotal"];
                this.columnWaterChangesPerHour = base.Columns["WaterChangesPerHour"];
                this.columnReturnWaterVelocity = base.Columns["ReturnWaterVelocity"];
                this.columnLayflatBackPressure = base.Columns["LayflatBackPressure"];
                this.columnPumpLiftAtIdealHead = base.Columns["PumpLiftAtIdealHead"];
                this.columnWaterToFillLinerColumn = base.Columns["WaterToFillLinerColumn"];
                this.columnWaterPerFit = base.Columns["WaterPerFit"];
                this.columnInstallationResults = base.Columns["InstallationResults"];
                this.columnLinerTubeLabel = base.Columns["LinerTubeLabel"];
                this.columnHeadsIdealLabel = base.Columns["HeadsIdealLabel"];
                this.columnPumpingAndCirculationLabel = base.Columns["PumpingAndCirculationLabel"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnPipeType = new global::System.Data.DataColumn("PipeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeType);
                this.columnPipeCondition = new global::System.Data.DataColumn("PipeCondition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeCondition);
                this.columnGroundMoisture = new global::System.Data.DataColumn("GroundMoisture", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroundMoisture);
                this.columnBoilerSize = new global::System.Data.DataColumn("BoilerSize", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoilerSize);
                this.columnPumpTotalCapacity = new global::System.Data.DataColumn("PumpTotalCapacity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumpTotalCapacity);
                this.columnLayFlatSize = new global::System.Data.DataColumn("LayFlatSize", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLayFlatSize);
                this.columnLayFlatQuantityTotal = new global::System.Data.DataColumn("LayFlatQuantityTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLayFlatQuantityTotal);
                this.columnWaterStartTemp = new global::System.Data.DataColumn("WaterStartTemp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaterStartTemp);
                this.columnTemp1 = new global::System.Data.DataColumn("Temp1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemp1);
                this.columnHoldAtT1 = new global::System.Data.DataColumn("HoldAtT1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoldAtT1);
                this.columnTempT2 = new global::System.Data.DataColumn("TempT2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTempT2);
                this.columnCookAtT2 = new global::System.Data.DataColumn("CookAtT2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCookAtT2);
                this.columnCoolDownFor = new global::System.Data.DataColumn("CoolDownFor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoolDownFor);
                this.columnCoolToTemp = new global::System.Data.DataColumn("CoolToTemp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoolToTemp);
                this.columnDropInPipeRun = new global::System.Data.DataColumn("DropInPipeRun", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropInPipeRun);
                this.columnPipeSlopOf = new global::System.Data.DataColumn("PipeSlopOf", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeSlopOf);
                this.columnF45F120 = new global::System.Data.DataColumn("F45F120", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF45F120);
                this.columnHold = new global::System.Data.DataColumn("Hold", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHold);
                this.columnF120F185 = new global::System.Data.DataColumn("F120F185", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF120F185);
                this.columnCookTime = new global::System.Data.DataColumn("CookTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCookTime);
                this.columnCoolTime = new global::System.Data.DataColumn("CoolTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoolTime);
                this.columnAproxTotal = new global::System.Data.DataColumn("AproxTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAproxTotal);
                this.columnWaterChangesPerHour = new global::System.Data.DataColumn("WaterChangesPerHour", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaterChangesPerHour);
                this.columnReturnWaterVelocity = new global::System.Data.DataColumn("ReturnWaterVelocity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnWaterVelocity);
                this.columnLayflatBackPressure = new global::System.Data.DataColumn("LayflatBackPressure", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLayflatBackPressure);
                this.columnPumpLiftAtIdealHead = new global::System.Data.DataColumn("PumpLiftAtIdealHead", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumpLiftAtIdealHead);
                this.columnWaterToFillLinerColumn = new global::System.Data.DataColumn("WaterToFillLinerColumn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaterToFillLinerColumn);
                this.columnWaterPerFit = new global::System.Data.DataColumn("WaterPerFit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaterPerFit);
                this.columnInstallationResults = new global::System.Data.DataColumn("InstallationResults", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallationResults);
                this.columnLinerTubeLabel = new global::System.Data.DataColumn("LinerTubeLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerTubeLabel);
                this.columnHeadsIdealLabel = new global::System.Data.DataColumn("HeadsIdealLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadsIdealLabel);
                this.columnPumpingAndCirculationLabel = new global::System.Data.DataColumn("PumpingAndCirculationLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumpingAndCirculationLabel);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.Unique = true;
                this.columnComment.MaxLength = 1073741823;
                this.columnPipeType.AllowDBNull = false;
                this.columnPipeType.MaxLength = 25;
                this.columnPipeCondition.AllowDBNull = false;
                this.columnPipeCondition.MaxLength = 25;
                this.columnGroundMoisture.AllowDBNull = false;
                this.columnGroundMoisture.MaxLength = 25;
                this.columnBoilerSize.AllowDBNull = false;
                this.columnPumpTotalCapacity.AllowDBNull = false;
                this.columnLayFlatSize.AllowDBNull = false;
                this.columnLayFlatQuantityTotal.AllowDBNull = false;
                this.columnWaterStartTemp.AllowDBNull = false;
                this.columnTemp1.AllowDBNull = false;
                this.columnHoldAtT1.AllowDBNull = false;
                this.columnTempT2.AllowDBNull = false;
                this.columnCookAtT2.AllowDBNull = false;
                this.columnCoolDownFor.AllowDBNull = false;
                this.columnCoolToTemp.AllowDBNull = false;
                this.columnDropInPipeRun.AllowDBNull = false;
                this.columnPipeSlopOf.AllowDBNull = false;
                this.columnF45F120.AllowDBNull = false;
                this.columnHold.AllowDBNull = false;
                this.columnF120F185.AllowDBNull = false;
                this.columnCookTime.AllowDBNull = false;
                this.columnCoolTime.AllowDBNull = false;
                this.columnAproxTotal.AllowDBNull = false;
                this.columnWaterChangesPerHour.AllowDBNull = false;
                this.columnReturnWaterVelocity.AllowDBNull = false;
                this.columnLayflatBackPressure.AllowDBNull = false;
                this.columnPumpLiftAtIdealHead.AllowDBNull = false;
                this.columnWaterToFillLinerColumn.AllowDBNull = false;
                this.columnWaterPerFit.AllowDBNull = false;
                this.columnInstallationResults.MaxLength = 1073741823;
                this.columnLinerTubeLabel.AllowDBNull = false;
                this.columnLinerTubeLabel.MaxLength = 100;
                this.columnHeadsIdealLabel.AllowDBNull = false;
                this.columnHeadsIdealLabel.MaxLength = 100;
                this.columnPumpingAndCirculationLabel.AllowDBNull = false;
                this.columnPumpingAndCirculationLabel.MaxLength = 100;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSIONRow NewLFS_WORK_FULLLENGTHLINING_INVERSIONRow() {
                return ((LFS_WORK_FULLLENGTHLINING_INVERSIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_FULLLENGTHLINING_INVERSIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_FULLLENGTHLINING_INVERSIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_INVERSIONRowChanged != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_INVERSIONRowChanged(this, new LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_INVERSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_INVERSIONRowChanging != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_INVERSIONRowChanging(this, new LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_INVERSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_INVERSIONRowDeleted != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_INVERSIONRowDeleted(this, new LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_INVERSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_INVERSIONRowDeleting != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_INVERSIONRowDeleting(this, new LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_INVERSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_FULLLENGTHLINING_INVERSIONRow(LFS_WORK_FULLLENGTHLINING_INVERSIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_FULLLENGTHLINING_WETOUTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnLinerTube;
            
            private global::System.Data.DataColumn columnResinID;
            
            private global::System.Data.DataColumn columnExcessResin;
            
            private global::System.Data.DataColumn columnPoundsDrums;
            
            private global::System.Data.DataColumn columnDrumDiameter;
            
            private global::System.Data.DataColumn columnHoistMaximumHeight;
            
            private global::System.Data.DataColumn columnHoistMinimumHeight;
            
            private global::System.Data.DataColumn columnDownDropTubeLenght;
            
            private global::System.Data.DataColumn columnPumpHeightAboveGround;
            
            private global::System.Data.DataColumn columnTubeResinToFeltFactor;
            
            private global::System.Data.DataColumn columnDateOfSheet;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnRunDetails;
            
            private global::System.Data.DataColumn columnRunDetails2;
            
            private global::System.Data.DataColumn columnWetOutDate;
            
            private global::System.Data.DataColumn columnInstallDate;
            
            private global::System.Data.DataColumn columnThickness;
            
            private global::System.Data.DataColumn columnLengthToLine;
            
            private global::System.Data.DataColumn columnPlusExtra;
            
            private global::System.Data.DataColumn columnForTurnOffset;
            
            private global::System.Data.DataColumn columnLengthToWetOut;
            
            private global::System.Data.DataColumn columnTubeMaxColdHead;
            
            private global::System.Data.DataColumn columnTubeMaxColdHeadPsi;
            
            private global::System.Data.DataColumn columnTubeMaxHotHead;
            
            private global::System.Data.DataColumn columnTubeMaxHotHeadPsi;
            
            private global::System.Data.DataColumn columnTubeIdealHead;
            
            private global::System.Data.DataColumn columnTubeIdealHeadPsi;
            
            private global::System.Data.DataColumn columnNetResinForTube;
            
            private global::System.Data.DataColumn columnNetResinForTubeUsgals;
            
            private global::System.Data.DataColumn columnNetResinForTubeDrumsIns;
            
            private global::System.Data.DataColumn columnNetResinForTubeLbsFt;
            
            private global::System.Data.DataColumn columnNetResinForTubeUsgFt;
            
            private global::System.Data.DataColumn columnExtraResinForMix;
            
            private global::System.Data.DataColumn columnExtraLbsForMix;
            
            private global::System.Data.DataColumn columnTotalMixQuantity;
            
            private global::System.Data.DataColumn columnTotalMixQuantityUsgals;
            
            private global::System.Data.DataColumn columnTotalMixQuantityDrumsIns;
            
            private global::System.Data.DataColumn columnInversionType;
            
            private global::System.Data.DataColumn columnDepthOfInversionMH;
            
            private global::System.Data.DataColumn columnTubeForColumn;
            
            private global::System.Data.DataColumn columnTubeForStartDry;
            
            private global::System.Data.DataColumn columnTotalTube;
            
            private global::System.Data.DataColumn columnDropTubeConnects;
            
            private global::System.Data.DataColumn columnAllowsHeadTo;
            
            private global::System.Data.DataColumn columnRollerGap;
            
            private global::System.Data.DataColumn columnHeightNeeded;
            
            private global::System.Data.DataColumn columnAvailable;
            
            private global::System.Data.DataColumn columnHoistHeight;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnResinsLabel;
            
            private global::System.Data.DataColumn columnDrumContainsLabel;
            
            private global::System.Data.DataColumn columnLinerTubeLabel;
            
            private global::System.Data.DataColumn columnForLbDrumsLabel;
            
            private global::System.Data.DataColumn columnNetResinLabel;
            
            private global::System.Data.DataColumn columnCatalystLabel;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUTDataTable() {
                this.TableName = "LFS_WORK_FULLLENGTHLINING_WETOUT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_WETOUTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_FULLLENGTHLINING_WETOUTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerTubeColumn {
                get {
                    return this.columnLinerTube;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResinIDColumn {
                get {
                    return this.columnResinID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExcessResinColumn {
                get {
                    return this.columnExcessResin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PoundsDrumsColumn {
                get {
                    return this.columnPoundsDrums;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DrumDiameterColumn {
                get {
                    return this.columnDrumDiameter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoistMaximumHeightColumn {
                get {
                    return this.columnHoistMaximumHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoistMinimumHeightColumn {
                get {
                    return this.columnHoistMinimumHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DownDropTubeLenghtColumn {
                get {
                    return this.columnDownDropTubeLenght;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PumpHeightAboveGroundColumn {
                get {
                    return this.columnPumpHeightAboveGround;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeResinToFeltFactorColumn {
                get {
                    return this.columnTubeResinToFeltFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateOfSheetColumn {
                get {
                    return this.columnDateOfSheet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RunDetailsColumn {
                get {
                    return this.columnRunDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RunDetails2Column {
                get {
                    return this.columnRunDetails2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WetOutDateColumn {
                get {
                    return this.columnWetOutDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallDateColumn {
                get {
                    return this.columnInstallDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThicknessColumn {
                get {
                    return this.columnThickness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthToLineColumn {
                get {
                    return this.columnLengthToLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlusExtraColumn {
                get {
                    return this.columnPlusExtra;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ForTurnOffsetColumn {
                get {
                    return this.columnForTurnOffset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthToWetOutColumn {
                get {
                    return this.columnLengthToWetOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeMaxColdHeadColumn {
                get {
                    return this.columnTubeMaxColdHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeMaxColdHeadPsiColumn {
                get {
                    return this.columnTubeMaxColdHeadPsi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeMaxHotHeadColumn {
                get {
                    return this.columnTubeMaxHotHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeMaxHotHeadPsiColumn {
                get {
                    return this.columnTubeMaxHotHeadPsi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeIdealHeadColumn {
                get {
                    return this.columnTubeIdealHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeIdealHeadPsiColumn {
                get {
                    return this.columnTubeIdealHeadPsi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetResinForTubeColumn {
                get {
                    return this.columnNetResinForTube;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetResinForTubeUsgalsColumn {
                get {
                    return this.columnNetResinForTubeUsgals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetResinForTubeDrumsInsColumn {
                get {
                    return this.columnNetResinForTubeDrumsIns;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetResinForTubeLbsFtColumn {
                get {
                    return this.columnNetResinForTubeLbsFt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetResinForTubeUsgFtColumn {
                get {
                    return this.columnNetResinForTubeUsgFt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraResinForMixColumn {
                get {
                    return this.columnExtraResinForMix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraLbsForMixColumn {
                get {
                    return this.columnExtraLbsForMix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalMixQuantityColumn {
                get {
                    return this.columnTotalMixQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalMixQuantityUsgalsColumn {
                get {
                    return this.columnTotalMixQuantityUsgals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalMixQuantityDrumsInsColumn {
                get {
                    return this.columnTotalMixQuantityDrumsIns;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InversionTypeColumn {
                get {
                    return this.columnInversionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepthOfInversionMHColumn {
                get {
                    return this.columnDepthOfInversionMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeForColumnColumn {
                get {
                    return this.columnTubeForColumn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeForStartDryColumn {
                get {
                    return this.columnTubeForStartDry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalTubeColumn {
                get {
                    return this.columnTotalTube;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DropTubeConnectsColumn {
                get {
                    return this.columnDropTubeConnects;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllowsHeadToColumn {
                get {
                    return this.columnAllowsHeadTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollerGapColumn {
                get {
                    return this.columnRollerGap;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeightNeededColumn {
                get {
                    return this.columnHeightNeeded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AvailableColumn {
                get {
                    return this.columnAvailable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoistHeightColumn {
                get {
                    return this.columnHoistHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResinsLabelColumn {
                get {
                    return this.columnResinsLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DrumContainsLabelColumn {
                get {
                    return this.columnDrumContainsLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerTubeLabelColumn {
                get {
                    return this.columnLinerTubeLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ForLbDrumsLabelColumn {
                get {
                    return this.columnForLbDrumsLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetResinLabelColumn {
                get {
                    return this.columnNetResinLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CatalystLabelColumn {
                get {
                    return this.columnCatalystLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUTRow this[int index] {
                get {
                    return ((LFS_WORK_FULLLENGTHLINING_WETOUTRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUTRowChanging;
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUTRowChanged;
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUTRowDeleting;
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_FULLLENGTHLINING_WETOUTRow(LFS_WORK_FULLLENGTHLINING_WETOUTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUTRow AddLFS_WORK_FULLLENGTHLINING_WETOUTRow(
                        int WorkID, 
                        string LinerTube, 
                        int ResinID, 
                        double ExcessResin, 
                        string PoundsDrums, 
                        double DrumDiameter, 
                        double HoistMaximumHeight, 
                        double HoistMinimumHeight, 
                        double DownDropTubeLenght, 
                        double PumpHeightAboveGround, 
                        int TubeResinToFeltFactor, 
                        System.DateTime DateOfSheet, 
                        int EmployeeID, 
                        string RunDetails, 
                        string RunDetails2, 
                        System.DateTime WetOutDate, 
                        System.DateTime InstallDate, 
                        string Thickness, 
                        double LengthToLine, 
                        double PlusExtra, 
                        double ForTurnOffset, 
                        double LengthToWetOut, 
                        double TubeMaxColdHead, 
                        double TubeMaxColdHeadPsi, 
                        double TubeMaxHotHead, 
                        double TubeMaxHotHeadPsi, 
                        double TubeIdealHead, 
                        double TubeIdealHeadPsi, 
                        double NetResinForTube, 
                        double NetResinForTubeUsgals, 
                        string NetResinForTubeDrumsIns, 
                        double NetResinForTubeLbsFt, 
                        double NetResinForTubeUsgFt, 
                        int ExtraResinForMix, 
                        double ExtraLbsForMix, 
                        double TotalMixQuantity, 
                        double TotalMixQuantityUsgals, 
                        string TotalMixQuantityDrumsIns, 
                        string InversionType, 
                        double DepthOfInversionMH, 
                        double TubeForColumn, 
                        double TubeForStartDry, 
                        double TotalTube, 
                        string DropTubeConnects, 
                        double AllowsHeadTo, 
                        double RollerGap, 
                        double HeightNeeded, 
                        string Available, 
                        string HoistHeight, 
                        string Comments, 
                        string ResinsLabel, 
                        string DrumContainsLabel, 
                        string LinerTubeLabel, 
                        string ForLbDrumsLabel, 
                        string NetResinLabel, 
                        string CatalystLabel, 
                        bool Deleted, 
                        int COMPANY_ID) {
                LFS_WORK_FULLLENGTHLINING_WETOUTRow rowLFS_WORK_FULLLENGTHLINING_WETOUTRow = ((LFS_WORK_FULLLENGTHLINING_WETOUTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        LinerTube,
                        ResinID,
                        ExcessResin,
                        PoundsDrums,
                        DrumDiameter,
                        HoistMaximumHeight,
                        HoistMinimumHeight,
                        DownDropTubeLenght,
                        PumpHeightAboveGround,
                        TubeResinToFeltFactor,
                        DateOfSheet,
                        EmployeeID,
                        RunDetails,
                        RunDetails2,
                        WetOutDate,
                        InstallDate,
                        Thickness,
                        LengthToLine,
                        PlusExtra,
                        ForTurnOffset,
                        LengthToWetOut,
                        TubeMaxColdHead,
                        TubeMaxColdHeadPsi,
                        TubeMaxHotHead,
                        TubeMaxHotHeadPsi,
                        TubeIdealHead,
                        TubeIdealHeadPsi,
                        NetResinForTube,
                        NetResinForTubeUsgals,
                        NetResinForTubeDrumsIns,
                        NetResinForTubeLbsFt,
                        NetResinForTubeUsgFt,
                        ExtraResinForMix,
                        ExtraLbsForMix,
                        TotalMixQuantity,
                        TotalMixQuantityUsgals,
                        TotalMixQuantityDrumsIns,
                        InversionType,
                        DepthOfInversionMH,
                        TubeForColumn,
                        TubeForStartDry,
                        TotalTube,
                        DropTubeConnects,
                        AllowsHeadTo,
                        RollerGap,
                        HeightNeeded,
                        Available,
                        HoistHeight,
                        Comments,
                        ResinsLabel,
                        DrumContainsLabel,
                        LinerTubeLabel,
                        ForLbDrumsLabel,
                        NetResinLabel,
                        CatalystLabel,
                        Deleted,
                        COMPANY_ID};
                rowLFS_WORK_FULLLENGTHLINING_WETOUTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_FULLLENGTHLINING_WETOUTRow);
                return rowLFS_WORK_FULLLENGTHLINING_WETOUTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUTRow FindByWorkID(int WorkID) {
                return ((LFS_WORK_FULLLENGTHLINING_WETOUTRow)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_FULLLENGTHLINING_WETOUTDataTable cln = ((LFS_WORK_FULLLENGTHLINING_WETOUTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_FULLLENGTHLINING_WETOUTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnLinerTube = base.Columns["LinerTube"];
                this.columnResinID = base.Columns["ResinID"];
                this.columnExcessResin = base.Columns["ExcessResin"];
                this.columnPoundsDrums = base.Columns["PoundsDrums"];
                this.columnDrumDiameter = base.Columns["DrumDiameter"];
                this.columnHoistMaximumHeight = base.Columns["HoistMaximumHeight"];
                this.columnHoistMinimumHeight = base.Columns["HoistMinimumHeight"];
                this.columnDownDropTubeLenght = base.Columns["DownDropTubeLenght"];
                this.columnPumpHeightAboveGround = base.Columns["PumpHeightAboveGround"];
                this.columnTubeResinToFeltFactor = base.Columns["TubeResinToFeltFactor"];
                this.columnDateOfSheet = base.Columns["DateOfSheet"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnRunDetails = base.Columns["RunDetails"];
                this.columnRunDetails2 = base.Columns["RunDetails2"];
                this.columnWetOutDate = base.Columns["WetOutDate"];
                this.columnInstallDate = base.Columns["InstallDate"];
                this.columnThickness = base.Columns["Thickness"];
                this.columnLengthToLine = base.Columns["LengthToLine"];
                this.columnPlusExtra = base.Columns["PlusExtra"];
                this.columnForTurnOffset = base.Columns["ForTurnOffset"];
                this.columnLengthToWetOut = base.Columns["LengthToWetOut"];
                this.columnTubeMaxColdHead = base.Columns["TubeMaxColdHead"];
                this.columnTubeMaxColdHeadPsi = base.Columns["TubeMaxColdHeadPsi"];
                this.columnTubeMaxHotHead = base.Columns["TubeMaxHotHead"];
                this.columnTubeMaxHotHeadPsi = base.Columns["TubeMaxHotHeadPsi"];
                this.columnTubeIdealHead = base.Columns["TubeIdealHead"];
                this.columnTubeIdealHeadPsi = base.Columns["TubeIdealHeadPsi"];
                this.columnNetResinForTube = base.Columns["NetResinForTube"];
                this.columnNetResinForTubeUsgals = base.Columns["NetResinForTubeUsgals"];
                this.columnNetResinForTubeDrumsIns = base.Columns["NetResinForTubeDrumsIns"];
                this.columnNetResinForTubeLbsFt = base.Columns["NetResinForTubeLbsFt"];
                this.columnNetResinForTubeUsgFt = base.Columns["NetResinForTubeUsgFt"];
                this.columnExtraResinForMix = base.Columns["ExtraResinForMix"];
                this.columnExtraLbsForMix = base.Columns["ExtraLbsForMix"];
                this.columnTotalMixQuantity = base.Columns["TotalMixQuantity"];
                this.columnTotalMixQuantityUsgals = base.Columns["TotalMixQuantityUsgals"];
                this.columnTotalMixQuantityDrumsIns = base.Columns["TotalMixQuantityDrumsIns"];
                this.columnInversionType = base.Columns["InversionType"];
                this.columnDepthOfInversionMH = base.Columns["DepthOfInversionMH"];
                this.columnTubeForColumn = base.Columns["TubeForColumn"];
                this.columnTubeForStartDry = base.Columns["TubeForStartDry"];
                this.columnTotalTube = base.Columns["TotalTube"];
                this.columnDropTubeConnects = base.Columns["DropTubeConnects"];
                this.columnAllowsHeadTo = base.Columns["AllowsHeadTo"];
                this.columnRollerGap = base.Columns["RollerGap"];
                this.columnHeightNeeded = base.Columns["HeightNeeded"];
                this.columnAvailable = base.Columns["Available"];
                this.columnHoistHeight = base.Columns["HoistHeight"];
                this.columnComments = base.Columns["Comments"];
                this.columnResinsLabel = base.Columns["ResinsLabel"];
                this.columnDrumContainsLabel = base.Columns["DrumContainsLabel"];
                this.columnLinerTubeLabel = base.Columns["LinerTubeLabel"];
                this.columnForLbDrumsLabel = base.Columns["ForLbDrumsLabel"];
                this.columnNetResinLabel = base.Columns["NetResinLabel"];
                this.columnCatalystLabel = base.Columns["CatalystLabel"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnLinerTube = new global::System.Data.DataColumn("LinerTube", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerTube);
                this.columnResinID = new global::System.Data.DataColumn("ResinID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResinID);
                this.columnExcessResin = new global::System.Data.DataColumn("ExcessResin", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcessResin);
                this.columnPoundsDrums = new global::System.Data.DataColumn("PoundsDrums", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoundsDrums);
                this.columnDrumDiameter = new global::System.Data.DataColumn("DrumDiameter", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrumDiameter);
                this.columnHoistMaximumHeight = new global::System.Data.DataColumn("HoistMaximumHeight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoistMaximumHeight);
                this.columnHoistMinimumHeight = new global::System.Data.DataColumn("HoistMinimumHeight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoistMinimumHeight);
                this.columnDownDropTubeLenght = new global::System.Data.DataColumn("DownDropTubeLenght", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDownDropTubeLenght);
                this.columnPumpHeightAboveGround = new global::System.Data.DataColumn("PumpHeightAboveGround", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumpHeightAboveGround);
                this.columnTubeResinToFeltFactor = new global::System.Data.DataColumn("TubeResinToFeltFactor", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeResinToFeltFactor);
                this.columnDateOfSheet = new global::System.Data.DataColumn("DateOfSheet", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfSheet);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnRunDetails = new global::System.Data.DataColumn("RunDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunDetails);
                this.columnRunDetails2 = new global::System.Data.DataColumn("RunDetails2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunDetails2);
                this.columnWetOutDate = new global::System.Data.DataColumn("WetOutDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWetOutDate);
                this.columnInstallDate = new global::System.Data.DataColumn("InstallDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallDate);
                this.columnThickness = new global::System.Data.DataColumn("Thickness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThickness);
                this.columnLengthToLine = new global::System.Data.DataColumn("LengthToLine", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLengthToLine);
                this.columnPlusExtra = new global::System.Data.DataColumn("PlusExtra", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlusExtra);
                this.columnForTurnOffset = new global::System.Data.DataColumn("ForTurnOffset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForTurnOffset);
                this.columnLengthToWetOut = new global::System.Data.DataColumn("LengthToWetOut", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLengthToWetOut);
                this.columnTubeMaxColdHead = new global::System.Data.DataColumn("TubeMaxColdHead", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeMaxColdHead);
                this.columnTubeMaxColdHeadPsi = new global::System.Data.DataColumn("TubeMaxColdHeadPsi", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeMaxColdHeadPsi);
                this.columnTubeMaxHotHead = new global::System.Data.DataColumn("TubeMaxHotHead", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeMaxHotHead);
                this.columnTubeMaxHotHeadPsi = new global::System.Data.DataColumn("TubeMaxHotHeadPsi", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeMaxHotHeadPsi);
                this.columnTubeIdealHead = new global::System.Data.DataColumn("TubeIdealHead", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeIdealHead);
                this.columnTubeIdealHeadPsi = new global::System.Data.DataColumn("TubeIdealHeadPsi", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeIdealHeadPsi);
                this.columnNetResinForTube = new global::System.Data.DataColumn("NetResinForTube", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetResinForTube);
                this.columnNetResinForTubeUsgals = new global::System.Data.DataColumn("NetResinForTubeUsgals", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetResinForTubeUsgals);
                this.columnNetResinForTubeDrumsIns = new global::System.Data.DataColumn("NetResinForTubeDrumsIns", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetResinForTubeDrumsIns);
                this.columnNetResinForTubeLbsFt = new global::System.Data.DataColumn("NetResinForTubeLbsFt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetResinForTubeLbsFt);
                this.columnNetResinForTubeUsgFt = new global::System.Data.DataColumn("NetResinForTubeUsgFt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetResinForTubeUsgFt);
                this.columnExtraResinForMix = new global::System.Data.DataColumn("ExtraResinForMix", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraResinForMix);
                this.columnExtraLbsForMix = new global::System.Data.DataColumn("ExtraLbsForMix", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraLbsForMix);
                this.columnTotalMixQuantity = new global::System.Data.DataColumn("TotalMixQuantity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalMixQuantity);
                this.columnTotalMixQuantityUsgals = new global::System.Data.DataColumn("TotalMixQuantityUsgals", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalMixQuantityUsgals);
                this.columnTotalMixQuantityDrumsIns = new global::System.Data.DataColumn("TotalMixQuantityDrumsIns", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalMixQuantityDrumsIns);
                this.columnInversionType = new global::System.Data.DataColumn("InversionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInversionType);
                this.columnDepthOfInversionMH = new global::System.Data.DataColumn("DepthOfInversionMH", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepthOfInversionMH);
                this.columnTubeForColumn = new global::System.Data.DataColumn("TubeForColumn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeForColumn);
                this.columnTubeForStartDry = new global::System.Data.DataColumn("TubeForStartDry", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeForStartDry);
                this.columnTotalTube = new global::System.Data.DataColumn("TotalTube", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTube);
                this.columnDropTubeConnects = new global::System.Data.DataColumn("DropTubeConnects", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropTubeConnects);
                this.columnAllowsHeadTo = new global::System.Data.DataColumn("AllowsHeadTo", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowsHeadTo);
                this.columnRollerGap = new global::System.Data.DataColumn("RollerGap", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollerGap);
                this.columnHeightNeeded = new global::System.Data.DataColumn("HeightNeeded", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeightNeeded);
                this.columnAvailable = new global::System.Data.DataColumn("Available", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAvailable);
                this.columnHoistHeight = new global::System.Data.DataColumn("HoistHeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoistHeight);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnResinsLabel = new global::System.Data.DataColumn("ResinsLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResinsLabel);
                this.columnDrumContainsLabel = new global::System.Data.DataColumn("DrumContainsLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrumContainsLabel);
                this.columnLinerTubeLabel = new global::System.Data.DataColumn("LinerTubeLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerTubeLabel);
                this.columnForLbDrumsLabel = new global::System.Data.DataColumn("ForLbDrumsLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForLbDrumsLabel);
                this.columnNetResinLabel = new global::System.Data.DataColumn("NetResinLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetResinLabel);
                this.columnCatalystLabel = new global::System.Data.DataColumn("CatalystLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCatalystLabel);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.Unique = true;
                this.columnLinerTube.AllowDBNull = false;
                this.columnLinerTube.MaxLength = 100;
                this.columnResinID.AllowDBNull = false;
                this.columnExcessResin.AllowDBNull = false;
                this.columnPoundsDrums.AllowDBNull = false;
                this.columnPoundsDrums.MaxLength = 25;
                this.columnDrumDiameter.AllowDBNull = false;
                this.columnHoistMaximumHeight.AllowDBNull = false;
                this.columnHoistMinimumHeight.AllowDBNull = false;
                this.columnDownDropTubeLenght.AllowDBNull = false;
                this.columnPumpHeightAboveGround.AllowDBNull = false;
                this.columnTubeResinToFeltFactor.AllowDBNull = false;
                this.columnDateOfSheet.AllowDBNull = false;
                this.columnEmployeeID.AllowDBNull = false;
                this.columnRunDetails.AllowDBNull = false;
                this.columnRunDetails.MaxLength = 1073741823;
                this.columnRunDetails2.AllowDBNull = false;
                this.columnRunDetails2.MaxLength = 25;
                this.columnWetOutDate.AllowDBNull = false;
                this.columnThickness.AllowDBNull = false;
                this.columnThickness.MaxLength = 25;
                this.columnLengthToLine.AllowDBNull = false;
                this.columnPlusExtra.AllowDBNull = false;
                this.columnForTurnOffset.AllowDBNull = false;
                this.columnLengthToWetOut.AllowDBNull = false;
                this.columnTubeMaxColdHead.AllowDBNull = false;
                this.columnTubeMaxColdHeadPsi.AllowDBNull = false;
                this.columnTubeMaxHotHead.AllowDBNull = false;
                this.columnTubeMaxHotHeadPsi.AllowDBNull = false;
                this.columnTubeIdealHead.AllowDBNull = false;
                this.columnTubeIdealHeadPsi.AllowDBNull = false;
                this.columnNetResinForTube.AllowDBNull = false;
                this.columnNetResinForTubeUsgals.AllowDBNull = false;
                this.columnNetResinForTubeDrumsIns.AllowDBNull = false;
                this.columnNetResinForTubeDrumsIns.MaxLength = 25;
                this.columnNetResinForTubeLbsFt.AllowDBNull = false;
                this.columnNetResinForTubeUsgFt.AllowDBNull = false;
                this.columnExtraResinForMix.AllowDBNull = false;
                this.columnExtraLbsForMix.AllowDBNull = false;
                this.columnTotalMixQuantity.AllowDBNull = false;
                this.columnTotalMixQuantityUsgals.AllowDBNull = false;
                this.columnTotalMixQuantityDrumsIns.AllowDBNull = false;
                this.columnTotalMixQuantityDrumsIns.MaxLength = 25;
                this.columnInversionType.AllowDBNull = false;
                this.columnInversionType.MaxLength = 25;
                this.columnDepthOfInversionMH.AllowDBNull = false;
                this.columnTubeForColumn.AllowDBNull = false;
                this.columnTubeForStartDry.AllowDBNull = false;
                this.columnTotalTube.AllowDBNull = false;
                this.columnDropTubeConnects.AllowDBNull = false;
                this.columnDropTubeConnects.MaxLength = 25;
                this.columnAllowsHeadTo.AllowDBNull = false;
                this.columnRollerGap.AllowDBNull = false;
                this.columnHeightNeeded.AllowDBNull = false;
                this.columnAvailable.AllowDBNull = false;
                this.columnAvailable.MaxLength = 25;
                this.columnHoistHeight.AllowDBNull = false;
                this.columnHoistHeight.MaxLength = 25;
                this.columnComments.MaxLength = 1073741823;
                this.columnResinsLabel.AllowDBNull = false;
                this.columnResinsLabel.MaxLength = 150;
                this.columnDrumContainsLabel.AllowDBNull = false;
                this.columnDrumContainsLabel.MaxLength = 150;
                this.columnLinerTubeLabel.AllowDBNull = false;
                this.columnLinerTubeLabel.MaxLength = 150;
                this.columnForLbDrumsLabel.AllowDBNull = false;
                this.columnForLbDrumsLabel.MaxLength = 50;
                this.columnNetResinLabel.AllowDBNull = false;
                this.columnNetResinLabel.MaxLength = 150;
                this.columnCatalystLabel.AllowDBNull = false;
                this.columnCatalystLabel.MaxLength = 150;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUTRow NewLFS_WORK_FULLLENGTHLINING_WETOUTRow() {
                return ((LFS_WORK_FULLLENGTHLINING_WETOUTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_FULLLENGTHLINING_WETOUTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_FULLLENGTHLINING_WETOUTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUTRowChanged != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUTRowChanged(this, new LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUTRowChanging != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUTRowChanging(this, new LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUTRowDeleted != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUTRowDeleted(this, new LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUTRowDeleting != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUTRowDeleting(this, new LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_FULLLENGTHLINING_WETOUTRow(LFS_WORK_FULLLENGTHLINING_WETOUTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_FULLLENGTHLINING_WETOUTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_MANHOLE_REHABILITATIONDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnPreppedDate;
            
            private global::System.Data.DataColumn columnSprayedDate;
            
            private global::System.Data.DataColumn columnBatchID;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_MANHOLE_REHABILITATIONDataTable() {
                this.TableName = "LFS_WORK_MANHOLE_REHABILITATION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_MANHOLE_REHABILITATIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_MANHOLE_REHABILITATIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreppedDateColumn {
                get {
                    return this.columnPreppedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SprayedDateColumn {
                get {
                    return this.columnSprayedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BatchIDColumn {
                get {
                    return this.columnBatchID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_MANHOLE_REHABILITATIONRow this[int index] {
                get {
                    return ((LFS_WORK_MANHOLE_REHABILITATIONRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_MANHOLE_REHABILITATIONRowChangeEventHandler LFS_WORK_MANHOLE_REHABILITATIONRowChanging;
            
            public event LFS_WORK_MANHOLE_REHABILITATIONRowChangeEventHandler LFS_WORK_MANHOLE_REHABILITATIONRowChanged;
            
            public event LFS_WORK_MANHOLE_REHABILITATIONRowChangeEventHandler LFS_WORK_MANHOLE_REHABILITATIONRowDeleting;
            
            public event LFS_WORK_MANHOLE_REHABILITATIONRowChangeEventHandler LFS_WORK_MANHOLE_REHABILITATIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_MANHOLE_REHABILITATIONRow(LFS_WORK_MANHOLE_REHABILITATIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_MANHOLE_REHABILITATIONRow AddLFS_WORK_MANHOLE_REHABILITATIONRow(int WorkID, System.DateTime PreppedDate, System.DateTime SprayedDate, LFS_WORK_MANHOLE_REHABILITATION_BATCHRow parentLFS_WORK_MANHOLE_REHABILITATION_BATCHRowByFK_LFS_WORK_MANHOLE_REHABILITATION_BATCH_LFS_WORK_MANHOLE_REHABILITATION2, bool Deleted, int COMPANY_ID) {
                LFS_WORK_MANHOLE_REHABILITATIONRow rowLFS_WORK_MANHOLE_REHABILITATIONRow = ((LFS_WORK_MANHOLE_REHABILITATIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        PreppedDate,
                        SprayedDate,
                        null,
                        Deleted,
                        COMPANY_ID};
                if ((parentLFS_WORK_MANHOLE_REHABILITATION_BATCHRowByFK_LFS_WORK_MANHOLE_REHABILITATION_BATCH_LFS_WORK_MANHOLE_REHABILITATION2 != null)) {
                    columnValuesArray[3] = parentLFS_WORK_MANHOLE_REHABILITATION_BATCHRowByFK_LFS_WORK_MANHOLE_REHABILITATION_BATCH_LFS_WORK_MANHOLE_REHABILITATION2[0];
                }
                rowLFS_WORK_MANHOLE_REHABILITATIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_MANHOLE_REHABILITATIONRow);
                return rowLFS_WORK_MANHOLE_REHABILITATIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_MANHOLE_REHABILITATIONRow FindByWorkID(int WorkID) {
                return ((LFS_WORK_MANHOLE_REHABILITATIONRow)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_MANHOLE_REHABILITATIONDataTable cln = ((LFS_WORK_MANHOLE_REHABILITATIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_MANHOLE_REHABILITATIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnPreppedDate = base.Columns["PreppedDate"];
                this.columnSprayedDate = base.Columns["SprayedDate"];
                this.columnBatchID = base.Columns["BatchID"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnPreppedDate = new global::System.Data.DataColumn("PreppedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreppedDate);
                this.columnSprayedDate = new global::System.Data.DataColumn("SprayedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSprayedDate);
                this.columnBatchID = new global::System.Data.DataColumn("BatchID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchID);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.Unique = true;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_MANHOLE_REHABILITATIONRow NewLFS_WORK_MANHOLE_REHABILITATIONRow() {
                return ((LFS_WORK_MANHOLE_REHABILITATIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_MANHOLE_REHABILITATIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_MANHOLE_REHABILITATIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_MANHOLE_REHABILITATIONRowChanged != null)) {
                    this.LFS_WORK_MANHOLE_REHABILITATIONRowChanged(this, new LFS_WORK_MANHOLE_REHABILITATIONRowChangeEvent(((LFS_WORK_MANHOLE_REHABILITATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_MANHOLE_REHABILITATIONRowChanging != null)) {
                    this.LFS_WORK_MANHOLE_REHABILITATIONRowChanging(this, new LFS_WORK_MANHOLE_REHABILITATIONRowChangeEvent(((LFS_WORK_MANHOLE_REHABILITATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_MANHOLE_REHABILITATIONRowDeleted != null)) {
                    this.LFS_WORK_MANHOLE_REHABILITATIONRowDeleted(this, new LFS_WORK_MANHOLE_REHABILITATIONRowChangeEvent(((LFS_WORK_MANHOLE_REHABILITATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_MANHOLE_REHABILITATIONRowDeleting != null)) {
                    this.LFS_WORK_MANHOLE_REHABILITATIONRowDeleting(this, new LFS_WORK_MANHOLE_REHABILITATIONRowChangeEvent(((LFS_WORK_MANHOLE_REHABILITATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_MANHOLE_REHABILITATIONRow(LFS_WORK_MANHOLE_REHABILITATIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_MANHOLE_REHABILITATIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_MANHOLE_REHABILITATION_BATCHDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnBatchID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_MANHOLE_REHABILITATION_BATCHDataTable() {
                this.TableName = "LFS_WORK_MANHOLE_REHABILITATION_BATCH";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_MANHOLE_REHABILITATION_BATCHDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_MANHOLE_REHABILITATION_BATCHDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BatchIDColumn {
                get {
                    return this.columnBatchID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_MANHOLE_REHABILITATION_BATCHRow this[int index] {
                get {
                    return ((LFS_WORK_MANHOLE_REHABILITATION_BATCHRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_MANHOLE_REHABILITATION_BATCHRowChangeEventHandler LFS_WORK_MANHOLE_REHABILITATION_BATCHRowChanging;
            
            public event LFS_WORK_MANHOLE_REHABILITATION_BATCHRowChangeEventHandler LFS_WORK_MANHOLE_REHABILITATION_BATCHRowChanged;
            
            public event LFS_WORK_MANHOLE_REHABILITATION_BATCHRowChangeEventHandler LFS_WORK_MANHOLE_REHABILITATION_BATCHRowDeleting;
            
            public event LFS_WORK_MANHOLE_REHABILITATION_BATCHRowChangeEventHandler LFS_WORK_MANHOLE_REHABILITATION_BATCHRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_MANHOLE_REHABILITATION_BATCHRow(LFS_WORK_MANHOLE_REHABILITATION_BATCHRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_MANHOLE_REHABILITATION_BATCHRow AddLFS_WORK_MANHOLE_REHABILITATION_BATCHRow(int BatchID, string Description, System.DateTime Date, bool Deleted, int COMPANY_ID) {
                LFS_WORK_MANHOLE_REHABILITATION_BATCHRow rowLFS_WORK_MANHOLE_REHABILITATION_BATCHRow = ((LFS_WORK_MANHOLE_REHABILITATION_BATCHRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BatchID,
                        Description,
                        Date,
                        Deleted,
                        COMPANY_ID};
                rowLFS_WORK_MANHOLE_REHABILITATION_BATCHRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_MANHOLE_REHABILITATION_BATCHRow);
                return rowLFS_WORK_MANHOLE_REHABILITATION_BATCHRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_MANHOLE_REHABILITATION_BATCHRow FindByBatchID(int BatchID) {
                return ((LFS_WORK_MANHOLE_REHABILITATION_BATCHRow)(this.Rows.Find(new object[] {
                            BatchID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_MANHOLE_REHABILITATION_BATCHDataTable cln = ((LFS_WORK_MANHOLE_REHABILITATION_BATCHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_MANHOLE_REHABILITATION_BATCHDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBatchID = base.Columns["BatchID"];
                this.columnDescription = base.Columns["Description"];
                this.columnDate = base.Columns["Date"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBatchID = new global::System.Data.DataColumn("BatchID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBatchID}, true));
                this.columnBatchID.AllowDBNull = false;
                this.columnBatchID.Unique = true;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 250;
                this.columnDate.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_MANHOLE_REHABILITATION_BATCHRow NewLFS_WORK_MANHOLE_REHABILITATION_BATCHRow() {
                return ((LFS_WORK_MANHOLE_REHABILITATION_BATCHRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_MANHOLE_REHABILITATION_BATCHRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_MANHOLE_REHABILITATION_BATCHRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_MANHOLE_REHABILITATION_BATCHRowChanged != null)) {
                    this.LFS_WORK_MANHOLE_REHABILITATION_BATCHRowChanged(this, new LFS_WORK_MANHOLE_REHABILITATION_BATCHRowChangeEvent(((LFS_WORK_MANHOLE_REHABILITATION_BATCHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_MANHOLE_REHABILITATION_BATCHRowChanging != null)) {
                    this.LFS_WORK_MANHOLE_REHABILITATION_BATCHRowChanging(this, new LFS_WORK_MANHOLE_REHABILITATION_BATCHRowChangeEvent(((LFS_WORK_MANHOLE_REHABILITATION_BATCHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_MANHOLE_REHABILITATION_BATCHRowDeleted != null)) {
                    this.LFS_WORK_MANHOLE_REHABILITATION_BATCHRowDeleted(this, new LFS_WORK_MANHOLE_REHABILITATION_BATCHRowChangeEvent(((LFS_WORK_MANHOLE_REHABILITATION_BATCHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_MANHOLE_REHABILITATION_BATCHRowDeleting != null)) {
                    this.LFS_WORK_MANHOLE_REHABILITATION_BATCHRowDeleting(this, new LFS_WORK_MANHOLE_REHABILITATION_BATCHRowChangeEvent(((LFS_WORK_MANHOLE_REHABILITATION_BATCHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_MANHOLE_REHABILITATION_BATCHRow(LFS_WORK_MANHOLE_REHABILITATION_BATCHRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_MANHOLE_REHABILITATION_BATCHDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_JUNCTIONLINING_LATERALDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnSectionWorkID;
            
            private global::System.Data.DataColumn columnPipeLocated;
            
            private global::System.Data.DataColumn columnServicesLocated;
            
            private global::System.Data.DataColumn columnCoInstalled;
            
            private global::System.Data.DataColumn columnBackfilledConcrete;
            
            private global::System.Data.DataColumn columnBackfilledSoil;
            
            private global::System.Data.DataColumn columnGrouted;
            
            private global::System.Data.DataColumn columnCored;
            
            private global::System.Data.DataColumn columnPrepped;
            
            private global::System.Data.DataColumn columnMeasured;
            
            private global::System.Data.DataColumn columnLinerSize;
            
            private global::System.Data.DataColumn columnInProcess;
            
            private global::System.Data.DataColumn columnInStock;
            
            private global::System.Data.DataColumn columnDelivered;
            
            private global::System.Data.DataColumn columnBuildRebuild;
            
            private global::System.Data.DataColumn columnPreVideo;
            
            private global::System.Data.DataColumn columnLinerInstalled;
            
            private global::System.Data.DataColumn columnFinalVideo;
            
            private global::System.Data.DataColumn columnCost;
            
            private global::System.Data.DataColumn columnVideoInspection;
            
            private global::System.Data.DataColumn columnCoRequired;
            
            private global::System.Data.DataColumn columnPitRequired;
            
            private global::System.Data.DataColumn columnCoPitLocation;
            
            private global::System.Data.DataColumn columnPostContractDigRequired;
            
            private global::System.Data.DataColumn columnCoCutDown;
            
            private global::System.Data.DataColumn columnFinalRestoration;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnVideoLengthToPropertyLine;
            
            private global::System.Data.DataColumn columnLiningThruCo;
            
            private global::System.Data.DataColumn columnNoticeDelivered;
            
            private global::System.Data.DataColumn columnHamiltonInspectionNumber;
            
            private global::System.Data.DataColumn columnFlange;
            
            private global::System.Data.DataColumn columnGasket;
            
            private global::System.Data.DataColumn columnDepthOfLocated;
            
            private global::System.Data.DataColumn columnDigRequiredPriorToLining;
            
            private global::System.Data.DataColumn columnDigRequiredPriorToLiningCompleted;
            
            private global::System.Data.DataColumn columnDigRequiredAfterLining;
            
            private global::System.Data.DataColumn columnDigRequiredAfterLiningCompleted;
            
            private global::System.Data.DataColumn columnOutOfScope;
            
            private global::System.Data.DataColumn columnHoldClientIssue;
            
            private global::System.Data.DataColumn columnHoldClientIssueResolved;
            
            private global::System.Data.DataColumn columnHoldLFSIssue;
            
            private global::System.Data.DataColumn columnHoldLFSIssueResolved;
            
            private global::System.Data.DataColumn columnLateralRequiresRoboticPrep;
            
            private global::System.Data.DataColumn columnLateralRequiresRoboticPrepCompleted;
            
            private global::System.Data.DataColumn columnLinerType;
            
            private global::System.Data.DataColumn columnPrepType;
            
            private global::System.Data.DataColumn columnDyeTestReq;
            
            private global::System.Data.DataColumn columnDyeTestComplete;
            
            private global::System.Data.DataColumn columnContractYear;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_LATERALDataTable() {
                this.TableName = "LFS_WORK_JUNCTIONLINING_LATERAL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_JUNCTIONLINING_LATERALDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_JUNCTIONLINING_LATERALDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionWorkIDColumn {
                get {
                    return this.columnSectionWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PipeLocatedColumn {
                get {
                    return this.columnPipeLocated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServicesLocatedColumn {
                get {
                    return this.columnServicesLocated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoInstalledColumn {
                get {
                    return this.columnCoInstalled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BackfilledConcreteColumn {
                get {
                    return this.columnBackfilledConcrete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BackfilledSoilColumn {
                get {
                    return this.columnBackfilledSoil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroutedColumn {
                get {
                    return this.columnGrouted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoredColumn {
                get {
                    return this.columnCored;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreppedColumn {
                get {
                    return this.columnPrepped;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasuredColumn {
                get {
                    return this.columnMeasured;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerSizeColumn {
                get {
                    return this.columnLinerSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InProcessColumn {
                get {
                    return this.columnInProcess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InStockColumn {
                get {
                    return this.columnInStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveredColumn {
                get {
                    return this.columnDelivered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuildRebuildColumn {
                get {
                    return this.columnBuildRebuild;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreVideoColumn {
                get {
                    return this.columnPreVideo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerInstalledColumn {
                get {
                    return this.columnLinerInstalled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinalVideoColumn {
                get {
                    return this.columnFinalVideo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostColumn {
                get {
                    return this.columnCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoInspectionColumn {
                get {
                    return this.columnVideoInspection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoRequiredColumn {
                get {
                    return this.columnCoRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PitRequiredColumn {
                get {
                    return this.columnPitRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoPitLocationColumn {
                get {
                    return this.columnCoPitLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostContractDigRequiredColumn {
                get {
                    return this.columnPostContractDigRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoCutDownColumn {
                get {
                    return this.columnCoCutDown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinalRestorationColumn {
                get {
                    return this.columnFinalRestoration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoLengthToPropertyLineColumn {
                get {
                    return this.columnVideoLengthToPropertyLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LiningThruCoColumn {
                get {
                    return this.columnLiningThruCo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoticeDeliveredColumn {
                get {
                    return this.columnNoticeDelivered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HamiltonInspectionNumberColumn {
                get {
                    return this.columnHamiltonInspectionNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlangeColumn {
                get {
                    return this.columnFlange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GasketColumn {
                get {
                    return this.columnGasket;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepthOfLocatedColumn {
                get {
                    return this.columnDepthOfLocated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DigRequiredPriorToLiningColumn {
                get {
                    return this.columnDigRequiredPriorToLining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DigRequiredPriorToLiningCompletedColumn {
                get {
                    return this.columnDigRequiredPriorToLiningCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DigRequiredAfterLiningColumn {
                get {
                    return this.columnDigRequiredAfterLining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DigRequiredAfterLiningCompletedColumn {
                get {
                    return this.columnDigRequiredAfterLiningCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutOfScopeColumn {
                get {
                    return this.columnOutOfScope;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoldClientIssueColumn {
                get {
                    return this.columnHoldClientIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoldClientIssueResolvedColumn {
                get {
                    return this.columnHoldClientIssueResolved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoldLFSIssueColumn {
                get {
                    return this.columnHoldLFSIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoldLFSIssueResolvedColumn {
                get {
                    return this.columnHoldLFSIssueResolved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralRequiresRoboticPrepColumn {
                get {
                    return this.columnLateralRequiresRoboticPrep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralRequiresRoboticPrepCompletedColumn {
                get {
                    return this.columnLateralRequiresRoboticPrepCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerTypeColumn {
                get {
                    return this.columnLinerType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrepTypeColumn {
                get {
                    return this.columnPrepType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DyeTestReqColumn {
                get {
                    return this.columnDyeTestReq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DyeTestCompleteColumn {
                get {
                    return this.columnDyeTestComplete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContractYearColumn {
                get {
                    return this.columnContractYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_LATERALRow this[int index] {
                get {
                    return ((LFS_WORK_JUNCTIONLINING_LATERALRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_JUNCTIONLINING_LATERALRowChangeEventHandler LFS_WORK_JUNCTIONLINING_LATERALRowChanging;
            
            public event LFS_WORK_JUNCTIONLINING_LATERALRowChangeEventHandler LFS_WORK_JUNCTIONLINING_LATERALRowChanged;
            
            public event LFS_WORK_JUNCTIONLINING_LATERALRowChangeEventHandler LFS_WORK_JUNCTIONLINING_LATERALRowDeleting;
            
            public event LFS_WORK_JUNCTIONLINING_LATERALRowChangeEventHandler LFS_WORK_JUNCTIONLINING_LATERALRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_JUNCTIONLINING_LATERALRow(LFS_WORK_JUNCTIONLINING_LATERALRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_LATERALRow AddLFS_WORK_JUNCTIONLINING_LATERALRow(
                        int WorkID, 
                        int SectionWorkID, 
                        System.DateTime PipeLocated, 
                        System.DateTime ServicesLocated, 
                        System.DateTime CoInstalled, 
                        System.DateTime BackfilledConcrete, 
                        System.DateTime BackfilledSoil, 
                        System.DateTime Grouted, 
                        System.DateTime Cored, 
                        System.DateTime Prepped, 
                        System.DateTime Measured, 
                        string LinerSize, 
                        System.DateTime InProcess, 
                        System.DateTime InStock, 
                        System.DateTime Delivered, 
                        int BuildRebuild, 
                        System.DateTime PreVideo, 
                        System.DateTime LinerInstalled, 
                        System.DateTime FinalVideo, 
                        decimal Cost, 
                        System.DateTime VideoInspection, 
                        bool CoRequired, 
                        bool PitRequired, 
                        string CoPitLocation, 
                        bool PostContractDigRequired, 
                        System.DateTime CoCutDown, 
                        System.DateTime FinalRestoration, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        string VideoLengthToPropertyLine, 
                        bool LiningThruCo, 
                        System.DateTime NoticeDelivered, 
                        string HamiltonInspectionNumber, 
                        string Flange, 
                        string Gasket, 
                        string DepthOfLocated, 
                        bool DigRequiredPriorToLining, 
                        System.DateTime DigRequiredPriorToLiningCompleted, 
                        bool DigRequiredAfterLining, 
                        System.DateTime DigRequiredAfterLiningCompleted, 
                        bool OutOfScope, 
                        bool HoldClientIssue, 
                        System.DateTime HoldClientIssueResolved, 
                        bool HoldLFSIssue, 
                        System.DateTime HoldLFSIssueResolved, 
                        bool LateralRequiresRoboticPrep, 
                        System.DateTime LateralRequiresRoboticPrepCompleted, 
                        string LinerType, 
                        string PrepType, 
                        bool DyeTestReq, 
                        System.DateTime DyeTestComplete, 
                        string ContractYear) {
                LFS_WORK_JUNCTIONLINING_LATERALRow rowLFS_WORK_JUNCTIONLINING_LATERALRow = ((LFS_WORK_JUNCTIONLINING_LATERALRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        SectionWorkID,
                        PipeLocated,
                        ServicesLocated,
                        CoInstalled,
                        BackfilledConcrete,
                        BackfilledSoil,
                        Grouted,
                        Cored,
                        Prepped,
                        Measured,
                        LinerSize,
                        InProcess,
                        InStock,
                        Delivered,
                        BuildRebuild,
                        PreVideo,
                        LinerInstalled,
                        FinalVideo,
                        Cost,
                        VideoInspection,
                        CoRequired,
                        PitRequired,
                        CoPitLocation,
                        PostContractDigRequired,
                        CoCutDown,
                        FinalRestoration,
                        Deleted,
                        COMPANY_ID,
                        VideoLengthToPropertyLine,
                        LiningThruCo,
                        NoticeDelivered,
                        HamiltonInspectionNumber,
                        Flange,
                        Gasket,
                        DepthOfLocated,
                        DigRequiredPriorToLining,
                        DigRequiredPriorToLiningCompleted,
                        DigRequiredAfterLining,
                        DigRequiredAfterLiningCompleted,
                        OutOfScope,
                        HoldClientIssue,
                        HoldClientIssueResolved,
                        HoldLFSIssue,
                        HoldLFSIssueResolved,
                        LateralRequiresRoboticPrep,
                        LateralRequiresRoboticPrepCompleted,
                        LinerType,
                        PrepType,
                        DyeTestReq,
                        DyeTestComplete,
                        ContractYear};
                rowLFS_WORK_JUNCTIONLINING_LATERALRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_JUNCTIONLINING_LATERALRow);
                return rowLFS_WORK_JUNCTIONLINING_LATERALRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_LATERALRow FindByWorkID(int WorkID) {
                return ((LFS_WORK_JUNCTIONLINING_LATERALRow)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_JUNCTIONLINING_LATERALDataTable cln = ((LFS_WORK_JUNCTIONLINING_LATERALDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_JUNCTIONLINING_LATERALDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnSectionWorkID = base.Columns["SectionWorkID"];
                this.columnPipeLocated = base.Columns["PipeLocated"];
                this.columnServicesLocated = base.Columns["ServicesLocated"];
                this.columnCoInstalled = base.Columns["CoInstalled"];
                this.columnBackfilledConcrete = base.Columns["BackfilledConcrete"];
                this.columnBackfilledSoil = base.Columns["BackfilledSoil"];
                this.columnGrouted = base.Columns["Grouted"];
                this.columnCored = base.Columns["Cored"];
                this.columnPrepped = base.Columns["Prepped"];
                this.columnMeasured = base.Columns["Measured"];
                this.columnLinerSize = base.Columns["LinerSize"];
                this.columnInProcess = base.Columns["InProcess"];
                this.columnInStock = base.Columns["InStock"];
                this.columnDelivered = base.Columns["Delivered"];
                this.columnBuildRebuild = base.Columns["BuildRebuild"];
                this.columnPreVideo = base.Columns["PreVideo"];
                this.columnLinerInstalled = base.Columns["LinerInstalled"];
                this.columnFinalVideo = base.Columns["FinalVideo"];
                this.columnCost = base.Columns["Cost"];
                this.columnVideoInspection = base.Columns["VideoInspection"];
                this.columnCoRequired = base.Columns["CoRequired"];
                this.columnPitRequired = base.Columns["PitRequired"];
                this.columnCoPitLocation = base.Columns["CoPitLocation"];
                this.columnPostContractDigRequired = base.Columns["PostContractDigRequired"];
                this.columnCoCutDown = base.Columns["CoCutDown"];
                this.columnFinalRestoration = base.Columns["FinalRestoration"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnVideoLengthToPropertyLine = base.Columns["VideoLengthToPropertyLine"];
                this.columnLiningThruCo = base.Columns["LiningThruCo"];
                this.columnNoticeDelivered = base.Columns["NoticeDelivered"];
                this.columnHamiltonInspectionNumber = base.Columns["HamiltonInspectionNumber"];
                this.columnFlange = base.Columns["Flange"];
                this.columnGasket = base.Columns["Gasket"];
                this.columnDepthOfLocated = base.Columns["DepthOfLocated"];
                this.columnDigRequiredPriorToLining = base.Columns["DigRequiredPriorToLining"];
                this.columnDigRequiredPriorToLiningCompleted = base.Columns["DigRequiredPriorToLiningCompleted"];
                this.columnDigRequiredAfterLining = base.Columns["DigRequiredAfterLining"];
                this.columnDigRequiredAfterLiningCompleted = base.Columns["DigRequiredAfterLiningCompleted"];
                this.columnOutOfScope = base.Columns["OutOfScope"];
                this.columnHoldClientIssue = base.Columns["HoldClientIssue"];
                this.columnHoldClientIssueResolved = base.Columns["HoldClientIssueResolved"];
                this.columnHoldLFSIssue = base.Columns["HoldLFSIssue"];
                this.columnHoldLFSIssueResolved = base.Columns["HoldLFSIssueResolved"];
                this.columnLateralRequiresRoboticPrep = base.Columns["LateralRequiresRoboticPrep"];
                this.columnLateralRequiresRoboticPrepCompleted = base.Columns["LateralRequiresRoboticPrepCompleted"];
                this.columnLinerType = base.Columns["LinerType"];
                this.columnPrepType = base.Columns["PrepType"];
                this.columnDyeTestReq = base.Columns["DyeTestReq"];
                this.columnDyeTestComplete = base.Columns["DyeTestComplete"];
                this.columnContractYear = base.Columns["ContractYear"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnSectionWorkID = new global::System.Data.DataColumn("SectionWorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionWorkID);
                this.columnPipeLocated = new global::System.Data.DataColumn("PipeLocated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeLocated);
                this.columnServicesLocated = new global::System.Data.DataColumn("ServicesLocated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServicesLocated);
                this.columnCoInstalled = new global::System.Data.DataColumn("CoInstalled", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoInstalled);
                this.columnBackfilledConcrete = new global::System.Data.DataColumn("BackfilledConcrete", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackfilledConcrete);
                this.columnBackfilledSoil = new global::System.Data.DataColumn("BackfilledSoil", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackfilledSoil);
                this.columnGrouted = new global::System.Data.DataColumn("Grouted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrouted);
                this.columnCored = new global::System.Data.DataColumn("Cored", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCored);
                this.columnPrepped = new global::System.Data.DataColumn("Prepped", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrepped);
                this.columnMeasured = new global::System.Data.DataColumn("Measured", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasured);
                this.columnLinerSize = new global::System.Data.DataColumn("LinerSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerSize);
                this.columnInProcess = new global::System.Data.DataColumn("InProcess", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInProcess);
                this.columnInStock = new global::System.Data.DataColumn("InStock", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInStock);
                this.columnDelivered = new global::System.Data.DataColumn("Delivered", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelivered);
                this.columnBuildRebuild = new global::System.Data.DataColumn("BuildRebuild", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildRebuild);
                this.columnPreVideo = new global::System.Data.DataColumn("PreVideo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreVideo);
                this.columnLinerInstalled = new global::System.Data.DataColumn("LinerInstalled", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerInstalled);
                this.columnFinalVideo = new global::System.Data.DataColumn("FinalVideo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalVideo);
                this.columnCost = new global::System.Data.DataColumn("Cost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCost);
                this.columnVideoInspection = new global::System.Data.DataColumn("VideoInspection", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoInspection);
                this.columnCoRequired = new global::System.Data.DataColumn("CoRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoRequired);
                this.columnPitRequired = new global::System.Data.DataColumn("PitRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPitRequired);
                this.columnCoPitLocation = new global::System.Data.DataColumn("CoPitLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoPitLocation);
                this.columnPostContractDigRequired = new global::System.Data.DataColumn("PostContractDigRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostContractDigRequired);
                this.columnCoCutDown = new global::System.Data.DataColumn("CoCutDown", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoCutDown);
                this.columnFinalRestoration = new global::System.Data.DataColumn("FinalRestoration", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalRestoration);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnVideoLengthToPropertyLine = new global::System.Data.DataColumn("VideoLengthToPropertyLine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoLengthToPropertyLine);
                this.columnLiningThruCo = new global::System.Data.DataColumn("LiningThruCo", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiningThruCo);
                this.columnNoticeDelivered = new global::System.Data.DataColumn("NoticeDelivered", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoticeDelivered);
                this.columnHamiltonInspectionNumber = new global::System.Data.DataColumn("HamiltonInspectionNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHamiltonInspectionNumber);
                this.columnFlange = new global::System.Data.DataColumn("Flange", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlange);
                this.columnGasket = new global::System.Data.DataColumn("Gasket", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGasket);
                this.columnDepthOfLocated = new global::System.Data.DataColumn("DepthOfLocated", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepthOfLocated);
                this.columnDigRequiredPriorToLining = new global::System.Data.DataColumn("DigRequiredPriorToLining", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDigRequiredPriorToLining);
                this.columnDigRequiredPriorToLiningCompleted = new global::System.Data.DataColumn("DigRequiredPriorToLiningCompleted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDigRequiredPriorToLiningCompleted);
                this.columnDigRequiredAfterLining = new global::System.Data.DataColumn("DigRequiredAfterLining", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDigRequiredAfterLining);
                this.columnDigRequiredAfterLiningCompleted = new global::System.Data.DataColumn("DigRequiredAfterLiningCompleted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDigRequiredAfterLiningCompleted);
                this.columnOutOfScope = new global::System.Data.DataColumn("OutOfScope", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutOfScope);
                this.columnHoldClientIssue = new global::System.Data.DataColumn("HoldClientIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoldClientIssue);
                this.columnHoldClientIssueResolved = new global::System.Data.DataColumn("HoldClientIssueResolved", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoldClientIssueResolved);
                this.columnHoldLFSIssue = new global::System.Data.DataColumn("HoldLFSIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoldLFSIssue);
                this.columnHoldLFSIssueResolved = new global::System.Data.DataColumn("HoldLFSIssueResolved", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoldLFSIssueResolved);
                this.columnLateralRequiresRoboticPrep = new global::System.Data.DataColumn("LateralRequiresRoboticPrep", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralRequiresRoboticPrep);
                this.columnLateralRequiresRoboticPrepCompleted = new global::System.Data.DataColumn("LateralRequiresRoboticPrepCompleted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralRequiresRoboticPrepCompleted);
                this.columnLinerType = new global::System.Data.DataColumn("LinerType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerType);
                this.columnPrepType = new global::System.Data.DataColumn("PrepType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrepType);
                this.columnDyeTestReq = new global::System.Data.DataColumn("DyeTestReq", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDyeTestReq);
                this.columnDyeTestComplete = new global::System.Data.DataColumn("DyeTestComplete", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDyeTestComplete);
                this.columnContractYear = new global::System.Data.DataColumn("ContractYear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractYear);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.Unique = true;
                this.columnSectionWorkID.AllowDBNull = false;
                this.columnLinerSize.MaxLength = 50;
                this.columnCoRequired.AllowDBNull = false;
                this.columnPitRequired.AllowDBNull = false;
                this.columnCoPitLocation.MaxLength = 50;
                this.columnPostContractDigRequired.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnVideoLengthToPropertyLine.MaxLength = 50;
                this.columnLiningThruCo.AllowDBNull = false;
                this.columnHamiltonInspectionNumber.MaxLength = 50;
                this.columnFlange.MaxLength = 50;
                this.columnGasket.MaxLength = 50;
                this.columnDepthOfLocated.MaxLength = 50;
                this.columnDigRequiredPriorToLining.AllowDBNull = false;
                this.columnDigRequiredAfterLining.AllowDBNull = false;
                this.columnOutOfScope.AllowDBNull = false;
                this.columnHoldClientIssue.AllowDBNull = false;
                this.columnHoldLFSIssue.AllowDBNull = false;
                this.columnLateralRequiresRoboticPrep.AllowDBNull = false;
                this.columnLinerType.MaxLength = 50;
                this.columnPrepType.MaxLength = 50;
                this.columnDyeTestReq.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_LATERALRow NewLFS_WORK_JUNCTIONLINING_LATERALRow() {
                return ((LFS_WORK_JUNCTIONLINING_LATERALRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_JUNCTIONLINING_LATERALRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_JUNCTIONLINING_LATERALRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_JUNCTIONLINING_LATERALRowChanged != null)) {
                    this.LFS_WORK_JUNCTIONLINING_LATERALRowChanged(this, new LFS_WORK_JUNCTIONLINING_LATERALRowChangeEvent(((LFS_WORK_JUNCTIONLINING_LATERALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_JUNCTIONLINING_LATERALRowChanging != null)) {
                    this.LFS_WORK_JUNCTIONLINING_LATERALRowChanging(this, new LFS_WORK_JUNCTIONLINING_LATERALRowChangeEvent(((LFS_WORK_JUNCTIONLINING_LATERALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_JUNCTIONLINING_LATERALRowDeleted != null)) {
                    this.LFS_WORK_JUNCTIONLINING_LATERALRowDeleted(this, new LFS_WORK_JUNCTIONLINING_LATERALRowChangeEvent(((LFS_WORK_JUNCTIONLINING_LATERALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_JUNCTIONLINING_LATERALRowDeleting != null)) {
                    this.LFS_WORK_JUNCTIONLINING_LATERALRowDeleting(this, new LFS_WORK_JUNCTIONLINING_LATERALRowChangeEvent(((LFS_WORK_JUNCTIONLINING_LATERALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_JUNCTIONLINING_LATERALRow(LFS_WORK_JUNCTIONLINING_LATERALRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_JUNCTIONLINING_LATERALDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_POINT_REPAIRS_REPAIRDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnRepairPointID;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnReamDistance;
            
            private global::System.Data.DataColumn columnReamDate;
            
            private global::System.Data.DataColumn columnLinerDistance;
            
            private global::System.Data.DataColumn columnDirection;
            
            private global::System.Data.DataColumn columnReinstates;
            
            private global::System.Data.DataColumn columnLTMH;
            
            private global::System.Data.DataColumn columnVTMH;
            
            private global::System.Data.DataColumn columnDistance;
            
            private global::System.Data.DataColumn columnSize_;
            
            private global::System.Data.DataColumn columnInstallDate;
            
            private global::System.Data.DataColumn columnMHShot;
            
            private global::System.Data.DataColumn columnGroutDistance;
            
            private global::System.Data.DataColumn columnGroutDate;
            
            private global::System.Data.DataColumn columnApproval;
            
            private global::System.Data.DataColumn columnExtraRepair;
            
            private global::System.Data.DataColumn columnCancelled;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnDefectQualifier;
            
            private global::System.Data.DataColumn columnDefectDetails;
            
            private global::System.Data.DataColumn columnLength;
            
            private global::System.Data.DataColumn columnReinstateDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRS_REPAIRDataTable() {
                this.TableName = "LFS_WORK_POINT_REPAIRS_REPAIR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_POINT_REPAIRS_REPAIRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_POINT_REPAIRS_REPAIRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RepairPointIDColumn {
                get {
                    return this.columnRepairPointID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReamDistanceColumn {
                get {
                    return this.columnReamDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReamDateColumn {
                get {
                    return this.columnReamDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerDistanceColumn {
                get {
                    return this.columnLinerDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DirectionColumn {
                get {
                    return this.columnDirection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReinstatesColumn {
                get {
                    return this.columnReinstates;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LTMHColumn {
                get {
                    return this.columnLTMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VTMHColumn {
                get {
                    return this.columnVTMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceColumn {
                get {
                    return this.columnDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Size_Column {
                get {
                    return this.columnSize_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallDateColumn {
                get {
                    return this.columnInstallDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MHShotColumn {
                get {
                    return this.columnMHShot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroutDistanceColumn {
                get {
                    return this.columnGroutDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroutDateColumn {
                get {
                    return this.columnGroutDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApprovalColumn {
                get {
                    return this.columnApproval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraRepairColumn {
                get {
                    return this.columnExtraRepair;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CancelledColumn {
                get {
                    return this.columnCancelled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DefectQualifierColumn {
                get {
                    return this.columnDefectQualifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DefectDetailsColumn {
                get {
                    return this.columnDefectDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReinstateDateColumn {
                get {
                    return this.columnReinstateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRS_REPAIRRow this[int index] {
                get {
                    return ((LFS_WORK_POINT_REPAIRS_REPAIRRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_POINT_REPAIRS_REPAIRRowChangeEventHandler LFS_WORK_POINT_REPAIRS_REPAIRRowChanging;
            
            public event LFS_WORK_POINT_REPAIRS_REPAIRRowChangeEventHandler LFS_WORK_POINT_REPAIRS_REPAIRRowChanged;
            
            public event LFS_WORK_POINT_REPAIRS_REPAIRRowChangeEventHandler LFS_WORK_POINT_REPAIRS_REPAIRRowDeleting;
            
            public event LFS_WORK_POINT_REPAIRS_REPAIRRowChangeEventHandler LFS_WORK_POINT_REPAIRS_REPAIRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_POINT_REPAIRS_REPAIRRow(LFS_WORK_POINT_REPAIRS_REPAIRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRS_REPAIRRow AddLFS_WORK_POINT_REPAIRS_REPAIRRow(
                        int WorkID, 
                        string RepairPointID, 
                        string Type, 
                        string ReamDistance, 
                        System.DateTime ReamDate, 
                        string LinerDistance, 
                        string Direction, 
                        int Reinstates, 
                        string LTMH, 
                        string VTMH, 
                        string Distance, 
                        string Size_, 
                        System.DateTime InstallDate, 
                        string MHShot, 
                        string GroutDistance, 
                        System.DateTime GroutDate, 
                        string Approval, 
                        bool ExtraRepair, 
                        bool Cancelled, 
                        string Comments, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        string DefectQualifier, 
                        string DefectDetails, 
                        string Length, 
                        System.DateTime ReinstateDate) {
                LFS_WORK_POINT_REPAIRS_REPAIRRow rowLFS_WORK_POINT_REPAIRS_REPAIRRow = ((LFS_WORK_POINT_REPAIRS_REPAIRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        RepairPointID,
                        Type,
                        ReamDistance,
                        ReamDate,
                        LinerDistance,
                        Direction,
                        Reinstates,
                        LTMH,
                        VTMH,
                        Distance,
                        Size_,
                        InstallDate,
                        MHShot,
                        GroutDistance,
                        GroutDate,
                        Approval,
                        ExtraRepair,
                        Cancelled,
                        Comments,
                        Deleted,
                        COMPANY_ID,
                        DefectQualifier,
                        DefectDetails,
                        Length,
                        ReinstateDate};
                rowLFS_WORK_POINT_REPAIRS_REPAIRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_POINT_REPAIRS_REPAIRRow);
                return rowLFS_WORK_POINT_REPAIRS_REPAIRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRS_REPAIRRow FindByWorkIDRepairPointID(int WorkID, string RepairPointID) {
                return ((LFS_WORK_POINT_REPAIRS_REPAIRRow)(this.Rows.Find(new object[] {
                            WorkID,
                            RepairPointID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_POINT_REPAIRS_REPAIRDataTable cln = ((LFS_WORK_POINT_REPAIRS_REPAIRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_POINT_REPAIRS_REPAIRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnRepairPointID = base.Columns["RepairPointID"];
                this.columnType = base.Columns["Type"];
                this.columnReamDistance = base.Columns["ReamDistance"];
                this.columnReamDate = base.Columns["ReamDate"];
                this.columnLinerDistance = base.Columns["LinerDistance"];
                this.columnDirection = base.Columns["Direction"];
                this.columnReinstates = base.Columns["Reinstates"];
                this.columnLTMH = base.Columns["LTMH"];
                this.columnVTMH = base.Columns["VTMH"];
                this.columnDistance = base.Columns["Distance"];
                this.columnSize_ = base.Columns["Size_"];
                this.columnInstallDate = base.Columns["InstallDate"];
                this.columnMHShot = base.Columns["MHShot"];
                this.columnGroutDistance = base.Columns["GroutDistance"];
                this.columnGroutDate = base.Columns["GroutDate"];
                this.columnApproval = base.Columns["Approval"];
                this.columnExtraRepair = base.Columns["ExtraRepair"];
                this.columnCancelled = base.Columns["Cancelled"];
                this.columnComments = base.Columns["Comments"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnDefectQualifier = base.Columns["DefectQualifier"];
                this.columnDefectDetails = base.Columns["DefectDetails"];
                this.columnLength = base.Columns["Length"];
                this.columnReinstateDate = base.Columns["ReinstateDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnRepairPointID = new global::System.Data.DataColumn("RepairPointID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepairPointID);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnReamDistance = new global::System.Data.DataColumn("ReamDistance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReamDistance);
                this.columnReamDate = new global::System.Data.DataColumn("ReamDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReamDate);
                this.columnLinerDistance = new global::System.Data.DataColumn("LinerDistance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerDistance);
                this.columnDirection = new global::System.Data.DataColumn("Direction", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirection);
                this.columnReinstates = new global::System.Data.DataColumn("Reinstates", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReinstates);
                this.columnLTMH = new global::System.Data.DataColumn("LTMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLTMH);
                this.columnVTMH = new global::System.Data.DataColumn("VTMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVTMH);
                this.columnDistance = new global::System.Data.DataColumn("Distance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistance);
                this.columnSize_ = new global::System.Data.DataColumn("Size_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_);
                this.columnInstallDate = new global::System.Data.DataColumn("InstallDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallDate);
                this.columnMHShot = new global::System.Data.DataColumn("MHShot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMHShot);
                this.columnGroutDistance = new global::System.Data.DataColumn("GroutDistance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroutDistance);
                this.columnGroutDate = new global::System.Data.DataColumn("GroutDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroutDate);
                this.columnApproval = new global::System.Data.DataColumn("Approval", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApproval);
                this.columnExtraRepair = new global::System.Data.DataColumn("ExtraRepair", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraRepair);
                this.columnCancelled = new global::System.Data.DataColumn("Cancelled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancelled);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnDefectQualifier = new global::System.Data.DataColumn("DefectQualifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefectQualifier);
                this.columnDefectDetails = new global::System.Data.DataColumn("DefectDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefectDetails);
                this.columnLength = new global::System.Data.DataColumn("Length", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLength);
                this.columnReinstateDate = new global::System.Data.DataColumn("ReinstateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReinstateDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID,
                                this.columnRepairPointID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnRepairPointID.AllowDBNull = false;
                this.columnRepairPointID.MaxLength = 10;
                this.columnType.MaxLength = 100;
                this.columnReamDistance.MaxLength = 50;
                this.columnLinerDistance.MaxLength = 50;
                this.columnDirection.MaxLength = 100;
                this.columnLTMH.MaxLength = 50;
                this.columnVTMH.MaxLength = 50;
                this.columnDistance.MaxLength = 100;
                this.columnSize_.MaxLength = 100;
                this.columnMHShot.MaxLength = 100;
                this.columnGroutDistance.MaxLength = 100;
                this.columnApproval.MaxLength = 100;
                this.columnExtraRepair.AllowDBNull = false;
                this.columnCancelled.AllowDBNull = false;
                this.columnComments.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnDefectQualifier.MaxLength = 50;
                this.columnDefectDetails.MaxLength = 50;
                this.columnLength.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRS_REPAIRRow NewLFS_WORK_POINT_REPAIRS_REPAIRRow() {
                return ((LFS_WORK_POINT_REPAIRS_REPAIRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_POINT_REPAIRS_REPAIRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_POINT_REPAIRS_REPAIRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_POINT_REPAIRS_REPAIRRowChanged != null)) {
                    this.LFS_WORK_POINT_REPAIRS_REPAIRRowChanged(this, new LFS_WORK_POINT_REPAIRS_REPAIRRowChangeEvent(((LFS_WORK_POINT_REPAIRS_REPAIRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_POINT_REPAIRS_REPAIRRowChanging != null)) {
                    this.LFS_WORK_POINT_REPAIRS_REPAIRRowChanging(this, new LFS_WORK_POINT_REPAIRS_REPAIRRowChangeEvent(((LFS_WORK_POINT_REPAIRS_REPAIRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_POINT_REPAIRS_REPAIRRowDeleted != null)) {
                    this.LFS_WORK_POINT_REPAIRS_REPAIRRowDeleted(this, new LFS_WORK_POINT_REPAIRS_REPAIRRowChangeEvent(((LFS_WORK_POINT_REPAIRS_REPAIRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_POINT_REPAIRS_REPAIRRowDeleting != null)) {
                    this.LFS_WORK_POINT_REPAIRS_REPAIRRowDeleting(this, new LFS_WORK_POINT_REPAIRS_REPAIRRowChangeEvent(((LFS_WORK_POINT_REPAIRS_REPAIRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_POINT_REPAIRS_REPAIRRow(LFS_WORK_POINT_REPAIRS_REPAIRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_POINT_REPAIRS_REPAIRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_FULLLENGTHLINING_M1_LATERALDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnLateral;
            
            private global::System.Data.DataColumn columnVideoDistance;
            
            private global::System.Data.DataColumn columnClockPosition;
            
            private global::System.Data.DataColumn columnDistanceToCentre;
            
            private global::System.Data.DataColumn columnTimeOpened;
            
            private global::System.Data.DataColumn columnReverseSetup;
            
            private global::System.Data.DataColumn columnReinstate;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnClientInspectionNo;
            
            private global::System.Data.DataColumn columnV1Inspection;
            
            private global::System.Data.DataColumn columnRequiresRoboticPrep;
            
            private global::System.Data.DataColumn columnRequiresRoboticPrepDate;
            
            private global::System.Data.DataColumn columnHoldClientIssue;
            
            private global::System.Data.DataColumn columnHoldLFSIssue;
            
            private global::System.Data.DataColumn columnLineLateral;
            
            private global::System.Data.DataColumn columnDyeTestReq;
            
            private global::System.Data.DataColumn columnDyeTestComplete;
            
            private global::System.Data.DataColumn columnContractYear;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M1_LATERALDataTable() {
                this.TableName = "LFS_WORK_FULLLENGTHLINING_M1_LATERAL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_M1_LATERALDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_FULLLENGTHLINING_M1_LATERALDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralColumn {
                get {
                    return this.columnLateral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoDistanceColumn {
                get {
                    return this.columnVideoDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClockPositionColumn {
                get {
                    return this.columnClockPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceToCentreColumn {
                get {
                    return this.columnDistanceToCentre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimeOpenedColumn {
                get {
                    return this.columnTimeOpened;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReverseSetupColumn {
                get {
                    return this.columnReverseSetup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReinstateColumn {
                get {
                    return this.columnReinstate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientInspectionNoColumn {
                get {
                    return this.columnClientInspectionNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V1InspectionColumn {
                get {
                    return this.columnV1Inspection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequiresRoboticPrepColumn {
                get {
                    return this.columnRequiresRoboticPrep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequiresRoboticPrepDateColumn {
                get {
                    return this.columnRequiresRoboticPrepDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoldClientIssueColumn {
                get {
                    return this.columnHoldClientIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoldLFSIssueColumn {
                get {
                    return this.columnHoldLFSIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineLateralColumn {
                get {
                    return this.columnLineLateral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DyeTestReqColumn {
                get {
                    return this.columnDyeTestReq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DyeTestCompleteColumn {
                get {
                    return this.columnDyeTestComplete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContractYearColumn {
                get {
                    return this.columnContractYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M1_LATERALRow this[int index] {
                get {
                    return ((LFS_WORK_FULLLENGTHLINING_M1_LATERALRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_FULLLENGTHLINING_M1_LATERALRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_M1_LATERALRowChanging;
            
            public event LFS_WORK_FULLLENGTHLINING_M1_LATERALRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_M1_LATERALRowChanged;
            
            public event LFS_WORK_FULLLENGTHLINING_M1_LATERALRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_M1_LATERALRowDeleting;
            
            public event LFS_WORK_FULLLENGTHLINING_M1_LATERALRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_M1_LATERALRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_FULLLENGTHLINING_M1_LATERALRow(LFS_WORK_FULLLENGTHLINING_M1_LATERALRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M1_LATERALRow AddLFS_WORK_FULLLENGTHLINING_M1_LATERALRow(
                        int WorkID, 
                        int Lateral, 
                        string VideoDistance, 
                        string ClockPosition, 
                        string DistanceToCentre, 
                        string TimeOpened, 
                        string ReverseSetup, 
                        System.DateTime Reinstate, 
                        string Comments, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        string ClientInspectionNo, 
                        System.DateTime V1Inspection, 
                        bool RequiresRoboticPrep, 
                        System.DateTime RequiresRoboticPrepDate, 
                        bool HoldClientIssue, 
                        bool HoldLFSIssue, 
                        bool LineLateral, 
                        bool DyeTestReq, 
                        System.DateTime DyeTestComplete, 
                        string ContractYear) {
                LFS_WORK_FULLLENGTHLINING_M1_LATERALRow rowLFS_WORK_FULLLENGTHLINING_M1_LATERALRow = ((LFS_WORK_FULLLENGTHLINING_M1_LATERALRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        Lateral,
                        VideoDistance,
                        ClockPosition,
                        DistanceToCentre,
                        TimeOpened,
                        ReverseSetup,
                        Reinstate,
                        Comments,
                        Deleted,
                        COMPANY_ID,
                        ClientInspectionNo,
                        V1Inspection,
                        RequiresRoboticPrep,
                        RequiresRoboticPrepDate,
                        HoldClientIssue,
                        HoldLFSIssue,
                        LineLateral,
                        DyeTestReq,
                        DyeTestComplete,
                        ContractYear};
                rowLFS_WORK_FULLLENGTHLINING_M1_LATERALRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_FULLLENGTHLINING_M1_LATERALRow);
                return rowLFS_WORK_FULLLENGTHLINING_M1_LATERALRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M1_LATERALRow FindByWorkIDLateral(int WorkID, int Lateral) {
                return ((LFS_WORK_FULLLENGTHLINING_M1_LATERALRow)(this.Rows.Find(new object[] {
                            WorkID,
                            Lateral})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_FULLLENGTHLINING_M1_LATERALDataTable cln = ((LFS_WORK_FULLLENGTHLINING_M1_LATERALDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_FULLLENGTHLINING_M1_LATERALDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnLateral = base.Columns["Lateral"];
                this.columnVideoDistance = base.Columns["VideoDistance"];
                this.columnClockPosition = base.Columns["ClockPosition"];
                this.columnDistanceToCentre = base.Columns["DistanceToCentre"];
                this.columnTimeOpened = base.Columns["TimeOpened"];
                this.columnReverseSetup = base.Columns["ReverseSetup"];
                this.columnReinstate = base.Columns["Reinstate"];
                this.columnComments = base.Columns["Comments"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnClientInspectionNo = base.Columns["ClientInspectionNo"];
                this.columnV1Inspection = base.Columns["V1Inspection"];
                this.columnRequiresRoboticPrep = base.Columns["RequiresRoboticPrep"];
                this.columnRequiresRoboticPrepDate = base.Columns["RequiresRoboticPrepDate"];
                this.columnHoldClientIssue = base.Columns["HoldClientIssue"];
                this.columnHoldLFSIssue = base.Columns["HoldLFSIssue"];
                this.columnLineLateral = base.Columns["LineLateral"];
                this.columnDyeTestReq = base.Columns["DyeTestReq"];
                this.columnDyeTestComplete = base.Columns["DyeTestComplete"];
                this.columnContractYear = base.Columns["ContractYear"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnLateral = new global::System.Data.DataColumn("Lateral", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateral);
                this.columnVideoDistance = new global::System.Data.DataColumn("VideoDistance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoDistance);
                this.columnClockPosition = new global::System.Data.DataColumn("ClockPosition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClockPosition);
                this.columnDistanceToCentre = new global::System.Data.DataColumn("DistanceToCentre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceToCentre);
                this.columnTimeOpened = new global::System.Data.DataColumn("TimeOpened", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeOpened);
                this.columnReverseSetup = new global::System.Data.DataColumn("ReverseSetup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReverseSetup);
                this.columnReinstate = new global::System.Data.DataColumn("Reinstate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReinstate);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnClientInspectionNo = new global::System.Data.DataColumn("ClientInspectionNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientInspectionNo);
                this.columnV1Inspection = new global::System.Data.DataColumn("V1Inspection", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV1Inspection);
                this.columnRequiresRoboticPrep = new global::System.Data.DataColumn("RequiresRoboticPrep", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiresRoboticPrep);
                this.columnRequiresRoboticPrepDate = new global::System.Data.DataColumn("RequiresRoboticPrepDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiresRoboticPrepDate);
                this.columnHoldClientIssue = new global::System.Data.DataColumn("HoldClientIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoldClientIssue);
                this.columnHoldLFSIssue = new global::System.Data.DataColumn("HoldLFSIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoldLFSIssue);
                this.columnLineLateral = new global::System.Data.DataColumn("LineLateral", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineLateral);
                this.columnDyeTestReq = new global::System.Data.DataColumn("DyeTestReq", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDyeTestReq);
                this.columnDyeTestComplete = new global::System.Data.DataColumn("DyeTestComplete", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDyeTestComplete);
                this.columnContractYear = new global::System.Data.DataColumn("ContractYear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractYear);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID,
                                this.columnLateral}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnLateral.AllowDBNull = false;
                this.columnVideoDistance.MaxLength = 25;
                this.columnClockPosition.MaxLength = 50;
                this.columnDistanceToCentre.MaxLength = 25;
                this.columnTimeOpened.MaxLength = 50;
                this.columnReverseSetup.MaxLength = 25;
                this.columnComments.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnClientInspectionNo.MaxLength = 50;
                this.columnRequiresRoboticPrep.AllowDBNull = false;
                this.columnHoldClientIssue.AllowDBNull = false;
                this.columnHoldLFSIssue.AllowDBNull = false;
                this.columnLineLateral.AllowDBNull = false;
                this.columnDyeTestReq.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M1_LATERALRow NewLFS_WORK_FULLLENGTHLINING_M1_LATERALRow() {
                return ((LFS_WORK_FULLLENGTHLINING_M1_LATERALRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_FULLLENGTHLINING_M1_LATERALRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_FULLLENGTHLINING_M1_LATERALRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_M1_LATERALRowChanged != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_M1_LATERALRowChanged(this, new LFS_WORK_FULLLENGTHLINING_M1_LATERALRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_M1_LATERALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_M1_LATERALRowChanging != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_M1_LATERALRowChanging(this, new LFS_WORK_FULLLENGTHLINING_M1_LATERALRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_M1_LATERALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_M1_LATERALRowDeleted != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_M1_LATERALRowDeleted(this, new LFS_WORK_FULLLENGTHLINING_M1_LATERALRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_M1_LATERALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_M1_LATERALRowDeleting != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_M1_LATERALRowDeleting(this, new LFS_WORK_FULLLENGTHLINING_M1_LATERALRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_M1_LATERALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_FULLLENGTHLINING_M1_LATERALRow(LFS_WORK_FULLLENGTHLINING_M1_LATERALRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WorkTDS ds = new WorkTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_FULLLENGTHLINING_M1_LATERALDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_FULLLENGTHLINING_M1Row : global::System.Data.DataRow {
            
            private LFS_WORK_FULLLENGTHLINING_M1DataTable tableLFS_WORK_FULLLENGTHLINING_M1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_M1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_FULLLENGTHLINING_M1 = ((LFS_WORK_FULLLENGTHLINING_M1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementTakenBy {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1.MeasurementTakenByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementTakenBy\' in table \'LFS_WORK_FULLLENGTHLINING_M1\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1.MeasurementTakenByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrafficControl {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1.TrafficControlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrafficControl\' in table \'LFS_WORK_FULLLENGTHLINING_M1\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1.TrafficControlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SiteDetails {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1.SiteDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteDetails\' in table \'LFS_WORK_FULLLENGTHLINING_M1\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1.SiteDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PipeSizeChange {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1.PipeSizeChangeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1.PipeSizeChangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool StandardBypass {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1.StandardBypassColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1.StandardBypassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StandardBypassComments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1.StandardBypassCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandardBypassComments\' in table \'LFS_WORK_FULLLENGTHLINING" +
                                "_M1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1.StandardBypassCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrafficControlDetails {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1.TrafficControlDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrafficControlDetails\' in table \'LFS_WORK_FULLLENGTHLINING_" +
                                "M1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1.TrafficControlDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1.MeasurementTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementType\' in table \'LFS_WORK_FULLLENGTHLINING_M1\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1.MeasurementTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementFromMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1.MeasurementFromMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementFromMH\' in table \'LFS_WORK_FULLLENGTHLINING_M1\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1.MeasurementFromMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoDoneFromMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1.VideoDoneFromMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoDoneFromMH\' in table \'LFS_WORK_FULLLENGTHLINING_M1\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1.VideoDoneFromMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoDoneToMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1.VideoDoneToMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoDoneToMH\' in table \'LFS_WORK_FULLLENGTHLINING_M1\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1.VideoDoneToMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccessType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1.AccessTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccessType\' in table \'LFS_WORK_FULLLENGTHLINING_M1\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1.AccessTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementTakenByNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1.MeasurementTakenByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementTakenByNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1.MeasurementTakenByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrafficControlNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1.TrafficControlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrafficControlNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1.TrafficControlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteDetailsNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1.SiteDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteDetailsNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1.SiteDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandardBypassCommentsNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1.StandardBypassCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandardBypassCommentsNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1.StandardBypassCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrafficControlDetailsNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1.TrafficControlDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrafficControlDetailsNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1.TrafficControlDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementTypeNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1.MeasurementTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementTypeNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1.MeasurementTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementFromMHNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1.MeasurementFromMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementFromMHNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1.MeasurementFromMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoDoneFromMHNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1.VideoDoneFromMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoDoneFromMHNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1.VideoDoneFromMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoDoneToMHNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1.VideoDoneToMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoDoneToMHNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1.VideoDoneToMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccessTypeNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1.AccessTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccessTypeNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1.AccessTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_FULLLENGTHLINING_P1Row : global::System.Data.DataRow {
            
            private LFS_WORK_FULLLENGTHLINING_P1DataTable tableLFS_WORK_FULLLENGTHLINING_P1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_P1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_FULLLENGTHLINING_P1 = ((LFS_WORK_FULLLENGTHLINING_P1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_P1.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_P1.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CXIsRemoved {
                get {
                    try {
                        return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_P1.CXIsRemovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CXIsRemoved\' in table \'LFS_WORK_FULLLENGTHLINING_P1\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_P1.CXIsRemovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_P1.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_P1.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_P1.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_P1.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RoboticPrepCompleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_P1.RoboticPrepCompletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_P1.RoboticPrepCompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RoboticPrepCompletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING_P1.RoboticPrepCompletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoboticPrepCompletedDate\' in table \'LFS_WORK_FULLLENGTHLINI" +
                                "NG_P1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_P1.RoboticPrepCompletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P1Completed {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_P1.P1CompletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_P1.P1CompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCXIsRemovedNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_P1.CXIsRemovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCXIsRemovedNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_P1.CXIsRemovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoboticPrepCompletedDateNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_P1.RoboticPrepCompletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoboticPrepCompletedDateNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_P1.RoboticPrepCompletedDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_REHABASSESSMENTRow : global::System.Data.DataRow {
            
            private LFS_WORK_REHABASSESSMENTDataTable tableLFS_WORK_REHABASSESSMENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_REHABASSESSMENTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_REHABASSESSMENT = ((LFS_WORK_REHABASSESSMENTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_REHABASSESSMENT.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_REHABASSESSMENT.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreFlushDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_REHABASSESSMENT.PreFlushDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreFlushDate\' in table \'LFS_WORK_REHABASSESSMENT\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_REHABASSESSMENT.PreFlushDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreVideoDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_REHABASSESSMENT.PreVideoDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreVideoDate\' in table \'LFS_WORK_REHABASSESSMENT\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_REHABASSESSMENT.PreVideoDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_REHABASSESSMENT.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_REHABASSESSMENT.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_REHABASSESSMENT.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_REHABASSESSMENT.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORKRow LFS_WORKRow {
                get {
                    return ((LFS_WORKRow)(this.GetParentRow(this.Table.ParentRelations["FK_LFS_WORK_LFS_WORK_REHABASSESSMENT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_LFS_WORK_LFS_WORK_REHABASSESSMENT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreFlushDateNull() {
                return this.IsNull(this.tableLFS_WORK_REHABASSESSMENT.PreFlushDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreFlushDateNull() {
                this[this.tableLFS_WORK_REHABASSESSMENT.PreFlushDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreVideoDateNull() {
                return this.IsNull(this.tableLFS_WORK_REHABASSESSMENT.PreVideoDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreVideoDateNull() {
                this[this.tableLFS_WORK_REHABASSESSMENT.PreVideoDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORKRow : global::System.Data.DataRow {
            
            private LFS_WORKDataTable tableLFS_WORK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK = ((LFS_WORKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableLFS_WORK.ProjectIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssetID {
                get {
                    return ((int)(this[this.tableLFS_WORK.AssetIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK.AssetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkType {
                get {
                    return ((string)(this[this.tableLFS_WORK.WorkTypeColumn]));
                }
                set {
                    this[this.tableLFS_WORK.WorkTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LIBRARY_CATEGORIES_ID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_WORK.LIBRARY_CATEGORIES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LIBRARY_CATEGORIES_ID\' in table \'LFS_WORK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK.LIBRARY_CATEGORIES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_WORK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string History {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK.HistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'History\' in table \'LFS_WORK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK.HistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_MANHOLE_REHABILITATIONRow LFS_WORK_MANHOLE_REHABILITATIONRow {
                get {
                    return ((LFS_WORK_MANHOLE_REHABILITATIONRow)(this.GetParentRow(this.Table.ParentRelations["LFS_WORK_MANHOLE_REHABILITATION_LFS_WORK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_WORK_MANHOLE_REHABILITATION_LFS_WORK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIBRARY_CATEGORIES_IDNull() {
                return this.IsNull(this.tableLFS_WORK.LIBRARY_CATEGORIES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIBRARY_CATEGORIES_IDNull() {
                this[this.tableLFS_WORK.LIBRARY_CATEGORIES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_WORK.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_WORK.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryNull() {
                return this.IsNull(this.tableLFS_WORK.HistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryNull() {
                this[this.tableLFS_WORK.HistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_REHABASSESSMENTRow[] GetLFS_WORK_REHABASSESSMENTRows() {
                if ((this.Table.ChildRelations["FK_LFS_WORK_LFS_WORK_REHABASSESSMENT"] == null)) {
                    return new LFS_WORK_REHABASSESSMENTRow[0];
                }
                else {
                    return ((LFS_WORK_REHABASSESSMENTRow[])(base.GetChildRows(this.Table.ChildRelations["FK_LFS_WORK_LFS_WORK_REHABASSESSMENT"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRSRow[] GetLFS_WORK_POINT_REPAIRSRows() {
                if ((this.Table.ChildRelations["LFS_WORK_LFS_WORK_POINT_REPAIRS"] == null)) {
                    return new LFS_WORK_POINT_REPAIRSRow[0];
                }
                else {
                    return ((LFS_WORK_POINT_REPAIRSRow[])(base.GetChildRows(this.Table.ChildRelations["LFS_WORK_LFS_WORK_POINT_REPAIRS"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLININGRow[] GetLFS_WORK_FULLLENGTHLININGRows() {
                if ((this.Table.ChildRelations["LFS_WORK_LFS_WORK_FULLLENGTHLINING"] == null)) {
                    return new LFS_WORK_FULLLENGTHLININGRow[0];
                }
                else {
                    return ((LFS_WORK_FULLLENGTHLININGRow[])(base.GetChildRows(this.Table.ChildRelations["LFS_WORK_LFS_WORK_FULLLENGTHLINING"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_HISTORYRow[] GetLFS_WORK_HISTORYRows() {
                if ((this.Table.ChildRelations["LFS_WORK_LFS_WORK_HISTORY"] == null)) {
                    return new LFS_WORK_HISTORYRow[0];
                }
                else {
                    return ((LFS_WORK_HISTORYRow[])(base.GetChildRows(this.Table.ChildRelations["LFS_WORK_LFS_WORK_HISTORY"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_COMMENTRow[] GetLFS_WORK_COMMENTRows() {
                if ((this.Table.ChildRelations["LFS_WORK_LFS_WORK_COMMENT"] == null)) {
                    return new LFS_WORK_COMMENTRow[0];
                }
                else {
                    return ((LFS_WORK_COMMENTRow[])(base.GetChildRows(this.Table.ChildRelations["LFS_WORK_LFS_WORK_COMMENT"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow : global::System.Data.DataRow {
            
            private LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONDataTable tableLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION = ((LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION.NameColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Abbreviation {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION.AbbreviationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Abbreviation\' in table \'LFS_WORK_JUNCTIONLINING_CO_PIT_LOCA" +
                                "TION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION.AbbreviationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbbreviationNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION.AbbreviationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbbreviationNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_CO_PIT_LOCATION.AbbreviationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_FULLLENGTHLINING_M2Row : global::System.Data.DataRow {
            
            private LFS_WORK_FULLLENGTHLINING_M2DataTable tableLFS_WORK_FULLLENGTHLINING_M2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_M2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_FULLLENGTHLINING_M2 = ((LFS_WORK_FULLLENGTHLINING_M2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoLength {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.VideoLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoLength\' in table \'LFS_WORK_FULLLENGTHLINING_M2\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.VideoLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementTakenBy {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.MeasurementTakenByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementTakenBy\' in table \'LFS_WORK_FULLLENGTHLINING_M2\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.MeasurementTakenByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DropPipe {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.DropPipeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.DropPipeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DropPipeInvertDepth {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.DropPipeInvertDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropPipeInvertDepth\' in table \'LFS_WORK_FULLLENGTHLINING_M2" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.DropPipeInvertDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CappedLaterals {
                get {
                    try {
                        return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.CappedLateralsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CappedLaterals\' in table \'LFS_WORK_FULLLENGTHLINING_M2\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.CappedLateralsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LineWithID {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.LineWithIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineWithID\' in table \'LFS_WORK_FULLLENGTHLINING_M2\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.LineWithIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HydrantAddress {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.HydrantAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HydrantAddress\' in table \'LFS_WORK_FULLLENGTHLINING_M2\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.HydrantAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HydroWireWithin10FtOfInversionMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.HydroWireWithin10FtOfInversionMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HydroWireWithin10FtOfInversionMH\' in table \'LFS_WORK_FULLLE" +
                                "NGTHLINING_M2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.HydroWireWithin10FtOfInversionMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistanceToInversionMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.DistanceToInversionMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceToInversionMH\' in table \'LFS_WORK_FULLLENGTHLINING_" +
                                "M2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.DistanceToInversionMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SurfaceGrade {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.SurfaceGradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurfaceGrade\' in table \'LFS_WORK_FULLLENGTHLINING_M2\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.SurfaceGradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HydroPulley {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.HydroPulleyColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.HydroPulleyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FridgeCart {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.FridgeCartColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.FridgeCartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TwoPump {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.TwoPumpColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.TwoPumpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SixBypass {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.SixBypassColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.SixBypassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Scaffolding {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.ScaffoldingColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.ScaffoldingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WinchExtention {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.WinchExtentionColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.WinchExtentionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ExtraGenerator {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.ExtraGeneratorColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.ExtraGeneratorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool GreyCableExtension {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.GreyCableExtensionColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.GreyCableExtensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EasementMats {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.EasementMatsColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.EasementMatsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RampRequired {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.RampRequiredColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.RampRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CameraSkid {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M2.CameraSkidColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M2.CameraSkidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLININGRow LFS_WORK_FULLLENGTHLININGRow {
                get {
                    return ((LFS_WORK_FULLLENGTHLININGRow)(this.GetParentRow(this.Table.ParentRelations["LFS_WORK_FULLLENGTHLINING_LFS_WORK_FULLLENGTHLINING_M2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_WORK_FULLLENGTHLINING_LFS_WORK_FULLLENGTHLINING_M2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoLengthNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M2.VideoLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoLengthNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M2.VideoLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementTakenByNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M2.MeasurementTakenByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementTakenByNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M2.MeasurementTakenByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDropPipeInvertDepthNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M2.DropPipeInvertDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDropPipeInvertDepthNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M2.DropPipeInvertDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCappedLateralsNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M2.CappedLateralsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCappedLateralsNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M2.CappedLateralsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineWithIDNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M2.LineWithIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineWithIDNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M2.LineWithIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydrantAddressNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M2.HydrantAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydrantAddressNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M2.HydrantAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydroWireWithin10FtOfInversionMHNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M2.HydroWireWithin10FtOfInversionMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydroWireWithin10FtOfInversionMHNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M2.HydroWireWithin10FtOfInversionMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceToInversionMHNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M2.DistanceToInversionMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceToInversionMHNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M2.DistanceToInversionMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSurfaceGradeNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M2.SurfaceGradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSurfaceGradeNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M2.SurfaceGradeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_POINT_REPAIRSRow : global::System.Data.DataRow {
            
            private LFS_WORK_POINT_REPAIRSDataTable tableLFS_WORK_POINT_REPAIRS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_POINT_REPAIRSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_POINT_REPAIRS = ((LFS_WORK_POINT_REPAIRSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_POINT_REPAIRS.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientID {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS.ClientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientID\' in table \'LFS_WORK_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.ClientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementTakenBy {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS.MeasurementTakenByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementTakenBy\' in table \'LFS_WORK_POINT_REPAIRS\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.MeasurementTakenByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RepairConfirmationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_POINT_REPAIRS.RepairConfirmationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RepairConfirmationDate\' in table \'LFS_WORK_POINT_REPAIRS\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.RepairConfirmationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BypassRequired {
                get {
                    return ((bool)(this[this.tableLFS_WORK_POINT_REPAIRS.BypassRequiredColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.BypassRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RoboticDistances {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS.RoboticDistancesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoboticDistances\' in table \'LFS_WORK_POINT_REPAIRS\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.RoboticDistancesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ProposedLiningDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_POINT_REPAIRS.ProposedLiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProposedLiningDate\' in table \'LFS_WORK_POINT_REPAIRS\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.ProposedLiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeadlineLiningDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_POINT_REPAIRS.DeadlineLiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeadlineLiningDate\' in table \'LFS_WORK_POINT_REPAIRS\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.DeadlineLiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FinalVideoDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_POINT_REPAIRS.FinalVideoDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalVideoDate\' in table \'LFS_WORK_POINT_REPAIRS\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.FinalVideoDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EstimatedJoints {
                get {
                    try {
                        return ((int)(this[this.tableLFS_WORK_POINT_REPAIRS.EstimatedJointsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimatedJoints\' in table \'LFS_WORK_POINT_REPAIRS\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.EstimatedJointsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int JointsTestSealed {
                get {
                    try {
                        return ((int)(this[this.tableLFS_WORK_POINT_REPAIRS.JointsTestSealedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JointsTestSealed\' in table \'LFS_WORK_POINT_REPAIRS\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.JointsTestSealedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueIdentified {
                get {
                    return ((bool)(this[this.tableLFS_WORK_POINT_REPAIRS.IssueIdentifiedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.IssueIdentifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueLFS {
                get {
                    return ((bool)(this[this.tableLFS_WORK_POINT_REPAIRS.IssueLFSColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.IssueLFSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueClient {
                get {
                    return ((bool)(this[this.tableLFS_WORK_POINT_REPAIRS.IssueClientColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.IssueClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueSales {
                get {
                    return ((bool)(this[this.tableLFS_WORK_POINT_REPAIRS.IssueSalesColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.IssueSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueGivenToClient {
                get {
                    return ((bool)(this[this.tableLFS_WORK_POINT_REPAIRS.IssueGivenToClientColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.IssueGivenToClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueResolved {
                get {
                    return ((bool)(this[this.tableLFS_WORK_POINT_REPAIRS.IssueResolvedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.IssueResolvedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueInvestigation {
                get {
                    return ((bool)(this[this.tableLFS_WORK_POINT_REPAIRS.IssueInvestigationColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.IssueInvestigationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RepairID {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS.RepairIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RepairID\' in table \'LFS_WORK_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.RepairIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_POINT_REPAIRS.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_POINT_REPAIRS.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORKRow LFS_WORKRow {
                get {
                    return ((LFS_WORKRow)(this.GetParentRow(this.Table.ParentRelations["LFS_WORK_LFS_WORK_POINT_REPAIRS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_WORK_LFS_WORK_POINT_REPAIRS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientIDNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS.ClientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientIDNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS.ClientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementTakenByNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS.MeasurementTakenByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementTakenByNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS.MeasurementTakenByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRepairConfirmationDateNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS.RepairConfirmationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRepairConfirmationDateNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS.RepairConfirmationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoboticDistancesNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS.RoboticDistancesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoboticDistancesNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS.RoboticDistancesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProposedLiningDateNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS.ProposedLiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProposedLiningDateNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS.ProposedLiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeadlineLiningDateNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS.DeadlineLiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeadlineLiningDateNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS.DeadlineLiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalVideoDateNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS.FinalVideoDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalVideoDateNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS.FinalVideoDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimatedJointsNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS.EstimatedJointsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimatedJointsNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS.EstimatedJointsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJointsTestSealedNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS.JointsTestSealedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJointsTestSealedNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS.JointsTestSealedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRepairIDNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS.RepairIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRepairIDNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS.RepairIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow : global::System.Data.DataRow {
            
            private LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZEDataTable tableLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE = ((LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size_ {
                get {
                    return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE.Size_Column]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE.Size_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZE.DeletedColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_JUNCTIONLINING_FLANGERow : global::System.Data.DataRow {
            
            private LFS_WORK_JUNCTIONLINING_FLANGEDataTable tableLFS_WORK_JUNCTIONLINING_FLANGE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_JUNCTIONLINING_FLANGERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_JUNCTIONLINING_FLANGE = ((LFS_WORK_JUNCTIONLINING_FLANGEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Flange {
                get {
                    return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_FLANGE.FlangeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_FLANGE.FlangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_JUNCTIONLINING_FLANGE.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_FLANGE.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow[] GetLFS_WORK_JUNCTIONLINING_FLANGE_GASKETRows() {
                if ((this.Table.ChildRelations["LFS_WORK_JUNCTIONLINING_FLANGE_LFS_WORK_JUNCTIONLINING_FLANGE_GASKET"] == null)) {
                    return new LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow[0];
                }
                else {
                    return ((LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow[])(base.GetChildRows(this.Table.ChildRelations["LFS_WORK_JUNCTIONLINING_FLANGE_LFS_WORK_JUNCTIONLINING_FLANGE_GASKET"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow : global::System.Data.DataRow {
            
            private LFS_WORK_JUNCTIONLINING_FLANGE_GASKETDataTable tableLFS_WORK_JUNCTIONLINING_FLANGE_GASKET;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_JUNCTIONLINING_FLANGE_GASKET = ((LFS_WORK_JUNCTIONLINING_FLANGE_GASKETDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Flange {
                get {
                    return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_FLANGE_GASKET.FlangeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_FLANGE_GASKET.FlangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gasket {
                get {
                    return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_FLANGE_GASKET.GasketColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_FLANGE_GASKET.GasketColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_JUNCTIONLINING_FLANGE_GASKET.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_FLANGE_GASKET.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_FLANGERow LFS_WORK_JUNCTIONLINING_FLANGERow {
                get {
                    return ((LFS_WORK_JUNCTIONLINING_FLANGERow)(this.GetParentRow(this.Table.ParentRelations["LFS_WORK_JUNCTIONLINING_FLANGE_LFS_WORK_JUNCTIONLINING_FLANGE_GASKET"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_WORK_JUNCTIONLINING_FLANGE_LFS_WORK_JUNCTIONLINING_FLANGE_GASKET"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_FULLLENGTHLININGRow : global::System.Data.DataRow {
            
            private LFS_WORK_FULLLENGTHLININGDataTable tableLFS_WORK_FULLLENGTHLINING;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLININGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_FULLLENGTHLINING = ((LFS_WORK_FULLLENGTHLININGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientID {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING.ClientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientID\' in table \'LFS_WORK_FULLLENGTHLINING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING.ClientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ProposedLiningDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING.ProposedLiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProposedLiningDate\' in table \'LFS_WORK_FULLLENGTHLINING\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING.ProposedLiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeadlineLiningDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING.DeadlineLiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeadlineLiningDate\' in table \'LFS_WORK_FULLLENGTHLINING\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING.DeadlineLiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime P1Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING.P1DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P1Date\' in table \'LFS_WORK_FULLLENGTHLINING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING.P1DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime M1Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING.M1DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M1Date\' in table \'LFS_WORK_FULLLENGTHLINING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING.M1DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime M2Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING.M2DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M2Date\' in table \'LFS_WORK_FULLLENGTHLINING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING.M2DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InstallDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING.InstallDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallDate\' in table \'LFS_WORK_FULLLENGTHLINING\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING.InstallDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FinalVideoDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING.FinalVideoDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalVideoDate\' in table \'LFS_WORK_FULLLENGTHLINING\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING.FinalVideoDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueIdentified {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING.IssueIdentifiedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING.IssueIdentifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueLFS {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING.IssueLFSColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING.IssueLFSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueClient {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING.IssueClientColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING.IssueClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueSales {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING.IssueSalesColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING.IssueSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueGivenToClient {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING.IssueGivenToClientColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING.IssueGivenToClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueResolved {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING.IssueResolvedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING.IssueResolvedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueInvestigation {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING.IssueInvestigationColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING.IssueInvestigationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORKRow LFS_WORKRow {
                get {
                    return ((LFS_WORKRow)(this.GetParentRow(this.Table.ParentRelations["LFS_WORK_LFS_WORK_FULLLENGTHLINING"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_WORK_LFS_WORK_FULLLENGTHLINING"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientIDNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING.ClientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientIDNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING.ClientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProposedLiningDateNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING.ProposedLiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProposedLiningDateNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING.ProposedLiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeadlineLiningDateNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING.DeadlineLiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeadlineLiningDateNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING.DeadlineLiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP1DateNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING.P1DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP1DateNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING.P1DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM1DateNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING.M1DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM1DateNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING.M1DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM2DateNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING.M2DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM2DateNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING.M2DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallDateNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING.InstallDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallDateNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING.InstallDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalVideoDateNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING.FinalVideoDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalVideoDateNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING.FinalVideoDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M2Row[] GetLFS_WORK_FULLLENGTHLINING_M2Rows() {
                if ((this.Table.ChildRelations["LFS_WORK_FULLLENGTHLINING_LFS_WORK_FULLLENGTHLINING_M2"] == null)) {
                    return new LFS_WORK_FULLLENGTHLINING_M2Row[0];
                }
                else {
                    return ((LFS_WORK_FULLLENGTHLINING_M2Row[])(base.GetChildRows(this.Table.ChildRelations["LFS_WORK_FULLLENGTHLINING_LFS_WORK_FULLLENGTHLINING_M2"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_COMMENTRow : global::System.Data.DataRow {
            
            private LFS_WORK_COMMENTDataTable tableLFS_WORK_COMMENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_COMMENTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_COMMENT = ((LFS_WORK_COMMENTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_COMMENT.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_COMMENT.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_WORK_COMMENT.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_COMMENT.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_COMMENT.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'LFS_WORK_COMMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_COMMENT.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Subject {
                get {
                    return ((string)(this[this.tableLFS_WORK_COMMENT.SubjectColumn]));
                }
                set {
                    this[this.tableLFS_WORK_COMMENT.SubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    return ((int)(this[this.tableLFS_WORK_COMMENT.UserIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_COMMENT.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTime_ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_COMMENT.DateTime_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTime_\' in table \'LFS_WORK_COMMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_COMMENT.DateTime_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_COMMENT.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'LFS_WORK_COMMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_COMMENT.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LIBRARY_FILES_ID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_WORK_COMMENT.LIBRARY_FILES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LIBRARY_FILES_ID\' in table \'LFS_WORK_COMMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_COMMENT.LIBRARY_FILES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_COMMENT.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_COMMENT.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_COMMENT.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_COMMENT.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_COMMENT.WorkTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkType\' in table \'LFS_WORK_COMMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_COMMENT.WorkTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserFullName {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_COMMENT.UserFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserFullName\' in table \'LFS_WORK_COMMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_COMMENT.UserFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreationDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_COMMENT.CreationDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDateTime\' in table \'LFS_WORK_COMMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_COMMENT.CreationDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ToHistory {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_WORK_COMMENT.ToHistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToHistory\' in table \'LFS_WORK_COMMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_COMMENT.ToHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORKRow LFS_WORKRow {
                get {
                    return ((LFS_WORKRow)(this.GetParentRow(this.Table.ParentRelations["LFS_WORK_LFS_WORK_COMMENT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_WORK_LFS_WORK_COMMENT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableLFS_WORK_COMMENT.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableLFS_WORK_COMMENT.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTime_Null() {
                return this.IsNull(this.tableLFS_WORK_COMMENT.DateTime_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTime_Null() {
                this[this.tableLFS_WORK_COMMENT.DateTime_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableLFS_WORK_COMMENT.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableLFS_WORK_COMMENT.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIBRARY_FILES_IDNull() {
                return this.IsNull(this.tableLFS_WORK_COMMENT.LIBRARY_FILES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIBRARY_FILES_IDNull() {
                this[this.tableLFS_WORK_COMMENT.LIBRARY_FILES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkTypeNull() {
                return this.IsNull(this.tableLFS_WORK_COMMENT.WorkTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkTypeNull() {
                this[this.tableLFS_WORK_COMMENT.WorkTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserFullNameNull() {
                return this.IsNull(this.tableLFS_WORK_COMMENT.UserFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserFullNameNull() {
                this[this.tableLFS_WORK_COMMENT.UserFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreationDateTimeNull() {
                return this.IsNull(this.tableLFS_WORK_COMMENT.CreationDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreationDateTimeNull() {
                this[this.tableLFS_WORK_COMMENT.CreationDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToHistoryNull() {
                return this.IsNull(this.tableLFS_WORK_COMMENT.ToHistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToHistoryNull() {
                this[this.tableLFS_WORK_COMMENT.ToHistoryColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_HISTORYRow : global::System.Data.DataRow {
            
            private LFS_WORK_HISTORYDataTable tableLFS_WORK_HISTORY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_HISTORYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_HISTORY = ((LFS_WORK_HISTORYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_HISTORY.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_HISTORY.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_WORK_HISTORY.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_HISTORY.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_HISTORY.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'LFS_WORK_HISTORY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_HISTORY.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Subject {
                get {
                    return ((string)(this[this.tableLFS_WORK_HISTORY.SubjectColumn]));
                }
                set {
                    this[this.tableLFS_WORK_HISTORY.SubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    return ((int)(this[this.tableLFS_WORK_HISTORY.UserIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_HISTORY.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTime_ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_HISTORY.DateTime_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTime_\' in table \'LFS_WORK_HISTORY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_HISTORY.DateTime_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string History {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_HISTORY.HistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'History\' in table \'LFS_WORK_HISTORY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_HISTORY.HistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LIBRARY_FILES_ID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_WORK_HISTORY.LIBRARY_FILES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LIBRARY_FILES_ID\' in table \'LFS_WORK_HISTORY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_HISTORY.LIBRARY_FILES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_HISTORY.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_HISTORY.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_HISTORY.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_HISTORY.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_HISTORY.WorkTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkType\' in table \'LFS_WORK_HISTORY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_HISTORY.WorkTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserFullName {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_HISTORY.UserFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserFullName\' in table \'LFS_WORK_HISTORY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_HISTORY.UserFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreationDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_HISTORY.CreationDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDateTime\' in table \'LFS_WORK_HISTORY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_HISTORY.CreationDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ToComments {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_WORK_HISTORY.ToCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToComments\' in table \'LFS_WORK_HISTORY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_HISTORY.ToCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORKRow LFS_WORKRow {
                get {
                    return ((LFS_WORKRow)(this.GetParentRow(this.Table.ParentRelations["LFS_WORK_LFS_WORK_HISTORY"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_WORK_LFS_WORK_HISTORY"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableLFS_WORK_HISTORY.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableLFS_WORK_HISTORY.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTime_Null() {
                return this.IsNull(this.tableLFS_WORK_HISTORY.DateTime_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTime_Null() {
                this[this.tableLFS_WORK_HISTORY.DateTime_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryNull() {
                return this.IsNull(this.tableLFS_WORK_HISTORY.HistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryNull() {
                this[this.tableLFS_WORK_HISTORY.HistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIBRARY_FILES_IDNull() {
                return this.IsNull(this.tableLFS_WORK_HISTORY.LIBRARY_FILES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIBRARY_FILES_IDNull() {
                this[this.tableLFS_WORK_HISTORY.LIBRARY_FILES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkTypeNull() {
                return this.IsNull(this.tableLFS_WORK_HISTORY.WorkTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkTypeNull() {
                this[this.tableLFS_WORK_HISTORY.WorkTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserFullNameNull() {
                return this.IsNull(this.tableLFS_WORK_HISTORY.UserFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserFullNameNull() {
                this[this.tableLFS_WORK_HISTORY.UserFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreationDateTimeNull() {
                return this.IsNull(this.tableLFS_WORK_HISTORY.CreationDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreationDateTimeNull() {
                this[this.tableLFS_WORK_HISTORY.CreationDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToCommentsNull() {
                return this.IsNull(this.tableLFS_WORK_HISTORY.ToCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToCommentsNull() {
                this[this.tableLFS_WORK_HISTORY.ToCommentsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_JUNCTIONLINING_SECTIONRow : global::System.Data.DataRow {
            
            private LFS_WORK_JUNCTIONLINING_SECTIONDataTable tableLFS_WORK_JUNCTIONLINING_SECTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_JUNCTIONLINING_SECTIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_JUNCTIONLINING_SECTION = ((LFS_WORK_JUNCTIONLINING_SECTIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumLats {
                get {
                    return ((int)(this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.NumLatsColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.NumLatsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NotLinedYet {
                get {
                    return ((int)(this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.NotLinedYetColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.NotLinedYetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AllMeasured {
                get {
                    return ((bool)(this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.AllMeasuredColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.AllMeasuredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssueWithLaterals {
                get {
                    return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.IssueWithLateralsColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.IssueWithLateralsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NotMeasuredYet {
                get {
                    return ((int)(this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.NotMeasuredYetColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.NotMeasuredYetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NotDeliveredYet {
                get {
                    return ((int)(this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.NotDeliveredYetColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.NotDeliveredYetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrafficControl {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.TrafficControlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrafficControl\' in table \'LFS_WORK_JUNCTIONLINING_SECTION\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.TrafficControlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrafficControlDetails {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.TrafficControlDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrafficControlDetails\' in table \'LFS_WORK_JUNCTIONLINING_SE" +
                                "CTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.TrafficControlDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool StandardBypass {
                get {
                    return ((bool)(this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.StandardBypassColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.StandardBypassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StandardBypassComments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.StandardBypassCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandardBypassComments\' in table \'LFS_WORK_JUNCTIONLINING_S" +
                                "ECTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.StandardBypassCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AvailableToLine {
                get {
                    return ((int)(this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.AvailableToLineColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.AvailableToLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrafficControlNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_SECTION.TrafficControlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrafficControlNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.TrafficControlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrafficControlDetailsNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_SECTION.TrafficControlDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrafficControlDetailsNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.TrafficControlDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandardBypassCommentsNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_SECTION.StandardBypassCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandardBypassCommentsNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_SECTION.StandardBypassCommentsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_FULLLENGTHLINING_RESINSRow : global::System.Data.DataRow {
            
            private LFS_WORK_FULLLENGTHLINING_RESINSDataTable tableLFS_WORK_FULLLENGTHLINING_RESINS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_RESINSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_FULLLENGTHLINING_RESINS = ((LFS_WORK_FULLLENGTHLINING_RESINSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ResinID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.ResinIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.ResinIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResinMake {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.ResinMakeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.ResinMakeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResinType {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.ResinTypeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.ResinTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResinNumber {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.ResinNumberColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.ResinNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LbUsg {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.LbUsgColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.LbUsgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LbDrums {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.LbDrumsColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.LbDrumsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ActiveResin {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.ActiveResinColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.ActiveResinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApplyCatalystTo {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.ApplyCatalystToColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.ApplyCatalystToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Filter {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.FilterColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.FilterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_RESINS.COMPANY_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_FULLLENGTHLINING_CATALYSTSRow : global::System.Data.DataRow {
            
            private LFS_WORK_FULLLENGTHLINING_CATALYSTSDataTable tableLFS_WORK_FULLLENGTHLINING_CATALYSTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_CATALYSTSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_FULLLENGTHLINING_CATALYSTS = ((LFS_WORK_FULLLENGTHLINING_CATALYSTSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CatalystID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_CATALYSTS.CatalystIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_CATALYSTS.CatalystIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_CATALYSTS.NameColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_CATALYSTS.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DefaultPercentageByWeight {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_CATALYSTS.DefaultPercentageByWeightColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_CATALYSTS.DefaultPercentageByWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_CATALYSTS.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_CATALYSTS.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_CATALYSTS.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_CATALYSTS.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow[] GetLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRows() {
                if ((this.Table.ChildRelations["LFS_WORK_FULLLENGTHLINING_CATALYSTS_LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS"] == null)) {
                    return new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow[0];
                }
                else {
                    return ((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow[])(base.GetChildRows(this.Table.ChildRelations["LFS_WORK_FULLLENGTHLINING_CATALYSTS_LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow : global::System.Data.DataRow {
            
            private LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSDataTable tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS = ((LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.TypeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Subject {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.SubjectColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.SubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.UserIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTime_ {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.DateTime_Column]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.DateTime_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.CommentColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LIBRARY_FILES_ID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.LIBRARY_FILES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LIBRARY_FILES_ID\' in table \'LFS_WORK_FULLLENGTHLINING_WETOU" +
                                "T_COMMENTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.LIBRARY_FILES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.WorkTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkType\' in table \'LFS_WORK_FULLLENGTHLINING_WETOUT_COMMEN" +
                                "TS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.WorkTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIBRARY_FILES_IDNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.LIBRARY_FILES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIBRARY_FILES_IDNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.LIBRARY_FILES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkTypeNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.WorkTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkTypeNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTS.WorkTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow : global::System.Data.DataRow {
            
            private LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD = ((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReadingTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.ReadingTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReadingTime\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_" +
                                "FIEL_CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.ReadingTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HeadFt {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.HeadFtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeadFt\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_" +
                                "CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.HeadFtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BoilerInF {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.BoilerInFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoilerInF\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FI" +
                                "EL_CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.BoilerInFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BoilerOutF {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.BoilerOutFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoilerOutF\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_F" +
                                "IEL_CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.BoilerOutFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PumpFlow {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.PumpFlowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PumpFlow\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIE" +
                                "L_CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.PumpFlowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PumpPsi {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.PumpPsiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PumpPsi\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL" +
                                "_CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.PumpPsiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MH1Top {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH1TopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MH1Top\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_" +
                                "CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH1TopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MH1Bot {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH1BotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MH1Bot\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_" +
                                "CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH1BotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MH2Top {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH2TopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MH2Top\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_" +
                                "CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH2TopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MH2Bot {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH2BotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MH2Bot\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_" +
                                "CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH2BotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MH3Top {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH3TopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MH3Top\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_" +
                                "CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH3TopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MH3Bot {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH3BotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MH3Bot\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_" +
                                "CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH3BotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MH4Top {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH4TopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MH4Top\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_" +
                                "CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH4TopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MH4Bot {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH4BotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MH4Bot\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_" +
                                "CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH4BotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIE" +
                                "L_CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReadingTimeNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.ReadingTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReadingTimeNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.ReadingTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeadFtNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.HeadFtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeadFtNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.HeadFtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBoilerInFNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.BoilerInFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBoilerInFNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.BoilerInFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBoilerOutFNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.BoilerOutFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBoilerOutFNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.BoilerOutFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPumpFlowNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.PumpFlowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPumpFlowNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.PumpFlowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPumpPsiNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.PumpPsiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPumpPsiNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.PumpPsiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMH1TopNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH1TopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMH1TopNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH1TopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMH1BotNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH1BotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMH1BotNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH1BotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMH2TopNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH2TopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMH2TopNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH2TopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMH2BotNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH2BotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMH2BotNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH2BotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMH3TopNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH3TopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMH3TopNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH3TopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMH3BotNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH3BotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMH3BotNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH3BotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMH4TopNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH4TopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMH4TopNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH4TopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMH4BotNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH4BotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMH4BotNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH4BotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.CommentsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow : global::System.Data.DataRow {
            
            private LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS = ((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CatalystID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.CatalystIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.CatalystIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PercentageByWeight {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.PercentageByWeightColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.PercentageByWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LbsForMixQuantity {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.LbsForMixQuantityColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.LbsForMixQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LbsForDrum {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.LbsForDrumColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.LbsForDrumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_CATALYSTSRow LFS_WORK_FULLLENGTHLINING_CATALYSTSRow {
                get {
                    return ((LFS_WORK_FULLLENGTHLINING_CATALYSTSRow)(this.GetParentRow(this.Table.ParentRelations["LFS_WORK_FULLLENGTHLINING_CATALYSTS_LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_WORK_FULLLENGTHLINING_CATALYSTS_LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_FULLLENGTHLINING_INVERSIONRow : global::System.Data.DataRow {
            
            private LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable tableLFS_WORK_FULLLENGTHLINING_INVERSION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_INVERSIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_FULLLENGTHLINING_INVERSION = ((LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PipeType {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PipeTypeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PipeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PipeCondition {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PipeConditionColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PipeConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GroundMoisture {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.GroundMoistureColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.GroundMoistureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BoilerSize {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.BoilerSizeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.BoilerSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PumpTotalCapacity {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PumpTotalCapacityColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PumpTotalCapacityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LayFlatSize {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LayFlatSizeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LayFlatSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LayFlatQuantityTotal {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LayFlatQuantityTotalColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LayFlatQuantityTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double WaterStartTemp {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WaterStartTempColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WaterStartTempColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Temp1 {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.Temp1Column]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.Temp1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HoldAtT1 {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.HoldAtT1Column]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.HoldAtT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TempT2 {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TempT2Column]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TempT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CookAtT2 {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CookAtT2Column]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CookAtT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CoolDownFor {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CoolDownForColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CoolDownForColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CoolToTemp {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CoolToTempColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CoolToTempColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DropInPipeRun {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.DropInPipeRunColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.DropInPipeRunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PipeSlopOf {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PipeSlopOfColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PipeSlopOfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double F45F120 {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.F45F120Column]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.F45F120Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Hold {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.HoldColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.HoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double F120F185 {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.F120F185Column]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.F120F185Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CookTime {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CookTimeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CookTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CoolTime {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CoolTimeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CoolTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AproxTotal {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.AproxTotalColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.AproxTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double WaterChangesPerHour {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WaterChangesPerHourColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WaterChangesPerHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ReturnWaterVelocity {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.ReturnWaterVelocityColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.ReturnWaterVelocityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LayflatBackPressure {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LayflatBackPressureColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LayflatBackPressureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PumpLiftAtIdealHead {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PumpLiftAtIdealHeadColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PumpLiftAtIdealHeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double WaterToFillLinerColumn {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WaterToFillLinerColumnColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WaterToFillLinerColumnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double WaterPerFit {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WaterPerFitColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WaterPerFitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InstallationResults {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.InstallationResultsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallationResults\' in table \'LFS_WORK_FULLLENGTHLINING_IN" +
                                "VERSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.InstallationResultsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinerTubeLabel {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LinerTubeLabelColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LinerTubeLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeadsIdealLabel {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.HeadsIdealLabelColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.HeadsIdealLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PumpingAndCirculationLabel {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PumpingAndCirculationLabelColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PumpingAndCirculationLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallationResultsNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.InstallationResultsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallationResultsNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.InstallationResultsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_FULLLENGTHLINING_WETOUTRow : global::System.Data.DataRow {
            
            private LFS_WORK_FULLLENGTHLINING_WETOUTDataTable tableLFS_WORK_FULLLENGTHLINING_WETOUT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_WETOUTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_FULLLENGTHLINING_WETOUT = ((LFS_WORK_FULLLENGTHLINING_WETOUTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinerTube {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.LinerTubeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.LinerTubeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ResinID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ResinIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ResinIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ExcessResin {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ExcessResinColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ExcessResinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PoundsDrums {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.PoundsDrumsColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.PoundsDrumsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DrumDiameter {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DrumDiameterColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DrumDiameterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HoistMaximumHeight {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.HoistMaximumHeightColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.HoistMaximumHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HoistMinimumHeight {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.HoistMinimumHeightColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.HoistMinimumHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DownDropTubeLenght {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DownDropTubeLenghtColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DownDropTubeLenghtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PumpHeightAboveGround {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.PumpHeightAboveGroundColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.PumpHeightAboveGroundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TubeResinToFeltFactor {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeResinToFeltFactorColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeResinToFeltFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfSheet {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DateOfSheetColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DateOfSheetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.EmployeeIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RunDetails {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.RunDetailsColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.RunDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RunDetails2 {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.RunDetails2Column]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.RunDetails2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WetOutDate {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.WetOutDateColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.WetOutDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InstallDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.InstallDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallDate\' in table \'LFS_WORK_FULLLENGTHLINING_WETOUT\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.InstallDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Thickness {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ThicknessColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ThicknessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LengthToLine {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.LengthToLineColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.LengthToLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PlusExtra {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.PlusExtraColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.PlusExtraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ForTurnOffset {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ForTurnOffsetColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ForTurnOffsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LengthToWetOut {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.LengthToWetOutColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.LengthToWetOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeMaxColdHead {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeMaxColdHeadColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeMaxColdHeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeMaxColdHeadPsi {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeMaxColdHeadPsiColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeMaxColdHeadPsiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeMaxHotHead {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeMaxHotHeadColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeMaxHotHeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeMaxHotHeadPsi {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeMaxHotHeadPsiColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeMaxHotHeadPsiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeIdealHead {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeIdealHeadColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeIdealHeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeIdealHeadPsi {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeIdealHeadPsiColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeIdealHeadPsiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NetResinForTube {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NetResinForTubeUsgals {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeUsgalsColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeUsgalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NetResinForTubeDrumsIns {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeDrumsInsColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeDrumsInsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NetResinForTubeLbsFt {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeLbsFtColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeLbsFtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NetResinForTubeUsgFt {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeUsgFtColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeUsgFtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExtraResinForMix {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ExtraResinForMixColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ExtraResinForMixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ExtraLbsForMix {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ExtraLbsForMixColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ExtraLbsForMixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TotalMixQuantity {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TotalMixQuantityColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TotalMixQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TotalMixQuantityUsgals {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TotalMixQuantityUsgalsColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TotalMixQuantityUsgalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalMixQuantityDrumsIns {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TotalMixQuantityDrumsInsColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TotalMixQuantityDrumsInsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InversionType {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.InversionTypeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.InversionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DepthOfInversionMH {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DepthOfInversionMHColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DepthOfInversionMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeForColumn {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeForColumnColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeForColumnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeForStartDry {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeForStartDryColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeForStartDryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TotalTube {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TotalTubeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TotalTubeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DropTubeConnects {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DropTubeConnectsColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DropTubeConnectsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AllowsHeadTo {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.AllowsHeadToColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.AllowsHeadToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double RollerGap {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.RollerGapColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.RollerGapColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HeightNeeded {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.HeightNeededColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.HeightNeededColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Available {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.AvailableColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.AvailableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HoistHeight {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.HoistHeightColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.HoistHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_WORK_FULLLENGTHLINING_WETOUT\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResinsLabel {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ResinsLabelColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ResinsLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DrumContainsLabel {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DrumContainsLabelColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DrumContainsLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinerTubeLabel {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.LinerTubeLabelColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.LinerTubeLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ForLbDrumsLabel {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ForLbDrumsLabelColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ForLbDrumsLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NetResinLabel {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinLabelColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CatalystLabel {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.CatalystLabelColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.CatalystLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallDateNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.InstallDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallDateNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.InstallDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.CommentsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_MANHOLE_REHABILITATIONRow : global::System.Data.DataRow {
            
            private LFS_WORK_MANHOLE_REHABILITATIONDataTable tableLFS_WORK_MANHOLE_REHABILITATION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_MANHOLE_REHABILITATIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_MANHOLE_REHABILITATION = ((LFS_WORK_MANHOLE_REHABILITATIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_MANHOLE_REHABILITATION.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_MANHOLE_REHABILITATION.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreppedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_MANHOLE_REHABILITATION.PreppedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreppedDate\' in table \'LFS_WORK_MANHOLE_REHABILITATION\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_MANHOLE_REHABILITATION.PreppedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SprayedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_MANHOLE_REHABILITATION.SprayedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SprayedDate\' in table \'LFS_WORK_MANHOLE_REHABILITATION\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_MANHOLE_REHABILITATION.SprayedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BatchID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_WORK_MANHOLE_REHABILITATION.BatchIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchID\' in table \'LFS_WORK_MANHOLE_REHABILITATION\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_MANHOLE_REHABILITATION.BatchIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_MANHOLE_REHABILITATION.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_MANHOLE_REHABILITATION.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_MANHOLE_REHABILITATION.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_MANHOLE_REHABILITATION.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_MANHOLE_REHABILITATION_BATCHRow LFS_WORK_MANHOLE_REHABILITATION_BATCHRow {
                get {
                    return ((LFS_WORK_MANHOLE_REHABILITATION_BATCHRow)(this.GetParentRow(this.Table.ParentRelations["FK_LFS_WORK_MANHOLE_REHABILITATION_BATCH_LFS_WORK_MANHOLE_REHABILITATION2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_LFS_WORK_MANHOLE_REHABILITATION_BATCH_LFS_WORK_MANHOLE_REHABILITATION2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreppedDateNull() {
                return this.IsNull(this.tableLFS_WORK_MANHOLE_REHABILITATION.PreppedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreppedDateNull() {
                this[this.tableLFS_WORK_MANHOLE_REHABILITATION.PreppedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSprayedDateNull() {
                return this.IsNull(this.tableLFS_WORK_MANHOLE_REHABILITATION.SprayedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSprayedDateNull() {
                this[this.tableLFS_WORK_MANHOLE_REHABILITATION.SprayedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBatchIDNull() {
                return this.IsNull(this.tableLFS_WORK_MANHOLE_REHABILITATION.BatchIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBatchIDNull() {
                this[this.tableLFS_WORK_MANHOLE_REHABILITATION.BatchIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORKRow[] GetLFS_WORKRows() {
                if ((this.Table.ChildRelations["LFS_WORK_MANHOLE_REHABILITATION_LFS_WORK"] == null)) {
                    return new LFS_WORKRow[0];
                }
                else {
                    return ((LFS_WORKRow[])(base.GetChildRows(this.Table.ChildRelations["LFS_WORK_MANHOLE_REHABILITATION_LFS_WORK"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_MANHOLE_REHABILITATION_BATCHRow : global::System.Data.DataRow {
            
            private LFS_WORK_MANHOLE_REHABILITATION_BATCHDataTable tableLFS_WORK_MANHOLE_REHABILITATION_BATCH;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_MANHOLE_REHABILITATION_BATCHRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_MANHOLE_REHABILITATION_BATCH = ((LFS_WORK_MANHOLE_REHABILITATION_BATCHDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BatchID {
                get {
                    return ((int)(this[this.tableLFS_WORK_MANHOLE_REHABILITATION_BATCH.BatchIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_MANHOLE_REHABILITATION_BATCH.BatchIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    return ((string)(this[this.tableLFS_WORK_MANHOLE_REHABILITATION_BATCH.DescriptionColumn]));
                }
                set {
                    this[this.tableLFS_WORK_MANHOLE_REHABILITATION_BATCH.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_WORK_MANHOLE_REHABILITATION_BATCH.DateColumn]));
                }
                set {
                    this[this.tableLFS_WORK_MANHOLE_REHABILITATION_BATCH.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_MANHOLE_REHABILITATION_BATCH.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_MANHOLE_REHABILITATION_BATCH.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_MANHOLE_REHABILITATION_BATCH.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_MANHOLE_REHABILITATION_BATCH.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_MANHOLE_REHABILITATIONRow[] GetLFS_WORK_MANHOLE_REHABILITATIONRows() {
                if ((this.Table.ChildRelations["FK_LFS_WORK_MANHOLE_REHABILITATION_BATCH_LFS_WORK_MANHOLE_REHABILITATION2"] == null)) {
                    return new LFS_WORK_MANHOLE_REHABILITATIONRow[0];
                }
                else {
                    return ((LFS_WORK_MANHOLE_REHABILITATIONRow[])(base.GetChildRows(this.Table.ChildRelations["FK_LFS_WORK_MANHOLE_REHABILITATION_BATCH_LFS_WORK_MANHOLE_REHABILITATION2"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_JUNCTIONLINING_LATERALRow : global::System.Data.DataRow {
            
            private LFS_WORK_JUNCTIONLINING_LATERALDataTable tableLFS_WORK_JUNCTIONLINING_LATERAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_JUNCTIONLINING_LATERALRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_JUNCTIONLINING_LATERAL = ((LFS_WORK_JUNCTIONLINING_LATERALDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SectionWorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.SectionWorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.SectionWorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PipeLocated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PipeLocatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PipeLocated\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PipeLocatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ServicesLocated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.ServicesLocatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServicesLocated\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.ServicesLocatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CoInstalled {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CoInstalledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoInstalled\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CoInstalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BackfilledConcrete {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.BackfilledConcreteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackfilledConcrete\' in table \'LFS_WORK_JUNCTIONLINING_LATER" +
                                "AL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.BackfilledConcreteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BackfilledSoil {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.BackfilledSoilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackfilledSoil\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.BackfilledSoilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Grouted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.GroutedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grouted\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.GroutedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Cored {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CoredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cored\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CoredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Prepped {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PreppedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prepped\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PreppedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Measured {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.MeasuredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Measured\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.MeasuredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinerSize {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LinerSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerSize\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LinerSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InProcess {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.InProcessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InProcess\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.InProcessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InStock {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.InStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InStock\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.InStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Delivered {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DeliveredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Delivered\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DeliveredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BuildRebuild {
                get {
                    try {
                        return ((int)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.BuildRebuildColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildRebuild\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.BuildRebuildColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreVideo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PreVideoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreVideo\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PreVideoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LinerInstalled {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LinerInstalledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerInstalled\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LinerInstalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FinalVideo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.FinalVideoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalVideo\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.FinalVideoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cost {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cost\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime VideoInspection {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.VideoInspectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoInspection\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.VideoInspectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CoRequired {
                get {
                    return ((bool)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CoRequiredColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CoRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PitRequired {
                get {
                    return ((bool)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PitRequiredColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PitRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CoPitLocation {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CoPitLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoPitLocation\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CoPitLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PostContractDigRequired {
                get {
                    return ((bool)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PostContractDigRequiredColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PostContractDigRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CoCutDown {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CoCutDownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoCutDown\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CoCutDownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FinalRestoration {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.FinalRestorationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalRestoration\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.FinalRestorationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoLengthToPropertyLine {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.VideoLengthToPropertyLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoLengthToPropertyLine\' in table \'LFS_WORK_JUNCTIONLININ" +
                                "G_LATERAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.VideoLengthToPropertyLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LiningThruCo {
                get {
                    return ((bool)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LiningThruCoColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LiningThruCoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NoticeDelivered {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.NoticeDeliveredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoticeDelivered\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.NoticeDeliveredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HamiltonInspectionNumber {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.HamiltonInspectionNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HamiltonInspectionNumber\' in table \'LFS_WORK_JUNCTIONLINING" +
                                "_LATERAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.HamiltonInspectionNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Flange {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.FlangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Flange\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.FlangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gasket {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.GasketColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gasket\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.GasketColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DepthOfLocated {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DepthOfLocatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepthOfLocated\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DepthOfLocatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DigRequiredPriorToLining {
                get {
                    return ((bool)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DigRequiredPriorToLiningColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DigRequiredPriorToLiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DigRequiredPriorToLiningCompleted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DigRequiredPriorToLiningCompletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DigRequiredPriorToLiningCompleted\' in table \'LFS_WORK_JUNCT" +
                                "IONLINING_LATERAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DigRequiredPriorToLiningCompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DigRequiredAfterLining {
                get {
                    return ((bool)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DigRequiredAfterLiningColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DigRequiredAfterLiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DigRequiredAfterLiningCompleted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DigRequiredAfterLiningCompletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DigRequiredAfterLiningCompleted\' in table \'LFS_WORK_JUNCTIO" +
                                "NLINING_LATERAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DigRequiredAfterLiningCompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool OutOfScope {
                get {
                    return ((bool)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.OutOfScopeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.OutOfScopeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HoldClientIssue {
                get {
                    return ((bool)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.HoldClientIssueColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.HoldClientIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HoldClientIssueResolved {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.HoldClientIssueResolvedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoldClientIssueResolved\' in table \'LFS_WORK_JUNCTIONLINING_" +
                                "LATERAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.HoldClientIssueResolvedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HoldLFSIssue {
                get {
                    return ((bool)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.HoldLFSIssueColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.HoldLFSIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HoldLFSIssueResolved {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.HoldLFSIssueResolvedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoldLFSIssueResolved\' in table \'LFS_WORK_JUNCTIONLINING_LAT" +
                                "ERAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.HoldLFSIssueResolvedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LateralRequiresRoboticPrep {
                get {
                    return ((bool)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LateralRequiresRoboticPrepColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LateralRequiresRoboticPrepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LateralRequiresRoboticPrepCompleted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LateralRequiresRoboticPrepCompletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralRequiresRoboticPrepCompleted\' in table \'LFS_WORK_JUN" +
                                "CTIONLINING_LATERAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LateralRequiresRoboticPrepCompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinerType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LinerTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerType\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LinerTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrepType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PrepTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrepType\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PrepTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DyeTestReq {
                get {
                    return ((bool)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DyeTestReqColumn]));
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DyeTestReqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DyeTestComplete {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DyeTestCompleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DyeTestComplete\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DyeTestCompleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContractYear {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.ContractYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractYear\' in table \'LFS_WORK_JUNCTIONLINING_LATERAL\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.ContractYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPipeLocatedNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PipeLocatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPipeLocatedNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PipeLocatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServicesLocatedNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.ServicesLocatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServicesLocatedNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.ServicesLocatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCoInstalledNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CoInstalledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCoInstalledNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CoInstalledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackfilledConcreteNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.BackfilledConcreteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackfilledConcreteNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.BackfilledConcreteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackfilledSoilNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.BackfilledSoilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackfilledSoilNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.BackfilledSoilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroutedNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.GroutedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroutedNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.GroutedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCoredNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CoredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCoredNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CoredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreppedNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PreppedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreppedNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PreppedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasuredNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.MeasuredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasuredNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.MeasuredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerSizeNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LinerSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerSizeNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LinerSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInProcessNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.InProcessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInProcessNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.InProcessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInStockNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.InStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInStockNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.InStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveredNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DeliveredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveredNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DeliveredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuildRebuildNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.BuildRebuildColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuildRebuildNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.BuildRebuildColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreVideoNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PreVideoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreVideoNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PreVideoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerInstalledNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LinerInstalledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerInstalledNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LinerInstalledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalVideoNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.FinalVideoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalVideoNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.FinalVideoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoInspectionNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.VideoInspectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoInspectionNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.VideoInspectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCoPitLocationNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CoPitLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCoPitLocationNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CoPitLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCoCutDownNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CoCutDownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCoCutDownNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.CoCutDownColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalRestorationNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.FinalRestorationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalRestorationNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.FinalRestorationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoLengthToPropertyLineNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.VideoLengthToPropertyLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoLengthToPropertyLineNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.VideoLengthToPropertyLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoticeDeliveredNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.NoticeDeliveredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoticeDeliveredNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.NoticeDeliveredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHamiltonInspectionNumberNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.HamiltonInspectionNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHamiltonInspectionNumberNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.HamiltonInspectionNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFlangeNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.FlangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFlangeNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.FlangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGasketNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.GasketColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGasketNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.GasketColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepthOfLocatedNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DepthOfLocatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepthOfLocatedNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DepthOfLocatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDigRequiredPriorToLiningCompletedNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DigRequiredPriorToLiningCompletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDigRequiredPriorToLiningCompletedNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DigRequiredPriorToLiningCompletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDigRequiredAfterLiningCompletedNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DigRequiredAfterLiningCompletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDigRequiredAfterLiningCompletedNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DigRequiredAfterLiningCompletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHoldClientIssueResolvedNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.HoldClientIssueResolvedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHoldClientIssueResolvedNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.HoldClientIssueResolvedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHoldLFSIssueResolvedNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.HoldLFSIssueResolvedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHoldLFSIssueResolvedNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.HoldLFSIssueResolvedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateralRequiresRoboticPrepCompletedNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LateralRequiresRoboticPrepCompletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateralRequiresRoboticPrepCompletedNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LateralRequiresRoboticPrepCompletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerTypeNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LinerTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerTypeNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.LinerTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrepTypeNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PrepTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrepTypeNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.PrepTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDyeTestCompleteNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DyeTestCompleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDyeTestCompleteNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.DyeTestCompleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContractYearNull() {
                return this.IsNull(this.tableLFS_WORK_JUNCTIONLINING_LATERAL.ContractYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContractYearNull() {
                this[this.tableLFS_WORK_JUNCTIONLINING_LATERAL.ContractYearColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_POINT_REPAIRS_REPAIRRow : global::System.Data.DataRow {
            
            private LFS_WORK_POINT_REPAIRS_REPAIRDataTable tableLFS_WORK_POINT_REPAIRS_REPAIR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_POINT_REPAIRS_REPAIRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_POINT_REPAIRS_REPAIR = ((LFS_WORK_POINT_REPAIRS_REPAIRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RepairPointID {
                get {
                    return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.RepairPointIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.RepairPointIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReamDistance {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ReamDistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReamDistance\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ReamDistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReamDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ReamDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReamDate\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ReamDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinerDistance {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.LinerDistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerDistance\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.LinerDistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direction {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.DirectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Direction\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.DirectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reinstates {
                get {
                    try {
                        return ((int)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ReinstatesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reinstates\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ReinstatesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LTMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.LTMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LTMH\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.LTMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VTMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.VTMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VTMH\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.VTMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Distance {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.DistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Distance\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.DistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size_ {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.Size_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size_\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.Size_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InstallDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.InstallDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallDate\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.InstallDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MHShot {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.MHShotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MHShot\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.MHShotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GroutDistance {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.GroutDistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroutDistance\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.GroutDistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime GroutDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.GroutDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroutDate\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.GroutDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Approval {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ApprovalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Approval\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ApprovalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ExtraRepair {
                get {
                    return ((bool)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ExtraRepairColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ExtraRepairColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Cancelled {
                get {
                    return ((bool)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.CancelledColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.CancelledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DefectQualifier {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.DefectQualifierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefectQualifier\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.DefectQualifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DefectDetails {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.DefectDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefectDetails\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.DefectDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Length {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Length\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReinstateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ReinstateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReinstateDate\' in table \'LFS_WORK_POINT_REPAIRS_REPAIR\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ReinstateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReamDistanceNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ReamDistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReamDistanceNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ReamDistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReamDateNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ReamDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReamDateNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ReamDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerDistanceNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.LinerDistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerDistanceNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.LinerDistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDirectionNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.DirectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDirectionNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.DirectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReinstatesNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ReinstatesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReinstatesNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ReinstatesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLTMHNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.LTMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLTMHNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.LTMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVTMHNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.VTMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVTMHNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.VTMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.DistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.DistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSize_Null() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.Size_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSize_Null() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.Size_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallDateNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.InstallDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallDateNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.InstallDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMHShotNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.MHShotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMHShotNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.MHShotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroutDistanceNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.GroutDistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroutDistanceNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.GroutDistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroutDateNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.GroutDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroutDateNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.GroutDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovalNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ApprovalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovalNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ApprovalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDefectQualifierNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.DefectQualifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDefectQualifierNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.DefectQualifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDefectDetailsNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.DefectDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDefectDetailsNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.DefectDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLengthNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLengthNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReinstateDateNull() {
                return this.IsNull(this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ReinstateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReinstateDateNull() {
                this[this.tableLFS_WORK_POINT_REPAIRS_REPAIR.ReinstateDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_FULLLENGTHLINING_M1_LATERALRow : global::System.Data.DataRow {
            
            private LFS_WORK_FULLLENGTHLINING_M1_LATERALDataTable tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_M1_LATERALRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL = ((LFS_WORK_FULLLENGTHLINING_M1_LATERALDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Lateral {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.LateralColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.LateralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoDistance {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.VideoDistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoDistance\' in table \'LFS_WORK_FULLLENGTHLINING_M1_LATER" +
                                "AL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.VideoDistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClockPosition {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ClockPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClockPosition\' in table \'LFS_WORK_FULLLENGTHLINING_M1_LATER" +
                                "AL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ClockPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistanceToCentre {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.DistanceToCentreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceToCentre\' in table \'LFS_WORK_FULLLENGTHLINING_M1_LA" +
                                "TERAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.DistanceToCentreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TimeOpened {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.TimeOpenedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeOpened\' in table \'LFS_WORK_FULLLENGTHLINING_M1_LATERAL\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.TimeOpenedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReverseSetup {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ReverseSetupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReverseSetup\' in table \'LFS_WORK_FULLLENGTHLINING_M1_LATERA" +
                                "L\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ReverseSetupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Reinstate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ReinstateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reinstate\' in table \'LFS_WORK_FULLLENGTHLINING_M1_LATERAL\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ReinstateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_WORK_FULLLENGTHLINING_M1_LATERAL\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientInspectionNo {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ClientInspectionNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientInspectionNo\' in table \'LFS_WORK_FULLLENGTHLINING_M1_" +
                                "LATERAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ClientInspectionNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime V1Inspection {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.V1InspectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V1Inspection\' in table \'LFS_WORK_FULLLENGTHLINING_M1_LATERA" +
                                "L\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.V1InspectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RequiresRoboticPrep {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.RequiresRoboticPrepColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.RequiresRoboticPrepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RequiresRoboticPrepDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.RequiresRoboticPrepDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequiresRoboticPrepDate\' in table \'LFS_WORK_FULLLENGTHLININ" +
                                "G_M1_LATERAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.RequiresRoboticPrepDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HoldClientIssue {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.HoldClientIssueColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.HoldClientIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HoldLFSIssue {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.HoldLFSIssueColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.HoldLFSIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LineLateral {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.LineLateralColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.LineLateralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DyeTestReq {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.DyeTestReqColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.DyeTestReqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DyeTestComplete {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.DyeTestCompleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DyeTestComplete\' in table \'LFS_WORK_FULLLENGTHLINING_M1_LAT" +
                                "ERAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.DyeTestCompleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContractYear {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ContractYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractYear\' in table \'LFS_WORK_FULLLENGTHLINING_M1_LATERA" +
                                "L\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ContractYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoDistanceNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.VideoDistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoDistanceNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.VideoDistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClockPositionNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ClockPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClockPositionNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ClockPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceToCentreNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.DistanceToCentreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceToCentreNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.DistanceToCentreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeOpenedNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.TimeOpenedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeOpenedNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.TimeOpenedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReverseSetupNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ReverseSetupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReverseSetupNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ReverseSetupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReinstateNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ReinstateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReinstateNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ReinstateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientInspectionNoNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ClientInspectionNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientInspectionNoNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ClientInspectionNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV1InspectionNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.V1InspectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV1InspectionNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.V1InspectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequiresRoboticPrepDateNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.RequiresRoboticPrepDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequiresRoboticPrepDateNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.RequiresRoboticPrepDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDyeTestCompleteNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.DyeTestCompleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDyeTestCompleteNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.DyeTestCompleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContractYearNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ContractYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContractYearNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_M1_LATERAL.ContractYearColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_FULLLENGTHLINING_M1RowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_FULLLENGTHLINING_M1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M1RowChangeEvent(LFS_WORK_FULLLENGTHLINING_M1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_FULLLENGTHLINING_P1RowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_FULLLENGTHLINING_P1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_P1RowChangeEvent(LFS_WORK_FULLLENGTHLINING_P1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_P1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_REHABASSESSMENTRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_REHABASSESSMENTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_REHABASSESSMENTRowChangeEvent(LFS_WORK_REHABASSESSMENTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_REHABASSESSMENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORKRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORKRowChangeEvent(LFS_WORKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRowChangeEvent(LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_CO_PIT_LOCATIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_FULLLENGTHLINING_M2RowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_FULLLENGTHLINING_M2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M2RowChangeEvent(LFS_WORK_FULLLENGTHLINING_M2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_POINT_REPAIRSRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_POINT_REPAIRSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRSRowChangeEvent(LFS_WORK_POINT_REPAIRSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERowChangeEvent(LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRS_REPAIRPOINT_SIZERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_JUNCTIONLINING_FLANGERowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_JUNCTIONLINING_FLANGERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_FLANGERowChangeEvent(LFS_WORK_JUNCTIONLINING_FLANGERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_FLANGERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRowChangeEvent(LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_FLANGE_GASKETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_FULLLENGTHLININGRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_FULLLENGTHLININGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLININGRowChangeEvent(LFS_WORK_FULLLENGTHLININGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLININGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_COMMENTRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_COMMENTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_COMMENTRowChangeEvent(LFS_WORK_COMMENTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_COMMENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_HISTORYRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_HISTORYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_HISTORYRowChangeEvent(LFS_WORK_HISTORYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_HISTORYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_JUNCTIONLINING_SECTIONRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_JUNCTIONLINING_SECTIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_SECTIONRowChangeEvent(LFS_WORK_JUNCTIONLINING_SECTIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_SECTIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_FULLLENGTHLINING_RESINSRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_FULLLENGTHLINING_RESINSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_RESINSRowChangeEvent(LFS_WORK_FULLLENGTHLINING_RESINSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_RESINSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_FULLLENGTHLINING_CATALYSTSRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_FULLLENGTHLINING_CATALYSTSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_CATALYSTSRowChangeEvent(LFS_WORK_FULLLENGTHLINING_CATALYSTSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_CATALYSTSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRowChangeEvent(LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_COMMENTSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEvent(LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEvent(LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_FULLLENGTHLINING_INVERSIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEvent(LFS_WORK_FULLLENGTHLINING_INVERSIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_FULLLENGTHLINING_WETOUTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEvent(LFS_WORK_FULLLENGTHLINING_WETOUTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_MANHOLE_REHABILITATIONRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_MANHOLE_REHABILITATIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_MANHOLE_REHABILITATIONRowChangeEvent(LFS_WORK_MANHOLE_REHABILITATIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_MANHOLE_REHABILITATIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_MANHOLE_REHABILITATION_BATCHRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_MANHOLE_REHABILITATION_BATCHRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_MANHOLE_REHABILITATION_BATCHRowChangeEvent(LFS_WORK_MANHOLE_REHABILITATION_BATCHRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_MANHOLE_REHABILITATION_BATCHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_JUNCTIONLINING_LATERALRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_JUNCTIONLINING_LATERALRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_LATERALRowChangeEvent(LFS_WORK_JUNCTIONLINING_LATERALRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_JUNCTIONLINING_LATERALRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_POINT_REPAIRS_REPAIRRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_POINT_REPAIRS_REPAIRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRS_REPAIRRowChangeEvent(LFS_WORK_POINT_REPAIRS_REPAIRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_POINT_REPAIRS_REPAIRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_FULLLENGTHLINING_M1_LATERALRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_FULLLENGTHLINING_M1_LATERALRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M1_LATERALRowChangeEvent(LFS_WORK_FULLLENGTHLINING_M1_LATERALRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_M1_LATERALRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace LiquiForce.LFSLive.DA.CWP.Works.WorkTDSTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LFS_WORK_FULLLENGTHLINING_M1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LFS_WORK_FULLLENGTHLINING_M1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LFS_WORK_FULLLENGTHLINING_M1";
            tableMapping.ColumnMappings.Add("WorkID", "WorkID");
            tableMapping.ColumnMappings.Add("MeasurementTakenBy", "MeasurementTakenBy");
            tableMapping.ColumnMappings.Add("TrafficControl", "TrafficControl");
            tableMapping.ColumnMappings.Add("SiteDetails", "SiteDetails");
            tableMapping.ColumnMappings.Add("PipeSizeChange", "PipeSizeChange");
            tableMapping.ColumnMappings.Add("StandardBypass", "StandardBypass");
            tableMapping.ColumnMappings.Add("StandardBypassComments", "StandardBypassComments");
            tableMapping.ColumnMappings.Add("TrafficControlDetails", "TrafficControlDetails");
            tableMapping.ColumnMappings.Add("MeasurementType", "MeasurementType");
            tableMapping.ColumnMappings.Add("MeasurementFromMH", "MeasurementFromMH");
            tableMapping.ColumnMappings.Add("VideoDoneFromMH", "VideoDoneFromMH");
            tableMapping.ColumnMappings.Add("VideoDoneToMH", "VideoDoneToMH");
            tableMapping.ColumnMappings.Add("Deleted", "Deleted");
            tableMapping.ColumnMappings.Add("COMPANY_ID", "COMPANY_ID");
            tableMapping.ColumnMappings.Add("AccessType", "AccessType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[LFS_WORK_FULLLENGTHLINING_M1] WHERE (([WorkID] = @Original_WorkID) AND ((@IsNull_MeasurementTakenBy = 1 AND [MeasurementTakenBy] IS NULL) OR ([MeasurementTakenBy] = @Original_MeasurementTakenBy)) AND ((@IsNull_TrafficControl = 1 AND [TrafficControl] IS NULL) OR ([TrafficControl] = @Original_TrafficControl)) AND ((@IsNull_SiteDetails = 1 AND [SiteDetails] IS NULL) OR ([SiteDetails] = @Original_SiteDetails)) AND ([PipeSizeChange] = @Original_PipeSizeChange) AND ([StandardBypass] = @Original_StandardBypass) AND ((@IsNull_MeasurementType = 1 AND [MeasurementType] IS NULL) OR ([MeasurementType] = @Original_MeasurementType)) AND ((@IsNull_MeasurementFromMH = 1 AND [MeasurementFromMH] IS NULL) OR ([MeasurementFromMH] = @Original_MeasurementFromMH)) AND ((@IsNull_VideoDoneFromMH = 1 AND [VideoDoneFromMH] IS NULL) OR ([VideoDoneFromMH] = @Original_VideoDoneFromMH)) AND ((@IsNull_VideoDoneToMH = 1 AND [VideoDoneToMH] IS NULL) OR ([VideoDoneToMH] = @Original_VideoDoneToMH)) AND ([Deleted] = @Original_Deleted) AND ([COMPANY_ID] = @Original_COMPANY_ID) AND ((@IsNull_AccessType = 1 AND [AccessType] IS NULL) OR ([AccessType] = @Original_AccessType)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeasurementTakenBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementTakenBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeasurementTakenBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementTakenBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrafficControl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrafficControl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrafficControl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrafficControl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SiteDetails", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiteDetails", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SiteDetails", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiteDetails", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PipeSizeChange", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PipeSizeChange", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StandardBypass", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StandardBypass", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeasurementType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeasurementType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeasurementFromMH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementFromMH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeasurementFromMH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementFromMH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VideoDoneFromMH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VideoDoneFromMH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VideoDoneFromMH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VideoDoneFromMH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VideoDoneToMH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VideoDoneToMH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VideoDoneToMH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VideoDoneToMH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AccessType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccessType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AccessType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccessType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[LFS_WORK_FULLLENGTHLINING_M1] ([WorkID], [MeasurementTakenBy], [TrafficControl], [SiteDetails], [PipeSizeChange], [StandardBypass], [StandardBypassComments], [TrafficControlDetails], [MeasurementType], [MeasurementFromMH], [VideoDoneFromMH], [VideoDoneToMH], [Deleted], [COMPANY_ID], [AccessType]) VALUES (@WorkID, @MeasurementTakenBy, @TrafficControl, @SiteDetails, @PipeSizeChange, @StandardBypass, @StandardBypassComments, @TrafficControlDetails, @MeasurementType, @MeasurementFromMH, @VideoDoneFromMH, @VideoDoneToMH, @Deleted, @COMPANY_ID, @AccessType);
SELECT WorkID, MeasurementTakenBy, TrafficControl, SiteDetails, PipeSizeChange, StandardBypass, StandardBypassComments, TrafficControlDetails, MeasurementType, MeasurementFromMH, VideoDoneFromMH, VideoDoneToMH, Deleted, COMPANY_ID, AccessType FROM LFS_WORK_FULLLENGTHLINING_M1 WHERE (WorkID = @WorkID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeasurementTakenBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementTakenBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrafficControl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrafficControl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SiteDetails", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiteDetails", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PipeSizeChange", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PipeSizeChange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StandardBypass", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StandardBypass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StandardBypassComments", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StandardBypassComments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrafficControlDetails", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrafficControlDetails", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeasurementType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeasurementFromMH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementFromMH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VideoDoneFromMH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VideoDoneFromMH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VideoDoneToMH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VideoDoneToMH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccessType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccessType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[LFS_WORK_FULLLENGTHLINING_M1] SET [WorkID] = @WorkID, [MeasurementT" +
                "akenBy] = @MeasurementTakenBy, [TrafficControl] = @TrafficControl, [SiteDetails]" +
                " = @SiteDetails, [PipeSizeChange] = @PipeSizeChange, [StandardBypass] = @Standar" +
                "dBypass, [StandardBypassComments] = @StandardBypassComments, [TrafficControlDeta" +
                "ils] = @TrafficControlDetails, [MeasurementType] = @MeasurementType, [Measuremen" +
                "tFromMH] = @MeasurementFromMH, [VideoDoneFromMH] = @VideoDoneFromMH, [VideoDoneT" +
                "oMH] = @VideoDoneToMH, [Deleted] = @Deleted, [COMPANY_ID] = @COMPANY_ID, [Access" +
                "Type] = @AccessType WHERE (([WorkID] = @Original_WorkID) AND ((@IsNull_Measureme" +
                "ntTakenBy = 1 AND [MeasurementTakenBy] IS NULL) OR ([MeasurementTakenBy] = @Orig" +
                "inal_MeasurementTakenBy)) AND ((@IsNull_TrafficControl = 1 AND [TrafficControl] " +
                "IS NULL) OR ([TrafficControl] = @Original_TrafficControl)) AND ((@IsNull_SiteDet" +
                "ails = 1 AND [SiteDetails] IS NULL) OR ([SiteDetails] = @Original_SiteDetails)) " +
                "AND ([PipeSizeChange] = @Original_PipeSizeChange) AND ([StandardBypass] = @Origi" +
                "nal_StandardBypass) AND ((@IsNull_MeasurementType = 1 AND [MeasurementType] IS N" +
                "ULL) OR ([MeasurementType] = @Original_MeasurementType)) AND ((@IsNull_Measureme" +
                "ntFromMH = 1 AND [MeasurementFromMH] IS NULL) OR ([MeasurementFromMH] = @Origina" +
                "l_MeasurementFromMH)) AND ((@IsNull_VideoDoneFromMH = 1 AND [VideoDoneFromMH] IS" +
                " NULL) OR ([VideoDoneFromMH] = @Original_VideoDoneFromMH)) AND ((@IsNull_VideoDo" +
                "neToMH = 1 AND [VideoDoneToMH] IS NULL) OR ([VideoDoneToMH] = @Original_VideoDon" +
                "eToMH)) AND ([Deleted] = @Original_Deleted) AND ([COMPANY_ID] = @Original_COMPAN" +
                "Y_ID) AND ((@IsNull_AccessType = 1 AND [AccessType] IS NULL) OR ([AccessType] = " +
                "@Original_AccessType)));\r\nSELECT WorkID, MeasurementTakenBy, TrafficControl, Sit" +
                "eDetails, PipeSizeChange, StandardBypass, StandardBypassComments, TrafficControl" +
                "Details, MeasurementType, MeasurementFromMH, VideoDoneFromMH, VideoDoneToMH, Del" +
                "eted, COMPANY_ID, AccessType FROM LFS_WORK_FULLLENGTHLINING_M1 WHERE (WorkID = @" +
                "WorkID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeasurementTakenBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementTakenBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrafficControl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrafficControl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SiteDetails", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiteDetails", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PipeSizeChange", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PipeSizeChange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StandardBypass", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StandardBypass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StandardBypassComments", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StandardBypassComments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrafficControlDetails", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrafficControlDetails", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeasurementType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeasurementFromMH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementFromMH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VideoDoneFromMH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VideoDoneFromMH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VideoDoneToMH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VideoDoneToMH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccessType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccessType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeasurementTakenBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementTakenBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeasurementTakenBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementTakenBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrafficControl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrafficControl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrafficControl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrafficControl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SiteDetails", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiteDetails", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SiteDetails", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiteDetails", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PipeSizeChange", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PipeSizeChange", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StandardBypass", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StandardBypass", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeasurementType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeasurementType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeasurementFromMH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementFromMH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeasurementFromMH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementFromMH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VideoDoneFromMH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VideoDoneFromMH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VideoDoneFromMH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VideoDoneFromMH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VideoDoneToMH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VideoDoneToMH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VideoDoneToMH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VideoDoneToMH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AccessType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccessType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AccessType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccessType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LiquiForce.LFSLive.DA.CWP.Properties.Settings.Default.eCRMLive5ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT WorkID, MeasurementTakenBy, TrafficControl, SiteDetails, PipeSizeChange, StandardBypass, StandardBypassComments, TrafficControlDetails, MeasurementType, MeasurementFromMH, VideoDoneFromMH, VideoDoneToMH, Deleted, COMPANY_ID, AccessType FROM dbo.LFS_WORK_FULLLENGTHLINING_M1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(WorkTDS.LFS_WORK_FULLLENGTHLINING_M1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual WorkTDS.LFS_WORK_FULLLENGTHLINING_M1DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            WorkTDS.LFS_WORK_FULLLENGTHLINING_M1DataTable dataTable = new WorkTDS.LFS_WORK_FULLLENGTHLINING_M1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WorkTDS.LFS_WORK_FULLLENGTHLINING_M1DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WorkTDS dataSet) {
            return this.Adapter.Update(dataSet, "LFS_WORK_FULLLENGTHLINING_M1");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_WorkID, string Original_MeasurementTakenBy, string Original_TrafficControl, string Original_SiteDetails, bool Original_PipeSizeChange, bool Original_StandardBypass, string Original_MeasurementType, string Original_MeasurementFromMH, string Original_VideoDoneFromMH, string Original_VideoDoneToMH, bool Original_Deleted, int Original_COMPANY_ID, string Original_AccessType) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_WorkID));
            if ((Original_MeasurementTakenBy == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MeasurementTakenBy));
            }
            if ((Original_TrafficControl == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TrafficControl));
            }
            if ((Original_SiteDetails == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_SiteDetails));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((bool)(Original_PipeSizeChange));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_StandardBypass));
            if ((Original_MeasurementType == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_MeasurementType));
            }
            if ((Original_MeasurementFromMH == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_MeasurementFromMH));
            }
            if ((Original_VideoDoneFromMH == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_VideoDoneFromMH));
            }
            if ((Original_VideoDoneToMH == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_VideoDoneToMH));
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((bool)(Original_Deleted));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_COMPANY_ID));
            if ((Original_AccessType == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_AccessType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int WorkID, string MeasurementTakenBy, string TrafficControl, string SiteDetails, bool PipeSizeChange, bool StandardBypass, string StandardBypassComments, string TrafficControlDetails, string MeasurementType, string MeasurementFromMH, string VideoDoneFromMH, string VideoDoneToMH, bool Deleted, int COMPANY_ID, string AccessType) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(WorkID));
            if ((MeasurementTakenBy == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MeasurementTakenBy));
            }
            if ((TrafficControl == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TrafficControl));
            }
            if ((SiteDetails == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SiteDetails));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(PipeSizeChange));
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(StandardBypass));
            if ((StandardBypassComments == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(StandardBypassComments));
            }
            if ((TrafficControlDetails == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(TrafficControlDetails));
            }
            if ((MeasurementType == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(MeasurementType));
            }
            if ((MeasurementFromMH == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(MeasurementFromMH));
            }
            if ((VideoDoneFromMH == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(VideoDoneFromMH));
            }
            if ((VideoDoneToMH == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(VideoDoneToMH));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(Deleted));
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(COMPANY_ID));
            if ((AccessType == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(AccessType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int WorkID, 
                    string MeasurementTakenBy, 
                    string TrafficControl, 
                    string SiteDetails, 
                    bool PipeSizeChange, 
                    bool StandardBypass, 
                    string StandardBypassComments, 
                    string TrafficControlDetails, 
                    string MeasurementType, 
                    string MeasurementFromMH, 
                    string VideoDoneFromMH, 
                    string VideoDoneToMH, 
                    bool Deleted, 
                    int COMPANY_ID, 
                    string AccessType, 
                    int Original_WorkID, 
                    string Original_MeasurementTakenBy, 
                    string Original_TrafficControl, 
                    string Original_SiteDetails, 
                    bool Original_PipeSizeChange, 
                    bool Original_StandardBypass, 
                    string Original_MeasurementType, 
                    string Original_MeasurementFromMH, 
                    string Original_VideoDoneFromMH, 
                    string Original_VideoDoneToMH, 
                    bool Original_Deleted, 
                    int Original_COMPANY_ID, 
                    string Original_AccessType) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(WorkID));
            if ((MeasurementTakenBy == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MeasurementTakenBy));
            }
            if ((TrafficControl == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TrafficControl));
            }
            if ((SiteDetails == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SiteDetails));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(PipeSizeChange));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(StandardBypass));
            if ((StandardBypassComments == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(StandardBypassComments));
            }
            if ((TrafficControlDetails == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(TrafficControlDetails));
            }
            if ((MeasurementType == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(MeasurementType));
            }
            if ((MeasurementFromMH == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(MeasurementFromMH));
            }
            if ((VideoDoneFromMH == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(VideoDoneFromMH));
            }
            if ((VideoDoneToMH == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(VideoDoneToMH));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(Deleted));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(COMPANY_ID));
            if ((AccessType == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(AccessType));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_WorkID));
            if ((Original_MeasurementTakenBy == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_MeasurementTakenBy));
            }
            if ((Original_TrafficControl == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_TrafficControl));
            }
            if ((Original_SiteDetails == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_SiteDetails));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(Original_PipeSizeChange));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(Original_StandardBypass));
            if ((Original_MeasurementType == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_MeasurementType));
            }
            if ((Original_MeasurementFromMH == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_MeasurementFromMH));
            }
            if ((Original_VideoDoneFromMH == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_VideoDoneFromMH));
            }
            if ((Original_VideoDoneToMH == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_VideoDoneToMH));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(Original_Deleted));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(Original_COMPANY_ID));
            if ((Original_AccessType == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_AccessType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MeasurementTakenBy, 
                    string TrafficControl, 
                    string SiteDetails, 
                    bool PipeSizeChange, 
                    bool StandardBypass, 
                    string StandardBypassComments, 
                    string TrafficControlDetails, 
                    string MeasurementType, 
                    string MeasurementFromMH, 
                    string VideoDoneFromMH, 
                    string VideoDoneToMH, 
                    bool Deleted, 
                    int COMPANY_ID, 
                    string AccessType, 
                    int Original_WorkID, 
                    string Original_MeasurementTakenBy, 
                    string Original_TrafficControl, 
                    string Original_SiteDetails, 
                    bool Original_PipeSizeChange, 
                    bool Original_StandardBypass, 
                    string Original_MeasurementType, 
                    string Original_MeasurementFromMH, 
                    string Original_VideoDoneFromMH, 
                    string Original_VideoDoneToMH, 
                    bool Original_Deleted, 
                    int Original_COMPANY_ID, 
                    string Original_AccessType) {
            return this.Update(Original_WorkID, MeasurementTakenBy, TrafficControl, SiteDetails, PipeSizeChange, StandardBypass, StandardBypassComments, TrafficControlDetails, MeasurementType, MeasurementFromMH, VideoDoneFromMH, VideoDoneToMH, Deleted, COMPANY_ID, AccessType, Original_WorkID, Original_MeasurementTakenBy, Original_TrafficControl, Original_SiteDetails, Original_PipeSizeChange, Original_StandardBypass, Original_MeasurementType, Original_MeasurementFromMH, Original_VideoDoneFromMH, Original_VideoDoneToMH, Original_Deleted, Original_COMPANY_ID, Original_AccessType);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LFS_WORK_FULLLENGTHLINING_P1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LFS_WORK_FULLLENGTHLINING_P1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LFS_WORK_FULLLENGTHLINING_P1";
            tableMapping.ColumnMappings.Add("WorkID", "WorkID");
            tableMapping.ColumnMappings.Add("CXIsRemoved", "CXIsRemoved");
            tableMapping.ColumnMappings.Add("Deleted", "Deleted");
            tableMapping.ColumnMappings.Add("COMPANY_ID", "COMPANY_ID");
            tableMapping.ColumnMappings.Add("RoboticPrepCompleted", "RoboticPrepCompleted");
            tableMapping.ColumnMappings.Add("RoboticPrepCompletedDate", "RoboticPrepCompletedDate");
            tableMapping.ColumnMappings.Add("P1Completed", "P1Completed");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[LFS_WORK_FULLLENGTHLINING_P1] WHERE (([WorkID] = @Original_WorkID) AND ((@IsNull_CXIsRemoved = 1 AND [CXIsRemoved] IS NULL) OR ([CXIsRemoved] = @Original_CXIsRemoved)) AND ([Deleted] = @Original_Deleted) AND ([COMPANY_ID] = @Original_COMPANY_ID) AND ([RoboticPrepCompleted] = @Original_RoboticPrepCompleted) AND ((@IsNull_RoboticPrepCompletedDate = 1 AND [RoboticPrepCompletedDate] IS NULL) OR ([RoboticPrepCompletedDate] = @Original_RoboticPrepCompletedDate)) AND ([P1Completed] = @Original_P1Completed))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CXIsRemoved", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXIsRemoved", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXIsRemoved", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXIsRemoved", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RoboticPrepCompleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoboticPrepCompleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RoboticPrepCompletedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoboticPrepCompletedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RoboticPrepCompletedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoboticPrepCompletedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P1Completed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P1Completed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[LFS_WORK_FULLLENGTHLINING_P1] ([WorkID], [CXIsRemoved], [Deleted], [COMPANY_ID], [RoboticPrepCompleted], [RoboticPrepCompletedDate], [P1Completed]) VALUES (@WorkID, @CXIsRemoved, @Deleted, @COMPANY_ID, @RoboticPrepCompleted, @RoboticPrepCompletedDate, @P1Completed);
SELECT WorkID, CXIsRemoved, Deleted, COMPANY_ID, RoboticPrepCompleted, RoboticPrepCompletedDate, P1Completed FROM LFS_WORK_FULLLENGTHLINING_P1 WHERE (WorkID = @WorkID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CXIsRemoved", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXIsRemoved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RoboticPrepCompleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoboticPrepCompleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RoboticPrepCompletedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoboticPrepCompletedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P1Completed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P1Completed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LFS_WORK_FULLLENGTHLINING_P1] SET [WorkID] = @WorkID, [CXIsRemoved] = @CXIsRemoved, [Deleted] = @Deleted, [COMPANY_ID] = @COMPANY_ID, [RoboticPrepCompleted] = @RoboticPrepCompleted, [RoboticPrepCompletedDate] = @RoboticPrepCompletedDate, [P1Completed] = @P1Completed WHERE (([WorkID] = @Original_WorkID) AND ((@IsNull_CXIsRemoved = 1 AND [CXIsRemoved] IS NULL) OR ([CXIsRemoved] = @Original_CXIsRemoved)) AND ([Deleted] = @Original_Deleted) AND ([COMPANY_ID] = @Original_COMPANY_ID) AND ([RoboticPrepCompleted] = @Original_RoboticPrepCompleted) AND ((@IsNull_RoboticPrepCompletedDate = 1 AND [RoboticPrepCompletedDate] IS NULL) OR ([RoboticPrepCompletedDate] = @Original_RoboticPrepCompletedDate)) AND ([P1Completed] = @Original_P1Completed));
SELECT WorkID, CXIsRemoved, Deleted, COMPANY_ID, RoboticPrepCompleted, RoboticPrepCompletedDate, P1Completed FROM LFS_WORK_FULLLENGTHLINING_P1 WHERE (WorkID = @WorkID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CXIsRemoved", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXIsRemoved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RoboticPrepCompleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoboticPrepCompleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RoboticPrepCompletedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoboticPrepCompletedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P1Completed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P1Completed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CXIsRemoved", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXIsRemoved", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXIsRemoved", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXIsRemoved", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RoboticPrepCompleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoboticPrepCompleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RoboticPrepCompletedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoboticPrepCompletedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RoboticPrepCompletedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoboticPrepCompletedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P1Completed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P1Completed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LiquiForce.LFSLive.DA.CWP.Properties.Settings.Default.eCRMLive5ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT WorkID, CXIsRemoved, Deleted, COMPANY_ID, RoboticPrepCompleted, RoboticPre" +
                "pCompletedDate, P1Completed FROM dbo.LFS_WORK_FULLLENGTHLINING_P1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(WorkTDS.LFS_WORK_FULLLENGTHLINING_P1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual WorkTDS.LFS_WORK_FULLLENGTHLINING_P1DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            WorkTDS.LFS_WORK_FULLLENGTHLINING_P1DataTable dataTable = new WorkTDS.LFS_WORK_FULLLENGTHLINING_P1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WorkTDS.LFS_WORK_FULLLENGTHLINING_P1DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WorkTDS dataSet) {
            return this.Adapter.Update(dataSet, "LFS_WORK_FULLLENGTHLINING_P1");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_WorkID, global::System.Nullable<int> Original_CXIsRemoved, bool Original_Deleted, int Original_COMPANY_ID, bool Original_RoboticPrepCompleted, global::System.Nullable<global::System.DateTime> Original_RoboticPrepCompletedDate, bool Original_P1Completed) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_WorkID));
            if ((Original_CXIsRemoved.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_CXIsRemoved.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_Deleted));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_COMPANY_ID));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_RoboticPrepCompleted));
            if ((Original_RoboticPrepCompletedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_RoboticPrepCompletedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_P1Completed));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int WorkID, global::System.Nullable<int> CXIsRemoved, bool Deleted, int COMPANY_ID, bool RoboticPrepCompleted, global::System.Nullable<global::System.DateTime> RoboticPrepCompletedDate, bool P1Completed) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(WorkID));
            if ((CXIsRemoved.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(CXIsRemoved.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(Deleted));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(COMPANY_ID));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(RoboticPrepCompleted));
            if ((RoboticPrepCompletedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(RoboticPrepCompletedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(P1Completed));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int WorkID, global::System.Nullable<int> CXIsRemoved, bool Deleted, int COMPANY_ID, bool RoboticPrepCompleted, global::System.Nullable<global::System.DateTime> RoboticPrepCompletedDate, bool P1Completed, int Original_WorkID, global::System.Nullable<int> Original_CXIsRemoved, bool Original_Deleted, int Original_COMPANY_ID, bool Original_RoboticPrepCompleted, global::System.Nullable<global::System.DateTime> Original_RoboticPrepCompletedDate, bool Original_P1Completed) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(WorkID));
            if ((CXIsRemoved.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(CXIsRemoved.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(Deleted));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(COMPANY_ID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(RoboticPrepCompleted));
            if ((RoboticPrepCompletedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(RoboticPrepCompletedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(P1Completed));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_WorkID));
            if ((Original_CXIsRemoved.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_CXIsRemoved.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_Deleted));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_COMPANY_ID));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(Original_RoboticPrepCompleted));
            if ((Original_RoboticPrepCompletedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_RoboticPrepCompletedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(Original_P1Completed));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> CXIsRemoved, bool Deleted, int COMPANY_ID, bool RoboticPrepCompleted, global::System.Nullable<global::System.DateTime> RoboticPrepCompletedDate, bool P1Completed, int Original_WorkID, global::System.Nullable<int> Original_CXIsRemoved, bool Original_Deleted, int Original_COMPANY_ID, bool Original_RoboticPrepCompleted, global::System.Nullable<global::System.DateTime> Original_RoboticPrepCompletedDate, bool Original_P1Completed) {
            return this.Update(Original_WorkID, CXIsRemoved, Deleted, COMPANY_ID, RoboticPrepCompleted, RoboticPrepCompletedDate, P1Completed, Original_WorkID, Original_CXIsRemoved, Original_Deleted, Original_COMPANY_ID, Original_RoboticPrepCompleted, Original_RoboticPrepCompletedDate, Original_P1Completed);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private LFS_WORK_FULLLENGTHLINING_M1TableAdapter _lFS_WORK_FULLLENGTHLINING_M1TableAdapter;
        
        private LFS_WORK_FULLLENGTHLINING_P1TableAdapter _lFS_WORK_FULLLENGTHLINING_P1TableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public LFS_WORK_FULLLENGTHLINING_M1TableAdapter LFS_WORK_FULLLENGTHLINING_M1TableAdapter {
            get {
                return this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter;
            }
            set {
                this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public LFS_WORK_FULLLENGTHLINING_P1TableAdapter LFS_WORK_FULLLENGTHLINING_P1TableAdapter {
            get {
                return this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter;
            }
            set {
                this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter != null) 
                            && (this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter.Connection != null))) {
                    return this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter.Connection;
                }
                if (((this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter != null) 
                            && (this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter.Connection != null))) {
                    return this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(WorkTDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LFS_WORK_FULLLENGTHLINING_M1.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LFS_WORK_FULLLENGTHLINING_P1.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(WorkTDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LFS_WORK_FULLLENGTHLINING_M1.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LFS_WORK_FULLLENGTHLINING_P1.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(WorkTDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LFS_WORK_FULLLENGTHLINING_P1.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LFS_WORK_FULLLENGTHLINING_M1.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(WorkTDS dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter != null)) {
                    revertConnections.Add(this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter, this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter.Connection);
                    this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter.Adapter);
                    }
                }
                if ((this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter != null)) {
                    revertConnections.Add(this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter, this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter.Connection);
                    this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter != null)) {
                    this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter]));
                    this._lFS_WORK_FULLLENGTHLINING_M1TableAdapter.Transaction = null;
                }
                if ((this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter != null)) {
                    this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter]));
                    this._lFS_WORK_FULLLENGTHLINING_P1TableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591