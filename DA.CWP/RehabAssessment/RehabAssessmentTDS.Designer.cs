//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3643
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.CWP.RehabAssessment {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RehabAssessmentTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RehabAssessmentTDS : global::System.Data.DataSet {
        
        private SectionDetailsDataTable tableSectionDetails;
        
        private WorkDetailsDataTable tableWorkDetails;
        
        private LateralDetailsDataTable tableLateralDetails;
        
        private CommentDetailsDataTable tableCommentDetails;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RehabAssessmentTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RehabAssessmentTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SectionDetails"] != null)) {
                    base.Tables.Add(new SectionDetailsDataTable(ds.Tables["SectionDetails"]));
                }
                if ((ds.Tables["WorkDetails"] != null)) {
                    base.Tables.Add(new WorkDetailsDataTable(ds.Tables["WorkDetails"]));
                }
                if ((ds.Tables["LateralDetails"] != null)) {
                    base.Tables.Add(new LateralDetailsDataTable(ds.Tables["LateralDetails"]));
                }
                if ((ds.Tables["CommentDetails"] != null)) {
                    base.Tables.Add(new CommentDetailsDataTable(ds.Tables["CommentDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SectionDetailsDataTable SectionDetails {
            get {
                return this.tableSectionDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WorkDetailsDataTable WorkDetails {
            get {
                return this.tableWorkDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LateralDetailsDataTable LateralDetails {
            get {
                return this.tableLateralDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CommentDetailsDataTable CommentDetails {
            get {
                return this.tableCommentDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RehabAssessmentTDS cln = ((RehabAssessmentTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SectionDetails"] != null)) {
                    base.Tables.Add(new SectionDetailsDataTable(ds.Tables["SectionDetails"]));
                }
                if ((ds.Tables["WorkDetails"] != null)) {
                    base.Tables.Add(new WorkDetailsDataTable(ds.Tables["WorkDetails"]));
                }
                if ((ds.Tables["LateralDetails"] != null)) {
                    base.Tables.Add(new LateralDetailsDataTable(ds.Tables["LateralDetails"]));
                }
                if ((ds.Tables["CommentDetails"] != null)) {
                    base.Tables.Add(new CommentDetailsDataTable(ds.Tables["CommentDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSectionDetails = ((SectionDetailsDataTable)(base.Tables["SectionDetails"]));
            if ((initTable == true)) {
                if ((this.tableSectionDetails != null)) {
                    this.tableSectionDetails.InitVars();
                }
            }
            this.tableWorkDetails = ((WorkDetailsDataTable)(base.Tables["WorkDetails"]));
            if ((initTable == true)) {
                if ((this.tableWorkDetails != null)) {
                    this.tableWorkDetails.InitVars();
                }
            }
            this.tableLateralDetails = ((LateralDetailsDataTable)(base.Tables["LateralDetails"]));
            if ((initTable == true)) {
                if ((this.tableLateralDetails != null)) {
                    this.tableLateralDetails.InitVars();
                }
            }
            this.tableCommentDetails = ((CommentDetailsDataTable)(base.Tables["CommentDetails"]));
            if ((initTable == true)) {
                if ((this.tableCommentDetails != null)) {
                    this.tableCommentDetails.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RehabAssessmentTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RehabAssessmentTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSectionDetails = new SectionDetailsDataTable();
            base.Tables.Add(this.tableSectionDetails);
            this.tableWorkDetails = new WorkDetailsDataTable();
            base.Tables.Add(this.tableWorkDetails);
            this.tableLateralDetails = new LateralDetailsDataTable();
            base.Tables.Add(this.tableLateralDetails);
            this.tableCommentDetails = new CommentDetailsDataTable();
            base.Tables.Add(this.tableCommentDetails);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSectionDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWorkDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLateralDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCommentDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RehabAssessmentTDS ds = new RehabAssessmentTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SectionDetailsRowChangeEventHandler(object sender, SectionDetailsRowChangeEvent e);
        
        public delegate void WorkDetailsRowChangeEventHandler(object sender, WorkDetailsRowChangeEvent e);
        
        public delegate void LateralDetailsRowChangeEventHandler(object sender, LateralDetailsRowChangeEvent e);
        
        public delegate void CommentDetailsRowChangeEventHandler(object sender, CommentDetailsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SectionDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnAssetID;
            
            private global::System.Data.DataColumn columnSectionID;
            
            private global::System.Data.DataColumn columnStreet;
            
            private global::System.Data.DataColumn columnUSMH;
            
            private global::System.Data.DataColumn columnDSMH;
            
            private global::System.Data.DataColumn columnMapSize;
            
            private global::System.Data.DataColumn columnSize_;
            
            private global::System.Data.DataColumn columnMapLength;
            
            private global::System.Data.DataColumn columnLength;
            
            private global::System.Data.DataColumn columnLaterals;
            
            private global::System.Data.DataColumn columnLiveLaterals;
            
            private global::System.Data.DataColumn columnUSMHDepth;
            
            private global::System.Data.DataColumn columnDSMHDepth;
            
            private global::System.Data.DataColumn columnSteelTapeThroughSewer;
            
            private global::System.Data.DataColumn columnUSMHMouth12;
            
            private global::System.Data.DataColumn columnUSMHMouth1;
            
            private global::System.Data.DataColumn columnUSMHMouth2;
            
            private global::System.Data.DataColumn columnUSMHMouth3;
            
            private global::System.Data.DataColumn columnUSMHMouth4;
            
            private global::System.Data.DataColumn columnUSMHMouth5;
            
            private global::System.Data.DataColumn columnDSMHMouth12;
            
            private global::System.Data.DataColumn columnDSMHMouth1;
            
            private global::System.Data.DataColumn columnDSMHMouth2;
            
            private global::System.Data.DataColumn columnDSMHMouth3;
            
            private global::System.Data.DataColumn columnDSMHMouth4;
            
            private global::System.Data.DataColumn columnDSMHMouth5;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnUSMHDescription;
            
            private global::System.Data.DataColumn columnDSMHDescription;
            
            private global::System.Data.DataColumn columnUSMHAddress;
            
            private global::System.Data.DataColumn columnDSMHAddress;
            
            private global::System.Data.DataColumn columnSubArea;
            
            private global::System.Data.DataColumn columnFlowOrderID;
            
            private global::System.Data.DataColumn columnOriginalSectionID;
            
            private global::System.Data.DataColumn columnThickness;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SectionDetailsDataTable() {
                this.TableName = "SectionDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SectionDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SectionDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetIDColumn {
                get {
                    return this.columnAssetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionIDColumn {
                get {
                    return this.columnSectionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHColumn {
                get {
                    return this.columnUSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHColumn {
                get {
                    return this.columnDSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MapSizeColumn {
                get {
                    return this.columnMapSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Size_Column {
                get {
                    return this.columnSize_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MapLengthColumn {
                get {
                    return this.columnMapLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralsColumn {
                get {
                    return this.columnLaterals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LiveLateralsColumn {
                get {
                    return this.columnLiveLaterals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHDepthColumn {
                get {
                    return this.columnUSMHDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHDepthColumn {
                get {
                    return this.columnDSMHDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SteelTapeThroughSewerColumn {
                get {
                    return this.columnSteelTapeThroughSewer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMouth12Column {
                get {
                    return this.columnUSMHMouth12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMouth1Column {
                get {
                    return this.columnUSMHMouth1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMouth2Column {
                get {
                    return this.columnUSMHMouth2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMouth3Column {
                get {
                    return this.columnUSMHMouth3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMouth4Column {
                get {
                    return this.columnUSMHMouth4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMouth5Column {
                get {
                    return this.columnUSMHMouth5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMouth12Column {
                get {
                    return this.columnDSMHMouth12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMouth1Column {
                get {
                    return this.columnDSMHMouth1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMouth2Column {
                get {
                    return this.columnDSMHMouth2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMouth3Column {
                get {
                    return this.columnDSMHMouth3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMouth4Column {
                get {
                    return this.columnDSMHMouth4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMouth5Column {
                get {
                    return this.columnDSMHMouth5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHDescriptionColumn {
                get {
                    return this.columnUSMHDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHDescriptionColumn {
                get {
                    return this.columnDSMHDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAddressColumn {
                get {
                    return this.columnUSMHAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAddressColumn {
                get {
                    return this.columnDSMHAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubAreaColumn {
                get {
                    return this.columnSubArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlowOrderIDColumn {
                get {
                    return this.columnFlowOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OriginalSectionIDColumn {
                get {
                    return this.columnOriginalSectionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThicknessColumn {
                get {
                    return this.columnThickness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SectionDetailsRow this[int index] {
                get {
                    return ((SectionDetailsRow)(this.Rows[index]));
                }
            }
            
            public event SectionDetailsRowChangeEventHandler SectionDetailsRowChanging;
            
            public event SectionDetailsRowChangeEventHandler SectionDetailsRowChanged;
            
            public event SectionDetailsRowChangeEventHandler SectionDetailsRowDeleting;
            
            public event SectionDetailsRowChangeEventHandler SectionDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSectionDetailsRow(SectionDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SectionDetailsRow AddSectionDetailsRow(
                        int WorkID, 
                        int AssetID, 
                        string SectionID, 
                        string Street, 
                        int USMH, 
                        int DSMH, 
                        string MapSize, 
                        string Size_, 
                        string MapLength, 
                        string Length, 
                        int Laterals, 
                        int LiveLaterals, 
                        string USMHDepth, 
                        string DSMHDepth, 
                        string SteelTapeThroughSewer, 
                        string USMHMouth12, 
                        string USMHMouth1, 
                        string USMHMouth2, 
                        string USMHMouth3, 
                        string USMHMouth4, 
                        string USMHMouth5, 
                        string DSMHMouth12, 
                        string DSMHMouth1, 
                        string DSMHMouth2, 
                        string DSMHMouth3, 
                        string DSMHMouth4, 
                        string DSMHMouth5, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        string USMHDescription, 
                        string DSMHDescription, 
                        string USMHAddress, 
                        string DSMHAddress, 
                        string SubArea, 
                        string FlowOrderID, 
                        string OriginalSectionID, 
                        string Thickness) {
                SectionDetailsRow rowSectionDetailsRow = ((SectionDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        AssetID,
                        SectionID,
                        Street,
                        USMH,
                        DSMH,
                        MapSize,
                        Size_,
                        MapLength,
                        Length,
                        Laterals,
                        LiveLaterals,
                        USMHDepth,
                        DSMHDepth,
                        SteelTapeThroughSewer,
                        USMHMouth12,
                        USMHMouth1,
                        USMHMouth2,
                        USMHMouth3,
                        USMHMouth4,
                        USMHMouth5,
                        DSMHMouth12,
                        DSMHMouth1,
                        DSMHMouth2,
                        DSMHMouth3,
                        DSMHMouth4,
                        DSMHMouth5,
                        Deleted,
                        COMPANY_ID,
                        USMHDescription,
                        DSMHDescription,
                        USMHAddress,
                        DSMHAddress,
                        SubArea,
                        FlowOrderID,
                        OriginalSectionID,
                        Thickness};
                rowSectionDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSectionDetailsRow);
                return rowSectionDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SectionDetailsRow FindByWorkID(int WorkID) {
                return ((SectionDetailsRow)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SectionDetailsDataTable cln = ((SectionDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SectionDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnAssetID = base.Columns["AssetID"];
                this.columnSectionID = base.Columns["SectionID"];
                this.columnStreet = base.Columns["Street"];
                this.columnUSMH = base.Columns["USMH"];
                this.columnDSMH = base.Columns["DSMH"];
                this.columnMapSize = base.Columns["MapSize"];
                this.columnSize_ = base.Columns["Size_"];
                this.columnMapLength = base.Columns["MapLength"];
                this.columnLength = base.Columns["Length"];
                this.columnLaterals = base.Columns["Laterals"];
                this.columnLiveLaterals = base.Columns["LiveLaterals"];
                this.columnUSMHDepth = base.Columns["USMHDepth"];
                this.columnDSMHDepth = base.Columns["DSMHDepth"];
                this.columnSteelTapeThroughSewer = base.Columns["SteelTapeThroughSewer"];
                this.columnUSMHMouth12 = base.Columns["USMHMouth12"];
                this.columnUSMHMouth1 = base.Columns["USMHMouth1"];
                this.columnUSMHMouth2 = base.Columns["USMHMouth2"];
                this.columnUSMHMouth3 = base.Columns["USMHMouth3"];
                this.columnUSMHMouth4 = base.Columns["USMHMouth4"];
                this.columnUSMHMouth5 = base.Columns["USMHMouth5"];
                this.columnDSMHMouth12 = base.Columns["DSMHMouth12"];
                this.columnDSMHMouth1 = base.Columns["DSMHMouth1"];
                this.columnDSMHMouth2 = base.Columns["DSMHMouth2"];
                this.columnDSMHMouth3 = base.Columns["DSMHMouth3"];
                this.columnDSMHMouth4 = base.Columns["DSMHMouth4"];
                this.columnDSMHMouth5 = base.Columns["DSMHMouth5"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnUSMHDescription = base.Columns["USMHDescription"];
                this.columnDSMHDescription = base.Columns["DSMHDescription"];
                this.columnUSMHAddress = base.Columns["USMHAddress"];
                this.columnDSMHAddress = base.Columns["DSMHAddress"];
                this.columnSubArea = base.Columns["SubArea"];
                this.columnFlowOrderID = base.Columns["FlowOrderID"];
                this.columnOriginalSectionID = base.Columns["OriginalSectionID"];
                this.columnThickness = base.Columns["Thickness"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnAssetID = new global::System.Data.DataColumn("AssetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetID);
                this.columnSectionID = new global::System.Data.DataColumn("SectionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionID);
                this.columnStreet = new global::System.Data.DataColumn("Street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnUSMH = new global::System.Data.DataColumn("USMH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMH);
                this.columnDSMH = new global::System.Data.DataColumn("DSMH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMH);
                this.columnMapSize = new global::System.Data.DataColumn("MapSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMapSize);
                this.columnSize_ = new global::System.Data.DataColumn("Size_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_);
                this.columnMapLength = new global::System.Data.DataColumn("MapLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMapLength);
                this.columnLength = new global::System.Data.DataColumn("Length", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLength);
                this.columnLaterals = new global::System.Data.DataColumn("Laterals", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaterals);
                this.columnLiveLaterals = new global::System.Data.DataColumn("LiveLaterals", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiveLaterals);
                this.columnUSMHDepth = new global::System.Data.DataColumn("USMHDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHDepth);
                this.columnDSMHDepth = new global::System.Data.DataColumn("DSMHDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHDepth);
                this.columnSteelTapeThroughSewer = new global::System.Data.DataColumn("SteelTapeThroughSewer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSteelTapeThroughSewer);
                this.columnUSMHMouth12 = new global::System.Data.DataColumn("USMHMouth12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMouth12);
                this.columnUSMHMouth1 = new global::System.Data.DataColumn("USMHMouth1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMouth1);
                this.columnUSMHMouth2 = new global::System.Data.DataColumn("USMHMouth2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMouth2);
                this.columnUSMHMouth3 = new global::System.Data.DataColumn("USMHMouth3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMouth3);
                this.columnUSMHMouth4 = new global::System.Data.DataColumn("USMHMouth4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMouth4);
                this.columnUSMHMouth5 = new global::System.Data.DataColumn("USMHMouth5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMouth5);
                this.columnDSMHMouth12 = new global::System.Data.DataColumn("DSMHMouth12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMouth12);
                this.columnDSMHMouth1 = new global::System.Data.DataColumn("DSMHMouth1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMouth1);
                this.columnDSMHMouth2 = new global::System.Data.DataColumn("DSMHMouth2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMouth2);
                this.columnDSMHMouth3 = new global::System.Data.DataColumn("DSMHMouth3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMouth3);
                this.columnDSMHMouth4 = new global::System.Data.DataColumn("DSMHMouth4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMouth4);
                this.columnDSMHMouth5 = new global::System.Data.DataColumn("DSMHMouth5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMouth5);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnUSMHDescription = new global::System.Data.DataColumn("USMHDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHDescription);
                this.columnDSMHDescription = new global::System.Data.DataColumn("DSMHDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHDescription);
                this.columnUSMHAddress = new global::System.Data.DataColumn("USMHAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAddress);
                this.columnDSMHAddress = new global::System.Data.DataColumn("DSMHAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAddress);
                this.columnSubArea = new global::System.Data.DataColumn("SubArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubArea);
                this.columnFlowOrderID = new global::System.Data.DataColumn("FlowOrderID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlowOrderID);
                this.columnOriginalSectionID = new global::System.Data.DataColumn("OriginalSectionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalSectionID);
                this.columnThickness = new global::System.Data.DataColumn("Thickness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThickness);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.Unique = true;
                this.columnWorkID.Caption = "AssetID_";
                this.columnSteelTapeThroughSewer.MaxLength = 25;
                this.columnUSMHMouth12.MaxLength = 25;
                this.columnUSMHMouth1.MaxLength = 25;
                this.columnUSMHMouth2.MaxLength = 25;
                this.columnUSMHMouth3.MaxLength = 25;
                this.columnUSMHMouth4.MaxLength = 25;
                this.columnUSMHMouth5.MaxLength = 25;
                this.columnDSMHMouth12.MaxLength = 25;
                this.columnDSMHMouth1.MaxLength = 25;
                this.columnDSMHMouth2.MaxLength = 25;
                this.columnDSMHMouth3.MaxLength = 25;
                this.columnDSMHMouth4.MaxLength = 25;
                this.columnDSMHMouth5.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SectionDetailsRow NewSectionDetailsRow() {
                return ((SectionDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SectionDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SectionDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SectionDetailsRowChanged != null)) {
                    this.SectionDetailsRowChanged(this, new SectionDetailsRowChangeEvent(((SectionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SectionDetailsRowChanging != null)) {
                    this.SectionDetailsRowChanging(this, new SectionDetailsRowChangeEvent(((SectionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SectionDetailsRowDeleted != null)) {
                    this.SectionDetailsRowDeleted(this, new SectionDetailsRowChangeEvent(((SectionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SectionDetailsRowDeleting != null)) {
                    this.SectionDetailsRowDeleting(this, new SectionDetailsRowChangeEvent(((SectionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSectionDetailsRow(SectionDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RehabAssessmentTDS ds = new RehabAssessmentTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SectionDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WorkDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnWorkIDFll;
            
            private global::System.Data.DataColumn columnClientID;
            
            private global::System.Data.DataColumn columnP1Date;
            
            private global::System.Data.DataColumn columnM1Date;
            
            private global::System.Data.DataColumn columnCXIsRemoved;
            
            private global::System.Data.DataColumn columnMeasurementTakenBy;
            
            private global::System.Data.DataColumn columnTrafficControl;
            
            private global::System.Data.DataColumn columnSiteDetails;
            
            private global::System.Data.DataColumn columnPipeSizeChange;
            
            private global::System.Data.DataColumn columnStandardBypass;
            
            private global::System.Data.DataColumn columnStandardBypassComments;
            
            private global::System.Data.DataColumn columnTrafficControlDetails;
            
            private global::System.Data.DataColumn columnMeasurementType;
            
            private global::System.Data.DataColumn columnMeasurementFromMH;
            
            private global::System.Data.DataColumn columnVideoDoneFromMH;
            
            private global::System.Data.DataColumn columnVideoDoneToMH;
            
            private global::System.Data.DataColumn columnVideoDistance;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnPreFlushDate;
            
            private global::System.Data.DataColumn columnPreVideoDate;
            
            private global::System.Data.DataColumn columnMaterial;
            
            private global::System.Data.DataColumn columnRoboticPrepCompleted;
            
            private global::System.Data.DataColumn columnRoboticPrepCompletedDate;
            
            private global::System.Data.DataColumn columnAccessType;
            
            private global::System.Data.DataColumn columnP1Completed;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkDetailsDataTable() {
                this.TableName = "WorkDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WorkDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WorkDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDFllColumn {
                get {
                    return this.columnWorkIDFll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P1DateColumn {
                get {
                    return this.columnP1Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M1DateColumn {
                get {
                    return this.columnM1Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CXIsRemovedColumn {
                get {
                    return this.columnCXIsRemoved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementTakenByColumn {
                get {
                    return this.columnMeasurementTakenBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrafficControlColumn {
                get {
                    return this.columnTrafficControl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteDetailsColumn {
                get {
                    return this.columnSiteDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PipeSizeChangeColumn {
                get {
                    return this.columnPipeSizeChange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardBypassColumn {
                get {
                    return this.columnStandardBypass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardBypassCommentsColumn {
                get {
                    return this.columnStandardBypassComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrafficControlDetailsColumn {
                get {
                    return this.columnTrafficControlDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementTypeColumn {
                get {
                    return this.columnMeasurementType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementFromMHColumn {
                get {
                    return this.columnMeasurementFromMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoDoneFromMHColumn {
                get {
                    return this.columnVideoDoneFromMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoDoneToMHColumn {
                get {
                    return this.columnVideoDoneToMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoDistanceColumn {
                get {
                    return this.columnVideoDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreFlushDateColumn {
                get {
                    return this.columnPreFlushDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreVideoDateColumn {
                get {
                    return this.columnPreVideoDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialColumn {
                get {
                    return this.columnMaterial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoboticPrepCompletedColumn {
                get {
                    return this.columnRoboticPrepCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoboticPrepCompletedDateColumn {
                get {
                    return this.columnRoboticPrepCompletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccessTypeColumn {
                get {
                    return this.columnAccessType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P1CompletedColumn {
                get {
                    return this.columnP1Completed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkDetailsRow this[int index] {
                get {
                    return ((WorkDetailsRow)(this.Rows[index]));
                }
            }
            
            public event WorkDetailsRowChangeEventHandler WorkDetailsRowChanging;
            
            public event WorkDetailsRowChangeEventHandler WorkDetailsRowChanged;
            
            public event WorkDetailsRowChangeEventHandler WorkDetailsRowDeleting;
            
            public event WorkDetailsRowChangeEventHandler WorkDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWorkDetailsRow(WorkDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkDetailsRow AddWorkDetailsRow(
                        int WorkID, 
                        int WorkIDFll, 
                        string ClientID, 
                        System.DateTime P1Date, 
                        System.DateTime M1Date, 
                        int CXIsRemoved, 
                        string MeasurementTakenBy, 
                        string TrafficControl, 
                        string SiteDetails, 
                        bool PipeSizeChange, 
                        bool StandardBypass, 
                        string StandardBypassComments, 
                        string TrafficControlDetails, 
                        string MeasurementType, 
                        string MeasurementFromMH, 
                        string VideoDoneFromMH, 
                        string VideoDoneToMH, 
                        string VideoDistance, 
                        string Comments, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        System.DateTime PreFlushDate, 
                        System.DateTime PreVideoDate, 
                        string Material, 
                        bool RoboticPrepCompleted, 
                        System.DateTime RoboticPrepCompletedDate, 
                        string AccessType, 
                        bool P1Completed) {
                WorkDetailsRow rowWorkDetailsRow = ((WorkDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        WorkIDFll,
                        ClientID,
                        P1Date,
                        M1Date,
                        CXIsRemoved,
                        MeasurementTakenBy,
                        TrafficControl,
                        SiteDetails,
                        PipeSizeChange,
                        StandardBypass,
                        StandardBypassComments,
                        TrafficControlDetails,
                        MeasurementType,
                        MeasurementFromMH,
                        VideoDoneFromMH,
                        VideoDoneToMH,
                        VideoDistance,
                        Comments,
                        Deleted,
                        COMPANY_ID,
                        PreFlushDate,
                        PreVideoDate,
                        Material,
                        RoboticPrepCompleted,
                        RoboticPrepCompletedDate,
                        AccessType,
                        P1Completed};
                rowWorkDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWorkDetailsRow);
                return rowWorkDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkDetailsRow FindByWorkID(int WorkID) {
                return ((WorkDetailsRow)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WorkDetailsDataTable cln = ((WorkDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WorkDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnWorkIDFll = base.Columns["WorkIDFll"];
                this.columnClientID = base.Columns["ClientID"];
                this.columnP1Date = base.Columns["P1Date"];
                this.columnM1Date = base.Columns["M1Date"];
                this.columnCXIsRemoved = base.Columns["CXIsRemoved"];
                this.columnMeasurementTakenBy = base.Columns["MeasurementTakenBy"];
                this.columnTrafficControl = base.Columns["TrafficControl"];
                this.columnSiteDetails = base.Columns["SiteDetails"];
                this.columnPipeSizeChange = base.Columns["PipeSizeChange"];
                this.columnStandardBypass = base.Columns["StandardBypass"];
                this.columnStandardBypassComments = base.Columns["StandardBypassComments"];
                this.columnTrafficControlDetails = base.Columns["TrafficControlDetails"];
                this.columnMeasurementType = base.Columns["MeasurementType"];
                this.columnMeasurementFromMH = base.Columns["MeasurementFromMH"];
                this.columnVideoDoneFromMH = base.Columns["VideoDoneFromMH"];
                this.columnVideoDoneToMH = base.Columns["VideoDoneToMH"];
                this.columnVideoDistance = base.Columns["VideoDistance"];
                this.columnComments = base.Columns["Comments"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnPreFlushDate = base.Columns["PreFlushDate"];
                this.columnPreVideoDate = base.Columns["PreVideoDate"];
                this.columnMaterial = base.Columns["Material"];
                this.columnRoboticPrepCompleted = base.Columns["RoboticPrepCompleted"];
                this.columnRoboticPrepCompletedDate = base.Columns["RoboticPrepCompletedDate"];
                this.columnAccessType = base.Columns["AccessType"];
                this.columnP1Completed = base.Columns["P1Completed"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnWorkIDFll = new global::System.Data.DataColumn("WorkIDFll", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkIDFll);
                this.columnClientID = new global::System.Data.DataColumn("ClientID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnP1Date = new global::System.Data.DataColumn("P1Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP1Date);
                this.columnM1Date = new global::System.Data.DataColumn("M1Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM1Date);
                this.columnCXIsRemoved = new global::System.Data.DataColumn("CXIsRemoved", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXIsRemoved);
                this.columnMeasurementTakenBy = new global::System.Data.DataColumn("MeasurementTakenBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementTakenBy);
                this.columnTrafficControl = new global::System.Data.DataColumn("TrafficControl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrafficControl);
                this.columnSiteDetails = new global::System.Data.DataColumn("SiteDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteDetails);
                this.columnPipeSizeChange = new global::System.Data.DataColumn("PipeSizeChange", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeSizeChange);
                this.columnStandardBypass = new global::System.Data.DataColumn("StandardBypass", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardBypass);
                this.columnStandardBypassComments = new global::System.Data.DataColumn("StandardBypassComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardBypassComments);
                this.columnTrafficControlDetails = new global::System.Data.DataColumn("TrafficControlDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrafficControlDetails);
                this.columnMeasurementType = new global::System.Data.DataColumn("MeasurementType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementType);
                this.columnMeasurementFromMH = new global::System.Data.DataColumn("MeasurementFromMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementFromMH);
                this.columnVideoDoneFromMH = new global::System.Data.DataColumn("VideoDoneFromMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoDoneFromMH);
                this.columnVideoDoneToMH = new global::System.Data.DataColumn("VideoDoneToMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoDoneToMH);
                this.columnVideoDistance = new global::System.Data.DataColumn("VideoDistance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoDistance);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnPreFlushDate = new global::System.Data.DataColumn("PreFlushDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreFlushDate);
                this.columnPreVideoDate = new global::System.Data.DataColumn("PreVideoDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreVideoDate);
                this.columnMaterial = new global::System.Data.DataColumn("Material", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterial);
                this.columnRoboticPrepCompleted = new global::System.Data.DataColumn("RoboticPrepCompleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticPrepCompleted);
                this.columnRoboticPrepCompletedDate = new global::System.Data.DataColumn("RoboticPrepCompletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticPrepCompletedDate);
                this.columnAccessType = new global::System.Data.DataColumn("AccessType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccessType);
                this.columnP1Completed = new global::System.Data.DataColumn("P1Completed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP1Completed);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.Unique = true;
                this.columnWorkID.Caption = "WorkID_";
                this.columnTrafficControl.MaxLength = 100;
                this.columnStandardBypassComments.MaxLength = 1073741823;
                this.columnTrafficControlDetails.MaxLength = 1073741823;
                this.columnMeasurementType.MaxLength = 100;
                this.columnVideoDistance.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkDetailsRow NewWorkDetailsRow() {
                return ((WorkDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WorkDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WorkDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WorkDetailsRowChanged != null)) {
                    this.WorkDetailsRowChanged(this, new WorkDetailsRowChangeEvent(((WorkDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WorkDetailsRowChanging != null)) {
                    this.WorkDetailsRowChanging(this, new WorkDetailsRowChangeEvent(((WorkDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WorkDetailsRowDeleted != null)) {
                    this.WorkDetailsRowDeleted(this, new WorkDetailsRowChangeEvent(((WorkDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WorkDetailsRowDeleting != null)) {
                    this.WorkDetailsRowDeleting(this, new WorkDetailsRowChangeEvent(((WorkDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWorkDetailsRow(WorkDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RehabAssessmentTDS ds = new RehabAssessmentTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WorkDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LateralDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLateral;
            
            private global::System.Data.DataColumn columnVideoDistance;
            
            private global::System.Data.DataColumn columnClockPosition;
            
            private global::System.Data.DataColumn columnDistanceToCentre;
            
            private global::System.Data.DataColumn columnTimeOpened;
            
            private global::System.Data.DataColumn columnReverseSetup;
            
            private global::System.Data.DataColumn columnReinstate;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnLateralID;
            
            private global::System.Data.DataColumn columnSize_;
            
            private global::System.Data.DataColumn columnDistanceFromUSMH;
            
            private global::System.Data.DataColumn columnDistanceFromDSMH;
            
            private global::System.Data.DataColumn columnMaterialType;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnInProject;
            
            private global::System.Data.DataColumn columnInProjectDatabase;
            
            private global::System.Data.DataColumn columnInDatabase;
            
            private global::System.Data.DataColumn columnLive;
            
            private global::System.Data.DataColumn columnToProcess;
            
            private global::System.Data.DataColumn columnClientLateralID;
            
            private global::System.Data.DataColumn columnInFll;
            
            private global::System.Data.DataColumn columnInFllDatabase;
            
            private global::System.Data.DataColumn columnInJl;
            
            private global::System.Data.DataColumn columnInJlDatabase;
            
            private global::System.Data.DataColumn columnConnectionType;
            
            private global::System.Data.DataColumn columnMn;
            
            private global::System.Data.DataColumn columnClientInspectionNo;
            
            private global::System.Data.DataColumn columnV1Inspection;
            
            private global::System.Data.DataColumn columnRequiresRoboticPrep;
            
            private global::System.Data.DataColumn columnRequiresRoboticPrepDate;
            
            private global::System.Data.DataColumn columnHoldClientIssue;
            
            private global::System.Data.DataColumn columnHoldLFSIssue;
            
            private global::System.Data.DataColumn columnLineLateral;
            
            private global::System.Data.DataColumn columnFlange;
            
            private global::System.Data.DataColumn columnDyeTestReq;
            
            private global::System.Data.DataColumn columnDyeTestComplete;
            
            private global::System.Data.DataColumn columnContractYear;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LateralDetailsDataTable() {
                this.TableName = "LateralDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LateralDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LateralDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralColumn {
                get {
                    return this.columnLateral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoDistanceColumn {
                get {
                    return this.columnVideoDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClockPositionColumn {
                get {
                    return this.columnClockPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceToCentreColumn {
                get {
                    return this.columnDistanceToCentre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimeOpenedColumn {
                get {
                    return this.columnTimeOpened;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReverseSetupColumn {
                get {
                    return this.columnReverseSetup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReinstateColumn {
                get {
                    return this.columnReinstate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralIDColumn {
                get {
                    return this.columnLateralID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Size_Column {
                get {
                    return this.columnSize_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceFromUSMHColumn {
                get {
                    return this.columnDistanceFromUSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceFromDSMHColumn {
                get {
                    return this.columnDistanceFromDSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialTypeColumn {
                get {
                    return this.columnMaterialType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InProjectColumn {
                get {
                    return this.columnInProject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InProjectDatabaseColumn {
                get {
                    return this.columnInProjectDatabase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InDatabaseColumn {
                get {
                    return this.columnInDatabase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LiveColumn {
                get {
                    return this.columnLive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToProcessColumn {
                get {
                    return this.columnToProcess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientLateralIDColumn {
                get {
                    return this.columnClientLateralID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InFllColumn {
                get {
                    return this.columnInFll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InFllDatabaseColumn {
                get {
                    return this.columnInFllDatabase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InJlColumn {
                get {
                    return this.columnInJl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InJlDatabaseColumn {
                get {
                    return this.columnInJlDatabase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConnectionTypeColumn {
                get {
                    return this.columnConnectionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MnColumn {
                get {
                    return this.columnMn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientInspectionNoColumn {
                get {
                    return this.columnClientInspectionNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V1InspectionColumn {
                get {
                    return this.columnV1Inspection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequiresRoboticPrepColumn {
                get {
                    return this.columnRequiresRoboticPrep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequiresRoboticPrepDateColumn {
                get {
                    return this.columnRequiresRoboticPrepDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoldClientIssueColumn {
                get {
                    return this.columnHoldClientIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoldLFSIssueColumn {
                get {
                    return this.columnHoldLFSIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineLateralColumn {
                get {
                    return this.columnLineLateral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlangeColumn {
                get {
                    return this.columnFlange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DyeTestReqColumn {
                get {
                    return this.columnDyeTestReq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DyeTestCompleteColumn {
                get {
                    return this.columnDyeTestComplete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContractYearColumn {
                get {
                    return this.columnContractYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LateralDetailsRow this[int index] {
                get {
                    return ((LateralDetailsRow)(this.Rows[index]));
                }
            }
            
            public event LateralDetailsRowChangeEventHandler LateralDetailsRowChanging;
            
            public event LateralDetailsRowChangeEventHandler LateralDetailsRowChanged;
            
            public event LateralDetailsRowChangeEventHandler LateralDetailsRowDeleting;
            
            public event LateralDetailsRowChangeEventHandler LateralDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLateralDetailsRow(LateralDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LateralDetailsRow AddLateralDetailsRow(
                        int Lateral, 
                        string VideoDistance, 
                        string ClockPosition, 
                        string DistanceToCentre, 
                        string TimeOpened, 
                        string ReverseSetup, 
                        System.DateTime Reinstate, 
                        string Comments, 
                        string LateralID, 
                        string Size_, 
                        string DistanceFromUSMH, 
                        string DistanceFromDSMH, 
                        string MaterialType, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        bool InProject, 
                        bool InProjectDatabase, 
                        bool InDatabase, 
                        string Live, 
                        bool ToProcess, 
                        string ClientLateralID, 
                        bool InFll, 
                        bool InFllDatabase, 
                        bool InJl, 
                        bool InJlDatabase, 
                        string ConnectionType, 
                        string Mn, 
                        string ClientInspectionNo, 
                        System.DateTime V1Inspection, 
                        bool RequiresRoboticPrep, 
                        System.DateTime RequiresRoboticPrepDate, 
                        bool HoldClientIssue, 
                        bool HoldLFSIssue, 
                        bool LineLateral, 
                        string Flange, 
                        bool DyeTestReq, 
                        System.DateTime DyeTestComplete, 
                        string ContractYear) {
                LateralDetailsRow rowLateralDetailsRow = ((LateralDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Lateral,
                        VideoDistance,
                        ClockPosition,
                        DistanceToCentre,
                        TimeOpened,
                        ReverseSetup,
                        Reinstate,
                        Comments,
                        LateralID,
                        Size_,
                        DistanceFromUSMH,
                        DistanceFromDSMH,
                        MaterialType,
                        Deleted,
                        COMPANY_ID,
                        InProject,
                        InProjectDatabase,
                        InDatabase,
                        Live,
                        ToProcess,
                        ClientLateralID,
                        InFll,
                        InFllDatabase,
                        InJl,
                        InJlDatabase,
                        ConnectionType,
                        Mn,
                        ClientInspectionNo,
                        V1Inspection,
                        RequiresRoboticPrep,
                        RequiresRoboticPrepDate,
                        HoldClientIssue,
                        HoldLFSIssue,
                        LineLateral,
                        Flange,
                        DyeTestReq,
                        DyeTestComplete,
                        ContractYear};
                rowLateralDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLateralDetailsRow);
                return rowLateralDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LateralDetailsRow FindByLateral(int Lateral) {
                return ((LateralDetailsRow)(this.Rows.Find(new object[] {
                            Lateral})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LateralDetailsDataTable cln = ((LateralDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LateralDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLateral = base.Columns["Lateral"];
                this.columnVideoDistance = base.Columns["VideoDistance"];
                this.columnClockPosition = base.Columns["ClockPosition"];
                this.columnDistanceToCentre = base.Columns["DistanceToCentre"];
                this.columnTimeOpened = base.Columns["TimeOpened"];
                this.columnReverseSetup = base.Columns["ReverseSetup"];
                this.columnReinstate = base.Columns["Reinstate"];
                this.columnComments = base.Columns["Comments"];
                this.columnLateralID = base.Columns["LateralID"];
                this.columnSize_ = base.Columns["Size_"];
                this.columnDistanceFromUSMH = base.Columns["DistanceFromUSMH"];
                this.columnDistanceFromDSMH = base.Columns["DistanceFromDSMH"];
                this.columnMaterialType = base.Columns["MaterialType"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnInProject = base.Columns["InProject"];
                this.columnInProjectDatabase = base.Columns["InProjectDatabase"];
                this.columnInDatabase = base.Columns["InDatabase"];
                this.columnLive = base.Columns["Live"];
                this.columnToProcess = base.Columns["ToProcess"];
                this.columnClientLateralID = base.Columns["ClientLateralID"];
                this.columnInFll = base.Columns["InFll"];
                this.columnInFllDatabase = base.Columns["InFllDatabase"];
                this.columnInJl = base.Columns["InJl"];
                this.columnInJlDatabase = base.Columns["InJlDatabase"];
                this.columnConnectionType = base.Columns["ConnectionType"];
                this.columnMn = base.Columns["Mn"];
                this.columnClientInspectionNo = base.Columns["ClientInspectionNo"];
                this.columnV1Inspection = base.Columns["V1Inspection"];
                this.columnRequiresRoboticPrep = base.Columns["RequiresRoboticPrep"];
                this.columnRequiresRoboticPrepDate = base.Columns["RequiresRoboticPrepDate"];
                this.columnHoldClientIssue = base.Columns["HoldClientIssue"];
                this.columnHoldLFSIssue = base.Columns["HoldLFSIssue"];
                this.columnLineLateral = base.Columns["LineLateral"];
                this.columnFlange = base.Columns["Flange"];
                this.columnDyeTestReq = base.Columns["DyeTestReq"];
                this.columnDyeTestComplete = base.Columns["DyeTestComplete"];
                this.columnContractYear = base.Columns["ContractYear"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLateral = new global::System.Data.DataColumn("Lateral", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateral);
                this.columnVideoDistance = new global::System.Data.DataColumn("VideoDistance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoDistance);
                this.columnClockPosition = new global::System.Data.DataColumn("ClockPosition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClockPosition);
                this.columnDistanceToCentre = new global::System.Data.DataColumn("DistanceToCentre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceToCentre);
                this.columnTimeOpened = new global::System.Data.DataColumn("TimeOpened", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeOpened);
                this.columnReverseSetup = new global::System.Data.DataColumn("ReverseSetup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReverseSetup);
                this.columnReinstate = new global::System.Data.DataColumn("Reinstate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReinstate);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnLateralID = new global::System.Data.DataColumn("LateralID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralID);
                this.columnSize_ = new global::System.Data.DataColumn("Size_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_);
                this.columnDistanceFromUSMH = new global::System.Data.DataColumn("DistanceFromUSMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceFromUSMH);
                this.columnDistanceFromDSMH = new global::System.Data.DataColumn("DistanceFromDSMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceFromDSMH);
                this.columnMaterialType = new global::System.Data.DataColumn("MaterialType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialType);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnInProject = new global::System.Data.DataColumn("InProject", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInProject);
                this.columnInProjectDatabase = new global::System.Data.DataColumn("InProjectDatabase", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInProjectDatabase);
                this.columnInDatabase = new global::System.Data.DataColumn("InDatabase", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInDatabase);
                this.columnLive = new global::System.Data.DataColumn("Live", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLive);
                this.columnToProcess = new global::System.Data.DataColumn("ToProcess", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToProcess);
                this.columnClientLateralID = new global::System.Data.DataColumn("ClientLateralID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientLateralID);
                this.columnInFll = new global::System.Data.DataColumn("InFll", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInFll);
                this.columnInFllDatabase = new global::System.Data.DataColumn("InFllDatabase", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInFllDatabase);
                this.columnInJl = new global::System.Data.DataColumn("InJl", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInJl);
                this.columnInJlDatabase = new global::System.Data.DataColumn("InJlDatabase", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInJlDatabase);
                this.columnConnectionType = new global::System.Data.DataColumn("ConnectionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConnectionType);
                this.columnMn = new global::System.Data.DataColumn("Mn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMn);
                this.columnClientInspectionNo = new global::System.Data.DataColumn("ClientInspectionNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientInspectionNo);
                this.columnV1Inspection = new global::System.Data.DataColumn("V1Inspection", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV1Inspection);
                this.columnRequiresRoboticPrep = new global::System.Data.DataColumn("RequiresRoboticPrep", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiresRoboticPrep);
                this.columnRequiresRoboticPrepDate = new global::System.Data.DataColumn("RequiresRoboticPrepDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiresRoboticPrepDate);
                this.columnHoldClientIssue = new global::System.Data.DataColumn("HoldClientIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoldClientIssue);
                this.columnHoldLFSIssue = new global::System.Data.DataColumn("HoldLFSIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoldLFSIssue);
                this.columnLineLateral = new global::System.Data.DataColumn("LineLateral", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineLateral);
                this.columnFlange = new global::System.Data.DataColumn("Flange", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlange);
                this.columnDyeTestReq = new global::System.Data.DataColumn("DyeTestReq", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDyeTestReq);
                this.columnDyeTestComplete = new global::System.Data.DataColumn("DyeTestComplete", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDyeTestComplete);
                this.columnContractYear = new global::System.Data.DataColumn("ContractYear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractYear);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLateral}, true));
                this.columnLateral.AllowDBNull = false;
                this.columnLateral.Unique = true;
                this.columnVideoDistance.MaxLength = 25;
                this.columnClockPosition.MaxLength = 50;
                this.columnDistanceToCentre.MaxLength = 25;
                this.columnTimeOpened.MaxLength = 50;
                this.columnReverseSetup.MaxLength = 25;
                this.columnComments.MaxLength = 1073741823;
                this.columnLateralID.AllowDBNull = false;
                this.columnLateralID.MaxLength = 50;
                this.columnSize_.MaxLength = 25;
                this.columnDistanceFromUSMH.MaxLength = 25;
                this.columnDistanceFromDSMH.MaxLength = 25;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnToProcess.DefaultValue = ((bool)(false));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LateralDetailsRow NewLateralDetailsRow() {
                return ((LateralDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LateralDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LateralDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LateralDetailsRowChanged != null)) {
                    this.LateralDetailsRowChanged(this, new LateralDetailsRowChangeEvent(((LateralDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LateralDetailsRowChanging != null)) {
                    this.LateralDetailsRowChanging(this, new LateralDetailsRowChangeEvent(((LateralDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LateralDetailsRowDeleted != null)) {
                    this.LateralDetailsRowDeleted(this, new LateralDetailsRowChangeEvent(((LateralDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LateralDetailsRowDeleting != null)) {
                    this.LateralDetailsRowDeleting(this, new LateralDetailsRowChangeEvent(((LateralDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLateralDetailsRow(LateralDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RehabAssessmentTDS ds = new RehabAssessmentTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LateralDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CommentDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnSubject;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnDateTime_;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnLIBRARY_FILES_ID;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnInDatabase;
            
            private global::System.Data.DataColumn columnUserFullName;
            
            private global::System.Data.DataColumn columnToHistory;
            
            private global::System.Data.DataColumn columnWorkType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommentDetailsDataTable() {
                this.TableName = "CommentDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CommentDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CommentDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTime_Column {
                get {
                    return this.columnDateTime_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIBRARY_FILES_IDColumn {
                get {
                    return this.columnLIBRARY_FILES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InDatabaseColumn {
                get {
                    return this.columnInDatabase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserFullNameColumn {
                get {
                    return this.columnUserFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToHistoryColumn {
                get {
                    return this.columnToHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkTypeColumn {
                get {
                    return this.columnWorkType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommentDetailsRow this[int index] {
                get {
                    return ((CommentDetailsRow)(this.Rows[index]));
                }
            }
            
            public event CommentDetailsRowChangeEventHandler CommentDetailsRowChanging;
            
            public event CommentDetailsRowChangeEventHandler CommentDetailsRowChanged;
            
            public event CommentDetailsRowChangeEventHandler CommentDetailsRowDeleting;
            
            public event CommentDetailsRowChangeEventHandler CommentDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCommentDetailsRow(CommentDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommentDetailsRow AddCommentDetailsRow(int WorkID, int RefID, string Type, string Subject, int UserID, System.DateTime DateTime_, string Comment, int LIBRARY_FILES_ID, bool Deleted, int COMPANY_ID, bool InDatabase, string UserFullName, bool ToHistory, string WorkType) {
                CommentDetailsRow rowCommentDetailsRow = ((CommentDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        RefID,
                        Type,
                        Subject,
                        UserID,
                        DateTime_,
                        Comment,
                        LIBRARY_FILES_ID,
                        Deleted,
                        COMPANY_ID,
                        InDatabase,
                        UserFullName,
                        ToHistory,
                        WorkType};
                rowCommentDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCommentDetailsRow);
                return rowCommentDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommentDetailsRow FindByWorkIDRefID(int WorkID, int RefID) {
                return ((CommentDetailsRow)(this.Rows.Find(new object[] {
                            WorkID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CommentDetailsDataTable cln = ((CommentDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CommentDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnType = base.Columns["Type"];
                this.columnSubject = base.Columns["Subject"];
                this.columnUserID = base.Columns["UserID"];
                this.columnDateTime_ = base.Columns["DateTime_"];
                this.columnComment = base.Columns["Comment"];
                this.columnLIBRARY_FILES_ID = base.Columns["LIBRARY_FILES_ID"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnInDatabase = base.Columns["InDatabase"];
                this.columnUserFullName = base.Columns["UserFullName"];
                this.columnToHistory = base.Columns["ToHistory"];
                this.columnWorkType = base.Columns["WorkType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnSubject = new global::System.Data.DataColumn("Subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnDateTime_ = new global::System.Data.DataColumn("DateTime_", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTime_);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnLIBRARY_FILES_ID = new global::System.Data.DataColumn("LIBRARY_FILES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIBRARY_FILES_ID);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnInDatabase = new global::System.Data.DataColumn("InDatabase", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInDatabase);
                this.columnUserFullName = new global::System.Data.DataColumn("UserFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserFullName);
                this.columnToHistory = new global::System.Data.DataColumn("ToHistory", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToHistory);
                this.columnWorkType = new global::System.Data.DataColumn("WorkType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID,
                                this.columnRefID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnType.MaxLength = 50;
                this.columnSubject.AllowDBNull = false;
                this.columnSubject.MaxLength = 255;
                this.columnUserID.AllowDBNull = false;
                this.columnComment.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommentDetailsRow NewCommentDetailsRow() {
                return ((CommentDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CommentDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CommentDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CommentDetailsRowChanged != null)) {
                    this.CommentDetailsRowChanged(this, new CommentDetailsRowChangeEvent(((CommentDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CommentDetailsRowChanging != null)) {
                    this.CommentDetailsRowChanging(this, new CommentDetailsRowChangeEvent(((CommentDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CommentDetailsRowDeleted != null)) {
                    this.CommentDetailsRowDeleted(this, new CommentDetailsRowChangeEvent(((CommentDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CommentDetailsRowDeleting != null)) {
                    this.CommentDetailsRowDeleting(this, new CommentDetailsRowChangeEvent(((CommentDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCommentDetailsRow(CommentDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RehabAssessmentTDS ds = new RehabAssessmentTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CommentDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SectionDetailsRow : global::System.Data.DataRow {
            
            private SectionDetailsDataTable tableSectionDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SectionDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSectionDetails = ((SectionDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableSectionDetails.WorkIDColumn]));
                }
                set {
                    this[this.tableSectionDetails.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssetID {
                get {
                    try {
                        return ((int)(this[this.tableSectionDetails.AssetIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssetID\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.AssetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionID {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.SectionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SectionID\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.SectionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Street {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.StreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Street\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.StreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USMH {
                get {
                    try {
                        return ((int)(this[this.tableSectionDetails.USMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMH\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DSMH {
                get {
                    try {
                        return ((int)(this[this.tableSectionDetails.DSMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMH\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MapSize {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.MapSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MapSize\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.MapSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size_ {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.Size_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size_\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.Size_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MapLength {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.MapLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MapLength\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.MapLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Length {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Length\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Laterals {
                get {
                    try {
                        return ((int)(this[this.tableSectionDetails.LateralsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Laterals\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.LateralsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LiveLaterals {
                get {
                    try {
                        return ((int)(this[this.tableSectionDetails.LiveLateralsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LiveLaterals\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.LiveLateralsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.USMHDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHDepth\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.DSMHDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHDepth\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SteelTapeThroughSewer {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.SteelTapeThroughSewerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SteelTapeThroughSewer\' in table \'SectionDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.SteelTapeThroughSewerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMouth12 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.USMHMouth12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMouth12\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHMouth12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMouth1 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.USMHMouth1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMouth1\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHMouth1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMouth2 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.USMHMouth2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMouth2\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHMouth2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMouth3 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.USMHMouth3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMouth3\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHMouth3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMouth4 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.USMHMouth4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMouth4\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHMouth4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMouth5 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.USMHMouth5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMouth5\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHMouth5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMouth12 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.DSMHMouth12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMouth12\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHMouth12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMouth1 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.DSMHMouth1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMouth1\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHMouth1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMouth2 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.DSMHMouth2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMouth2\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHMouth2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMouth3 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.DSMHMouth3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMouth3\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHMouth3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMouth4 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.DSMHMouth4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMouth4\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHMouth4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMouth5 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.DSMHMouth5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMouth5\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHMouth5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    try {
                        return ((bool)(this[this.tableSectionDetails.DeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deleted\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    try {
                        return ((int)(this[this.tableSectionDetails.COMPANY_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPANY_ID\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHDescription {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.USMHDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHDescription\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHDescription {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.DSMHDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHDescription\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHAddress {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.USMHAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAddress\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHAddress {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.DSMHAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAddress\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubArea {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.SubAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubArea\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.SubAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FlowOrderID {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.FlowOrderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FlowOrderID\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.FlowOrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OriginalSectionID {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.OriginalSectionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalSectionID\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.OriginalSectionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Thickness {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.ThicknessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Thickness\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.ThicknessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssetIDNull() {
                return this.IsNull(this.tableSectionDetails.AssetIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssetIDNull() {
                this[this.tableSectionDetails.AssetIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionIDNull() {
                return this.IsNull(this.tableSectionDetails.SectionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionIDNull() {
                this[this.tableSectionDetails.SectionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNull() {
                return this.IsNull(this.tableSectionDetails.StreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNull() {
                this[this.tableSectionDetails.StreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHNull() {
                return this.IsNull(this.tableSectionDetails.USMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHNull() {
                this[this.tableSectionDetails.USMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHNull() {
                return this.IsNull(this.tableSectionDetails.DSMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHNull() {
                this[this.tableSectionDetails.DSMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMapSizeNull() {
                return this.IsNull(this.tableSectionDetails.MapSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMapSizeNull() {
                this[this.tableSectionDetails.MapSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSize_Null() {
                return this.IsNull(this.tableSectionDetails.Size_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSize_Null() {
                this[this.tableSectionDetails.Size_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMapLengthNull() {
                return this.IsNull(this.tableSectionDetails.MapLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMapLengthNull() {
                this[this.tableSectionDetails.MapLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLengthNull() {
                return this.IsNull(this.tableSectionDetails.LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLengthNull() {
                this[this.tableSectionDetails.LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateralsNull() {
                return this.IsNull(this.tableSectionDetails.LateralsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateralsNull() {
                this[this.tableSectionDetails.LateralsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLiveLateralsNull() {
                return this.IsNull(this.tableSectionDetails.LiveLateralsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLiveLateralsNull() {
                this[this.tableSectionDetails.LiveLateralsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHDepthNull() {
                return this.IsNull(this.tableSectionDetails.USMHDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHDepthNull() {
                this[this.tableSectionDetails.USMHDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHDepthNull() {
                return this.IsNull(this.tableSectionDetails.DSMHDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHDepthNull() {
                this[this.tableSectionDetails.DSMHDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSteelTapeThroughSewerNull() {
                return this.IsNull(this.tableSectionDetails.SteelTapeThroughSewerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSteelTapeThroughSewerNull() {
                this[this.tableSectionDetails.SteelTapeThroughSewerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMouth12Null() {
                return this.IsNull(this.tableSectionDetails.USMHMouth12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMouth12Null() {
                this[this.tableSectionDetails.USMHMouth12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMouth1Null() {
                return this.IsNull(this.tableSectionDetails.USMHMouth1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMouth1Null() {
                this[this.tableSectionDetails.USMHMouth1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMouth2Null() {
                return this.IsNull(this.tableSectionDetails.USMHMouth2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMouth2Null() {
                this[this.tableSectionDetails.USMHMouth2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMouth3Null() {
                return this.IsNull(this.tableSectionDetails.USMHMouth3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMouth3Null() {
                this[this.tableSectionDetails.USMHMouth3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMouth4Null() {
                return this.IsNull(this.tableSectionDetails.USMHMouth4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMouth4Null() {
                this[this.tableSectionDetails.USMHMouth4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMouth5Null() {
                return this.IsNull(this.tableSectionDetails.USMHMouth5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMouth5Null() {
                this[this.tableSectionDetails.USMHMouth5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMouth12Null() {
                return this.IsNull(this.tableSectionDetails.DSMHMouth12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMouth12Null() {
                this[this.tableSectionDetails.DSMHMouth12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMouth1Null() {
                return this.IsNull(this.tableSectionDetails.DSMHMouth1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMouth1Null() {
                this[this.tableSectionDetails.DSMHMouth1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMouth2Null() {
                return this.IsNull(this.tableSectionDetails.DSMHMouth2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMouth2Null() {
                this[this.tableSectionDetails.DSMHMouth2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMouth3Null() {
                return this.IsNull(this.tableSectionDetails.DSMHMouth3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMouth3Null() {
                this[this.tableSectionDetails.DSMHMouth3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMouth4Null() {
                return this.IsNull(this.tableSectionDetails.DSMHMouth4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMouth4Null() {
                this[this.tableSectionDetails.DSMHMouth4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMouth5Null() {
                return this.IsNull(this.tableSectionDetails.DSMHMouth5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMouth5Null() {
                this[this.tableSectionDetails.DSMHMouth5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedNull() {
                return this.IsNull(this.tableSectionDetails.DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedNull() {
                this[this.tableSectionDetails.DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANY_IDNull() {
                return this.IsNull(this.tableSectionDetails.COMPANY_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANY_IDNull() {
                this[this.tableSectionDetails.COMPANY_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHDescriptionNull() {
                return this.IsNull(this.tableSectionDetails.USMHDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHDescriptionNull() {
                this[this.tableSectionDetails.USMHDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHDescriptionNull() {
                return this.IsNull(this.tableSectionDetails.DSMHDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHDescriptionNull() {
                this[this.tableSectionDetails.DSMHDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAddressNull() {
                return this.IsNull(this.tableSectionDetails.USMHAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAddressNull() {
                this[this.tableSectionDetails.USMHAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAddressNull() {
                return this.IsNull(this.tableSectionDetails.DSMHAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAddressNull() {
                this[this.tableSectionDetails.DSMHAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubAreaNull() {
                return this.IsNull(this.tableSectionDetails.SubAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubAreaNull() {
                this[this.tableSectionDetails.SubAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFlowOrderIDNull() {
                return this.IsNull(this.tableSectionDetails.FlowOrderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFlowOrderIDNull() {
                this[this.tableSectionDetails.FlowOrderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOriginalSectionIDNull() {
                return this.IsNull(this.tableSectionDetails.OriginalSectionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOriginalSectionIDNull() {
                this[this.tableSectionDetails.OriginalSectionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThicknessNull() {
                return this.IsNull(this.tableSectionDetails.ThicknessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThicknessNull() {
                this[this.tableSectionDetails.ThicknessColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WorkDetailsRow : global::System.Data.DataRow {
            
            private WorkDetailsDataTable tableWorkDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WorkDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWorkDetails = ((WorkDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableWorkDetails.WorkIDColumn]));
                }
                set {
                    this[this.tableWorkDetails.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkIDFll {
                get {
                    try {
                        return ((int)(this[this.tableWorkDetails.WorkIDFllColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkIDFll\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.WorkIDFllColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientID {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.ClientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientID\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.ClientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime P1Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWorkDetails.P1DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P1Date\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.P1DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime M1Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWorkDetails.M1DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M1Date\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.M1DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CXIsRemoved {
                get {
                    try {
                        return ((int)(this[this.tableWorkDetails.CXIsRemovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CXIsRemoved\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.CXIsRemovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementTakenBy {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.MeasurementTakenByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementTakenBy\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.MeasurementTakenByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrafficControl {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.TrafficControlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrafficControl\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.TrafficControlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SiteDetails {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.SiteDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteDetails\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.SiteDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PipeSizeChange {
                get {
                    try {
                        return ((bool)(this[this.tableWorkDetails.PipeSizeChangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PipeSizeChange\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.PipeSizeChangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool StandardBypass {
                get {
                    try {
                        return ((bool)(this[this.tableWorkDetails.StandardBypassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandardBypass\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.StandardBypassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StandardBypassComments {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.StandardBypassCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandardBypassComments\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.StandardBypassCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrafficControlDetails {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.TrafficControlDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrafficControlDetails\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.TrafficControlDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementType {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.MeasurementTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementType\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.MeasurementTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementFromMH {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.MeasurementFromMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementFromMH\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.MeasurementFromMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoDoneFromMH {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.VideoDoneFromMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoDoneFromMH\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.VideoDoneFromMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoDoneToMH {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.VideoDoneToMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoDoneToMH\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.VideoDoneToMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoDistance {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.VideoDistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoDistance\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.VideoDistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    try {
                        return ((bool)(this[this.tableWorkDetails.DeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deleted\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    try {
                        return ((int)(this[this.tableWorkDetails.COMPANY_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPANY_ID\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreFlushDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWorkDetails.PreFlushDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreFlushDate\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.PreFlushDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreVideoDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWorkDetails.PreVideoDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreVideoDate\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.PreVideoDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Material {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.MaterialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Material\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.MaterialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RoboticPrepCompleted {
                get {
                    try {
                        return ((bool)(this[this.tableWorkDetails.RoboticPrepCompletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoboticPrepCompleted\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.RoboticPrepCompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RoboticPrepCompletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWorkDetails.RoboticPrepCompletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoboticPrepCompletedDate\' in table \'WorkDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.RoboticPrepCompletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccessType {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.AccessTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccessType\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.AccessTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool P1Completed {
                get {
                    try {
                        return ((bool)(this[this.tableWorkDetails.P1CompletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P1Completed\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.P1CompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkIDFllNull() {
                return this.IsNull(this.tableWorkDetails.WorkIDFllColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkIDFllNull() {
                this[this.tableWorkDetails.WorkIDFllColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientIDNull() {
                return this.IsNull(this.tableWorkDetails.ClientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientIDNull() {
                this[this.tableWorkDetails.ClientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP1DateNull() {
                return this.IsNull(this.tableWorkDetails.P1DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP1DateNull() {
                this[this.tableWorkDetails.P1DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM1DateNull() {
                return this.IsNull(this.tableWorkDetails.M1DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM1DateNull() {
                this[this.tableWorkDetails.M1DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCXIsRemovedNull() {
                return this.IsNull(this.tableWorkDetails.CXIsRemovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCXIsRemovedNull() {
                this[this.tableWorkDetails.CXIsRemovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementTakenByNull() {
                return this.IsNull(this.tableWorkDetails.MeasurementTakenByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementTakenByNull() {
                this[this.tableWorkDetails.MeasurementTakenByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrafficControlNull() {
                return this.IsNull(this.tableWorkDetails.TrafficControlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrafficControlNull() {
                this[this.tableWorkDetails.TrafficControlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteDetailsNull() {
                return this.IsNull(this.tableWorkDetails.SiteDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteDetailsNull() {
                this[this.tableWorkDetails.SiteDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPipeSizeChangeNull() {
                return this.IsNull(this.tableWorkDetails.PipeSizeChangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPipeSizeChangeNull() {
                this[this.tableWorkDetails.PipeSizeChangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandardBypassNull() {
                return this.IsNull(this.tableWorkDetails.StandardBypassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandardBypassNull() {
                this[this.tableWorkDetails.StandardBypassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandardBypassCommentsNull() {
                return this.IsNull(this.tableWorkDetails.StandardBypassCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandardBypassCommentsNull() {
                this[this.tableWorkDetails.StandardBypassCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrafficControlDetailsNull() {
                return this.IsNull(this.tableWorkDetails.TrafficControlDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrafficControlDetailsNull() {
                this[this.tableWorkDetails.TrafficControlDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementTypeNull() {
                return this.IsNull(this.tableWorkDetails.MeasurementTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementTypeNull() {
                this[this.tableWorkDetails.MeasurementTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementFromMHNull() {
                return this.IsNull(this.tableWorkDetails.MeasurementFromMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementFromMHNull() {
                this[this.tableWorkDetails.MeasurementFromMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoDoneFromMHNull() {
                return this.IsNull(this.tableWorkDetails.VideoDoneFromMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoDoneFromMHNull() {
                this[this.tableWorkDetails.VideoDoneFromMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoDoneToMHNull() {
                return this.IsNull(this.tableWorkDetails.VideoDoneToMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoDoneToMHNull() {
                this[this.tableWorkDetails.VideoDoneToMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoDistanceNull() {
                return this.IsNull(this.tableWorkDetails.VideoDistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoDistanceNull() {
                this[this.tableWorkDetails.VideoDistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableWorkDetails.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableWorkDetails.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedNull() {
                return this.IsNull(this.tableWorkDetails.DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedNull() {
                this[this.tableWorkDetails.DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANY_IDNull() {
                return this.IsNull(this.tableWorkDetails.COMPANY_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANY_IDNull() {
                this[this.tableWorkDetails.COMPANY_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreFlushDateNull() {
                return this.IsNull(this.tableWorkDetails.PreFlushDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreFlushDateNull() {
                this[this.tableWorkDetails.PreFlushDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreVideoDateNull() {
                return this.IsNull(this.tableWorkDetails.PreVideoDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreVideoDateNull() {
                this[this.tableWorkDetails.PreVideoDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaterialNull() {
                return this.IsNull(this.tableWorkDetails.MaterialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaterialNull() {
                this[this.tableWorkDetails.MaterialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoboticPrepCompletedNull() {
                return this.IsNull(this.tableWorkDetails.RoboticPrepCompletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoboticPrepCompletedNull() {
                this[this.tableWorkDetails.RoboticPrepCompletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoboticPrepCompletedDateNull() {
                return this.IsNull(this.tableWorkDetails.RoboticPrepCompletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoboticPrepCompletedDateNull() {
                this[this.tableWorkDetails.RoboticPrepCompletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccessTypeNull() {
                return this.IsNull(this.tableWorkDetails.AccessTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccessTypeNull() {
                this[this.tableWorkDetails.AccessTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP1CompletedNull() {
                return this.IsNull(this.tableWorkDetails.P1CompletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP1CompletedNull() {
                this[this.tableWorkDetails.P1CompletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LateralDetailsRow : global::System.Data.DataRow {
            
            private LateralDetailsDataTable tableLateralDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LateralDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLateralDetails = ((LateralDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Lateral {
                get {
                    return ((int)(this[this.tableLateralDetails.LateralColumn]));
                }
                set {
                    this[this.tableLateralDetails.LateralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoDistance {
                get {
                    try {
                        return ((string)(this[this.tableLateralDetails.VideoDistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoDistance\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.VideoDistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClockPosition {
                get {
                    try {
                        return ((string)(this[this.tableLateralDetails.ClockPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClockPosition\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.ClockPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistanceToCentre {
                get {
                    try {
                        return ((string)(this[this.tableLateralDetails.DistanceToCentreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceToCentre\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.DistanceToCentreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TimeOpened {
                get {
                    try {
                        return ((string)(this[this.tableLateralDetails.TimeOpenedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeOpened\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.TimeOpenedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReverseSetup {
                get {
                    try {
                        return ((string)(this[this.tableLateralDetails.ReverseSetupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReverseSetup\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.ReverseSetupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Reinstate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLateralDetails.ReinstateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reinstate\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.ReinstateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLateralDetails.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LateralID {
                get {
                    return ((string)(this[this.tableLateralDetails.LateralIDColumn]));
                }
                set {
                    this[this.tableLateralDetails.LateralIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size_ {
                get {
                    try {
                        return ((string)(this[this.tableLateralDetails.Size_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size_\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.Size_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistanceFromUSMH {
                get {
                    try {
                        return ((string)(this[this.tableLateralDetails.DistanceFromUSMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceFromUSMH\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.DistanceFromUSMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistanceFromDSMH {
                get {
                    try {
                        return ((string)(this[this.tableLateralDetails.DistanceFromDSMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceFromDSMH\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.DistanceFromDSMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaterialType {
                get {
                    try {
                        return ((string)(this[this.tableLateralDetails.MaterialTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialType\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.MaterialTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLateralDetails.DeletedColumn]));
                }
                set {
                    this[this.tableLateralDetails.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLateralDetails.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLateralDetails.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InProject {
                get {
                    try {
                        return ((bool)(this[this.tableLateralDetails.InProjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InProject\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.InProjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InProjectDatabase {
                get {
                    try {
                        return ((bool)(this[this.tableLateralDetails.InProjectDatabaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InProjectDatabase\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.InProjectDatabaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InDatabase {
                get {
                    try {
                        return ((bool)(this[this.tableLateralDetails.InDatabaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InDatabase\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.InDatabaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Live {
                get {
                    try {
                        return ((string)(this[this.tableLateralDetails.LiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Live\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.LiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ToProcess {
                get {
                    try {
                        return ((bool)(this[this.tableLateralDetails.ToProcessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToProcess\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.ToProcessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientLateralID {
                get {
                    try {
                        return ((string)(this[this.tableLateralDetails.ClientLateralIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientLateralID\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.ClientLateralIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InFll {
                get {
                    try {
                        return ((bool)(this[this.tableLateralDetails.InFllColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InFll\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.InFllColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InFllDatabase {
                get {
                    try {
                        return ((bool)(this[this.tableLateralDetails.InFllDatabaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InFllDatabase\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.InFllDatabaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InJl {
                get {
                    try {
                        return ((bool)(this[this.tableLateralDetails.InJlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InJl\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.InJlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InJlDatabase {
                get {
                    try {
                        return ((bool)(this[this.tableLateralDetails.InJlDatabaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InJlDatabase\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.InJlDatabaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConnectionType {
                get {
                    try {
                        return ((string)(this[this.tableLateralDetails.ConnectionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConnectionType\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.ConnectionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mn {
                get {
                    try {
                        return ((string)(this[this.tableLateralDetails.MnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mn\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.MnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientInspectionNo {
                get {
                    try {
                        return ((string)(this[this.tableLateralDetails.ClientInspectionNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientInspectionNo\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.ClientInspectionNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime V1Inspection {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLateralDetails.V1InspectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V1Inspection\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.V1InspectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RequiresRoboticPrep {
                get {
                    try {
                        return ((bool)(this[this.tableLateralDetails.RequiresRoboticPrepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequiresRoboticPrep\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.RequiresRoboticPrepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RequiresRoboticPrepDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLateralDetails.RequiresRoboticPrepDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequiresRoboticPrepDate\' in table \'LateralDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.RequiresRoboticPrepDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HoldClientIssue {
                get {
                    try {
                        return ((bool)(this[this.tableLateralDetails.HoldClientIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoldClientIssue\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.HoldClientIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HoldLFSIssue {
                get {
                    try {
                        return ((bool)(this[this.tableLateralDetails.HoldLFSIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoldLFSIssue\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.HoldLFSIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LineLateral {
                get {
                    try {
                        return ((bool)(this[this.tableLateralDetails.LineLateralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineLateral\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.LineLateralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Flange {
                get {
                    try {
                        return ((string)(this[this.tableLateralDetails.FlangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Flange\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.FlangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DyeTestReq {
                get {
                    try {
                        return ((bool)(this[this.tableLateralDetails.DyeTestReqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DyeTestReq\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.DyeTestReqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DyeTestComplete {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLateralDetails.DyeTestCompleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DyeTestComplete\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.DyeTestCompleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContractYear {
                get {
                    try {
                        return ((string)(this[this.tableLateralDetails.ContractYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractYear\' in table \'LateralDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLateralDetails.ContractYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoDistanceNull() {
                return this.IsNull(this.tableLateralDetails.VideoDistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoDistanceNull() {
                this[this.tableLateralDetails.VideoDistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClockPositionNull() {
                return this.IsNull(this.tableLateralDetails.ClockPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClockPositionNull() {
                this[this.tableLateralDetails.ClockPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceToCentreNull() {
                return this.IsNull(this.tableLateralDetails.DistanceToCentreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceToCentreNull() {
                this[this.tableLateralDetails.DistanceToCentreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeOpenedNull() {
                return this.IsNull(this.tableLateralDetails.TimeOpenedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeOpenedNull() {
                this[this.tableLateralDetails.TimeOpenedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReverseSetupNull() {
                return this.IsNull(this.tableLateralDetails.ReverseSetupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReverseSetupNull() {
                this[this.tableLateralDetails.ReverseSetupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReinstateNull() {
                return this.IsNull(this.tableLateralDetails.ReinstateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReinstateNull() {
                this[this.tableLateralDetails.ReinstateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLateralDetails.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLateralDetails.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSize_Null() {
                return this.IsNull(this.tableLateralDetails.Size_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSize_Null() {
                this[this.tableLateralDetails.Size_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceFromUSMHNull() {
                return this.IsNull(this.tableLateralDetails.DistanceFromUSMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceFromUSMHNull() {
                this[this.tableLateralDetails.DistanceFromUSMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceFromDSMHNull() {
                return this.IsNull(this.tableLateralDetails.DistanceFromDSMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceFromDSMHNull() {
                this[this.tableLateralDetails.DistanceFromDSMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaterialTypeNull() {
                return this.IsNull(this.tableLateralDetails.MaterialTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaterialTypeNull() {
                this[this.tableLateralDetails.MaterialTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInProjectNull() {
                return this.IsNull(this.tableLateralDetails.InProjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInProjectNull() {
                this[this.tableLateralDetails.InProjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInProjectDatabaseNull() {
                return this.IsNull(this.tableLateralDetails.InProjectDatabaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInProjectDatabaseNull() {
                this[this.tableLateralDetails.InProjectDatabaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInDatabaseNull() {
                return this.IsNull(this.tableLateralDetails.InDatabaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInDatabaseNull() {
                this[this.tableLateralDetails.InDatabaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLiveNull() {
                return this.IsNull(this.tableLateralDetails.LiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLiveNull() {
                this[this.tableLateralDetails.LiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToProcessNull() {
                return this.IsNull(this.tableLateralDetails.ToProcessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToProcessNull() {
                this[this.tableLateralDetails.ToProcessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientLateralIDNull() {
                return this.IsNull(this.tableLateralDetails.ClientLateralIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientLateralIDNull() {
                this[this.tableLateralDetails.ClientLateralIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInFllNull() {
                return this.IsNull(this.tableLateralDetails.InFllColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInFllNull() {
                this[this.tableLateralDetails.InFllColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInFllDatabaseNull() {
                return this.IsNull(this.tableLateralDetails.InFllDatabaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInFllDatabaseNull() {
                this[this.tableLateralDetails.InFllDatabaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInJlNull() {
                return this.IsNull(this.tableLateralDetails.InJlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInJlNull() {
                this[this.tableLateralDetails.InJlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInJlDatabaseNull() {
                return this.IsNull(this.tableLateralDetails.InJlDatabaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInJlDatabaseNull() {
                this[this.tableLateralDetails.InJlDatabaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConnectionTypeNull() {
                return this.IsNull(this.tableLateralDetails.ConnectionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConnectionTypeNull() {
                this[this.tableLateralDetails.ConnectionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMnNull() {
                return this.IsNull(this.tableLateralDetails.MnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMnNull() {
                this[this.tableLateralDetails.MnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientInspectionNoNull() {
                return this.IsNull(this.tableLateralDetails.ClientInspectionNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientInspectionNoNull() {
                this[this.tableLateralDetails.ClientInspectionNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV1InspectionNull() {
                return this.IsNull(this.tableLateralDetails.V1InspectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV1InspectionNull() {
                this[this.tableLateralDetails.V1InspectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequiresRoboticPrepNull() {
                return this.IsNull(this.tableLateralDetails.RequiresRoboticPrepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequiresRoboticPrepNull() {
                this[this.tableLateralDetails.RequiresRoboticPrepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequiresRoboticPrepDateNull() {
                return this.IsNull(this.tableLateralDetails.RequiresRoboticPrepDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequiresRoboticPrepDateNull() {
                this[this.tableLateralDetails.RequiresRoboticPrepDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHoldClientIssueNull() {
                return this.IsNull(this.tableLateralDetails.HoldClientIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHoldClientIssueNull() {
                this[this.tableLateralDetails.HoldClientIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHoldLFSIssueNull() {
                return this.IsNull(this.tableLateralDetails.HoldLFSIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHoldLFSIssueNull() {
                this[this.tableLateralDetails.HoldLFSIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineLateralNull() {
                return this.IsNull(this.tableLateralDetails.LineLateralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineLateralNull() {
                this[this.tableLateralDetails.LineLateralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFlangeNull() {
                return this.IsNull(this.tableLateralDetails.FlangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFlangeNull() {
                this[this.tableLateralDetails.FlangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDyeTestReqNull() {
                return this.IsNull(this.tableLateralDetails.DyeTestReqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDyeTestReqNull() {
                this[this.tableLateralDetails.DyeTestReqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDyeTestCompleteNull() {
                return this.IsNull(this.tableLateralDetails.DyeTestCompleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDyeTestCompleteNull() {
                this[this.tableLateralDetails.DyeTestCompleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContractYearNull() {
                return this.IsNull(this.tableLateralDetails.ContractYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContractYearNull() {
                this[this.tableLateralDetails.ContractYearColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CommentDetailsRow : global::System.Data.DataRow {
            
            private CommentDetailsDataTable tableCommentDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CommentDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCommentDetails = ((CommentDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableCommentDetails.WorkIDColumn]));
                }
                set {
                    this[this.tableCommentDetails.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableCommentDetails.RefIDColumn]));
                }
                set {
                    this[this.tableCommentDetails.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableCommentDetails.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'CommentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommentDetails.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Subject {
                get {
                    return ((string)(this[this.tableCommentDetails.SubjectColumn]));
                }
                set {
                    this[this.tableCommentDetails.SubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    return ((int)(this[this.tableCommentDetails.UserIDColumn]));
                }
                set {
                    this[this.tableCommentDetails.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTime_ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCommentDetails.DateTime_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTime_\' in table \'CommentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommentDetails.DateTime_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableCommentDetails.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'CommentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommentDetails.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LIBRARY_FILES_ID {
                get {
                    try {
                        return ((int)(this[this.tableCommentDetails.LIBRARY_FILES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LIBRARY_FILES_ID\' in table \'CommentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommentDetails.LIBRARY_FILES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableCommentDetails.DeletedColumn]));
                }
                set {
                    this[this.tableCommentDetails.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableCommentDetails.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableCommentDetails.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InDatabase {
                get {
                    try {
                        return ((bool)(this[this.tableCommentDetails.InDatabaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InDatabase\' in table \'CommentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommentDetails.InDatabaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserFullName {
                get {
                    try {
                        return ((string)(this[this.tableCommentDetails.UserFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserFullName\' in table \'CommentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommentDetails.UserFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ToHistory {
                get {
                    try {
                        return ((bool)(this[this.tableCommentDetails.ToHistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToHistory\' in table \'CommentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommentDetails.ToHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkType {
                get {
                    try {
                        return ((string)(this[this.tableCommentDetails.WorkTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkType\' in table \'CommentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommentDetails.WorkTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableCommentDetails.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableCommentDetails.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTime_Null() {
                return this.IsNull(this.tableCommentDetails.DateTime_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTime_Null() {
                this[this.tableCommentDetails.DateTime_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableCommentDetails.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableCommentDetails.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIBRARY_FILES_IDNull() {
                return this.IsNull(this.tableCommentDetails.LIBRARY_FILES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIBRARY_FILES_IDNull() {
                this[this.tableCommentDetails.LIBRARY_FILES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInDatabaseNull() {
                return this.IsNull(this.tableCommentDetails.InDatabaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInDatabaseNull() {
                this[this.tableCommentDetails.InDatabaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserFullNameNull() {
                return this.IsNull(this.tableCommentDetails.UserFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserFullNameNull() {
                this[this.tableCommentDetails.UserFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToHistoryNull() {
                return this.IsNull(this.tableCommentDetails.ToHistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToHistoryNull() {
                this[this.tableCommentDetails.ToHistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkTypeNull() {
                return this.IsNull(this.tableCommentDetails.WorkTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkTypeNull() {
                this[this.tableCommentDetails.WorkTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SectionDetailsRowChangeEvent : global::System.EventArgs {
            
            private SectionDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SectionDetailsRowChangeEvent(SectionDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SectionDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WorkDetailsRowChangeEvent : global::System.EventArgs {
            
            private WorkDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkDetailsRowChangeEvent(WorkDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LateralDetailsRowChangeEvent : global::System.EventArgs {
            
            private LateralDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LateralDetailsRowChangeEvent(LateralDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LateralDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CommentDetailsRowChangeEvent : global::System.EventArgs {
            
            private CommentDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommentDetailsRowChangeEvent(CommentDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommentDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591