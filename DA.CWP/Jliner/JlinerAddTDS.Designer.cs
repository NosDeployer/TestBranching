//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.CWP.Jliner {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("JlinerAddTDS")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class JlinerAddTDS : System.Data.DataSet {
        
        private MasterAreaDataTable tableMasterArea;
        
        private JunctionLiner2DataTable tableJunctionLiner2;
        
        private JunctionLiner2CommentDataTable tableJunctionLiner2Comment;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public JlinerAddTDS() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected JlinerAddTDS(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["MasterArea"] != null)) {
                    base.Tables.Add(new MasterAreaDataTable(ds.Tables["MasterArea"]));
                }
                if ((ds.Tables["JunctionLiner2"] != null)) {
                    base.Tables.Add(new JunctionLiner2DataTable(ds.Tables["JunctionLiner2"]));
                }
                if ((ds.Tables["JunctionLiner2Comment"] != null)) {
                    base.Tables.Add(new JunctionLiner2CommentDataTable(ds.Tables["JunctionLiner2Comment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MasterAreaDataTable MasterArea {
            get {
                return this.tableMasterArea;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public JunctionLiner2DataTable JunctionLiner2 {
            get {
                return this.tableJunctionLiner2;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public JunctionLiner2CommentDataTable JunctionLiner2Comment {
            get {
                return this.tableJunctionLiner2Comment;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            JlinerAddTDS cln = ((JlinerAddTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MasterArea"] != null)) {
                    base.Tables.Add(new MasterAreaDataTable(ds.Tables["MasterArea"]));
                }
                if ((ds.Tables["JunctionLiner2"] != null)) {
                    base.Tables.Add(new JunctionLiner2DataTable(ds.Tables["JunctionLiner2"]));
                }
                if ((ds.Tables["JunctionLiner2Comment"] != null)) {
                    base.Tables.Add(new JunctionLiner2CommentDataTable(ds.Tables["JunctionLiner2Comment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMasterArea = ((MasterAreaDataTable)(base.Tables["MasterArea"]));
            if ((initTable == true)) {
                if ((this.tableMasterArea != null)) {
                    this.tableMasterArea.InitVars();
                }
            }
            this.tableJunctionLiner2 = ((JunctionLiner2DataTable)(base.Tables["JunctionLiner2"]));
            if ((initTable == true)) {
                if ((this.tableJunctionLiner2 != null)) {
                    this.tableJunctionLiner2.InitVars();
                }
            }
            this.tableJunctionLiner2Comment = ((JunctionLiner2CommentDataTable)(base.Tables["JunctionLiner2Comment"]));
            if ((initTable == true)) {
                if ((this.tableJunctionLiner2Comment != null)) {
                    this.tableJunctionLiner2Comment.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "JlinerAddTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/JlinerAddTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMasterArea = new MasterAreaDataTable();
            base.Tables.Add(this.tableMasterArea);
            this.tableJunctionLiner2 = new JunctionLiner2DataTable();
            base.Tables.Add(this.tableJunctionLiner2);
            this.tableJunctionLiner2Comment = new JunctionLiner2CommentDataTable();
            base.Tables.Add(this.tableJunctionLiner2Comment);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMasterArea() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeJunctionLiner2() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeJunctionLiner2Comment() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            JlinerAddTDS ds = new JlinerAddTDS();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void MasterAreaRowChangeEventHandler(object sender, MasterAreaRowChangeEvent e);
        
        public delegate void JunctionLiner2RowChangeEventHandler(object sender, JunctionLiner2RowChangeEvent e);
        
        public delegate void JunctionLiner2CommentRowChangeEventHandler(object sender, JunctionLiner2CommentRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MasterAreaDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID;
            
            private System.Data.DataColumn columnCOMPANY_ID;
            
            private System.Data.DataColumn columnRecordID;
            
            private System.Data.DataColumn columnClientID;
            
            private System.Data.DataColumn columnCOMPANIES_ID;
            
            private System.Data.DataColumn columnSubArea;
            
            private System.Data.DataColumn columnStreet;
            
            private System.Data.DataColumn columnUSMH;
            
            private System.Data.DataColumn columnDSMH;
            
            private System.Data.DataColumn columnSize_;
            
            private System.Data.DataColumn columnScaledLength;
            
            private System.Data.DataColumn columnP1Date;
            
            private System.Data.DataColumn columnActualLength;
            
            private System.Data.DataColumn columnLiveLats;
            
            private System.Data.DataColumn columnCXIsRemoved;
            
            private System.Data.DataColumn columnM1Date;
            
            private System.Data.DataColumn columnM2Date;
            
            private System.Data.DataColumn columnInstallDate;
            
            private System.Data.DataColumn columnFinalVideo;
            
            private System.Data.DataColumn columnComments;
            
            private System.Data.DataColumn columnIssueIdentified;
            
            private System.Data.DataColumn columnIssueResolved;
            
            private System.Data.DataColumn columnFullLengthLining;
            
            private System.Data.DataColumn columnSubcontractorLining;
            
            private System.Data.DataColumn columnOutOfScopeInArea;
            
            private System.Data.DataColumn columnIssueGivenToBayCity;
            
            private System.Data.DataColumn columnConfirmedSize;
            
            private System.Data.DataColumn columnInstallRate;
            
            private System.Data.DataColumn columnDeadlineDate;
            
            private System.Data.DataColumn columnProposedLiningDate;
            
            private System.Data.DataColumn columnSalesIssue;
            
            private System.Data.DataColumn columnLFSIssue;
            
            private System.Data.DataColumn columnClientIssue;
            
            private System.Data.DataColumn columnInvestigationIssue;
            
            private System.Data.DataColumn columnPointLining;
            
            private System.Data.DataColumn columnGrouting;
            
            private System.Data.DataColumn columnLateralLining;
            
            private System.Data.DataColumn columnVacExDate;
            
            private System.Data.DataColumn columnPusherDate;
            
            private System.Data.DataColumn columnLinerOrdered;
            
            private System.Data.DataColumn columnRestoration;
            
            private System.Data.DataColumn columnGroutDate;
            
            private System.Data.DataColumn columnJLiner;
            
            private System.Data.DataColumn columnRehabAssessment;
            
            private System.Data.DataColumn columnEstimatedJoints;
            
            private System.Data.DataColumn columnJointsTestSealed;
            
            private System.Data.DataColumn columnPreFlushDate;
            
            private System.Data.DataColumn columnPreVideoDate;
            
            private System.Data.DataColumn columnUSMHMN;
            
            private System.Data.DataColumn columnDSMHMN;
            
            private System.Data.DataColumn columnUSMHDepth;
            
            private System.Data.DataColumn columnDSMHDepth;
            
            private System.Data.DataColumn columnMeasurementsTakenBy;
            
            private System.Data.DataColumn columnSteelTapeThruPipe;
            
            private System.Data.DataColumn columnUSMHAtMouth1200;
            
            private System.Data.DataColumn columnUSMHAtMouth100;
            
            private System.Data.DataColumn columnUSMHAtMouth200;
            
            private System.Data.DataColumn columnUSMHAtMouth300;
            
            private System.Data.DataColumn columnUSMHAtMouth400;
            
            private System.Data.DataColumn columnUSMHAtMouth500;
            
            private System.Data.DataColumn columnDSMHAtMouth1200;
            
            private System.Data.DataColumn columnDSMHAtMouth100;
            
            private System.Data.DataColumn columnDSMHAtMouth200;
            
            private System.Data.DataColumn columnDSMHAtMouth300;
            
            private System.Data.DataColumn columnDSMHAtMouth400;
            
            private System.Data.DataColumn columnDSMHAtMouth500;
            
            private System.Data.DataColumn columnHydrantAddress;
            
            private System.Data.DataColumn columnDistanceToInversionMH;
            
            private System.Data.DataColumn columnRampsRequired;
            
            private System.Data.DataColumn columnDegreeOfTrafficControl;
            
            private System.Data.DataColumn columnStandarBypass;
            
            private System.Data.DataColumn columnHydroWireDetails;
            
            private System.Data.DataColumn columnPipeMaterialType;
            
            private System.Data.DataColumn columnCappedLaterals;
            
            private System.Data.DataColumn columnRoboticPrepRequired;
            
            private System.Data.DataColumn columnPipeSizeChange;
            
            private System.Data.DataColumn columnM1Comments;
            
            private System.Data.DataColumn columnVideoDoneFrom;
            
            private System.Data.DataColumn columnToManhole;
            
            private System.Data.DataColumn columnCutterDescriptionDuringMeasuring;
            
            private System.Data.DataColumn columnFullLengthPointLiner;
            
            private System.Data.DataColumn columnBypassRequired;
            
            private System.Data.DataColumn columnRoboticDistances;
            
            private System.Data.DataColumn columnTrafficControlDetails;
            
            private System.Data.DataColumn columnLineWithID;
            
            private System.Data.DataColumn columnSchoolZone;
            
            private System.Data.DataColumn columnRestaurantArea;
            
            private System.Data.DataColumn columnCarwashLaundromat;
            
            private System.Data.DataColumn columnHydroPulley;
            
            private System.Data.DataColumn columnFridgeCart;
            
            private System.Data.DataColumn columnTwoInchPump;
            
            private System.Data.DataColumn columnSixInchBypass;
            
            private System.Data.DataColumn columnScaffolding;
            
            private System.Data.DataColumn columnWinchExtension;
            
            private System.Data.DataColumn columnExtraGenerator;
            
            private System.Data.DataColumn columnGreyCableExtension;
            
            private System.Data.DataColumn columnEasementMats;
            
            private System.Data.DataColumn columnMeasurementType;
            
            private System.Data.DataColumn columnDropPipe;
            
            private System.Data.DataColumn columnDropPipeInvertDepth;
            
            private System.Data.DataColumn columnDeleted;
            
            private System.Data.DataColumn columnMeasuredFromManhole;
            
            private System.Data.DataColumn columnMainLined;
            
            private System.Data.DataColumn columnBenchingIssue;
            
            private System.Data.DataColumn columnArchived;
            
            private System.Data.DataColumn columnScaledLength1;
            
            private System.Data.DataColumn columnHistory;
            
            private System.Data.DataColumn columnNumLats;
            
            private System.Data.DataColumn columnNotLinedYet;
            
            private System.Data.DataColumn columnAllMeasured;
            
            private System.Data.DataColumn columnCity;
            
            private System.Data.DataColumn columnProvState;
            
            private System.Data.DataColumn columnIssueWithLaterals;
            
            private System.Data.DataColumn columnNotMeasuredYet;
            
            private System.Data.DataColumn columnNotDeliveredYet;
            
            private System.Data.DataColumn columnSelected;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MasterAreaDataTable() {
                this.TableName = "MasterArea";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MasterAreaDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MasterAreaDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RecordIDColumn {
                get {
                    return this.columnRecordID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMPANIES_IDColumn {
                get {
                    return this.columnCOMPANIES_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SubAreaColumn {
                get {
                    return this.columnSubArea;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USMHColumn {
                get {
                    return this.columnUSMH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DSMHColumn {
                get {
                    return this.columnDSMH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Size_Column {
                get {
                    return this.columnSize_;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ScaledLengthColumn {
                get {
                    return this.columnScaledLength;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn P1DateColumn {
                get {
                    return this.columnP1Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ActualLengthColumn {
                get {
                    return this.columnActualLength;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LiveLatsColumn {
                get {
                    return this.columnLiveLats;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CXIsRemovedColumn {
                get {
                    return this.columnCXIsRemoved;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn M1DateColumn {
                get {
                    return this.columnM1Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn M2DateColumn {
                get {
                    return this.columnM2Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn InstallDateColumn {
                get {
                    return this.columnInstallDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FinalVideoColumn {
                get {
                    return this.columnFinalVideo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IssueIdentifiedColumn {
                get {
                    return this.columnIssueIdentified;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IssueResolvedColumn {
                get {
                    return this.columnIssueResolved;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FullLengthLiningColumn {
                get {
                    return this.columnFullLengthLining;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SubcontractorLiningColumn {
                get {
                    return this.columnSubcontractorLining;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OutOfScopeInAreaColumn {
                get {
                    return this.columnOutOfScopeInArea;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IssueGivenToBayCityColumn {
                get {
                    return this.columnIssueGivenToBayCity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ConfirmedSizeColumn {
                get {
                    return this.columnConfirmedSize;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn InstallRateColumn {
                get {
                    return this.columnInstallRate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeadlineDateColumn {
                get {
                    return this.columnDeadlineDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProposedLiningDateColumn {
                get {
                    return this.columnProposedLiningDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SalesIssueColumn {
                get {
                    return this.columnSalesIssue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LFSIssueColumn {
                get {
                    return this.columnLFSIssue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ClientIssueColumn {
                get {
                    return this.columnClientIssue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn InvestigationIssueColumn {
                get {
                    return this.columnInvestigationIssue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PointLiningColumn {
                get {
                    return this.columnPointLining;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GroutingColumn {
                get {
                    return this.columnGrouting;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LateralLiningColumn {
                get {
                    return this.columnLateralLining;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VacExDateColumn {
                get {
                    return this.columnVacExDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PusherDateColumn {
                get {
                    return this.columnPusherDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LinerOrderedColumn {
                get {
                    return this.columnLinerOrdered;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RestorationColumn {
                get {
                    return this.columnRestoration;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GroutDateColumn {
                get {
                    return this.columnGroutDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JLinerColumn {
                get {
                    return this.columnJLiner;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RehabAssessmentColumn {
                get {
                    return this.columnRehabAssessment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EstimatedJointsColumn {
                get {
                    return this.columnEstimatedJoints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JointsTestSealedColumn {
                get {
                    return this.columnJointsTestSealed;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PreFlushDateColumn {
                get {
                    return this.columnPreFlushDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PreVideoDateColumn {
                get {
                    return this.columnPreVideoDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USMHMNColumn {
                get {
                    return this.columnUSMHMN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DSMHMNColumn {
                get {
                    return this.columnDSMHMN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USMHDepthColumn {
                get {
                    return this.columnUSMHDepth;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DSMHDepthColumn {
                get {
                    return this.columnDSMHDepth;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MeasurementsTakenByColumn {
                get {
                    return this.columnMeasurementsTakenBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SteelTapeThruPipeColumn {
                get {
                    return this.columnSteelTapeThruPipe;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USMHAtMouth1200Column {
                get {
                    return this.columnUSMHAtMouth1200;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USMHAtMouth100Column {
                get {
                    return this.columnUSMHAtMouth100;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USMHAtMouth200Column {
                get {
                    return this.columnUSMHAtMouth200;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USMHAtMouth300Column {
                get {
                    return this.columnUSMHAtMouth300;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USMHAtMouth400Column {
                get {
                    return this.columnUSMHAtMouth400;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USMHAtMouth500Column {
                get {
                    return this.columnUSMHAtMouth500;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DSMHAtMouth1200Column {
                get {
                    return this.columnDSMHAtMouth1200;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DSMHAtMouth100Column {
                get {
                    return this.columnDSMHAtMouth100;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DSMHAtMouth200Column {
                get {
                    return this.columnDSMHAtMouth200;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DSMHAtMouth300Column {
                get {
                    return this.columnDSMHAtMouth300;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DSMHAtMouth400Column {
                get {
                    return this.columnDSMHAtMouth400;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DSMHAtMouth500Column {
                get {
                    return this.columnDSMHAtMouth500;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HydrantAddressColumn {
                get {
                    return this.columnHydrantAddress;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DistanceToInversionMHColumn {
                get {
                    return this.columnDistanceToInversionMH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RampsRequiredColumn {
                get {
                    return this.columnRampsRequired;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DegreeOfTrafficControlColumn {
                get {
                    return this.columnDegreeOfTrafficControl;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StandarBypassColumn {
                get {
                    return this.columnStandarBypass;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HydroWireDetailsColumn {
                get {
                    return this.columnHydroWireDetails;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PipeMaterialTypeColumn {
                get {
                    return this.columnPipeMaterialType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CappedLateralsColumn {
                get {
                    return this.columnCappedLaterals;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RoboticPrepRequiredColumn {
                get {
                    return this.columnRoboticPrepRequired;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PipeSizeChangeColumn {
                get {
                    return this.columnPipeSizeChange;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn M1CommentsColumn {
                get {
                    return this.columnM1Comments;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VideoDoneFromColumn {
                get {
                    return this.columnVideoDoneFrom;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ToManholeColumn {
                get {
                    return this.columnToManhole;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CutterDescriptionDuringMeasuringColumn {
                get {
                    return this.columnCutterDescriptionDuringMeasuring;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FullLengthPointLinerColumn {
                get {
                    return this.columnFullLengthPointLiner;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BypassRequiredColumn {
                get {
                    return this.columnBypassRequired;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RoboticDistancesColumn {
                get {
                    return this.columnRoboticDistances;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TrafficControlDetailsColumn {
                get {
                    return this.columnTrafficControlDetails;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LineWithIDColumn {
                get {
                    return this.columnLineWithID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SchoolZoneColumn {
                get {
                    return this.columnSchoolZone;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RestaurantAreaColumn {
                get {
                    return this.columnRestaurantArea;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CarwashLaundromatColumn {
                get {
                    return this.columnCarwashLaundromat;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HydroPulleyColumn {
                get {
                    return this.columnHydroPulley;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FridgeCartColumn {
                get {
                    return this.columnFridgeCart;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TwoInchPumpColumn {
                get {
                    return this.columnTwoInchPump;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SixInchBypassColumn {
                get {
                    return this.columnSixInchBypass;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ScaffoldingColumn {
                get {
                    return this.columnScaffolding;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WinchExtensionColumn {
                get {
                    return this.columnWinchExtension;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ExtraGeneratorColumn {
                get {
                    return this.columnExtraGenerator;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GreyCableExtensionColumn {
                get {
                    return this.columnGreyCableExtension;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EasementMatsColumn {
                get {
                    return this.columnEasementMats;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MeasurementTypeColumn {
                get {
                    return this.columnMeasurementType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DropPipeColumn {
                get {
                    return this.columnDropPipe;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DropPipeInvertDepthColumn {
                get {
                    return this.columnDropPipeInvertDepth;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MeasuredFromManholeColumn {
                get {
                    return this.columnMeasuredFromManhole;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MainLinedColumn {
                get {
                    return this.columnMainLined;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BenchingIssueColumn {
                get {
                    return this.columnBenchingIssue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ArchivedColumn {
                get {
                    return this.columnArchived;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ScaledLength1Column {
                get {
                    return this.columnScaledLength1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HistoryColumn {
                get {
                    return this.columnHistory;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NumLatsColumn {
                get {
                    return this.columnNumLats;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NotLinedYetColumn {
                get {
                    return this.columnNotLinedYet;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AllMeasuredColumn {
                get {
                    return this.columnAllMeasured;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProvStateColumn {
                get {
                    return this.columnProvState;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IssueWithLateralsColumn {
                get {
                    return this.columnIssueWithLaterals;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NotMeasuredYetColumn {
                get {
                    return this.columnNotMeasuredYet;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NotDeliveredYetColumn {
                get {
                    return this.columnNotDeliveredYet;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SelectedColumn {
                get {
                    return this.columnSelected;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MasterAreaRow this[int index] {
                get {
                    return ((MasterAreaRow)(this.Rows[index]));
                }
            }
            
            public event MasterAreaRowChangeEventHandler MasterAreaRowChanging;
            
            public event MasterAreaRowChangeEventHandler MasterAreaRowChanged;
            
            public event MasterAreaRowChangeEventHandler MasterAreaRowDeleting;
            
            public event MasterAreaRowChangeEventHandler MasterAreaRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMasterAreaRow(MasterAreaRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MasterAreaRow AddMasterAreaRow(
                        System.Guid ID, 
                        int COMPANY_ID, 
                        string RecordID, 
                        string ClientID, 
                        int COMPANIES_ID, 
                        string SubArea, 
                        string Street, 
                        string USMH, 
                        string DSMH, 
                        string Size_, 
                        string ScaledLength, 
                        System.DateTime P1Date, 
                        string ActualLength, 
                        double LiveLats, 
                        string CXIsRemoved, 
                        System.DateTime M1Date, 
                        System.DateTime M2Date, 
                        System.DateTime InstallDate, 
                        System.DateTime FinalVideo, 
                        string Comments, 
                        bool IssueIdentified, 
                        bool IssueResolved, 
                        bool FullLengthLining, 
                        bool SubcontractorLining, 
                        bool OutOfScopeInArea, 
                        bool IssueGivenToBayCity, 
                        int ConfirmedSize, 
                        decimal InstallRate, 
                        System.DateTime DeadlineDate, 
                        System.DateTime ProposedLiningDate, 
                        bool SalesIssue, 
                        bool LFSIssue, 
                        bool ClientIssue, 
                        bool InvestigationIssue, 
                        bool PointLining, 
                        bool Grouting, 
                        bool LateralLining, 
                        System.DateTime VacExDate, 
                        System.DateTime PusherDate, 
                        System.DateTime LinerOrdered, 
                        System.DateTime Restoration, 
                        System.DateTime GroutDate, 
                        bool JLiner, 
                        bool RehabAssessment, 
                        int EstimatedJoints, 
                        int JointsTestSealed, 
                        System.DateTime PreFlushDate, 
                        System.DateTime PreVideoDate, 
                        string USMHMN, 
                        string DSMHMN, 
                        string USMHDepth, 
                        string DSMHDepth, 
                        string MeasurementsTakenBy, 
                        string SteelTapeThruPipe, 
                        double USMHAtMouth1200, 
                        double USMHAtMouth100, 
                        double USMHAtMouth200, 
                        double USMHAtMouth300, 
                        double USMHAtMouth400, 
                        double USMHAtMouth500, 
                        double DSMHAtMouth1200, 
                        double DSMHAtMouth100, 
                        double DSMHAtMouth200, 
                        double DSMHAtMouth300, 
                        double DSMHAtMouth400, 
                        double DSMHAtMouth500, 
                        string HydrantAddress, 
                        string DistanceToInversionMH, 
                        bool RampsRequired, 
                        string DegreeOfTrafficControl, 
                        bool StandarBypass, 
                        string HydroWireDetails, 
                        string PipeMaterialType, 
                        int CappedLaterals, 
                        bool RoboticPrepRequired, 
                        bool PipeSizeChange, 
                        string M1Comments, 
                        string VideoDoneFrom, 
                        string ToManhole, 
                        string CutterDescriptionDuringMeasuring, 
                        bool FullLengthPointLiner, 
                        bool BypassRequired, 
                        string RoboticDistances, 
                        string TrafficControlDetails, 
                        string LineWithID, 
                        bool SchoolZone, 
                        bool RestaurantArea, 
                        bool CarwashLaundromat, 
                        bool HydroPulley, 
                        bool FridgeCart, 
                        bool TwoInchPump, 
                        bool SixInchBypass, 
                        bool Scaffolding, 
                        bool WinchExtension, 
                        bool ExtraGenerator, 
                        bool GreyCableExtension, 
                        bool EasementMats, 
                        string MeasurementType, 
                        bool DropPipe, 
                        string DropPipeInvertDepth, 
                        bool Deleted, 
                        string MeasuredFromManhole, 
                        string MainLined, 
                        string BenchingIssue, 
                        bool Archived, 
                        double ScaledLength1, 
                        string History, 
                        int NumLats, 
                        int NotLinedYet, 
                        bool AllMeasured, 
                        string City, 
                        string ProvState, 
                        string IssueWithLaterals, 
                        int NotMeasuredYet, 
                        int NotDeliveredYet, 
                        bool Selected) {
                MasterAreaRow rowMasterAreaRow = ((MasterAreaRow)(this.NewRow()));
                rowMasterAreaRow.ItemArray = new object[] {
                        ID,
                        COMPANY_ID,
                        RecordID,
                        ClientID,
                        COMPANIES_ID,
                        SubArea,
                        Street,
                        USMH,
                        DSMH,
                        Size_,
                        ScaledLength,
                        P1Date,
                        ActualLength,
                        LiveLats,
                        CXIsRemoved,
                        M1Date,
                        M2Date,
                        InstallDate,
                        FinalVideo,
                        Comments,
                        IssueIdentified,
                        IssueResolved,
                        FullLengthLining,
                        SubcontractorLining,
                        OutOfScopeInArea,
                        IssueGivenToBayCity,
                        ConfirmedSize,
                        InstallRate,
                        DeadlineDate,
                        ProposedLiningDate,
                        SalesIssue,
                        LFSIssue,
                        ClientIssue,
                        InvestigationIssue,
                        PointLining,
                        Grouting,
                        LateralLining,
                        VacExDate,
                        PusherDate,
                        LinerOrdered,
                        Restoration,
                        GroutDate,
                        JLiner,
                        RehabAssessment,
                        EstimatedJoints,
                        JointsTestSealed,
                        PreFlushDate,
                        PreVideoDate,
                        USMHMN,
                        DSMHMN,
                        USMHDepth,
                        DSMHDepth,
                        MeasurementsTakenBy,
                        SteelTapeThruPipe,
                        USMHAtMouth1200,
                        USMHAtMouth100,
                        USMHAtMouth200,
                        USMHAtMouth300,
                        USMHAtMouth400,
                        USMHAtMouth500,
                        DSMHAtMouth1200,
                        DSMHAtMouth100,
                        DSMHAtMouth200,
                        DSMHAtMouth300,
                        DSMHAtMouth400,
                        DSMHAtMouth500,
                        HydrantAddress,
                        DistanceToInversionMH,
                        RampsRequired,
                        DegreeOfTrafficControl,
                        StandarBypass,
                        HydroWireDetails,
                        PipeMaterialType,
                        CappedLaterals,
                        RoboticPrepRequired,
                        PipeSizeChange,
                        M1Comments,
                        VideoDoneFrom,
                        ToManhole,
                        CutterDescriptionDuringMeasuring,
                        FullLengthPointLiner,
                        BypassRequired,
                        RoboticDistances,
                        TrafficControlDetails,
                        LineWithID,
                        SchoolZone,
                        RestaurantArea,
                        CarwashLaundromat,
                        HydroPulley,
                        FridgeCart,
                        TwoInchPump,
                        SixInchBypass,
                        Scaffolding,
                        WinchExtension,
                        ExtraGenerator,
                        GreyCableExtension,
                        EasementMats,
                        MeasurementType,
                        DropPipe,
                        DropPipeInvertDepth,
                        Deleted,
                        MeasuredFromManhole,
                        MainLined,
                        BenchingIssue,
                        Archived,
                        ScaledLength1,
                        History,
                        NumLats,
                        NotLinedYet,
                        AllMeasured,
                        City,
                        ProvState,
                        IssueWithLaterals,
                        NotMeasuredYet,
                        NotDeliveredYet,
                        Selected};
                this.Rows.Add(rowMasterAreaRow);
                return rowMasterAreaRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MasterAreaRow FindByIDCOMPANY_ID(System.Guid ID, int COMPANY_ID) {
                return ((MasterAreaRow)(this.Rows.Find(new object[] {
                            ID,
                            COMPANY_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                MasterAreaDataTable cln = ((MasterAreaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new MasterAreaDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnRecordID = base.Columns["RecordID"];
                this.columnClientID = base.Columns["ClientID"];
                this.columnCOMPANIES_ID = base.Columns["COMPANIES_ID"];
                this.columnSubArea = base.Columns["SubArea"];
                this.columnStreet = base.Columns["Street"];
                this.columnUSMH = base.Columns["USMH"];
                this.columnDSMH = base.Columns["DSMH"];
                this.columnSize_ = base.Columns["Size_"];
                this.columnScaledLength = base.Columns["ScaledLength"];
                this.columnP1Date = base.Columns["P1Date"];
                this.columnActualLength = base.Columns["ActualLength"];
                this.columnLiveLats = base.Columns["LiveLats"];
                this.columnCXIsRemoved = base.Columns["CXIsRemoved"];
                this.columnM1Date = base.Columns["M1Date"];
                this.columnM2Date = base.Columns["M2Date"];
                this.columnInstallDate = base.Columns["InstallDate"];
                this.columnFinalVideo = base.Columns["FinalVideo"];
                this.columnComments = base.Columns["Comments"];
                this.columnIssueIdentified = base.Columns["IssueIdentified"];
                this.columnIssueResolved = base.Columns["IssueResolved"];
                this.columnFullLengthLining = base.Columns["FullLengthLining"];
                this.columnSubcontractorLining = base.Columns["SubcontractorLining"];
                this.columnOutOfScopeInArea = base.Columns["OutOfScopeInArea"];
                this.columnIssueGivenToBayCity = base.Columns["IssueGivenToBayCity"];
                this.columnConfirmedSize = base.Columns["ConfirmedSize"];
                this.columnInstallRate = base.Columns["InstallRate"];
                this.columnDeadlineDate = base.Columns["DeadlineDate"];
                this.columnProposedLiningDate = base.Columns["ProposedLiningDate"];
                this.columnSalesIssue = base.Columns["SalesIssue"];
                this.columnLFSIssue = base.Columns["LFSIssue"];
                this.columnClientIssue = base.Columns["ClientIssue"];
                this.columnInvestigationIssue = base.Columns["InvestigationIssue"];
                this.columnPointLining = base.Columns["PointLining"];
                this.columnGrouting = base.Columns["Grouting"];
                this.columnLateralLining = base.Columns["LateralLining"];
                this.columnVacExDate = base.Columns["VacExDate"];
                this.columnPusherDate = base.Columns["PusherDate"];
                this.columnLinerOrdered = base.Columns["LinerOrdered"];
                this.columnRestoration = base.Columns["Restoration"];
                this.columnGroutDate = base.Columns["GroutDate"];
                this.columnJLiner = base.Columns["JLiner"];
                this.columnRehabAssessment = base.Columns["RehabAssessment"];
                this.columnEstimatedJoints = base.Columns["EstimatedJoints"];
                this.columnJointsTestSealed = base.Columns["JointsTestSealed"];
                this.columnPreFlushDate = base.Columns["PreFlushDate"];
                this.columnPreVideoDate = base.Columns["PreVideoDate"];
                this.columnUSMHMN = base.Columns["USMHMN"];
                this.columnDSMHMN = base.Columns["DSMHMN"];
                this.columnUSMHDepth = base.Columns["USMHDepth"];
                this.columnDSMHDepth = base.Columns["DSMHDepth"];
                this.columnMeasurementsTakenBy = base.Columns["MeasurementsTakenBy"];
                this.columnSteelTapeThruPipe = base.Columns["SteelTapeThruPipe"];
                this.columnUSMHAtMouth1200 = base.Columns["USMHAtMouth1200"];
                this.columnUSMHAtMouth100 = base.Columns["USMHAtMouth100"];
                this.columnUSMHAtMouth200 = base.Columns["USMHAtMouth200"];
                this.columnUSMHAtMouth300 = base.Columns["USMHAtMouth300"];
                this.columnUSMHAtMouth400 = base.Columns["USMHAtMouth400"];
                this.columnUSMHAtMouth500 = base.Columns["USMHAtMouth500"];
                this.columnDSMHAtMouth1200 = base.Columns["DSMHAtMouth1200"];
                this.columnDSMHAtMouth100 = base.Columns["DSMHAtMouth100"];
                this.columnDSMHAtMouth200 = base.Columns["DSMHAtMouth200"];
                this.columnDSMHAtMouth300 = base.Columns["DSMHAtMouth300"];
                this.columnDSMHAtMouth400 = base.Columns["DSMHAtMouth400"];
                this.columnDSMHAtMouth500 = base.Columns["DSMHAtMouth500"];
                this.columnHydrantAddress = base.Columns["HydrantAddress"];
                this.columnDistanceToInversionMH = base.Columns["DistanceToInversionMH"];
                this.columnRampsRequired = base.Columns["RampsRequired"];
                this.columnDegreeOfTrafficControl = base.Columns["DegreeOfTrafficControl"];
                this.columnStandarBypass = base.Columns["StandarBypass"];
                this.columnHydroWireDetails = base.Columns["HydroWireDetails"];
                this.columnPipeMaterialType = base.Columns["PipeMaterialType"];
                this.columnCappedLaterals = base.Columns["CappedLaterals"];
                this.columnRoboticPrepRequired = base.Columns["RoboticPrepRequired"];
                this.columnPipeSizeChange = base.Columns["PipeSizeChange"];
                this.columnM1Comments = base.Columns["M1Comments"];
                this.columnVideoDoneFrom = base.Columns["VideoDoneFrom"];
                this.columnToManhole = base.Columns["ToManhole"];
                this.columnCutterDescriptionDuringMeasuring = base.Columns["CutterDescriptionDuringMeasuring"];
                this.columnFullLengthPointLiner = base.Columns["FullLengthPointLiner"];
                this.columnBypassRequired = base.Columns["BypassRequired"];
                this.columnRoboticDistances = base.Columns["RoboticDistances"];
                this.columnTrafficControlDetails = base.Columns["TrafficControlDetails"];
                this.columnLineWithID = base.Columns["LineWithID"];
                this.columnSchoolZone = base.Columns["SchoolZone"];
                this.columnRestaurantArea = base.Columns["RestaurantArea"];
                this.columnCarwashLaundromat = base.Columns["CarwashLaundromat"];
                this.columnHydroPulley = base.Columns["HydroPulley"];
                this.columnFridgeCart = base.Columns["FridgeCart"];
                this.columnTwoInchPump = base.Columns["TwoInchPump"];
                this.columnSixInchBypass = base.Columns["SixInchBypass"];
                this.columnScaffolding = base.Columns["Scaffolding"];
                this.columnWinchExtension = base.Columns["WinchExtension"];
                this.columnExtraGenerator = base.Columns["ExtraGenerator"];
                this.columnGreyCableExtension = base.Columns["GreyCableExtension"];
                this.columnEasementMats = base.Columns["EasementMats"];
                this.columnMeasurementType = base.Columns["MeasurementType"];
                this.columnDropPipe = base.Columns["DropPipe"];
                this.columnDropPipeInvertDepth = base.Columns["DropPipeInvertDepth"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnMeasuredFromManhole = base.Columns["MeasuredFromManhole"];
                this.columnMainLined = base.Columns["MainLined"];
                this.columnBenchingIssue = base.Columns["BenchingIssue"];
                this.columnArchived = base.Columns["Archived"];
                this.columnScaledLength1 = base.Columns["ScaledLength1"];
                this.columnHistory = base.Columns["History"];
                this.columnNumLats = base.Columns["NumLats"];
                this.columnNotLinedYet = base.Columns["NotLinedYet"];
                this.columnAllMeasured = base.Columns["AllMeasured"];
                this.columnCity = base.Columns["City"];
                this.columnProvState = base.Columns["ProvState"];
                this.columnIssueWithLaterals = base.Columns["IssueWithLaterals"];
                this.columnNotMeasuredYet = base.Columns["NotMeasuredYet"];
                this.columnNotDeliveredYet = base.Columns["NotDeliveredYet"];
                this.columnSelected = base.Columns["Selected"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new System.Data.DataColumn("ID", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCOMPANY_ID = new System.Data.DataColumn("COMPANY_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnRecordID = new System.Data.DataColumn("RecordID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordID);
                this.columnClientID = new System.Data.DataColumn("ClientID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnCOMPANIES_ID = new System.Data.DataColumn("COMPANIES_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANIES_ID);
                this.columnSubArea = new System.Data.DataColumn("SubArea", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubArea);
                this.columnStreet = new System.Data.DataColumn("Street", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnUSMH = new System.Data.DataColumn("USMH", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMH);
                this.columnDSMH = new System.Data.DataColumn("DSMH", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMH);
                this.columnSize_ = new System.Data.DataColumn("Size_", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_);
                this.columnScaledLength = new System.Data.DataColumn("ScaledLength", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaledLength);
                this.columnP1Date = new System.Data.DataColumn("P1Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnP1Date);
                this.columnActualLength = new System.Data.DataColumn("ActualLength", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualLength);
                this.columnLiveLats = new System.Data.DataColumn("LiveLats", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiveLats);
                this.columnCXIsRemoved = new System.Data.DataColumn("CXIsRemoved", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXIsRemoved);
                this.columnM1Date = new System.Data.DataColumn("M1Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnM1Date);
                this.columnM2Date = new System.Data.DataColumn("M2Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnM2Date);
                this.columnInstallDate = new System.Data.DataColumn("InstallDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallDate);
                this.columnFinalVideo = new System.Data.DataColumn("FinalVideo", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalVideo);
                this.columnComments = new System.Data.DataColumn("Comments", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnIssueIdentified = new System.Data.DataColumn("IssueIdentified", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueIdentified);
                this.columnIssueResolved = new System.Data.DataColumn("IssueResolved", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueResolved);
                this.columnFullLengthLining = new System.Data.DataColumn("FullLengthLining", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullLengthLining);
                this.columnSubcontractorLining = new System.Data.DataColumn("SubcontractorLining", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubcontractorLining);
                this.columnOutOfScopeInArea = new System.Data.DataColumn("OutOfScopeInArea", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutOfScopeInArea);
                this.columnIssueGivenToBayCity = new System.Data.DataColumn("IssueGivenToBayCity", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueGivenToBayCity);
                this.columnConfirmedSize = new System.Data.DataColumn("ConfirmedSize", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmedSize);
                this.columnInstallRate = new System.Data.DataColumn("InstallRate", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallRate);
                this.columnDeadlineDate = new System.Data.DataColumn("DeadlineDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeadlineDate);
                this.columnProposedLiningDate = new System.Data.DataColumn("ProposedLiningDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProposedLiningDate);
                this.columnSalesIssue = new System.Data.DataColumn("SalesIssue", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesIssue);
                this.columnLFSIssue = new System.Data.DataColumn("LFSIssue", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLFSIssue);
                this.columnClientIssue = new System.Data.DataColumn("ClientIssue", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientIssue);
                this.columnInvestigationIssue = new System.Data.DataColumn("InvestigationIssue", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestigationIssue);
                this.columnPointLining = new System.Data.DataColumn("PointLining", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPointLining);
                this.columnGrouting = new System.Data.DataColumn("Grouting", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrouting);
                this.columnLateralLining = new System.Data.DataColumn("LateralLining", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralLining);
                this.columnVacExDate = new System.Data.DataColumn("VacExDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacExDate);
                this.columnPusherDate = new System.Data.DataColumn("PusherDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPusherDate);
                this.columnLinerOrdered = new System.Data.DataColumn("LinerOrdered", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerOrdered);
                this.columnRestoration = new System.Data.DataColumn("Restoration", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestoration);
                this.columnGroutDate = new System.Data.DataColumn("GroutDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroutDate);
                this.columnJLiner = new System.Data.DataColumn("JLiner", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJLiner);
                this.columnRehabAssessment = new System.Data.DataColumn("RehabAssessment", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRehabAssessment);
                this.columnEstimatedJoints = new System.Data.DataColumn("EstimatedJoints", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimatedJoints);
                this.columnJointsTestSealed = new System.Data.DataColumn("JointsTestSealed", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJointsTestSealed);
                this.columnPreFlushDate = new System.Data.DataColumn("PreFlushDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreFlushDate);
                this.columnPreVideoDate = new System.Data.DataColumn("PreVideoDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreVideoDate);
                this.columnUSMHMN = new System.Data.DataColumn("USMHMN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMN);
                this.columnDSMHMN = new System.Data.DataColumn("DSMHMN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMN);
                this.columnUSMHDepth = new System.Data.DataColumn("USMHDepth", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHDepth);
                this.columnDSMHDepth = new System.Data.DataColumn("DSMHDepth", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHDepth);
                this.columnMeasurementsTakenBy = new System.Data.DataColumn("MeasurementsTakenBy", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementsTakenBy);
                this.columnSteelTapeThruPipe = new System.Data.DataColumn("SteelTapeThruPipe", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSteelTapeThruPipe);
                this.columnUSMHAtMouth1200 = new System.Data.DataColumn("USMHAtMouth1200", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth1200);
                this.columnUSMHAtMouth100 = new System.Data.DataColumn("USMHAtMouth100", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth100);
                this.columnUSMHAtMouth200 = new System.Data.DataColumn("USMHAtMouth200", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth200);
                this.columnUSMHAtMouth300 = new System.Data.DataColumn("USMHAtMouth300", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth300);
                this.columnUSMHAtMouth400 = new System.Data.DataColumn("USMHAtMouth400", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth400);
                this.columnUSMHAtMouth500 = new System.Data.DataColumn("USMHAtMouth500", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth500);
                this.columnDSMHAtMouth1200 = new System.Data.DataColumn("DSMHAtMouth1200", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth1200);
                this.columnDSMHAtMouth100 = new System.Data.DataColumn("DSMHAtMouth100", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth100);
                this.columnDSMHAtMouth200 = new System.Data.DataColumn("DSMHAtMouth200", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth200);
                this.columnDSMHAtMouth300 = new System.Data.DataColumn("DSMHAtMouth300", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth300);
                this.columnDSMHAtMouth400 = new System.Data.DataColumn("DSMHAtMouth400", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth400);
                this.columnDSMHAtMouth500 = new System.Data.DataColumn("DSMHAtMouth500", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth500);
                this.columnHydrantAddress = new System.Data.DataColumn("HydrantAddress", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydrantAddress);
                this.columnDistanceToInversionMH = new System.Data.DataColumn("DistanceToInversionMH", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceToInversionMH);
                this.columnRampsRequired = new System.Data.DataColumn("RampsRequired", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRampsRequired);
                this.columnDegreeOfTrafficControl = new System.Data.DataColumn("DegreeOfTrafficControl", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDegreeOfTrafficControl);
                this.columnStandarBypass = new System.Data.DataColumn("StandarBypass", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandarBypass);
                this.columnHydroWireDetails = new System.Data.DataColumn("HydroWireDetails", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydroWireDetails);
                this.columnPipeMaterialType = new System.Data.DataColumn("PipeMaterialType", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeMaterialType);
                this.columnCappedLaterals = new System.Data.DataColumn("CappedLaterals", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCappedLaterals);
                this.columnRoboticPrepRequired = new System.Data.DataColumn("RoboticPrepRequired", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticPrepRequired);
                this.columnPipeSizeChange = new System.Data.DataColumn("PipeSizeChange", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeSizeChange);
                this.columnM1Comments = new System.Data.DataColumn("M1Comments", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnM1Comments);
                this.columnVideoDoneFrom = new System.Data.DataColumn("VideoDoneFrom", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoDoneFrom);
                this.columnToManhole = new System.Data.DataColumn("ToManhole", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnToManhole);
                this.columnCutterDescriptionDuringMeasuring = new System.Data.DataColumn("CutterDescriptionDuringMeasuring", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCutterDescriptionDuringMeasuring);
                this.columnFullLengthPointLiner = new System.Data.DataColumn("FullLengthPointLiner", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullLengthPointLiner);
                this.columnBypassRequired = new System.Data.DataColumn("BypassRequired", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBypassRequired);
                this.columnRoboticDistances = new System.Data.DataColumn("RoboticDistances", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticDistances);
                this.columnTrafficControlDetails = new System.Data.DataColumn("TrafficControlDetails", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrafficControlDetails);
                this.columnLineWithID = new System.Data.DataColumn("LineWithID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineWithID);
                this.columnSchoolZone = new System.Data.DataColumn("SchoolZone", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchoolZone);
                this.columnRestaurantArea = new System.Data.DataColumn("RestaurantArea", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestaurantArea);
                this.columnCarwashLaundromat = new System.Data.DataColumn("CarwashLaundromat", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarwashLaundromat);
                this.columnHydroPulley = new System.Data.DataColumn("HydroPulley", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydroPulley);
                this.columnFridgeCart = new System.Data.DataColumn("FridgeCart", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFridgeCart);
                this.columnTwoInchPump = new System.Data.DataColumn("TwoInchPump", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTwoInchPump);
                this.columnSixInchBypass = new System.Data.DataColumn("SixInchBypass", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSixInchBypass);
                this.columnScaffolding = new System.Data.DataColumn("Scaffolding", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffolding);
                this.columnWinchExtension = new System.Data.DataColumn("WinchExtension", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWinchExtension);
                this.columnExtraGenerator = new System.Data.DataColumn("ExtraGenerator", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraGenerator);
                this.columnGreyCableExtension = new System.Data.DataColumn("GreyCableExtension", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGreyCableExtension);
                this.columnEasementMats = new System.Data.DataColumn("EasementMats", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEasementMats);
                this.columnMeasurementType = new System.Data.DataColumn("MeasurementType", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementType);
                this.columnDropPipe = new System.Data.DataColumn("DropPipe", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropPipe);
                this.columnDropPipeInvertDepth = new System.Data.DataColumn("DropPipeInvertDepth", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropPipeInvertDepth);
                this.columnDeleted = new System.Data.DataColumn("Deleted", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnMeasuredFromManhole = new System.Data.DataColumn("MeasuredFromManhole", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasuredFromManhole);
                this.columnMainLined = new System.Data.DataColumn("MainLined", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainLined);
                this.columnBenchingIssue = new System.Data.DataColumn("BenchingIssue", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenchingIssue);
                this.columnArchived = new System.Data.DataColumn("Archived", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchived);
                this.columnScaledLength1 = new System.Data.DataColumn("ScaledLength1", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaledLength1);
                this.columnHistory = new System.Data.DataColumn("History", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistory);
                this.columnNumLats = new System.Data.DataColumn("NumLats", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumLats);
                this.columnNotLinedYet = new System.Data.DataColumn("NotLinedYet", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotLinedYet);
                this.columnAllMeasured = new System.Data.DataColumn("AllMeasured", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllMeasured);
                this.columnCity = new System.Data.DataColumn("City", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnProvState = new System.Data.DataColumn("ProvState", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvState);
                this.columnIssueWithLaterals = new System.Data.DataColumn("IssueWithLaterals", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueWithLaterals);
                this.columnNotMeasuredYet = new System.Data.DataColumn("NotMeasuredYet", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotMeasuredYet);
                this.columnNotDeliveredYet = new System.Data.DataColumn("NotDeliveredYet", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotDeliveredYet);
                this.columnSelected = new System.Data.DataColumn("Selected", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelected);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID,
                                this.columnCOMPANY_ID}, true));
                this.columnID.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnRecordID.AllowDBNull = false;
                this.columnRecordID.MaxLength = 50;
                this.columnClientID.MaxLength = 50;
                this.columnSubArea.MaxLength = 50;
                this.columnStreet.MaxLength = 255;
                this.columnUSMH.MaxLength = 255;
                this.columnDSMH.MaxLength = 255;
                this.columnSize_.MaxLength = 255;
                this.columnScaledLength.MaxLength = 50;
                this.columnActualLength.MaxLength = 255;
                this.columnCXIsRemoved.MaxLength = 255;
                this.columnComments.MaxLength = 1073741823;
                this.columnUSMHMN.MaxLength = 50;
                this.columnDSMHMN.MaxLength = 50;
                this.columnUSMHDepth.MaxLength = 50;
                this.columnDSMHDepth.MaxLength = 50;
                this.columnMeasurementsTakenBy.MaxLength = 50;
                this.columnSteelTapeThruPipe.MaxLength = 50;
                this.columnHydrantAddress.MaxLength = 255;
                this.columnDistanceToInversionMH.MaxLength = 255;
                this.columnDegreeOfTrafficControl.MaxLength = 255;
                this.columnHydroWireDetails.MaxLength = 255;
                this.columnPipeMaterialType.MaxLength = 50;
                this.columnM1Comments.MaxLength = 1073741823;
                this.columnVideoDoneFrom.MaxLength = 50;
                this.columnToManhole.MaxLength = 50;
                this.columnCutterDescriptionDuringMeasuring.MaxLength = 255;
                this.columnRoboticDistances.MaxLength = 50;
                this.columnTrafficControlDetails.MaxLength = 1073741823;
                this.columnLineWithID.MaxLength = 50;
                this.columnMeasurementType.MaxLength = 50;
                this.columnDropPipeInvertDepth.MaxLength = 50;
                this.columnMeasuredFromManhole.MaxLength = 50;
                this.columnMainLined.MaxLength = 10;
                this.columnBenchingIssue.MaxLength = 10;
                this.columnHistory.MaxLength = 1073741823;
                this.columnCity.MaxLength = 50;
                this.columnProvState.MaxLength = 20;
                this.columnIssueWithLaterals.AllowDBNull = false;
                this.columnIssueWithLaterals.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MasterAreaRow NewMasterAreaRow() {
                return ((MasterAreaRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new MasterAreaRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(MasterAreaRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MasterAreaRowChanged != null)) {
                    this.MasterAreaRowChanged(this, new MasterAreaRowChangeEvent(((MasterAreaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MasterAreaRowChanging != null)) {
                    this.MasterAreaRowChanging(this, new MasterAreaRowChangeEvent(((MasterAreaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MasterAreaRowDeleted != null)) {
                    this.MasterAreaRowDeleted(this, new MasterAreaRowChangeEvent(((MasterAreaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MasterAreaRowDeleting != null)) {
                    this.MasterAreaRowDeleting(this, new MasterAreaRowChangeEvent(((MasterAreaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMasterAreaRow(MasterAreaRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                JlinerAddTDS ds = new JlinerAddTDS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MasterAreaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class JunctionLiner2DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID;
            
            private System.Data.DataColumn columnRefID;
            
            private System.Data.DataColumn columnCOMPANY_ID;
            
            private System.Data.DataColumn columnDetailID;
            
            private System.Data.DataColumn columnAddress;
            
            private System.Data.DataColumn columnPipeLocated;
            
            private System.Data.DataColumn columnServicesLocated;
            
            private System.Data.DataColumn columnCoInstalled;
            
            private System.Data.DataColumn columnBackfilledConcrete;
            
            private System.Data.DataColumn columnBackfilledSoil;
            
            private System.Data.DataColumn columnGrouted;
            
            private System.Data.DataColumn columnCored;
            
            private System.Data.DataColumn columnPrepped;
            
            private System.Data.DataColumn columnMeasured;
            
            private System.Data.DataColumn columnLinerSize;
            
            private System.Data.DataColumn columnInProcess;
            
            private System.Data.DataColumn columnInStock;
            
            private System.Data.DataColumn columnDelivered;
            
            private System.Data.DataColumn columnBuildRebuild;
            
            private System.Data.DataColumn columnPreVideo;
            
            private System.Data.DataColumn columnLinerInstalled;
            
            private System.Data.DataColumn columnFinalVideo;
            
            private System.Data.DataColumn columnDistanceFromUSMH;
            
            private System.Data.DataColumn columnDistanceFromDSMH;
            
            private System.Data.DataColumn columnMap;
            
            private System.Data.DataColumn columnIssue;
            
            private System.Data.DataColumn columnCost;
            
            private System.Data.DataColumn columnDeleted;
            
            private System.Data.DataColumn columnVideoInspection;
            
            private System.Data.DataColumn columnCoRequired;
            
            private System.Data.DataColumn columnPitRequired;
            
            private System.Data.DataColumn columnCoPitLocation;
            
            private System.Data.DataColumn columnPostContractDigRequired;
            
            private System.Data.DataColumn columnComments;
            
            private System.Data.DataColumn columnHistory;
            
            private System.Data.DataColumn columnCoCutDown;
            
            private System.Data.DataColumn columnFinalRestoration;
            
            private System.Data.DataColumn columnClientLateralID;
            
            private System.Data.DataColumn columnVideoLengthToPropertyLine;
            
            private System.Data.DataColumn columnLiningThruCo;
            
            private System.Data.DataColumn columnHamiltonInspectionNumber;
            
            private System.Data.DataColumn columnNoticeDelivered;
            
            private System.Data.DataColumn columnInDatabase;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JunctionLiner2DataTable() {
                this.TableName = "JunctionLiner2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal JunctionLiner2DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected JunctionLiner2DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DetailIDColumn {
                get {
                    return this.columnDetailID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PipeLocatedColumn {
                get {
                    return this.columnPipeLocated;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ServicesLocatedColumn {
                get {
                    return this.columnServicesLocated;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CoInstalledColumn {
                get {
                    return this.columnCoInstalled;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BackfilledConcreteColumn {
                get {
                    return this.columnBackfilledConcrete;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BackfilledSoilColumn {
                get {
                    return this.columnBackfilledSoil;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GroutedColumn {
                get {
                    return this.columnGrouted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CoredColumn {
                get {
                    return this.columnCored;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PreppedColumn {
                get {
                    return this.columnPrepped;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MeasuredColumn {
                get {
                    return this.columnMeasured;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LinerSizeColumn {
                get {
                    return this.columnLinerSize;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn InProcessColumn {
                get {
                    return this.columnInProcess;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn InStockColumn {
                get {
                    return this.columnInStock;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeliveredColumn {
                get {
                    return this.columnDelivered;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BuildRebuildColumn {
                get {
                    return this.columnBuildRebuild;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PreVideoColumn {
                get {
                    return this.columnPreVideo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LinerInstalledColumn {
                get {
                    return this.columnLinerInstalled;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FinalVideoColumn {
                get {
                    return this.columnFinalVideo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DistanceFromUSMHColumn {
                get {
                    return this.columnDistanceFromUSMH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DistanceFromDSMHColumn {
                get {
                    return this.columnDistanceFromDSMH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MapColumn {
                get {
                    return this.columnMap;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IssueColumn {
                get {
                    return this.columnIssue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CostColumn {
                get {
                    return this.columnCost;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VideoInspectionColumn {
                get {
                    return this.columnVideoInspection;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CoRequiredColumn {
                get {
                    return this.columnCoRequired;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PitRequiredColumn {
                get {
                    return this.columnPitRequired;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CoPitLocationColumn {
                get {
                    return this.columnCoPitLocation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PostContractDigRequiredColumn {
                get {
                    return this.columnPostContractDigRequired;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HistoryColumn {
                get {
                    return this.columnHistory;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CoCutDownColumn {
                get {
                    return this.columnCoCutDown;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FinalRestorationColumn {
                get {
                    return this.columnFinalRestoration;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ClientLateralIDColumn {
                get {
                    return this.columnClientLateralID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VideoLengthToPropertyLineColumn {
                get {
                    return this.columnVideoLengthToPropertyLine;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LiningThruCoColumn {
                get {
                    return this.columnLiningThruCo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HamiltonInspectionNumberColumn {
                get {
                    return this.columnHamiltonInspectionNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NoticeDeliveredColumn {
                get {
                    return this.columnNoticeDelivered;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn InDatabaseColumn {
                get {
                    return this.columnInDatabase;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JunctionLiner2Row this[int index] {
                get {
                    return ((JunctionLiner2Row)(this.Rows[index]));
                }
            }
            
            public event JunctionLiner2RowChangeEventHandler JunctionLiner2RowChanging;
            
            public event JunctionLiner2RowChangeEventHandler JunctionLiner2RowChanged;
            
            public event JunctionLiner2RowChangeEventHandler JunctionLiner2RowDeleting;
            
            public event JunctionLiner2RowChangeEventHandler JunctionLiner2RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddJunctionLiner2Row(JunctionLiner2Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JunctionLiner2Row AddJunctionLiner2Row(
                        System.Guid ID, 
                        int RefID, 
                        int COMPANY_ID, 
                        string DetailID, 
                        string Address, 
                        System.DateTime PipeLocated, 
                        System.DateTime ServicesLocated, 
                        System.DateTime CoInstalled, 
                        System.DateTime BackfilledConcrete, 
                        System.DateTime BackfilledSoil, 
                        System.DateTime Grouted, 
                        System.DateTime Cored, 
                        System.DateTime Prepped, 
                        System.DateTime Measured, 
                        string LinerSize, 
                        System.DateTime InProcess, 
                        System.DateTime InStock, 
                        System.DateTime Delivered, 
                        int BuildRebuild, 
                        System.DateTime PreVideo, 
                        System.DateTime LinerInstalled, 
                        System.DateTime FinalVideo, 
                        double DistanceFromUSMH, 
                        double DistanceFromDSMH, 
                        string Map, 
                        string Issue, 
                        decimal Cost, 
                        bool Deleted, 
                        System.DateTime VideoInspection, 
                        bool CoRequired, 
                        bool PitRequired, 
                        string CoPitLocation, 
                        bool PostContractDigRequired, 
                        string Comments, 
                        string History, 
                        System.DateTime CoCutDown, 
                        System.DateTime FinalRestoration, 
                        string ClientLateralID, 
                        string VideoLengthToPropertyLine, 
                        bool LiningThruCo, 
                        string HamiltonInspectionNumber, 
                        System.DateTime NoticeDelivered, 
                        bool InDatabase) {
                JunctionLiner2Row rowJunctionLiner2Row = ((JunctionLiner2Row)(this.NewRow()));
                rowJunctionLiner2Row.ItemArray = new object[] {
                        ID,
                        RefID,
                        COMPANY_ID,
                        DetailID,
                        Address,
                        PipeLocated,
                        ServicesLocated,
                        CoInstalled,
                        BackfilledConcrete,
                        BackfilledSoil,
                        Grouted,
                        Cored,
                        Prepped,
                        Measured,
                        LinerSize,
                        InProcess,
                        InStock,
                        Delivered,
                        BuildRebuild,
                        PreVideo,
                        LinerInstalled,
                        FinalVideo,
                        DistanceFromUSMH,
                        DistanceFromDSMH,
                        Map,
                        Issue,
                        Cost,
                        Deleted,
                        VideoInspection,
                        CoRequired,
                        PitRequired,
                        CoPitLocation,
                        PostContractDigRequired,
                        Comments,
                        History,
                        CoCutDown,
                        FinalRestoration,
                        ClientLateralID,
                        VideoLengthToPropertyLine,
                        LiningThruCo,
                        HamiltonInspectionNumber,
                        NoticeDelivered,
                        InDatabase};
                this.Rows.Add(rowJunctionLiner2Row);
                return rowJunctionLiner2Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JunctionLiner2Row FindByIDRefIDCOMPANY_ID(System.Guid ID, int RefID, int COMPANY_ID) {
                return ((JunctionLiner2Row)(this.Rows.Find(new object[] {
                            ID,
                            RefID,
                            COMPANY_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                JunctionLiner2DataTable cln = ((JunctionLiner2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new JunctionLiner2DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnDetailID = base.Columns["DetailID"];
                this.columnAddress = base.Columns["Address"];
                this.columnPipeLocated = base.Columns["PipeLocated"];
                this.columnServicesLocated = base.Columns["ServicesLocated"];
                this.columnCoInstalled = base.Columns["CoInstalled"];
                this.columnBackfilledConcrete = base.Columns["BackfilledConcrete"];
                this.columnBackfilledSoil = base.Columns["BackfilledSoil"];
                this.columnGrouted = base.Columns["Grouted"];
                this.columnCored = base.Columns["Cored"];
                this.columnPrepped = base.Columns["Prepped"];
                this.columnMeasured = base.Columns["Measured"];
                this.columnLinerSize = base.Columns["LinerSize"];
                this.columnInProcess = base.Columns["InProcess"];
                this.columnInStock = base.Columns["InStock"];
                this.columnDelivered = base.Columns["Delivered"];
                this.columnBuildRebuild = base.Columns["BuildRebuild"];
                this.columnPreVideo = base.Columns["PreVideo"];
                this.columnLinerInstalled = base.Columns["LinerInstalled"];
                this.columnFinalVideo = base.Columns["FinalVideo"];
                this.columnDistanceFromUSMH = base.Columns["DistanceFromUSMH"];
                this.columnDistanceFromDSMH = base.Columns["DistanceFromDSMH"];
                this.columnMap = base.Columns["Map"];
                this.columnIssue = base.Columns["Issue"];
                this.columnCost = base.Columns["Cost"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnVideoInspection = base.Columns["VideoInspection"];
                this.columnCoRequired = base.Columns["CoRequired"];
                this.columnPitRequired = base.Columns["PitRequired"];
                this.columnCoPitLocation = base.Columns["CoPitLocation"];
                this.columnPostContractDigRequired = base.Columns["PostContractDigRequired"];
                this.columnComments = base.Columns["Comments"];
                this.columnHistory = base.Columns["History"];
                this.columnCoCutDown = base.Columns["CoCutDown"];
                this.columnFinalRestoration = base.Columns["FinalRestoration"];
                this.columnClientLateralID = base.Columns["ClientLateralID"];
                this.columnVideoLengthToPropertyLine = base.Columns["VideoLengthToPropertyLine"];
                this.columnLiningThruCo = base.Columns["LiningThruCo"];
                this.columnHamiltonInspectionNumber = base.Columns["HamiltonInspectionNumber"];
                this.columnNoticeDelivered = base.Columns["NoticeDelivered"];
                this.columnInDatabase = base.Columns["InDatabase"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new System.Data.DataColumn("ID", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnRefID = new System.Data.DataColumn("RefID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnCOMPANY_ID = new System.Data.DataColumn("COMPANY_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnDetailID = new System.Data.DataColumn("DetailID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailID);
                this.columnAddress = new System.Data.DataColumn("Address", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnPipeLocated = new System.Data.DataColumn("PipeLocated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeLocated);
                this.columnServicesLocated = new System.Data.DataColumn("ServicesLocated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnServicesLocated);
                this.columnCoInstalled = new System.Data.DataColumn("CoInstalled", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoInstalled);
                this.columnBackfilledConcrete = new System.Data.DataColumn("BackfilledConcrete", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackfilledConcrete);
                this.columnBackfilledSoil = new System.Data.DataColumn("BackfilledSoil", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackfilledSoil);
                this.columnGrouted = new System.Data.DataColumn("Grouted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrouted);
                this.columnCored = new System.Data.DataColumn("Cored", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCored);
                this.columnPrepped = new System.Data.DataColumn("Prepped", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrepped);
                this.columnMeasured = new System.Data.DataColumn("Measured", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasured);
                this.columnLinerSize = new System.Data.DataColumn("LinerSize", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerSize);
                this.columnInProcess = new System.Data.DataColumn("InProcess", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInProcess);
                this.columnInStock = new System.Data.DataColumn("InStock", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInStock);
                this.columnDelivered = new System.Data.DataColumn("Delivered", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelivered);
                this.columnBuildRebuild = new System.Data.DataColumn("BuildRebuild", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildRebuild);
                this.columnPreVideo = new System.Data.DataColumn("PreVideo", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreVideo);
                this.columnLinerInstalled = new System.Data.DataColumn("LinerInstalled", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerInstalled);
                this.columnFinalVideo = new System.Data.DataColumn("FinalVideo", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalVideo);
                this.columnDistanceFromUSMH = new System.Data.DataColumn("DistanceFromUSMH", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceFromUSMH);
                this.columnDistanceFromDSMH = new System.Data.DataColumn("DistanceFromDSMH", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceFromDSMH);
                this.columnMap = new System.Data.DataColumn("Map", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMap);
                this.columnIssue = new System.Data.DataColumn("Issue", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssue);
                this.columnCost = new System.Data.DataColumn("Cost", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCost);
                this.columnDeleted = new System.Data.DataColumn("Deleted", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnVideoInspection = new System.Data.DataColumn("VideoInspection", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoInspection);
                this.columnCoRequired = new System.Data.DataColumn("CoRequired", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoRequired);
                this.columnPitRequired = new System.Data.DataColumn("PitRequired", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPitRequired);
                this.columnCoPitLocation = new System.Data.DataColumn("CoPitLocation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoPitLocation);
                this.columnPostContractDigRequired = new System.Data.DataColumn("PostContractDigRequired", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostContractDigRequired);
                this.columnComments = new System.Data.DataColumn("Comments", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnHistory = new System.Data.DataColumn("History", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistory);
                this.columnCoCutDown = new System.Data.DataColumn("CoCutDown", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoCutDown);
                this.columnFinalRestoration = new System.Data.DataColumn("FinalRestoration", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalRestoration);
                this.columnClientLateralID = new System.Data.DataColumn("ClientLateralID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientLateralID);
                this.columnVideoLengthToPropertyLine = new System.Data.DataColumn("VideoLengthToPropertyLine", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoLengthToPropertyLine);
                this.columnLiningThruCo = new System.Data.DataColumn("LiningThruCo", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiningThruCo);
                this.columnHamiltonInspectionNumber = new System.Data.DataColumn("HamiltonInspectionNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHamiltonInspectionNumber);
                this.columnNoticeDelivered = new System.Data.DataColumn("NoticeDelivered", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoticeDelivered);
                this.columnInDatabase = new System.Data.DataColumn("InDatabase", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInDatabase);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID,
                                this.columnRefID,
                                this.columnCOMPANY_ID}, true));
                this.columnID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnDetailID.MaxLength = 50;
                this.columnAddress.MaxLength = 50;
                this.columnLinerSize.MaxLength = 40;
                this.columnMap.MaxLength = 50;
                this.columnIssue.AllowDBNull = false;
                this.columnIssue.MaxLength = 50;
                this.columnCoRequired.AllowDBNull = false;
                this.columnPitRequired.AllowDBNull = false;
                this.columnCoPitLocation.MaxLength = 50;
                this.columnPostContractDigRequired.AllowDBNull = false;
                this.columnComments.MaxLength = 1073741823;
                this.columnHistory.MaxLength = 1073741823;
                this.columnClientLateralID.MaxLength = 50;
                this.columnVideoLengthToPropertyLine.MaxLength = 50;
                this.columnLiningThruCo.AllowDBNull = false;
                this.columnHamiltonInspectionNumber.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JunctionLiner2Row NewJunctionLiner2Row() {
                return ((JunctionLiner2Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new JunctionLiner2Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(JunctionLiner2Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.JunctionLiner2RowChanged != null)) {
                    this.JunctionLiner2RowChanged(this, new JunctionLiner2RowChangeEvent(((JunctionLiner2Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.JunctionLiner2RowChanging != null)) {
                    this.JunctionLiner2RowChanging(this, new JunctionLiner2RowChangeEvent(((JunctionLiner2Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.JunctionLiner2RowDeleted != null)) {
                    this.JunctionLiner2RowDeleted(this, new JunctionLiner2RowChangeEvent(((JunctionLiner2Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.JunctionLiner2RowDeleting != null)) {
                    this.JunctionLiner2RowDeleting(this, new JunctionLiner2RowChangeEvent(((JunctionLiner2Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveJunctionLiner2Row(JunctionLiner2Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                JlinerAddTDS ds = new JlinerAddTDS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "JunctionLiner2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class JunctionLiner2CommentDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID;
            
            private System.Data.DataColumn columnRefID;
            
            private System.Data.DataColumn columnCOMPANY_ID;
            
            private System.Data.DataColumn columnCommentID;
            
            private System.Data.DataColumn columnDateTime_;
            
            private System.Data.DataColumn columnLoginID;
            
            private System.Data.DataColumn columnComment;
            
            private System.Data.DataColumn columnDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JunctionLiner2CommentDataTable() {
                this.TableName = "JunctionLiner2Comment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal JunctionLiner2CommentDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected JunctionLiner2CommentDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CommentIDColumn {
                get {
                    return this.columnCommentID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTime_Column {
                get {
                    return this.columnDateTime_;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LoginIDColumn {
                get {
                    return this.columnLoginID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JunctionLiner2CommentRow this[int index] {
                get {
                    return ((JunctionLiner2CommentRow)(this.Rows[index]));
                }
            }
            
            public event JunctionLiner2CommentRowChangeEventHandler JunctionLiner2CommentRowChanging;
            
            public event JunctionLiner2CommentRowChangeEventHandler JunctionLiner2CommentRowChanged;
            
            public event JunctionLiner2CommentRowChangeEventHandler JunctionLiner2CommentRowDeleting;
            
            public event JunctionLiner2CommentRowChangeEventHandler JunctionLiner2CommentRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddJunctionLiner2CommentRow(JunctionLiner2CommentRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JunctionLiner2CommentRow AddJunctionLiner2CommentRow(System.Guid ID, int RefID, int COMPANY_ID, int CommentID, System.DateTime DateTime_, int LoginID, string Comment, bool Deleted) {
                JunctionLiner2CommentRow rowJunctionLiner2CommentRow = ((JunctionLiner2CommentRow)(this.NewRow()));
                rowJunctionLiner2CommentRow.ItemArray = new object[] {
                        ID,
                        RefID,
                        COMPANY_ID,
                        CommentID,
                        DateTime_,
                        LoginID,
                        Comment,
                        Deleted};
                this.Rows.Add(rowJunctionLiner2CommentRow);
                return rowJunctionLiner2CommentRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JunctionLiner2CommentRow FindByIDRefIDCOMPANY_IDCommentID(System.Guid ID, int RefID, int COMPANY_ID, int CommentID) {
                return ((JunctionLiner2CommentRow)(this.Rows.Find(new object[] {
                            ID,
                            RefID,
                            COMPANY_ID,
                            CommentID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                JunctionLiner2CommentDataTable cln = ((JunctionLiner2CommentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new JunctionLiner2CommentDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnCommentID = base.Columns["CommentID"];
                this.columnDateTime_ = base.Columns["DateTime_"];
                this.columnLoginID = base.Columns["LoginID"];
                this.columnComment = base.Columns["Comment"];
                this.columnDeleted = base.Columns["Deleted"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new System.Data.DataColumn("ID", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnRefID = new System.Data.DataColumn("RefID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnCOMPANY_ID = new System.Data.DataColumn("COMPANY_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnCommentID = new System.Data.DataColumn("CommentID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommentID);
                this.columnDateTime_ = new System.Data.DataColumn("DateTime_", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTime_);
                this.columnLoginID = new System.Data.DataColumn("LoginID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoginID);
                this.columnComment = new System.Data.DataColumn("Comment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnDeleted = new System.Data.DataColumn("Deleted", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID,
                                this.columnRefID,
                                this.columnCOMPANY_ID,
                                this.columnCommentID}, true));
                this.columnID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnCommentID.AllowDBNull = false;
                this.columnDateTime_.AllowDBNull = false;
                this.columnLoginID.AllowDBNull = false;
                this.columnComment.AllowDBNull = false;
                this.columnComment.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JunctionLiner2CommentRow NewJunctionLiner2CommentRow() {
                return ((JunctionLiner2CommentRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new JunctionLiner2CommentRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(JunctionLiner2CommentRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.JunctionLiner2CommentRowChanged != null)) {
                    this.JunctionLiner2CommentRowChanged(this, new JunctionLiner2CommentRowChangeEvent(((JunctionLiner2CommentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.JunctionLiner2CommentRowChanging != null)) {
                    this.JunctionLiner2CommentRowChanging(this, new JunctionLiner2CommentRowChangeEvent(((JunctionLiner2CommentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.JunctionLiner2CommentRowDeleted != null)) {
                    this.JunctionLiner2CommentRowDeleted(this, new JunctionLiner2CommentRowChangeEvent(((JunctionLiner2CommentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.JunctionLiner2CommentRowDeleting != null)) {
                    this.JunctionLiner2CommentRowDeleting(this, new JunctionLiner2CommentRowChangeEvent(((JunctionLiner2CommentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveJunctionLiner2CommentRow(JunctionLiner2CommentRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                JlinerAddTDS ds = new JlinerAddTDS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "JunctionLiner2CommentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MasterAreaRow : System.Data.DataRow {
            
            private MasterAreaDataTable tableMasterArea;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MasterAreaRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMasterArea = ((MasterAreaDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((System.Guid)(this[this.tableMasterArea.IDColumn]));
                }
                set {
                    this[this.tableMasterArea.IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableMasterArea.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableMasterArea.COMPANY_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordID {
                get {
                    return ((string)(this[this.tableMasterArea.RecordIDColumn]));
                }
                set {
                    this[this.tableMasterArea.RecordIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientID {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.ClientIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ClientID\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.ClientIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANIES_ID {
                get {
                    try {
                        return ((int)(this[this.tableMasterArea.COMPANIES_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMPANIES_ID\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.COMPANIES_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubArea {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.SubAreaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SubArea\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.SubAreaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Street {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.StreetColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Street\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.StreetColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMH {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.USMHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'USMH\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.USMHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMH {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.DSMHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DSMH\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.DSMHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size_ {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.Size_Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Size_\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.Size_Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScaledLength {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.ScaledLengthColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ScaledLength\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.ScaledLengthColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime P1Date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableMasterArea.P1DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'P1Date\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.P1DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ActualLength {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.ActualLengthColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ActualLength\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.ActualLengthColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LiveLats {
                get {
                    try {
                        return ((double)(this[this.tableMasterArea.LiveLatsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LiveLats\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.LiveLatsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CXIsRemoved {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.CXIsRemovedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CXIsRemoved\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.CXIsRemovedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime M1Date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableMasterArea.M1DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'M1Date\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.M1DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime M2Date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableMasterArea.M2DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'M2Date\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.M2DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InstallDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableMasterArea.InstallDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'InstallDate\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.InstallDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FinalVideo {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableMasterArea.FinalVideoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FinalVideo\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.FinalVideoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.CommentsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Comments\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.CommentsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueIdentified {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.IssueIdentifiedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IssueIdentified\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.IssueIdentifiedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueResolved {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.IssueResolvedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IssueResolved\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.IssueResolvedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FullLengthLining {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.FullLengthLiningColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FullLengthLining\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.FullLengthLiningColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SubcontractorLining {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.SubcontractorLiningColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SubcontractorLining\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.SubcontractorLiningColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool OutOfScopeInArea {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.OutOfScopeInAreaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OutOfScopeInArea\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.OutOfScopeInAreaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueGivenToBayCity {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.IssueGivenToBayCityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IssueGivenToBayCity\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.IssueGivenToBayCityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConfirmedSize {
                get {
                    try {
                        return ((int)(this[this.tableMasterArea.ConfirmedSizeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ConfirmedSize\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.ConfirmedSizeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal InstallRate {
                get {
                    try {
                        return ((decimal)(this[this.tableMasterArea.InstallRateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'InstallRate\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.InstallRateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeadlineDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableMasterArea.DeadlineDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DeadlineDate\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.DeadlineDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ProposedLiningDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableMasterArea.ProposedLiningDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ProposedLiningDate\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.ProposedLiningDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SalesIssue {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.SalesIssueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SalesIssue\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.SalesIssueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LFSIssue {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.LFSIssueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LFSIssue\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.LFSIssueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ClientIssue {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.ClientIssueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ClientIssue\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.ClientIssueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InvestigationIssue {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.InvestigationIssueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'InvestigationIssue\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.InvestigationIssueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PointLining {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.PointLiningColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PointLining\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.PointLiningColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Grouting {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.GroutingColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Grouting\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.GroutingColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LateralLining {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.LateralLiningColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LateralLining\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.LateralLiningColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime VacExDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableMasterArea.VacExDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VacExDate\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.VacExDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PusherDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableMasterArea.PusherDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PusherDate\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.PusherDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LinerOrdered {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableMasterArea.LinerOrderedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LinerOrdered\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.LinerOrderedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Restoration {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableMasterArea.RestorationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Restoration\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.RestorationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime GroutDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableMasterArea.GroutDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GroutDate\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.GroutDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool JLiner {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.JLinerColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'JLiner\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.JLinerColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RehabAssessment {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.RehabAssessmentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RehabAssessment\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.RehabAssessmentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EstimatedJoints {
                get {
                    try {
                        return ((int)(this[this.tableMasterArea.EstimatedJointsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EstimatedJoints\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.EstimatedJointsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int JointsTestSealed {
                get {
                    try {
                        return ((int)(this[this.tableMasterArea.JointsTestSealedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'JointsTestSealed\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.JointsTestSealedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreFlushDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableMasterArea.PreFlushDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PreFlushDate\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.PreFlushDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreVideoDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableMasterArea.PreVideoDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PreVideoDate\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.PreVideoDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMN {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.USMHMNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'USMHMN\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.USMHMNColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMN {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.DSMHMNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DSMHMN\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.DSMHMNColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.USMHDepthColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'USMHDepth\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.USMHDepthColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.DSMHDepthColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DSMHDepth\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.DSMHDepthColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementsTakenBy {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.MeasurementsTakenByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MeasurementsTakenBy\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.MeasurementsTakenByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SteelTapeThruPipe {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.SteelTapeThruPipeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SteelTapeThruPipe\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.SteelTapeThruPipeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth1200 {
                get {
                    try {
                        return ((double)(this[this.tableMasterArea.USMHAtMouth1200Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'USMHAtMouth1200\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.USMHAtMouth1200Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth100 {
                get {
                    try {
                        return ((double)(this[this.tableMasterArea.USMHAtMouth100Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'USMHAtMouth100\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.USMHAtMouth100Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth200 {
                get {
                    try {
                        return ((double)(this[this.tableMasterArea.USMHAtMouth200Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'USMHAtMouth200\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.USMHAtMouth200Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth300 {
                get {
                    try {
                        return ((double)(this[this.tableMasterArea.USMHAtMouth300Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'USMHAtMouth300\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.USMHAtMouth300Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth400 {
                get {
                    try {
                        return ((double)(this[this.tableMasterArea.USMHAtMouth400Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'USMHAtMouth400\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.USMHAtMouth400Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth500 {
                get {
                    try {
                        return ((double)(this[this.tableMasterArea.USMHAtMouth500Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'USMHAtMouth500\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.USMHAtMouth500Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth1200 {
                get {
                    try {
                        return ((double)(this[this.tableMasterArea.DSMHAtMouth1200Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DSMHAtMouth1200\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.DSMHAtMouth1200Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth100 {
                get {
                    try {
                        return ((double)(this[this.tableMasterArea.DSMHAtMouth100Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DSMHAtMouth100\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.DSMHAtMouth100Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth200 {
                get {
                    try {
                        return ((double)(this[this.tableMasterArea.DSMHAtMouth200Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DSMHAtMouth200\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.DSMHAtMouth200Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth300 {
                get {
                    try {
                        return ((double)(this[this.tableMasterArea.DSMHAtMouth300Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DSMHAtMouth300\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.DSMHAtMouth300Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth400 {
                get {
                    try {
                        return ((double)(this[this.tableMasterArea.DSMHAtMouth400Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DSMHAtMouth400\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.DSMHAtMouth400Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth500 {
                get {
                    try {
                        return ((double)(this[this.tableMasterArea.DSMHAtMouth500Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DSMHAtMouth500\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.DSMHAtMouth500Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HydrantAddress {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.HydrantAddressColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HydrantAddress\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.HydrantAddressColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistanceToInversionMH {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.DistanceToInversionMHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DistanceToInversionMH\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.DistanceToInversionMHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RampsRequired {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.RampsRequiredColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RampsRequired\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.RampsRequiredColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DegreeOfTrafficControl {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.DegreeOfTrafficControlColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DegreeOfTrafficControl\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.DegreeOfTrafficControlColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool StandarBypass {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.StandarBypassColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StandarBypass\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.StandarBypassColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HydroWireDetails {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.HydroWireDetailsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HydroWireDetails\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.HydroWireDetailsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PipeMaterialType {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.PipeMaterialTypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PipeMaterialType\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.PipeMaterialTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CappedLaterals {
                get {
                    try {
                        return ((int)(this[this.tableMasterArea.CappedLateralsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CappedLaterals\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.CappedLateralsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RoboticPrepRequired {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.RoboticPrepRequiredColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RoboticPrepRequired\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.RoboticPrepRequiredColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PipeSizeChange {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.PipeSizeChangeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PipeSizeChange\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.PipeSizeChangeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string M1Comments {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.M1CommentsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'M1Comments\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.M1CommentsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoDoneFrom {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.VideoDoneFromColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VideoDoneFrom\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.VideoDoneFromColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToManhole {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.ToManholeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ToManhole\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.ToManholeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CutterDescriptionDuringMeasuring {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.CutterDescriptionDuringMeasuringColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CutterDescriptionDuringMeasuring\' in table \'MasterArea\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.CutterDescriptionDuringMeasuringColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FullLengthPointLiner {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.FullLengthPointLinerColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FullLengthPointLiner\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.FullLengthPointLinerColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BypassRequired {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.BypassRequiredColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BypassRequired\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.BypassRequiredColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RoboticDistances {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.RoboticDistancesColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RoboticDistances\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.RoboticDistancesColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrafficControlDetails {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.TrafficControlDetailsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TrafficControlDetails\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.TrafficControlDetailsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LineWithID {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.LineWithIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LineWithID\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.LineWithIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SchoolZone {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.SchoolZoneColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SchoolZone\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.SchoolZoneColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RestaurantArea {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.RestaurantAreaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RestaurantArea\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.RestaurantAreaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CarwashLaundromat {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.CarwashLaundromatColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CarwashLaundromat\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.CarwashLaundromatColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HydroPulley {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.HydroPulleyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HydroPulley\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.HydroPulleyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FridgeCart {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.FridgeCartColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FridgeCart\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.FridgeCartColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TwoInchPump {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.TwoInchPumpColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TwoInchPump\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.TwoInchPumpColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SixInchBypass {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.SixInchBypassColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SixInchBypass\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.SixInchBypassColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Scaffolding {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.ScaffoldingColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Scaffolding\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.ScaffoldingColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WinchExtension {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.WinchExtensionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WinchExtension\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.WinchExtensionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ExtraGenerator {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.ExtraGeneratorColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ExtraGenerator\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.ExtraGeneratorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool GreyCableExtension {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.GreyCableExtensionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GreyCableExtension\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.GreyCableExtensionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EasementMats {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.EasementMatsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EasementMats\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.EasementMatsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementType {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.MeasurementTypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MeasurementType\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.MeasurementTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DropPipe {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.DropPipeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DropPipe\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.DropPipeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DropPipeInvertDepth {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.DropPipeInvertDepthColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DropPipeInvertDepth\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.DropPipeInvertDepthColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.DeletedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Deleted\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.DeletedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasuredFromManhole {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.MeasuredFromManholeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MeasuredFromManhole\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.MeasuredFromManholeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MainLined {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.MainLinedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MainLined\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.MainLinedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BenchingIssue {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.BenchingIssueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BenchingIssue\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.BenchingIssueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Archived {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.ArchivedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Archived\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.ArchivedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ScaledLength1 {
                get {
                    try {
                        return ((double)(this[this.tableMasterArea.ScaledLength1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ScaledLength1\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.ScaledLength1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string History {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.HistoryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'History\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.HistoryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumLats {
                get {
                    try {
                        return ((int)(this[this.tableMasterArea.NumLatsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NumLats\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.NumLatsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NotLinedYet {
                get {
                    try {
                        return ((int)(this[this.tableMasterArea.NotLinedYetColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NotLinedYet\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.NotLinedYetColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AllMeasured {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.AllMeasuredColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AllMeasured\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.AllMeasuredColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.CityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'City\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.CityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProvState {
                get {
                    try {
                        return ((string)(this[this.tableMasterArea.ProvStateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ProvState\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.ProvStateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssueWithLaterals {
                get {
                    return ((string)(this[this.tableMasterArea.IssueWithLateralsColumn]));
                }
                set {
                    this[this.tableMasterArea.IssueWithLateralsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NotMeasuredYet {
                get {
                    try {
                        return ((int)(this[this.tableMasterArea.NotMeasuredYetColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NotMeasuredYet\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.NotMeasuredYetColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NotDeliveredYet {
                get {
                    try {
                        return ((int)(this[this.tableMasterArea.NotDeliveredYetColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NotDeliveredYet\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.NotDeliveredYetColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Selected {
                get {
                    try {
                        return ((bool)(this[this.tableMasterArea.SelectedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Selected\' in table \'MasterArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMasterArea.SelectedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientIDNull() {
                return this.IsNull(this.tableMasterArea.ClientIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientIDNull() {
                this[this.tableMasterArea.ClientIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANIES_IDNull() {
                return this.IsNull(this.tableMasterArea.COMPANIES_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANIES_IDNull() {
                this[this.tableMasterArea.COMPANIES_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubAreaNull() {
                return this.IsNull(this.tableMasterArea.SubAreaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubAreaNull() {
                this[this.tableMasterArea.SubAreaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNull() {
                return this.IsNull(this.tableMasterArea.StreetColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNull() {
                this[this.tableMasterArea.StreetColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHNull() {
                return this.IsNull(this.tableMasterArea.USMHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHNull() {
                this[this.tableMasterArea.USMHColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHNull() {
                return this.IsNull(this.tableMasterArea.DSMHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHNull() {
                this[this.tableMasterArea.DSMHColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSize_Null() {
                return this.IsNull(this.tableMasterArea.Size_Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSize_Null() {
                this[this.tableMasterArea.Size_Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScaledLengthNull() {
                return this.IsNull(this.tableMasterArea.ScaledLengthColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScaledLengthNull() {
                this[this.tableMasterArea.ScaledLengthColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP1DateNull() {
                return this.IsNull(this.tableMasterArea.P1DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP1DateNull() {
                this[this.tableMasterArea.P1DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActualLengthNull() {
                return this.IsNull(this.tableMasterArea.ActualLengthColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActualLengthNull() {
                this[this.tableMasterArea.ActualLengthColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLiveLatsNull() {
                return this.IsNull(this.tableMasterArea.LiveLatsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLiveLatsNull() {
                this[this.tableMasterArea.LiveLatsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCXIsRemovedNull() {
                return this.IsNull(this.tableMasterArea.CXIsRemovedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCXIsRemovedNull() {
                this[this.tableMasterArea.CXIsRemovedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM1DateNull() {
                return this.IsNull(this.tableMasterArea.M1DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM1DateNull() {
                this[this.tableMasterArea.M1DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM2DateNull() {
                return this.IsNull(this.tableMasterArea.M2DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM2DateNull() {
                this[this.tableMasterArea.M2DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallDateNull() {
                return this.IsNull(this.tableMasterArea.InstallDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallDateNull() {
                this[this.tableMasterArea.InstallDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalVideoNull() {
                return this.IsNull(this.tableMasterArea.FinalVideoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalVideoNull() {
                this[this.tableMasterArea.FinalVideoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableMasterArea.CommentsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableMasterArea.CommentsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueIdentifiedNull() {
                return this.IsNull(this.tableMasterArea.IssueIdentifiedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueIdentifiedNull() {
                this[this.tableMasterArea.IssueIdentifiedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueResolvedNull() {
                return this.IsNull(this.tableMasterArea.IssueResolvedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueResolvedNull() {
                this[this.tableMasterArea.IssueResolvedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullLengthLiningNull() {
                return this.IsNull(this.tableMasterArea.FullLengthLiningColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullLengthLiningNull() {
                this[this.tableMasterArea.FullLengthLiningColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubcontractorLiningNull() {
                return this.IsNull(this.tableMasterArea.SubcontractorLiningColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubcontractorLiningNull() {
                this[this.tableMasterArea.SubcontractorLiningColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutOfScopeInAreaNull() {
                return this.IsNull(this.tableMasterArea.OutOfScopeInAreaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutOfScopeInAreaNull() {
                this[this.tableMasterArea.OutOfScopeInAreaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueGivenToBayCityNull() {
                return this.IsNull(this.tableMasterArea.IssueGivenToBayCityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueGivenToBayCityNull() {
                this[this.tableMasterArea.IssueGivenToBayCityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConfirmedSizeNull() {
                return this.IsNull(this.tableMasterArea.ConfirmedSizeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConfirmedSizeNull() {
                this[this.tableMasterArea.ConfirmedSizeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallRateNull() {
                return this.IsNull(this.tableMasterArea.InstallRateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallRateNull() {
                this[this.tableMasterArea.InstallRateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeadlineDateNull() {
                return this.IsNull(this.tableMasterArea.DeadlineDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeadlineDateNull() {
                this[this.tableMasterArea.DeadlineDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProposedLiningDateNull() {
                return this.IsNull(this.tableMasterArea.ProposedLiningDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProposedLiningDateNull() {
                this[this.tableMasterArea.ProposedLiningDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesIssueNull() {
                return this.IsNull(this.tableMasterArea.SalesIssueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesIssueNull() {
                this[this.tableMasterArea.SalesIssueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLFSIssueNull() {
                return this.IsNull(this.tableMasterArea.LFSIssueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLFSIssueNull() {
                this[this.tableMasterArea.LFSIssueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientIssueNull() {
                return this.IsNull(this.tableMasterArea.ClientIssueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientIssueNull() {
                this[this.tableMasterArea.ClientIssueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestigationIssueNull() {
                return this.IsNull(this.tableMasterArea.InvestigationIssueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestigationIssueNull() {
                this[this.tableMasterArea.InvestigationIssueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPointLiningNull() {
                return this.IsNull(this.tableMasterArea.PointLiningColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPointLiningNull() {
                this[this.tableMasterArea.PointLiningColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroutingNull() {
                return this.IsNull(this.tableMasterArea.GroutingColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroutingNull() {
                this[this.tableMasterArea.GroutingColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateralLiningNull() {
                return this.IsNull(this.tableMasterArea.LateralLiningColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateralLiningNull() {
                this[this.tableMasterArea.LateralLiningColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacExDateNull() {
                return this.IsNull(this.tableMasterArea.VacExDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVacExDateNull() {
                this[this.tableMasterArea.VacExDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPusherDateNull() {
                return this.IsNull(this.tableMasterArea.PusherDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPusherDateNull() {
                this[this.tableMasterArea.PusherDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerOrderedNull() {
                return this.IsNull(this.tableMasterArea.LinerOrderedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerOrderedNull() {
                this[this.tableMasterArea.LinerOrderedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestorationNull() {
                return this.IsNull(this.tableMasterArea.RestorationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestorationNull() {
                this[this.tableMasterArea.RestorationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroutDateNull() {
                return this.IsNull(this.tableMasterArea.GroutDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroutDateNull() {
                this[this.tableMasterArea.GroutDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJLinerNull() {
                return this.IsNull(this.tableMasterArea.JLinerColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJLinerNull() {
                this[this.tableMasterArea.JLinerColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRehabAssessmentNull() {
                return this.IsNull(this.tableMasterArea.RehabAssessmentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRehabAssessmentNull() {
                this[this.tableMasterArea.RehabAssessmentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimatedJointsNull() {
                return this.IsNull(this.tableMasterArea.EstimatedJointsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimatedJointsNull() {
                this[this.tableMasterArea.EstimatedJointsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJointsTestSealedNull() {
                return this.IsNull(this.tableMasterArea.JointsTestSealedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJointsTestSealedNull() {
                this[this.tableMasterArea.JointsTestSealedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreFlushDateNull() {
                return this.IsNull(this.tableMasterArea.PreFlushDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreFlushDateNull() {
                this[this.tableMasterArea.PreFlushDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreVideoDateNull() {
                return this.IsNull(this.tableMasterArea.PreVideoDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreVideoDateNull() {
                this[this.tableMasterArea.PreVideoDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMNNull() {
                return this.IsNull(this.tableMasterArea.USMHMNColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMNNull() {
                this[this.tableMasterArea.USMHMNColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMNNull() {
                return this.IsNull(this.tableMasterArea.DSMHMNColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMNNull() {
                this[this.tableMasterArea.DSMHMNColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHDepthNull() {
                return this.IsNull(this.tableMasterArea.USMHDepthColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHDepthNull() {
                this[this.tableMasterArea.USMHDepthColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHDepthNull() {
                return this.IsNull(this.tableMasterArea.DSMHDepthColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHDepthNull() {
                this[this.tableMasterArea.DSMHDepthColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementsTakenByNull() {
                return this.IsNull(this.tableMasterArea.MeasurementsTakenByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementsTakenByNull() {
                this[this.tableMasterArea.MeasurementsTakenByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSteelTapeThruPipeNull() {
                return this.IsNull(this.tableMasterArea.SteelTapeThruPipeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSteelTapeThruPipeNull() {
                this[this.tableMasterArea.SteelTapeThruPipeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth1200Null() {
                return this.IsNull(this.tableMasterArea.USMHAtMouth1200Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth1200Null() {
                this[this.tableMasterArea.USMHAtMouth1200Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth100Null() {
                return this.IsNull(this.tableMasterArea.USMHAtMouth100Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth100Null() {
                this[this.tableMasterArea.USMHAtMouth100Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth200Null() {
                return this.IsNull(this.tableMasterArea.USMHAtMouth200Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth200Null() {
                this[this.tableMasterArea.USMHAtMouth200Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth300Null() {
                return this.IsNull(this.tableMasterArea.USMHAtMouth300Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth300Null() {
                this[this.tableMasterArea.USMHAtMouth300Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth400Null() {
                return this.IsNull(this.tableMasterArea.USMHAtMouth400Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth400Null() {
                this[this.tableMasterArea.USMHAtMouth400Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth500Null() {
                return this.IsNull(this.tableMasterArea.USMHAtMouth500Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth500Null() {
                this[this.tableMasterArea.USMHAtMouth500Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth1200Null() {
                return this.IsNull(this.tableMasterArea.DSMHAtMouth1200Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth1200Null() {
                this[this.tableMasterArea.DSMHAtMouth1200Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth100Null() {
                return this.IsNull(this.tableMasterArea.DSMHAtMouth100Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth100Null() {
                this[this.tableMasterArea.DSMHAtMouth100Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth200Null() {
                return this.IsNull(this.tableMasterArea.DSMHAtMouth200Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth200Null() {
                this[this.tableMasterArea.DSMHAtMouth200Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth300Null() {
                return this.IsNull(this.tableMasterArea.DSMHAtMouth300Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth300Null() {
                this[this.tableMasterArea.DSMHAtMouth300Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth400Null() {
                return this.IsNull(this.tableMasterArea.DSMHAtMouth400Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth400Null() {
                this[this.tableMasterArea.DSMHAtMouth400Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth500Null() {
                return this.IsNull(this.tableMasterArea.DSMHAtMouth500Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth500Null() {
                this[this.tableMasterArea.DSMHAtMouth500Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydrantAddressNull() {
                return this.IsNull(this.tableMasterArea.HydrantAddressColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydrantAddressNull() {
                this[this.tableMasterArea.HydrantAddressColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceToInversionMHNull() {
                return this.IsNull(this.tableMasterArea.DistanceToInversionMHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceToInversionMHNull() {
                this[this.tableMasterArea.DistanceToInversionMHColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRampsRequiredNull() {
                return this.IsNull(this.tableMasterArea.RampsRequiredColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRampsRequiredNull() {
                this[this.tableMasterArea.RampsRequiredColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDegreeOfTrafficControlNull() {
                return this.IsNull(this.tableMasterArea.DegreeOfTrafficControlColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDegreeOfTrafficControlNull() {
                this[this.tableMasterArea.DegreeOfTrafficControlColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandarBypassNull() {
                return this.IsNull(this.tableMasterArea.StandarBypassColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandarBypassNull() {
                this[this.tableMasterArea.StandarBypassColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydroWireDetailsNull() {
                return this.IsNull(this.tableMasterArea.HydroWireDetailsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydroWireDetailsNull() {
                this[this.tableMasterArea.HydroWireDetailsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPipeMaterialTypeNull() {
                return this.IsNull(this.tableMasterArea.PipeMaterialTypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPipeMaterialTypeNull() {
                this[this.tableMasterArea.PipeMaterialTypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCappedLateralsNull() {
                return this.IsNull(this.tableMasterArea.CappedLateralsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCappedLateralsNull() {
                this[this.tableMasterArea.CappedLateralsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoboticPrepRequiredNull() {
                return this.IsNull(this.tableMasterArea.RoboticPrepRequiredColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoboticPrepRequiredNull() {
                this[this.tableMasterArea.RoboticPrepRequiredColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPipeSizeChangeNull() {
                return this.IsNull(this.tableMasterArea.PipeSizeChangeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPipeSizeChangeNull() {
                this[this.tableMasterArea.PipeSizeChangeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM1CommentsNull() {
                return this.IsNull(this.tableMasterArea.M1CommentsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM1CommentsNull() {
                this[this.tableMasterArea.M1CommentsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoDoneFromNull() {
                return this.IsNull(this.tableMasterArea.VideoDoneFromColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoDoneFromNull() {
                this[this.tableMasterArea.VideoDoneFromColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToManholeNull() {
                return this.IsNull(this.tableMasterArea.ToManholeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToManholeNull() {
                this[this.tableMasterArea.ToManholeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCutterDescriptionDuringMeasuringNull() {
                return this.IsNull(this.tableMasterArea.CutterDescriptionDuringMeasuringColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCutterDescriptionDuringMeasuringNull() {
                this[this.tableMasterArea.CutterDescriptionDuringMeasuringColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullLengthPointLinerNull() {
                return this.IsNull(this.tableMasterArea.FullLengthPointLinerColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullLengthPointLinerNull() {
                this[this.tableMasterArea.FullLengthPointLinerColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBypassRequiredNull() {
                return this.IsNull(this.tableMasterArea.BypassRequiredColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBypassRequiredNull() {
                this[this.tableMasterArea.BypassRequiredColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoboticDistancesNull() {
                return this.IsNull(this.tableMasterArea.RoboticDistancesColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoboticDistancesNull() {
                this[this.tableMasterArea.RoboticDistancesColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrafficControlDetailsNull() {
                return this.IsNull(this.tableMasterArea.TrafficControlDetailsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrafficControlDetailsNull() {
                this[this.tableMasterArea.TrafficControlDetailsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineWithIDNull() {
                return this.IsNull(this.tableMasterArea.LineWithIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineWithIDNull() {
                this[this.tableMasterArea.LineWithIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchoolZoneNull() {
                return this.IsNull(this.tableMasterArea.SchoolZoneColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchoolZoneNull() {
                this[this.tableMasterArea.SchoolZoneColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestaurantAreaNull() {
                return this.IsNull(this.tableMasterArea.RestaurantAreaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestaurantAreaNull() {
                this[this.tableMasterArea.RestaurantAreaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarwashLaundromatNull() {
                return this.IsNull(this.tableMasterArea.CarwashLaundromatColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarwashLaundromatNull() {
                this[this.tableMasterArea.CarwashLaundromatColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydroPulleyNull() {
                return this.IsNull(this.tableMasterArea.HydroPulleyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydroPulleyNull() {
                this[this.tableMasterArea.HydroPulleyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFridgeCartNull() {
                return this.IsNull(this.tableMasterArea.FridgeCartColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFridgeCartNull() {
                this[this.tableMasterArea.FridgeCartColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTwoInchPumpNull() {
                return this.IsNull(this.tableMasterArea.TwoInchPumpColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTwoInchPumpNull() {
                this[this.tableMasterArea.TwoInchPumpColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSixInchBypassNull() {
                return this.IsNull(this.tableMasterArea.SixInchBypassColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSixInchBypassNull() {
                this[this.tableMasterArea.SixInchBypassColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScaffoldingNull() {
                return this.IsNull(this.tableMasterArea.ScaffoldingColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScaffoldingNull() {
                this[this.tableMasterArea.ScaffoldingColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWinchExtensionNull() {
                return this.IsNull(this.tableMasterArea.WinchExtensionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWinchExtensionNull() {
                this[this.tableMasterArea.WinchExtensionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraGeneratorNull() {
                return this.IsNull(this.tableMasterArea.ExtraGeneratorColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraGeneratorNull() {
                this[this.tableMasterArea.ExtraGeneratorColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGreyCableExtensionNull() {
                return this.IsNull(this.tableMasterArea.GreyCableExtensionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGreyCableExtensionNull() {
                this[this.tableMasterArea.GreyCableExtensionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEasementMatsNull() {
                return this.IsNull(this.tableMasterArea.EasementMatsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEasementMatsNull() {
                this[this.tableMasterArea.EasementMatsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementTypeNull() {
                return this.IsNull(this.tableMasterArea.MeasurementTypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementTypeNull() {
                this[this.tableMasterArea.MeasurementTypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDropPipeNull() {
                return this.IsNull(this.tableMasterArea.DropPipeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDropPipeNull() {
                this[this.tableMasterArea.DropPipeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDropPipeInvertDepthNull() {
                return this.IsNull(this.tableMasterArea.DropPipeInvertDepthColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDropPipeInvertDepthNull() {
                this[this.tableMasterArea.DropPipeInvertDepthColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedNull() {
                return this.IsNull(this.tableMasterArea.DeletedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedNull() {
                this[this.tableMasterArea.DeletedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasuredFromManholeNull() {
                return this.IsNull(this.tableMasterArea.MeasuredFromManholeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasuredFromManholeNull() {
                this[this.tableMasterArea.MeasuredFromManholeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMainLinedNull() {
                return this.IsNull(this.tableMasterArea.MainLinedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMainLinedNull() {
                this[this.tableMasterArea.MainLinedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBenchingIssueNull() {
                return this.IsNull(this.tableMasterArea.BenchingIssueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBenchingIssueNull() {
                this[this.tableMasterArea.BenchingIssueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArchivedNull() {
                return this.IsNull(this.tableMasterArea.ArchivedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArchivedNull() {
                this[this.tableMasterArea.ArchivedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScaledLength1Null() {
                return this.IsNull(this.tableMasterArea.ScaledLength1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScaledLength1Null() {
                this[this.tableMasterArea.ScaledLength1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryNull() {
                return this.IsNull(this.tableMasterArea.HistoryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryNull() {
                this[this.tableMasterArea.HistoryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumLatsNull() {
                return this.IsNull(this.tableMasterArea.NumLatsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumLatsNull() {
                this[this.tableMasterArea.NumLatsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotLinedYetNull() {
                return this.IsNull(this.tableMasterArea.NotLinedYetColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotLinedYetNull() {
                this[this.tableMasterArea.NotLinedYetColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAllMeasuredNull() {
                return this.IsNull(this.tableMasterArea.AllMeasuredColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAllMeasuredNull() {
                this[this.tableMasterArea.AllMeasuredColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableMasterArea.CityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableMasterArea.CityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProvStateNull() {
                return this.IsNull(this.tableMasterArea.ProvStateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProvStateNull() {
                this[this.tableMasterArea.ProvStateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotMeasuredYetNull() {
                return this.IsNull(this.tableMasterArea.NotMeasuredYetColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotMeasuredYetNull() {
                this[this.tableMasterArea.NotMeasuredYetColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotDeliveredYetNull() {
                return this.IsNull(this.tableMasterArea.NotDeliveredYetColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotDeliveredYetNull() {
                this[this.tableMasterArea.NotDeliveredYetColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectedNull() {
                return this.IsNull(this.tableMasterArea.SelectedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectedNull() {
                this[this.tableMasterArea.SelectedColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class JunctionLiner2Row : System.Data.DataRow {
            
            private JunctionLiner2DataTable tableJunctionLiner2;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal JunctionLiner2Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableJunctionLiner2 = ((JunctionLiner2DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((System.Guid)(this[this.tableJunctionLiner2.IDColumn]));
                }
                set {
                    this[this.tableJunctionLiner2.IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableJunctionLiner2.RefIDColumn]));
                }
                set {
                    this[this.tableJunctionLiner2.RefIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableJunctionLiner2.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableJunctionLiner2.COMPANY_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DetailID {
                get {
                    try {
                        return ((string)(this[this.tableJunctionLiner2.DetailIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DetailID\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.DetailIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableJunctionLiner2.AddressColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.AddressColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PipeLocated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.PipeLocatedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PipeLocated\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.PipeLocatedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ServicesLocated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.ServicesLocatedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ServicesLocated\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.ServicesLocatedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CoInstalled {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.CoInstalledColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CoInstalled\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.CoInstalledColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BackfilledConcrete {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.BackfilledConcreteColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BackfilledConcrete\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.BackfilledConcreteColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BackfilledSoil {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.BackfilledSoilColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BackfilledSoil\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.BackfilledSoilColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Grouted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.GroutedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Grouted\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.GroutedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Cored {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.CoredColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Cored\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.CoredColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Prepped {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.PreppedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prepped\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.PreppedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Measured {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.MeasuredColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Measured\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.MeasuredColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinerSize {
                get {
                    try {
                        return ((string)(this[this.tableJunctionLiner2.LinerSizeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LinerSize\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.LinerSizeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InProcess {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.InProcessColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'InProcess\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.InProcessColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InStock {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.InStockColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'InStock\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.InStockColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Delivered {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.DeliveredColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Delivered\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.DeliveredColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BuildRebuild {
                get {
                    try {
                        return ((int)(this[this.tableJunctionLiner2.BuildRebuildColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BuildRebuild\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.BuildRebuildColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreVideo {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.PreVideoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PreVideo\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.PreVideoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LinerInstalled {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.LinerInstalledColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LinerInstalled\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.LinerInstalledColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FinalVideo {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.FinalVideoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FinalVideo\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.FinalVideoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DistanceFromUSMH {
                get {
                    try {
                        return ((double)(this[this.tableJunctionLiner2.DistanceFromUSMHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DistanceFromUSMH\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.DistanceFromUSMHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DistanceFromDSMH {
                get {
                    try {
                        return ((double)(this[this.tableJunctionLiner2.DistanceFromDSMHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DistanceFromDSMH\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.DistanceFromDSMHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Map {
                get {
                    try {
                        return ((string)(this[this.tableJunctionLiner2.MapColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Map\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.MapColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issue {
                get {
                    return ((string)(this[this.tableJunctionLiner2.IssueColumn]));
                }
                set {
                    this[this.tableJunctionLiner2.IssueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cost {
                get {
                    try {
                        return ((decimal)(this[this.tableJunctionLiner2.CostColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Cost\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.CostColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    try {
                        return ((bool)(this[this.tableJunctionLiner2.DeletedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Deleted\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.DeletedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime VideoInspection {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.VideoInspectionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VideoInspection\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.VideoInspectionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CoRequired {
                get {
                    return ((bool)(this[this.tableJunctionLiner2.CoRequiredColumn]));
                }
                set {
                    this[this.tableJunctionLiner2.CoRequiredColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PitRequired {
                get {
                    return ((bool)(this[this.tableJunctionLiner2.PitRequiredColumn]));
                }
                set {
                    this[this.tableJunctionLiner2.PitRequiredColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CoPitLocation {
                get {
                    try {
                        return ((string)(this[this.tableJunctionLiner2.CoPitLocationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CoPitLocation\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.CoPitLocationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PostContractDigRequired {
                get {
                    return ((bool)(this[this.tableJunctionLiner2.PostContractDigRequiredColumn]));
                }
                set {
                    this[this.tableJunctionLiner2.PostContractDigRequiredColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableJunctionLiner2.CommentsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Comments\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.CommentsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string History {
                get {
                    try {
                        return ((string)(this[this.tableJunctionLiner2.HistoryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'History\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.HistoryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CoCutDown {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.CoCutDownColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CoCutDown\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.CoCutDownColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FinalRestoration {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.FinalRestorationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FinalRestoration\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.FinalRestorationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientLateralID {
                get {
                    try {
                        return ((string)(this[this.tableJunctionLiner2.ClientLateralIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ClientLateralID\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.ClientLateralIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoLengthToPropertyLine {
                get {
                    try {
                        return ((string)(this[this.tableJunctionLiner2.VideoLengthToPropertyLineColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VideoLengthToPropertyLine\' in table \'JunctionLiner2\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.VideoLengthToPropertyLineColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LiningThruCo {
                get {
                    return ((bool)(this[this.tableJunctionLiner2.LiningThruCoColumn]));
                }
                set {
                    this[this.tableJunctionLiner2.LiningThruCoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HamiltonInspectionNumber {
                get {
                    try {
                        return ((string)(this[this.tableJunctionLiner2.HamiltonInspectionNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HamiltonInspectionNumber\' in table \'JunctionLiner2\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.HamiltonInspectionNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NoticeDelivered {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableJunctionLiner2.NoticeDeliveredColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NoticeDelivered\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.NoticeDeliveredColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InDatabase {
                get {
                    try {
                        return ((bool)(this[this.tableJunctionLiner2.InDatabaseColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'InDatabase\' in table \'JunctionLiner2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJunctionLiner2.InDatabaseColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetailIDNull() {
                return this.IsNull(this.tableJunctionLiner2.DetailIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetailIDNull() {
                this[this.tableJunctionLiner2.DetailIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableJunctionLiner2.AddressColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableJunctionLiner2.AddressColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPipeLocatedNull() {
                return this.IsNull(this.tableJunctionLiner2.PipeLocatedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPipeLocatedNull() {
                this[this.tableJunctionLiner2.PipeLocatedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServicesLocatedNull() {
                return this.IsNull(this.tableJunctionLiner2.ServicesLocatedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServicesLocatedNull() {
                this[this.tableJunctionLiner2.ServicesLocatedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCoInstalledNull() {
                return this.IsNull(this.tableJunctionLiner2.CoInstalledColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCoInstalledNull() {
                this[this.tableJunctionLiner2.CoInstalledColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackfilledConcreteNull() {
                return this.IsNull(this.tableJunctionLiner2.BackfilledConcreteColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackfilledConcreteNull() {
                this[this.tableJunctionLiner2.BackfilledConcreteColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackfilledSoilNull() {
                return this.IsNull(this.tableJunctionLiner2.BackfilledSoilColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackfilledSoilNull() {
                this[this.tableJunctionLiner2.BackfilledSoilColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroutedNull() {
                return this.IsNull(this.tableJunctionLiner2.GroutedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroutedNull() {
                this[this.tableJunctionLiner2.GroutedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCoredNull() {
                return this.IsNull(this.tableJunctionLiner2.CoredColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCoredNull() {
                this[this.tableJunctionLiner2.CoredColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreppedNull() {
                return this.IsNull(this.tableJunctionLiner2.PreppedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreppedNull() {
                this[this.tableJunctionLiner2.PreppedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasuredNull() {
                return this.IsNull(this.tableJunctionLiner2.MeasuredColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasuredNull() {
                this[this.tableJunctionLiner2.MeasuredColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerSizeNull() {
                return this.IsNull(this.tableJunctionLiner2.LinerSizeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerSizeNull() {
                this[this.tableJunctionLiner2.LinerSizeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInProcessNull() {
                return this.IsNull(this.tableJunctionLiner2.InProcessColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInProcessNull() {
                this[this.tableJunctionLiner2.InProcessColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInStockNull() {
                return this.IsNull(this.tableJunctionLiner2.InStockColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInStockNull() {
                this[this.tableJunctionLiner2.InStockColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveredNull() {
                return this.IsNull(this.tableJunctionLiner2.DeliveredColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveredNull() {
                this[this.tableJunctionLiner2.DeliveredColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuildRebuildNull() {
                return this.IsNull(this.tableJunctionLiner2.BuildRebuildColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuildRebuildNull() {
                this[this.tableJunctionLiner2.BuildRebuildColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreVideoNull() {
                return this.IsNull(this.tableJunctionLiner2.PreVideoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreVideoNull() {
                this[this.tableJunctionLiner2.PreVideoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerInstalledNull() {
                return this.IsNull(this.tableJunctionLiner2.LinerInstalledColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerInstalledNull() {
                this[this.tableJunctionLiner2.LinerInstalledColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalVideoNull() {
                return this.IsNull(this.tableJunctionLiner2.FinalVideoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalVideoNull() {
                this[this.tableJunctionLiner2.FinalVideoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceFromUSMHNull() {
                return this.IsNull(this.tableJunctionLiner2.DistanceFromUSMHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceFromUSMHNull() {
                this[this.tableJunctionLiner2.DistanceFromUSMHColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceFromDSMHNull() {
                return this.IsNull(this.tableJunctionLiner2.DistanceFromDSMHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceFromDSMHNull() {
                this[this.tableJunctionLiner2.DistanceFromDSMHColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMapNull() {
                return this.IsNull(this.tableJunctionLiner2.MapColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMapNull() {
                this[this.tableJunctionLiner2.MapColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostNull() {
                return this.IsNull(this.tableJunctionLiner2.CostColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostNull() {
                this[this.tableJunctionLiner2.CostColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedNull() {
                return this.IsNull(this.tableJunctionLiner2.DeletedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedNull() {
                this[this.tableJunctionLiner2.DeletedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoInspectionNull() {
                return this.IsNull(this.tableJunctionLiner2.VideoInspectionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoInspectionNull() {
                this[this.tableJunctionLiner2.VideoInspectionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCoPitLocationNull() {
                return this.IsNull(this.tableJunctionLiner2.CoPitLocationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCoPitLocationNull() {
                this[this.tableJunctionLiner2.CoPitLocationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableJunctionLiner2.CommentsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableJunctionLiner2.CommentsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryNull() {
                return this.IsNull(this.tableJunctionLiner2.HistoryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryNull() {
                this[this.tableJunctionLiner2.HistoryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCoCutDownNull() {
                return this.IsNull(this.tableJunctionLiner2.CoCutDownColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCoCutDownNull() {
                this[this.tableJunctionLiner2.CoCutDownColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalRestorationNull() {
                return this.IsNull(this.tableJunctionLiner2.FinalRestorationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalRestorationNull() {
                this[this.tableJunctionLiner2.FinalRestorationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientLateralIDNull() {
                return this.IsNull(this.tableJunctionLiner2.ClientLateralIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientLateralIDNull() {
                this[this.tableJunctionLiner2.ClientLateralIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoLengthToPropertyLineNull() {
                return this.IsNull(this.tableJunctionLiner2.VideoLengthToPropertyLineColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoLengthToPropertyLineNull() {
                this[this.tableJunctionLiner2.VideoLengthToPropertyLineColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHamiltonInspectionNumberNull() {
                return this.IsNull(this.tableJunctionLiner2.HamiltonInspectionNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHamiltonInspectionNumberNull() {
                this[this.tableJunctionLiner2.HamiltonInspectionNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoticeDeliveredNull() {
                return this.IsNull(this.tableJunctionLiner2.NoticeDeliveredColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoticeDeliveredNull() {
                this[this.tableJunctionLiner2.NoticeDeliveredColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInDatabaseNull() {
                return this.IsNull(this.tableJunctionLiner2.InDatabaseColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInDatabaseNull() {
                this[this.tableJunctionLiner2.InDatabaseColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class JunctionLiner2CommentRow : System.Data.DataRow {
            
            private JunctionLiner2CommentDataTable tableJunctionLiner2Comment;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal JunctionLiner2CommentRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableJunctionLiner2Comment = ((JunctionLiner2CommentDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((System.Guid)(this[this.tableJunctionLiner2Comment.IDColumn]));
                }
                set {
                    this[this.tableJunctionLiner2Comment.IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableJunctionLiner2Comment.RefIDColumn]));
                }
                set {
                    this[this.tableJunctionLiner2Comment.RefIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableJunctionLiner2Comment.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableJunctionLiner2Comment.COMPANY_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CommentID {
                get {
                    return ((int)(this[this.tableJunctionLiner2Comment.CommentIDColumn]));
                }
                set {
                    this[this.tableJunctionLiner2Comment.CommentIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTime_ {
                get {
                    return ((System.DateTime)(this[this.tableJunctionLiner2Comment.DateTime_Column]));
                }
                set {
                    this[this.tableJunctionLiner2Comment.DateTime_Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LoginID {
                get {
                    return ((int)(this[this.tableJunctionLiner2Comment.LoginIDColumn]));
                }
                set {
                    this[this.tableJunctionLiner2Comment.LoginIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    return ((string)(this[this.tableJunctionLiner2Comment.CommentColumn]));
                }
                set {
                    this[this.tableJunctionLiner2Comment.CommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableJunctionLiner2Comment.DeletedColumn]));
                }
                set {
                    this[this.tableJunctionLiner2Comment.DeletedColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MasterAreaRowChangeEvent : System.EventArgs {
            
            private MasterAreaRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MasterAreaRowChangeEvent(MasterAreaRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MasterAreaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class JunctionLiner2RowChangeEvent : System.EventArgs {
            
            private JunctionLiner2Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JunctionLiner2RowChangeEvent(JunctionLiner2Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JunctionLiner2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class JunctionLiner2CommentRowChangeEvent : System.EventArgs {
            
            private JunctionLiner2CommentRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JunctionLiner2CommentRowChangeEvent(JunctionLiner2CommentRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JunctionLiner2CommentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591