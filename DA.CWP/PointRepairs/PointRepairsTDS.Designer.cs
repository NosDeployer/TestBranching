//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3625
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.CWP.PointRepairs {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PointRepairsTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PointRepairsTDS : global::System.Data.DataSet {
        
        private SectionDetailsDataTable tableSectionDetails;
        
        private WorkDetailsDataTable tableWorkDetails;
        
        private RepairDetailsDataTable tableRepairDetails;
        
        private CommentDetailsDataTable tableCommentDetails;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PointRepairsTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PointRepairsTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SectionDetails"] != null)) {
                    base.Tables.Add(new SectionDetailsDataTable(ds.Tables["SectionDetails"]));
                }
                if ((ds.Tables["WorkDetails"] != null)) {
                    base.Tables.Add(new WorkDetailsDataTable(ds.Tables["WorkDetails"]));
                }
                if ((ds.Tables["RepairDetails"] != null)) {
                    base.Tables.Add(new RepairDetailsDataTable(ds.Tables["RepairDetails"]));
                }
                if ((ds.Tables["CommentDetails"] != null)) {
                    base.Tables.Add(new CommentDetailsDataTable(ds.Tables["CommentDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SectionDetailsDataTable SectionDetails {
            get {
                return this.tableSectionDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WorkDetailsDataTable WorkDetails {
            get {
                return this.tableWorkDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepairDetailsDataTable RepairDetails {
            get {
                return this.tableRepairDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CommentDetailsDataTable CommentDetails {
            get {
                return this.tableCommentDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            PointRepairsTDS cln = ((PointRepairsTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SectionDetails"] != null)) {
                    base.Tables.Add(new SectionDetailsDataTable(ds.Tables["SectionDetails"]));
                }
                if ((ds.Tables["WorkDetails"] != null)) {
                    base.Tables.Add(new WorkDetailsDataTable(ds.Tables["WorkDetails"]));
                }
                if ((ds.Tables["RepairDetails"] != null)) {
                    base.Tables.Add(new RepairDetailsDataTable(ds.Tables["RepairDetails"]));
                }
                if ((ds.Tables["CommentDetails"] != null)) {
                    base.Tables.Add(new CommentDetailsDataTable(ds.Tables["CommentDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSectionDetails = ((SectionDetailsDataTable)(base.Tables["SectionDetails"]));
            if ((initTable == true)) {
                if ((this.tableSectionDetails != null)) {
                    this.tableSectionDetails.InitVars();
                }
            }
            this.tableWorkDetails = ((WorkDetailsDataTable)(base.Tables["WorkDetails"]));
            if ((initTable == true)) {
                if ((this.tableWorkDetails != null)) {
                    this.tableWorkDetails.InitVars();
                }
            }
            this.tableRepairDetails = ((RepairDetailsDataTable)(base.Tables["RepairDetails"]));
            if ((initTable == true)) {
                if ((this.tableRepairDetails != null)) {
                    this.tableRepairDetails.InitVars();
                }
            }
            this.tableCommentDetails = ((CommentDetailsDataTable)(base.Tables["CommentDetails"]));
            if ((initTable == true)) {
                if ((this.tableCommentDetails != null)) {
                    this.tableCommentDetails.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "PointRepairsTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PointRepairsTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSectionDetails = new SectionDetailsDataTable();
            base.Tables.Add(this.tableSectionDetails);
            this.tableWorkDetails = new WorkDetailsDataTable();
            base.Tables.Add(this.tableWorkDetails);
            this.tableRepairDetails = new RepairDetailsDataTable();
            base.Tables.Add(this.tableRepairDetails);
            this.tableCommentDetails = new CommentDetailsDataTable();
            base.Tables.Add(this.tableCommentDetails);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSectionDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWorkDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRepairDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCommentDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PointRepairsTDS ds = new PointRepairsTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SectionDetailsRowChangeEventHandler(object sender, SectionDetailsRowChangeEvent e);
        
        public delegate void WorkDetailsRowChangeEventHandler(object sender, WorkDetailsRowChangeEvent e);
        
        public delegate void RepairDetailsRowChangeEventHandler(object sender, RepairDetailsRowChangeEvent e);
        
        public delegate void CommentDetailsRowChangeEventHandler(object sender, CommentDetailsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SectionDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnAssetID;
            
            private global::System.Data.DataColumn columnSectionID;
            
            private global::System.Data.DataColumn columnStreet;
            
            private global::System.Data.DataColumn columnUSMH;
            
            private global::System.Data.DataColumn columnDSMH;
            
            private global::System.Data.DataColumn columnMapSize;
            
            private global::System.Data.DataColumn columnSize_;
            
            private global::System.Data.DataColumn columnMapLength;
            
            private global::System.Data.DataColumn columnLength;
            
            private global::System.Data.DataColumn columnLaterals;
            
            private global::System.Data.DataColumn columnLiveLaterals;
            
            private global::System.Data.DataColumn columnUSMHDepth;
            
            private global::System.Data.DataColumn columnDSMHDepth;
            
            private global::System.Data.DataColumn columnSteelTapeThroughSewer;
            
            private global::System.Data.DataColumn columnUSMHMouth12;
            
            private global::System.Data.DataColumn columnUSMHMouth1;
            
            private global::System.Data.DataColumn columnUSMHMouth2;
            
            private global::System.Data.DataColumn columnUSMHMouth3;
            
            private global::System.Data.DataColumn columnUSMHMouth4;
            
            private global::System.Data.DataColumn columnUSMHMouth5;
            
            private global::System.Data.DataColumn columnDSMHMouth12;
            
            private global::System.Data.DataColumn columnDSMHMouth1;
            
            private global::System.Data.DataColumn columnDSMHMouth2;
            
            private global::System.Data.DataColumn columnDSMHMouth3;
            
            private global::System.Data.DataColumn columnDSMHMouth4;
            
            private global::System.Data.DataColumn columnDSMHMouth5;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnUSMHDescription;
            
            private global::System.Data.DataColumn columnDSMHDescription;
            
            private global::System.Data.DataColumn columnUSMHAddress;
            
            private global::System.Data.DataColumn columnDSMHAddress;
            
            private global::System.Data.DataColumn columnSubArea;
            
            private global::System.Data.DataColumn columnFlowOrderID;
            
            private global::System.Data.DataColumn columnOriginalSectionID;
            
            private global::System.Data.DataColumn columnThickness;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SectionDetailsDataTable() {
                this.TableName = "SectionDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SectionDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SectionDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetIDColumn {
                get {
                    return this.columnAssetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionIDColumn {
                get {
                    return this.columnSectionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHColumn {
                get {
                    return this.columnUSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHColumn {
                get {
                    return this.columnDSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MapSizeColumn {
                get {
                    return this.columnMapSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Size_Column {
                get {
                    return this.columnSize_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MapLengthColumn {
                get {
                    return this.columnMapLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralsColumn {
                get {
                    return this.columnLaterals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LiveLateralsColumn {
                get {
                    return this.columnLiveLaterals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHDepthColumn {
                get {
                    return this.columnUSMHDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHDepthColumn {
                get {
                    return this.columnDSMHDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SteelTapeThroughSewerColumn {
                get {
                    return this.columnSteelTapeThroughSewer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMouth12Column {
                get {
                    return this.columnUSMHMouth12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMouth1Column {
                get {
                    return this.columnUSMHMouth1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMouth2Column {
                get {
                    return this.columnUSMHMouth2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMouth3Column {
                get {
                    return this.columnUSMHMouth3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMouth4Column {
                get {
                    return this.columnUSMHMouth4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMouth5Column {
                get {
                    return this.columnUSMHMouth5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMouth12Column {
                get {
                    return this.columnDSMHMouth12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMouth1Column {
                get {
                    return this.columnDSMHMouth1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMouth2Column {
                get {
                    return this.columnDSMHMouth2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMouth3Column {
                get {
                    return this.columnDSMHMouth3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMouth4Column {
                get {
                    return this.columnDSMHMouth4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMouth5Column {
                get {
                    return this.columnDSMHMouth5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHDescriptionColumn {
                get {
                    return this.columnUSMHDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHDescriptionColumn {
                get {
                    return this.columnDSMHDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAddressColumn {
                get {
                    return this.columnUSMHAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAddressColumn {
                get {
                    return this.columnDSMHAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubAreaColumn {
                get {
                    return this.columnSubArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlowOrderIDColumn {
                get {
                    return this.columnFlowOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OriginalSectionIDColumn {
                get {
                    return this.columnOriginalSectionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThicknessColumn {
                get {
                    return this.columnThickness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SectionDetailsRow this[int index] {
                get {
                    return ((SectionDetailsRow)(this.Rows[index]));
                }
            }
            
            public event SectionDetailsRowChangeEventHandler SectionDetailsRowChanging;
            
            public event SectionDetailsRowChangeEventHandler SectionDetailsRowChanged;
            
            public event SectionDetailsRowChangeEventHandler SectionDetailsRowDeleting;
            
            public event SectionDetailsRowChangeEventHandler SectionDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSectionDetailsRow(SectionDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SectionDetailsRow AddSectionDetailsRow(
                        int WorkID, 
                        int AssetID, 
                        string SectionID, 
                        string Street, 
                        int USMH, 
                        int DSMH, 
                        string MapSize, 
                        string Size_, 
                        string MapLength, 
                        string Length, 
                        int Laterals, 
                        int LiveLaterals, 
                        string USMHDepth, 
                        string DSMHDepth, 
                        string SteelTapeThroughSewer, 
                        string USMHMouth12, 
                        string USMHMouth1, 
                        string USMHMouth2, 
                        string USMHMouth3, 
                        string USMHMouth4, 
                        string USMHMouth5, 
                        string DSMHMouth12, 
                        string DSMHMouth1, 
                        string DSMHMouth2, 
                        string DSMHMouth3, 
                        string DSMHMouth4, 
                        string DSMHMouth5, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        string USMHDescription, 
                        string DSMHDescription, 
                        string USMHAddress, 
                        string DSMHAddress, 
                        string SubArea, 
                        string FlowOrderID, 
                        string OriginalSectionID, 
                        string Thickness) {
                SectionDetailsRow rowSectionDetailsRow = ((SectionDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        AssetID,
                        SectionID,
                        Street,
                        USMH,
                        DSMH,
                        MapSize,
                        Size_,
                        MapLength,
                        Length,
                        Laterals,
                        LiveLaterals,
                        USMHDepth,
                        DSMHDepth,
                        SteelTapeThroughSewer,
                        USMHMouth12,
                        USMHMouth1,
                        USMHMouth2,
                        USMHMouth3,
                        USMHMouth4,
                        USMHMouth5,
                        DSMHMouth12,
                        DSMHMouth1,
                        DSMHMouth2,
                        DSMHMouth3,
                        DSMHMouth4,
                        DSMHMouth5,
                        Deleted,
                        COMPANY_ID,
                        USMHDescription,
                        DSMHDescription,
                        USMHAddress,
                        DSMHAddress,
                        SubArea,
                        FlowOrderID,
                        OriginalSectionID,
                        Thickness};
                rowSectionDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSectionDetailsRow);
                return rowSectionDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SectionDetailsRow FindByWorkID(int WorkID) {
                return ((SectionDetailsRow)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SectionDetailsDataTable cln = ((SectionDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SectionDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnAssetID = base.Columns["AssetID"];
                this.columnSectionID = base.Columns["SectionID"];
                this.columnStreet = base.Columns["Street"];
                this.columnUSMH = base.Columns["USMH"];
                this.columnDSMH = base.Columns["DSMH"];
                this.columnMapSize = base.Columns["MapSize"];
                this.columnSize_ = base.Columns["Size_"];
                this.columnMapLength = base.Columns["MapLength"];
                this.columnLength = base.Columns["Length"];
                this.columnLaterals = base.Columns["Laterals"];
                this.columnLiveLaterals = base.Columns["LiveLaterals"];
                this.columnUSMHDepth = base.Columns["USMHDepth"];
                this.columnDSMHDepth = base.Columns["DSMHDepth"];
                this.columnSteelTapeThroughSewer = base.Columns["SteelTapeThroughSewer"];
                this.columnUSMHMouth12 = base.Columns["USMHMouth12"];
                this.columnUSMHMouth1 = base.Columns["USMHMouth1"];
                this.columnUSMHMouth2 = base.Columns["USMHMouth2"];
                this.columnUSMHMouth3 = base.Columns["USMHMouth3"];
                this.columnUSMHMouth4 = base.Columns["USMHMouth4"];
                this.columnUSMHMouth5 = base.Columns["USMHMouth5"];
                this.columnDSMHMouth12 = base.Columns["DSMHMouth12"];
                this.columnDSMHMouth1 = base.Columns["DSMHMouth1"];
                this.columnDSMHMouth2 = base.Columns["DSMHMouth2"];
                this.columnDSMHMouth3 = base.Columns["DSMHMouth3"];
                this.columnDSMHMouth4 = base.Columns["DSMHMouth4"];
                this.columnDSMHMouth5 = base.Columns["DSMHMouth5"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnUSMHDescription = base.Columns["USMHDescription"];
                this.columnDSMHDescription = base.Columns["DSMHDescription"];
                this.columnUSMHAddress = base.Columns["USMHAddress"];
                this.columnDSMHAddress = base.Columns["DSMHAddress"];
                this.columnSubArea = base.Columns["SubArea"];
                this.columnFlowOrderID = base.Columns["FlowOrderID"];
                this.columnOriginalSectionID = base.Columns["OriginalSectionID"];
                this.columnThickness = base.Columns["Thickness"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnAssetID = new global::System.Data.DataColumn("AssetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetID);
                this.columnSectionID = new global::System.Data.DataColumn("SectionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionID);
                this.columnStreet = new global::System.Data.DataColumn("Street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnUSMH = new global::System.Data.DataColumn("USMH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMH);
                this.columnDSMH = new global::System.Data.DataColumn("DSMH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMH);
                this.columnMapSize = new global::System.Data.DataColumn("MapSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMapSize);
                this.columnSize_ = new global::System.Data.DataColumn("Size_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_);
                this.columnMapLength = new global::System.Data.DataColumn("MapLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMapLength);
                this.columnLength = new global::System.Data.DataColumn("Length", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLength);
                this.columnLaterals = new global::System.Data.DataColumn("Laterals", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaterals);
                this.columnLiveLaterals = new global::System.Data.DataColumn("LiveLaterals", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiveLaterals);
                this.columnUSMHDepth = new global::System.Data.DataColumn("USMHDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHDepth);
                this.columnDSMHDepth = new global::System.Data.DataColumn("DSMHDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHDepth);
                this.columnSteelTapeThroughSewer = new global::System.Data.DataColumn("SteelTapeThroughSewer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSteelTapeThroughSewer);
                this.columnUSMHMouth12 = new global::System.Data.DataColumn("USMHMouth12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMouth12);
                this.columnUSMHMouth1 = new global::System.Data.DataColumn("USMHMouth1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMouth1);
                this.columnUSMHMouth2 = new global::System.Data.DataColumn("USMHMouth2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMouth2);
                this.columnUSMHMouth3 = new global::System.Data.DataColumn("USMHMouth3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMouth3);
                this.columnUSMHMouth4 = new global::System.Data.DataColumn("USMHMouth4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMouth4);
                this.columnUSMHMouth5 = new global::System.Data.DataColumn("USMHMouth5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMouth5);
                this.columnDSMHMouth12 = new global::System.Data.DataColumn("DSMHMouth12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMouth12);
                this.columnDSMHMouth1 = new global::System.Data.DataColumn("DSMHMouth1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMouth1);
                this.columnDSMHMouth2 = new global::System.Data.DataColumn("DSMHMouth2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMouth2);
                this.columnDSMHMouth3 = new global::System.Data.DataColumn("DSMHMouth3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMouth3);
                this.columnDSMHMouth4 = new global::System.Data.DataColumn("DSMHMouth4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMouth4);
                this.columnDSMHMouth5 = new global::System.Data.DataColumn("DSMHMouth5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMouth5);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnUSMHDescription = new global::System.Data.DataColumn("USMHDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHDescription);
                this.columnDSMHDescription = new global::System.Data.DataColumn("DSMHDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHDescription);
                this.columnUSMHAddress = new global::System.Data.DataColumn("USMHAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAddress);
                this.columnDSMHAddress = new global::System.Data.DataColumn("DSMHAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAddress);
                this.columnSubArea = new global::System.Data.DataColumn("SubArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubArea);
                this.columnFlowOrderID = new global::System.Data.DataColumn("FlowOrderID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlowOrderID);
                this.columnOriginalSectionID = new global::System.Data.DataColumn("OriginalSectionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalSectionID);
                this.columnThickness = new global::System.Data.DataColumn("Thickness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThickness);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.Unique = true;
                this.columnWorkID.Caption = "AssetID_";
                this.columnSteelTapeThroughSewer.MaxLength = 25;
                this.columnUSMHMouth12.MaxLength = 25;
                this.columnUSMHMouth1.MaxLength = 25;
                this.columnUSMHMouth2.MaxLength = 25;
                this.columnUSMHMouth3.MaxLength = 25;
                this.columnUSMHMouth4.MaxLength = 25;
                this.columnUSMHMouth5.MaxLength = 25;
                this.columnDSMHMouth12.MaxLength = 25;
                this.columnDSMHMouth1.MaxLength = 25;
                this.columnDSMHMouth2.MaxLength = 25;
                this.columnDSMHMouth3.MaxLength = 25;
                this.columnDSMHMouth4.MaxLength = 25;
                this.columnDSMHMouth5.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SectionDetailsRow NewSectionDetailsRow() {
                return ((SectionDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SectionDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SectionDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SectionDetailsRowChanged != null)) {
                    this.SectionDetailsRowChanged(this, new SectionDetailsRowChangeEvent(((SectionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SectionDetailsRowChanging != null)) {
                    this.SectionDetailsRowChanging(this, new SectionDetailsRowChangeEvent(((SectionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SectionDetailsRowDeleted != null)) {
                    this.SectionDetailsRowDeleted(this, new SectionDetailsRowChangeEvent(((SectionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SectionDetailsRowDeleting != null)) {
                    this.SectionDetailsRowDeleting(this, new SectionDetailsRowChangeEvent(((SectionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSectionDetailsRow(SectionDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PointRepairsTDS ds = new PointRepairsTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SectionDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WorkDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnWorkIDFLL;
            
            private global::System.Data.DataColumn columnWorkIDRA;
            
            private global::System.Data.DataColumn columnClientID;
            
            private global::System.Data.DataColumn columnMeasurementTakenBy;
            
            private global::System.Data.DataColumn columnPreFlushDate;
            
            private global::System.Data.DataColumn columnPreVideoDate;
            
            private global::System.Data.DataColumn columnP1Date;
            
            private global::System.Data.DataColumn columnRepairConfirmationDate;
            
            private global::System.Data.DataColumn columnTrafficControl;
            
            private global::System.Data.DataColumn columnMaterial;
            
            private global::System.Data.DataColumn columnBypassRequired;
            
            private global::System.Data.DataColumn columnRoboticPrepRequired;
            
            private global::System.Data.DataColumn columnCXIsRemoved;
            
            private global::System.Data.DataColumn columnRoboticDistances;
            
            private global::System.Data.DataColumn columnProposedLiningDate;
            
            private global::System.Data.DataColumn columnDeadlineLiningDate;
            
            private global::System.Data.DataColumn columnFinalVideoDate;
            
            private global::System.Data.DataColumn columnEstimatedJoints;
            
            private global::System.Data.DataColumn columnJointsTestSealed;
            
            private global::System.Data.DataColumn columnIssueIdentified;
            
            private global::System.Data.DataColumn columnIssueLFS;
            
            private global::System.Data.DataColumn columnIssueClient;
            
            private global::System.Data.DataColumn columnIssueSales;
            
            private global::System.Data.DataColumn columnIssueGivenToClient;
            
            private global::System.Data.DataColumn columnIssueResolved;
            
            private global::System.Data.DataColumn columnIssueInvestigation;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnVideoLength;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkDetailsDataTable() {
                this.TableName = "WorkDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WorkDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WorkDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDFLLColumn {
                get {
                    return this.columnWorkIDFLL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDRAColumn {
                get {
                    return this.columnWorkIDRA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementTakenByColumn {
                get {
                    return this.columnMeasurementTakenBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreFlushDateColumn {
                get {
                    return this.columnPreFlushDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreVideoDateColumn {
                get {
                    return this.columnPreVideoDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P1DateColumn {
                get {
                    return this.columnP1Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RepairConfirmationDateColumn {
                get {
                    return this.columnRepairConfirmationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrafficControlColumn {
                get {
                    return this.columnTrafficControl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialColumn {
                get {
                    return this.columnMaterial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BypassRequiredColumn {
                get {
                    return this.columnBypassRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoboticPrepRequiredColumn {
                get {
                    return this.columnRoboticPrepRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CXIsRemovedColumn {
                get {
                    return this.columnCXIsRemoved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoboticDistancesColumn {
                get {
                    return this.columnRoboticDistances;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProposedLiningDateColumn {
                get {
                    return this.columnProposedLiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeadlineLiningDateColumn {
                get {
                    return this.columnDeadlineLiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinalVideoDateColumn {
                get {
                    return this.columnFinalVideoDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimatedJointsColumn {
                get {
                    return this.columnEstimatedJoints;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JointsTestSealedColumn {
                get {
                    return this.columnJointsTestSealed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueIdentifiedColumn {
                get {
                    return this.columnIssueIdentified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueLFSColumn {
                get {
                    return this.columnIssueLFS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueClientColumn {
                get {
                    return this.columnIssueClient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueSalesColumn {
                get {
                    return this.columnIssueSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueGivenToClientColumn {
                get {
                    return this.columnIssueGivenToClient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueResolvedColumn {
                get {
                    return this.columnIssueResolved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueInvestigationColumn {
                get {
                    return this.columnIssueInvestigation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoLengthColumn {
                get {
                    return this.columnVideoLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkDetailsRow this[int index] {
                get {
                    return ((WorkDetailsRow)(this.Rows[index]));
                }
            }
            
            public event WorkDetailsRowChangeEventHandler WorkDetailsRowChanging;
            
            public event WorkDetailsRowChangeEventHandler WorkDetailsRowChanged;
            
            public event WorkDetailsRowChangeEventHandler WorkDetailsRowDeleting;
            
            public event WorkDetailsRowChangeEventHandler WorkDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWorkDetailsRow(WorkDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkDetailsRow AddWorkDetailsRow(
                        int WorkID, 
                        int WorkIDFLL, 
                        int WorkIDRA, 
                        string ClientID, 
                        string MeasurementTakenBy, 
                        System.DateTime PreFlushDate, 
                        System.DateTime PreVideoDate, 
                        System.DateTime P1Date, 
                        System.DateTime RepairConfirmationDate, 
                        string TrafficControl, 
                        string Material, 
                        bool BypassRequired, 
                        bool RoboticPrepRequired, 
                        int CXIsRemoved, 
                        string RoboticDistances, 
                        System.DateTime ProposedLiningDate, 
                        System.DateTime DeadlineLiningDate, 
                        System.DateTime FinalVideoDate, 
                        int EstimatedJoints, 
                        int JointsTestSealed, 
                        bool IssueIdentified, 
                        bool IssueLFS, 
                        bool IssueClient, 
                        bool IssueSales, 
                        bool IssueGivenToClient, 
                        bool IssueResolved, 
                        bool IssueInvestigation, 
                        string Comments, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        string VideoLength) {
                WorkDetailsRow rowWorkDetailsRow = ((WorkDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        WorkIDFLL,
                        WorkIDRA,
                        ClientID,
                        MeasurementTakenBy,
                        PreFlushDate,
                        PreVideoDate,
                        P1Date,
                        RepairConfirmationDate,
                        TrafficControl,
                        Material,
                        BypassRequired,
                        RoboticPrepRequired,
                        CXIsRemoved,
                        RoboticDistances,
                        ProposedLiningDate,
                        DeadlineLiningDate,
                        FinalVideoDate,
                        EstimatedJoints,
                        JointsTestSealed,
                        IssueIdentified,
                        IssueLFS,
                        IssueClient,
                        IssueSales,
                        IssueGivenToClient,
                        IssueResolved,
                        IssueInvestigation,
                        Comments,
                        Deleted,
                        COMPANY_ID,
                        VideoLength};
                rowWorkDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWorkDetailsRow);
                return rowWorkDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkDetailsRow FindByWorkID(int WorkID) {
                return ((WorkDetailsRow)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WorkDetailsDataTable cln = ((WorkDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WorkDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnWorkIDFLL = base.Columns["WorkIDFLL"];
                this.columnWorkIDRA = base.Columns["WorkIDRA"];
                this.columnClientID = base.Columns["ClientID"];
                this.columnMeasurementTakenBy = base.Columns["MeasurementTakenBy"];
                this.columnPreFlushDate = base.Columns["PreFlushDate"];
                this.columnPreVideoDate = base.Columns["PreVideoDate"];
                this.columnP1Date = base.Columns["P1Date"];
                this.columnRepairConfirmationDate = base.Columns["RepairConfirmationDate"];
                this.columnTrafficControl = base.Columns["TrafficControl"];
                this.columnMaterial = base.Columns["Material"];
                this.columnBypassRequired = base.Columns["BypassRequired"];
                this.columnRoboticPrepRequired = base.Columns["RoboticPrepRequired"];
                this.columnCXIsRemoved = base.Columns["CXIsRemoved"];
                this.columnRoboticDistances = base.Columns["RoboticDistances"];
                this.columnProposedLiningDate = base.Columns["ProposedLiningDate"];
                this.columnDeadlineLiningDate = base.Columns["DeadlineLiningDate"];
                this.columnFinalVideoDate = base.Columns["FinalVideoDate"];
                this.columnEstimatedJoints = base.Columns["EstimatedJoints"];
                this.columnJointsTestSealed = base.Columns["JointsTestSealed"];
                this.columnIssueIdentified = base.Columns["IssueIdentified"];
                this.columnIssueLFS = base.Columns["IssueLFS"];
                this.columnIssueClient = base.Columns["IssueClient"];
                this.columnIssueSales = base.Columns["IssueSales"];
                this.columnIssueGivenToClient = base.Columns["IssueGivenToClient"];
                this.columnIssueResolved = base.Columns["IssueResolved"];
                this.columnIssueInvestigation = base.Columns["IssueInvestigation"];
                this.columnComments = base.Columns["Comments"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnVideoLength = base.Columns["VideoLength"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnWorkIDFLL = new global::System.Data.DataColumn("WorkIDFLL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkIDFLL);
                this.columnWorkIDRA = new global::System.Data.DataColumn("WorkIDRA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkIDRA);
                this.columnClientID = new global::System.Data.DataColumn("ClientID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnMeasurementTakenBy = new global::System.Data.DataColumn("MeasurementTakenBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementTakenBy);
                this.columnPreFlushDate = new global::System.Data.DataColumn("PreFlushDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreFlushDate);
                this.columnPreVideoDate = new global::System.Data.DataColumn("PreVideoDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreVideoDate);
                this.columnP1Date = new global::System.Data.DataColumn("P1Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP1Date);
                this.columnRepairConfirmationDate = new global::System.Data.DataColumn("RepairConfirmationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepairConfirmationDate);
                this.columnTrafficControl = new global::System.Data.DataColumn("TrafficControl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrafficControl);
                this.columnMaterial = new global::System.Data.DataColumn("Material", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterial);
                this.columnBypassRequired = new global::System.Data.DataColumn("BypassRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBypassRequired);
                this.columnRoboticPrepRequired = new global::System.Data.DataColumn("RoboticPrepRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticPrepRequired);
                this.columnCXIsRemoved = new global::System.Data.DataColumn("CXIsRemoved", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXIsRemoved);
                this.columnRoboticDistances = new global::System.Data.DataColumn("RoboticDistances", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticDistances);
                this.columnProposedLiningDate = new global::System.Data.DataColumn("ProposedLiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProposedLiningDate);
                this.columnDeadlineLiningDate = new global::System.Data.DataColumn("DeadlineLiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeadlineLiningDate);
                this.columnFinalVideoDate = new global::System.Data.DataColumn("FinalVideoDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalVideoDate);
                this.columnEstimatedJoints = new global::System.Data.DataColumn("EstimatedJoints", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimatedJoints);
                this.columnJointsTestSealed = new global::System.Data.DataColumn("JointsTestSealed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJointsTestSealed);
                this.columnIssueIdentified = new global::System.Data.DataColumn("IssueIdentified", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueIdentified);
                this.columnIssueLFS = new global::System.Data.DataColumn("IssueLFS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueLFS);
                this.columnIssueClient = new global::System.Data.DataColumn("IssueClient", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueClient);
                this.columnIssueSales = new global::System.Data.DataColumn("IssueSales", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueSales);
                this.columnIssueGivenToClient = new global::System.Data.DataColumn("IssueGivenToClient", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueGivenToClient);
                this.columnIssueResolved = new global::System.Data.DataColumn("IssueResolved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueResolved);
                this.columnIssueInvestigation = new global::System.Data.DataColumn("IssueInvestigation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueInvestigation);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnVideoLength = new global::System.Data.DataColumn("VideoLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoLength);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkDetailsRow NewWorkDetailsRow() {
                return ((WorkDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WorkDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WorkDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WorkDetailsRowChanged != null)) {
                    this.WorkDetailsRowChanged(this, new WorkDetailsRowChangeEvent(((WorkDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WorkDetailsRowChanging != null)) {
                    this.WorkDetailsRowChanging(this, new WorkDetailsRowChangeEvent(((WorkDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WorkDetailsRowDeleted != null)) {
                    this.WorkDetailsRowDeleted(this, new WorkDetailsRowChangeEvent(((WorkDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WorkDetailsRowDeleting != null)) {
                    this.WorkDetailsRowDeleting(this, new WorkDetailsRowChangeEvent(((WorkDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWorkDetailsRow(WorkDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PointRepairsTDS ds = new PointRepairsTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WorkDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RepairDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnRepairPointID;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnReamDistance;
            
            private global::System.Data.DataColumn columnReamDate;
            
            private global::System.Data.DataColumn columnLinerDistance;
            
            private global::System.Data.DataColumn columnDirection;
            
            private global::System.Data.DataColumn columnReinstates;
            
            private global::System.Data.DataColumn columnLTMH;
            
            private global::System.Data.DataColumn columnVTMH;
            
            private global::System.Data.DataColumn columnDistance;
            
            private global::System.Data.DataColumn columnSize_;
            
            private global::System.Data.DataColumn columnInstallDate;
            
            private global::System.Data.DataColumn columnMHShot;
            
            private global::System.Data.DataColumn columnGroutDistance;
            
            private global::System.Data.DataColumn columnGroutDate;
            
            private global::System.Data.DataColumn columnApproval;
            
            private global::System.Data.DataColumn columnExtraRepair;
            
            private global::System.Data.DataColumn columnCancelled;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnInDatabase;
            
            private global::System.Data.DataColumn columnDefectQualifier;
            
            private global::System.Data.DataColumn columnDefectDetails;
            
            private global::System.Data.DataColumn columnLength;
            
            private global::System.Data.DataColumn columnReinstateDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepairDetailsDataTable() {
                this.TableName = "RepairDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepairDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RepairDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RepairPointIDColumn {
                get {
                    return this.columnRepairPointID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReamDistanceColumn {
                get {
                    return this.columnReamDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReamDateColumn {
                get {
                    return this.columnReamDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerDistanceColumn {
                get {
                    return this.columnLinerDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DirectionColumn {
                get {
                    return this.columnDirection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReinstatesColumn {
                get {
                    return this.columnReinstates;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LTMHColumn {
                get {
                    return this.columnLTMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VTMHColumn {
                get {
                    return this.columnVTMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceColumn {
                get {
                    return this.columnDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Size_Column {
                get {
                    return this.columnSize_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallDateColumn {
                get {
                    return this.columnInstallDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MHShotColumn {
                get {
                    return this.columnMHShot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroutDistanceColumn {
                get {
                    return this.columnGroutDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroutDateColumn {
                get {
                    return this.columnGroutDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApprovalColumn {
                get {
                    return this.columnApproval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraRepairColumn {
                get {
                    return this.columnExtraRepair;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CancelledColumn {
                get {
                    return this.columnCancelled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InDatabaseColumn {
                get {
                    return this.columnInDatabase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DefectQualifierColumn {
                get {
                    return this.columnDefectQualifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DefectDetailsColumn {
                get {
                    return this.columnDefectDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReinstateDateColumn {
                get {
                    return this.columnReinstateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepairDetailsRow this[int index] {
                get {
                    return ((RepairDetailsRow)(this.Rows[index]));
                }
            }
            
            public event RepairDetailsRowChangeEventHandler RepairDetailsRowChanging;
            
            public event RepairDetailsRowChangeEventHandler RepairDetailsRowChanged;
            
            public event RepairDetailsRowChangeEventHandler RepairDetailsRowDeleting;
            
            public event RepairDetailsRowChangeEventHandler RepairDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRepairDetailsRow(RepairDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepairDetailsRow AddRepairDetailsRow(
                        int WorkID, 
                        string RepairPointID, 
                        string Type, 
                        string ReamDistance, 
                        System.DateTime ReamDate, 
                        string LinerDistance, 
                        string Direction, 
                        int Reinstates, 
                        string LTMH, 
                        string VTMH, 
                        string Distance, 
                        string Size_, 
                        System.DateTime InstallDate, 
                        string MHShot, 
                        string GroutDistance, 
                        System.DateTime GroutDate, 
                        string Approval, 
                        bool ExtraRepair, 
                        bool Cancelled, 
                        string Comments, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        bool InDatabase, 
                        string DefectQualifier, 
                        string DefectDetails, 
                        string Length, 
                        System.DateTime ReinstateDate) {
                RepairDetailsRow rowRepairDetailsRow = ((RepairDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        RepairPointID,
                        Type,
                        ReamDistance,
                        ReamDate,
                        LinerDistance,
                        Direction,
                        Reinstates,
                        LTMH,
                        VTMH,
                        Distance,
                        Size_,
                        InstallDate,
                        MHShot,
                        GroutDistance,
                        GroutDate,
                        Approval,
                        ExtraRepair,
                        Cancelled,
                        Comments,
                        Deleted,
                        COMPANY_ID,
                        InDatabase,
                        DefectQualifier,
                        DefectDetails,
                        Length,
                        ReinstateDate};
                rowRepairDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRepairDetailsRow);
                return rowRepairDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepairDetailsRow FindByWorkIDRepairPointID(int WorkID, string RepairPointID) {
                return ((RepairDetailsRow)(this.Rows.Find(new object[] {
                            WorkID,
                            RepairPointID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RepairDetailsDataTable cln = ((RepairDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RepairDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnRepairPointID = base.Columns["RepairPointID"];
                this.columnType = base.Columns["Type"];
                this.columnReamDistance = base.Columns["ReamDistance"];
                this.columnReamDate = base.Columns["ReamDate"];
                this.columnLinerDistance = base.Columns["LinerDistance"];
                this.columnDirection = base.Columns["Direction"];
                this.columnReinstates = base.Columns["Reinstates"];
                this.columnLTMH = base.Columns["LTMH"];
                this.columnVTMH = base.Columns["VTMH"];
                this.columnDistance = base.Columns["Distance"];
                this.columnSize_ = base.Columns["Size_"];
                this.columnInstallDate = base.Columns["InstallDate"];
                this.columnMHShot = base.Columns["MHShot"];
                this.columnGroutDistance = base.Columns["GroutDistance"];
                this.columnGroutDate = base.Columns["GroutDate"];
                this.columnApproval = base.Columns["Approval"];
                this.columnExtraRepair = base.Columns["ExtraRepair"];
                this.columnCancelled = base.Columns["Cancelled"];
                this.columnComments = base.Columns["Comments"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnInDatabase = base.Columns["InDatabase"];
                this.columnDefectQualifier = base.Columns["DefectQualifier"];
                this.columnDefectDetails = base.Columns["DefectDetails"];
                this.columnLength = base.Columns["Length"];
                this.columnReinstateDate = base.Columns["ReinstateDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnRepairPointID = new global::System.Data.DataColumn("RepairPointID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepairPointID);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnReamDistance = new global::System.Data.DataColumn("ReamDistance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReamDistance);
                this.columnReamDate = new global::System.Data.DataColumn("ReamDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReamDate);
                this.columnLinerDistance = new global::System.Data.DataColumn("LinerDistance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerDistance);
                this.columnDirection = new global::System.Data.DataColumn("Direction", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirection);
                this.columnReinstates = new global::System.Data.DataColumn("Reinstates", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReinstates);
                this.columnLTMH = new global::System.Data.DataColumn("LTMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLTMH);
                this.columnVTMH = new global::System.Data.DataColumn("VTMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVTMH);
                this.columnDistance = new global::System.Data.DataColumn("Distance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistance);
                this.columnSize_ = new global::System.Data.DataColumn("Size_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_);
                this.columnInstallDate = new global::System.Data.DataColumn("InstallDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallDate);
                this.columnMHShot = new global::System.Data.DataColumn("MHShot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMHShot);
                this.columnGroutDistance = new global::System.Data.DataColumn("GroutDistance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroutDistance);
                this.columnGroutDate = new global::System.Data.DataColumn("GroutDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroutDate);
                this.columnApproval = new global::System.Data.DataColumn("Approval", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApproval);
                this.columnExtraRepair = new global::System.Data.DataColumn("ExtraRepair", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraRepair);
                this.columnCancelled = new global::System.Data.DataColumn("Cancelled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancelled);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnInDatabase = new global::System.Data.DataColumn("InDatabase", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInDatabase);
                this.columnDefectQualifier = new global::System.Data.DataColumn("DefectQualifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefectQualifier);
                this.columnDefectDetails = new global::System.Data.DataColumn("DefectDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefectDetails);
                this.columnLength = new global::System.Data.DataColumn("Length", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLength);
                this.columnReinstateDate = new global::System.Data.DataColumn("ReinstateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReinstateDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID,
                                this.columnRepairPointID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnRepairPointID.AllowDBNull = false;
                this.columnRepairPointID.MaxLength = 10;
                this.columnType.MaxLength = 100;
                this.columnReamDistance.MaxLength = 50;
                this.columnLinerDistance.MaxLength = 50;
                this.columnDirection.MaxLength = 100;
                this.columnLTMH.MaxLength = 50;
                this.columnVTMH.MaxLength = 50;
                this.columnDistance.MaxLength = 100;
                this.columnSize_.MaxLength = 100;
                this.columnMHShot.MaxLength = 100;
                this.columnGroutDistance.MaxLength = 100;
                this.columnApproval.MaxLength = 100;
                this.columnExtraRepair.AllowDBNull = false;
                this.columnCancelled.AllowDBNull = false;
                this.columnComments.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepairDetailsRow NewRepairDetailsRow() {
                return ((RepairDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RepairDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RepairDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepairDetailsRowChanged != null)) {
                    this.RepairDetailsRowChanged(this, new RepairDetailsRowChangeEvent(((RepairDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepairDetailsRowChanging != null)) {
                    this.RepairDetailsRowChanging(this, new RepairDetailsRowChangeEvent(((RepairDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepairDetailsRowDeleted != null)) {
                    this.RepairDetailsRowDeleted(this, new RepairDetailsRowChangeEvent(((RepairDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepairDetailsRowDeleting != null)) {
                    this.RepairDetailsRowDeleting(this, new RepairDetailsRowChangeEvent(((RepairDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRepairDetailsRow(RepairDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PointRepairsTDS ds = new PointRepairsTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RepairDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CommentDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnSubject;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnDateTime_;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnLIBRARY_FILES_ID;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnInDatabase;
            
            private global::System.Data.DataColumn columnWorkType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommentDetailsDataTable() {
                this.TableName = "CommentDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CommentDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CommentDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTime_Column {
                get {
                    return this.columnDateTime_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIBRARY_FILES_IDColumn {
                get {
                    return this.columnLIBRARY_FILES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InDatabaseColumn {
                get {
                    return this.columnInDatabase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkTypeColumn {
                get {
                    return this.columnWorkType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommentDetailsRow this[int index] {
                get {
                    return ((CommentDetailsRow)(this.Rows[index]));
                }
            }
            
            public event CommentDetailsRowChangeEventHandler CommentDetailsRowChanging;
            
            public event CommentDetailsRowChangeEventHandler CommentDetailsRowChanged;
            
            public event CommentDetailsRowChangeEventHandler CommentDetailsRowDeleting;
            
            public event CommentDetailsRowChangeEventHandler CommentDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCommentDetailsRow(CommentDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommentDetailsRow AddCommentDetailsRow(int WorkID, int RefID, string Type, string Subject, int UserID, System.DateTime DateTime_, string Comment, int LIBRARY_FILES_ID, bool Deleted, int COMPANY_ID, bool InDatabase, string WorkType) {
                CommentDetailsRow rowCommentDetailsRow = ((CommentDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        RefID,
                        Type,
                        Subject,
                        UserID,
                        DateTime_,
                        Comment,
                        LIBRARY_FILES_ID,
                        Deleted,
                        COMPANY_ID,
                        InDatabase,
                        WorkType};
                rowCommentDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCommentDetailsRow);
                return rowCommentDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommentDetailsRow FindByWorkIDRefID(int WorkID, int RefID) {
                return ((CommentDetailsRow)(this.Rows.Find(new object[] {
                            WorkID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CommentDetailsDataTable cln = ((CommentDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CommentDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnType = base.Columns["Type"];
                this.columnSubject = base.Columns["Subject"];
                this.columnUserID = base.Columns["UserID"];
                this.columnDateTime_ = base.Columns["DateTime_"];
                this.columnComment = base.Columns["Comment"];
                this.columnLIBRARY_FILES_ID = base.Columns["LIBRARY_FILES_ID"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnInDatabase = base.Columns["InDatabase"];
                this.columnWorkType = base.Columns["WorkType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnSubject = new global::System.Data.DataColumn("Subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnDateTime_ = new global::System.Data.DataColumn("DateTime_", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTime_);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnLIBRARY_FILES_ID = new global::System.Data.DataColumn("LIBRARY_FILES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIBRARY_FILES_ID);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnInDatabase = new global::System.Data.DataColumn("InDatabase", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInDatabase);
                this.columnWorkType = new global::System.Data.DataColumn("WorkType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID,
                                this.columnRefID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnSubject.AllowDBNull = false;
                this.columnSubject.MaxLength = 100;
                this.columnUserID.AllowDBNull = false;
                this.columnDateTime_.AllowDBNull = false;
                this.columnComment.AllowDBNull = false;
                this.columnComment.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommentDetailsRow NewCommentDetailsRow() {
                return ((CommentDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CommentDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CommentDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CommentDetailsRowChanged != null)) {
                    this.CommentDetailsRowChanged(this, new CommentDetailsRowChangeEvent(((CommentDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CommentDetailsRowChanging != null)) {
                    this.CommentDetailsRowChanging(this, new CommentDetailsRowChangeEvent(((CommentDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CommentDetailsRowDeleted != null)) {
                    this.CommentDetailsRowDeleted(this, new CommentDetailsRowChangeEvent(((CommentDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CommentDetailsRowDeleting != null)) {
                    this.CommentDetailsRowDeleting(this, new CommentDetailsRowChangeEvent(((CommentDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCommentDetailsRow(CommentDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PointRepairsTDS ds = new PointRepairsTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CommentDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SectionDetailsRow : global::System.Data.DataRow {
            
            private SectionDetailsDataTable tableSectionDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SectionDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSectionDetails = ((SectionDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableSectionDetails.WorkIDColumn]));
                }
                set {
                    this[this.tableSectionDetails.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssetID {
                get {
                    try {
                        return ((int)(this[this.tableSectionDetails.AssetIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssetID\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.AssetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionID {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.SectionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SectionID\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.SectionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Street {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.StreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Street\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.StreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USMH {
                get {
                    try {
                        return ((int)(this[this.tableSectionDetails.USMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMH\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DSMH {
                get {
                    try {
                        return ((int)(this[this.tableSectionDetails.DSMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMH\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MapSize {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.MapSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MapSize\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.MapSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size_ {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.Size_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size_\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.Size_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MapLength {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.MapLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MapLength\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.MapLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Length {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Length\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Laterals {
                get {
                    try {
                        return ((int)(this[this.tableSectionDetails.LateralsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Laterals\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.LateralsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LiveLaterals {
                get {
                    try {
                        return ((int)(this[this.tableSectionDetails.LiveLateralsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LiveLaterals\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.LiveLateralsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.USMHDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHDepth\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.DSMHDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHDepth\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SteelTapeThroughSewer {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.SteelTapeThroughSewerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SteelTapeThroughSewer\' in table \'SectionDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.SteelTapeThroughSewerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMouth12 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.USMHMouth12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMouth12\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHMouth12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMouth1 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.USMHMouth1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMouth1\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHMouth1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMouth2 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.USMHMouth2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMouth2\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHMouth2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMouth3 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.USMHMouth3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMouth3\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHMouth3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMouth4 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.USMHMouth4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMouth4\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHMouth4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMouth5 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.USMHMouth5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMouth5\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHMouth5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMouth12 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.DSMHMouth12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMouth12\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHMouth12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMouth1 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.DSMHMouth1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMouth1\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHMouth1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMouth2 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.DSMHMouth2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMouth2\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHMouth2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMouth3 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.DSMHMouth3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMouth3\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHMouth3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMouth4 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.DSMHMouth4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMouth4\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHMouth4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMouth5 {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.DSMHMouth5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMouth5\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHMouth5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    try {
                        return ((bool)(this[this.tableSectionDetails.DeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deleted\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    try {
                        return ((int)(this[this.tableSectionDetails.COMPANY_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPANY_ID\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHDescription {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.USMHDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHDescription\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHDescription {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.DSMHDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHDescription\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHAddress {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.USMHAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAddress\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.USMHAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHAddress {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.DSMHAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAddress\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.DSMHAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubArea {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.SubAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubArea\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.SubAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FlowOrderID {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.FlowOrderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FlowOrderID\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.FlowOrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OriginalSectionID {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.OriginalSectionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalSectionID\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.OriginalSectionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Thickness {
                get {
                    try {
                        return ((string)(this[this.tableSectionDetails.ThicknessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Thickness\' in table \'SectionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSectionDetails.ThicknessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssetIDNull() {
                return this.IsNull(this.tableSectionDetails.AssetIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssetIDNull() {
                this[this.tableSectionDetails.AssetIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionIDNull() {
                return this.IsNull(this.tableSectionDetails.SectionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionIDNull() {
                this[this.tableSectionDetails.SectionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNull() {
                return this.IsNull(this.tableSectionDetails.StreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNull() {
                this[this.tableSectionDetails.StreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHNull() {
                return this.IsNull(this.tableSectionDetails.USMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHNull() {
                this[this.tableSectionDetails.USMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHNull() {
                return this.IsNull(this.tableSectionDetails.DSMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHNull() {
                this[this.tableSectionDetails.DSMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMapSizeNull() {
                return this.IsNull(this.tableSectionDetails.MapSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMapSizeNull() {
                this[this.tableSectionDetails.MapSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSize_Null() {
                return this.IsNull(this.tableSectionDetails.Size_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSize_Null() {
                this[this.tableSectionDetails.Size_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMapLengthNull() {
                return this.IsNull(this.tableSectionDetails.MapLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMapLengthNull() {
                this[this.tableSectionDetails.MapLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLengthNull() {
                return this.IsNull(this.tableSectionDetails.LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLengthNull() {
                this[this.tableSectionDetails.LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateralsNull() {
                return this.IsNull(this.tableSectionDetails.LateralsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateralsNull() {
                this[this.tableSectionDetails.LateralsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLiveLateralsNull() {
                return this.IsNull(this.tableSectionDetails.LiveLateralsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLiveLateralsNull() {
                this[this.tableSectionDetails.LiveLateralsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHDepthNull() {
                return this.IsNull(this.tableSectionDetails.USMHDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHDepthNull() {
                this[this.tableSectionDetails.USMHDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHDepthNull() {
                return this.IsNull(this.tableSectionDetails.DSMHDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHDepthNull() {
                this[this.tableSectionDetails.DSMHDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSteelTapeThroughSewerNull() {
                return this.IsNull(this.tableSectionDetails.SteelTapeThroughSewerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSteelTapeThroughSewerNull() {
                this[this.tableSectionDetails.SteelTapeThroughSewerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMouth12Null() {
                return this.IsNull(this.tableSectionDetails.USMHMouth12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMouth12Null() {
                this[this.tableSectionDetails.USMHMouth12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMouth1Null() {
                return this.IsNull(this.tableSectionDetails.USMHMouth1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMouth1Null() {
                this[this.tableSectionDetails.USMHMouth1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMouth2Null() {
                return this.IsNull(this.tableSectionDetails.USMHMouth2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMouth2Null() {
                this[this.tableSectionDetails.USMHMouth2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMouth3Null() {
                return this.IsNull(this.tableSectionDetails.USMHMouth3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMouth3Null() {
                this[this.tableSectionDetails.USMHMouth3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMouth4Null() {
                return this.IsNull(this.tableSectionDetails.USMHMouth4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMouth4Null() {
                this[this.tableSectionDetails.USMHMouth4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMouth5Null() {
                return this.IsNull(this.tableSectionDetails.USMHMouth5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMouth5Null() {
                this[this.tableSectionDetails.USMHMouth5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMouth12Null() {
                return this.IsNull(this.tableSectionDetails.DSMHMouth12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMouth12Null() {
                this[this.tableSectionDetails.DSMHMouth12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMouth1Null() {
                return this.IsNull(this.tableSectionDetails.DSMHMouth1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMouth1Null() {
                this[this.tableSectionDetails.DSMHMouth1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMouth2Null() {
                return this.IsNull(this.tableSectionDetails.DSMHMouth2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMouth2Null() {
                this[this.tableSectionDetails.DSMHMouth2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMouth3Null() {
                return this.IsNull(this.tableSectionDetails.DSMHMouth3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMouth3Null() {
                this[this.tableSectionDetails.DSMHMouth3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMouth4Null() {
                return this.IsNull(this.tableSectionDetails.DSMHMouth4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMouth4Null() {
                this[this.tableSectionDetails.DSMHMouth4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMouth5Null() {
                return this.IsNull(this.tableSectionDetails.DSMHMouth5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMouth5Null() {
                this[this.tableSectionDetails.DSMHMouth5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedNull() {
                return this.IsNull(this.tableSectionDetails.DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedNull() {
                this[this.tableSectionDetails.DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANY_IDNull() {
                return this.IsNull(this.tableSectionDetails.COMPANY_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANY_IDNull() {
                this[this.tableSectionDetails.COMPANY_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHDescriptionNull() {
                return this.IsNull(this.tableSectionDetails.USMHDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHDescriptionNull() {
                this[this.tableSectionDetails.USMHDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHDescriptionNull() {
                return this.IsNull(this.tableSectionDetails.DSMHDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHDescriptionNull() {
                this[this.tableSectionDetails.DSMHDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAddressNull() {
                return this.IsNull(this.tableSectionDetails.USMHAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAddressNull() {
                this[this.tableSectionDetails.USMHAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAddressNull() {
                return this.IsNull(this.tableSectionDetails.DSMHAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAddressNull() {
                this[this.tableSectionDetails.DSMHAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubAreaNull() {
                return this.IsNull(this.tableSectionDetails.SubAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubAreaNull() {
                this[this.tableSectionDetails.SubAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFlowOrderIDNull() {
                return this.IsNull(this.tableSectionDetails.FlowOrderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFlowOrderIDNull() {
                this[this.tableSectionDetails.FlowOrderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOriginalSectionIDNull() {
                return this.IsNull(this.tableSectionDetails.OriginalSectionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOriginalSectionIDNull() {
                this[this.tableSectionDetails.OriginalSectionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThicknessNull() {
                return this.IsNull(this.tableSectionDetails.ThicknessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThicknessNull() {
                this[this.tableSectionDetails.ThicknessColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WorkDetailsRow : global::System.Data.DataRow {
            
            private WorkDetailsDataTable tableWorkDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WorkDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWorkDetails = ((WorkDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableWorkDetails.WorkIDColumn]));
                }
                set {
                    this[this.tableWorkDetails.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkIDFLL {
                get {
                    try {
                        return ((int)(this[this.tableWorkDetails.WorkIDFLLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkIDFLL\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.WorkIDFLLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkIDRA {
                get {
                    try {
                        return ((int)(this[this.tableWorkDetails.WorkIDRAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkIDRA\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.WorkIDRAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientID {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.ClientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientID\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.ClientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementTakenBy {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.MeasurementTakenByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementTakenBy\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.MeasurementTakenByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreFlushDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWorkDetails.PreFlushDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreFlushDate\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.PreFlushDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreVideoDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWorkDetails.PreVideoDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreVideoDate\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.PreVideoDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime P1Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWorkDetails.P1DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P1Date\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.P1DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RepairConfirmationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWorkDetails.RepairConfirmationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RepairConfirmationDate\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.RepairConfirmationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrafficControl {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.TrafficControlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrafficControl\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.TrafficControlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Material {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.MaterialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Material\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.MaterialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BypassRequired {
                get {
                    try {
                        return ((bool)(this[this.tableWorkDetails.BypassRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BypassRequired\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.BypassRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RoboticPrepRequired {
                get {
                    try {
                        return ((bool)(this[this.tableWorkDetails.RoboticPrepRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoboticPrepRequired\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.RoboticPrepRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CXIsRemoved {
                get {
                    try {
                        return ((int)(this[this.tableWorkDetails.CXIsRemovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CXIsRemoved\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.CXIsRemovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RoboticDistances {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.RoboticDistancesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoboticDistances\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.RoboticDistancesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ProposedLiningDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWorkDetails.ProposedLiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProposedLiningDate\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.ProposedLiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeadlineLiningDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWorkDetails.DeadlineLiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeadlineLiningDate\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.DeadlineLiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FinalVideoDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWorkDetails.FinalVideoDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalVideoDate\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.FinalVideoDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EstimatedJoints {
                get {
                    try {
                        return ((int)(this[this.tableWorkDetails.EstimatedJointsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimatedJoints\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.EstimatedJointsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int JointsTestSealed {
                get {
                    try {
                        return ((int)(this[this.tableWorkDetails.JointsTestSealedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JointsTestSealed\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.JointsTestSealedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueIdentified {
                get {
                    try {
                        return ((bool)(this[this.tableWorkDetails.IssueIdentifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueIdentified\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.IssueIdentifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueLFS {
                get {
                    try {
                        return ((bool)(this[this.tableWorkDetails.IssueLFSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueLFS\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.IssueLFSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueClient {
                get {
                    try {
                        return ((bool)(this[this.tableWorkDetails.IssueClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueClient\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.IssueClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueSales {
                get {
                    try {
                        return ((bool)(this[this.tableWorkDetails.IssueSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueSales\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.IssueSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueGivenToClient {
                get {
                    try {
                        return ((bool)(this[this.tableWorkDetails.IssueGivenToClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueGivenToClient\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.IssueGivenToClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueResolved {
                get {
                    try {
                        return ((bool)(this[this.tableWorkDetails.IssueResolvedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueResolved\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.IssueResolvedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueInvestigation {
                get {
                    try {
                        return ((bool)(this[this.tableWorkDetails.IssueInvestigationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueInvestigation\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.IssueInvestigationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    try {
                        return ((bool)(this[this.tableWorkDetails.DeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deleted\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    try {
                        return ((int)(this[this.tableWorkDetails.COMPANY_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPANY_ID\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoLength {
                get {
                    try {
                        return ((string)(this[this.tableWorkDetails.VideoLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoLength\' in table \'WorkDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkDetails.VideoLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkIDFLLNull() {
                return this.IsNull(this.tableWorkDetails.WorkIDFLLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkIDFLLNull() {
                this[this.tableWorkDetails.WorkIDFLLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkIDRANull() {
                return this.IsNull(this.tableWorkDetails.WorkIDRAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkIDRANull() {
                this[this.tableWorkDetails.WorkIDRAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientIDNull() {
                return this.IsNull(this.tableWorkDetails.ClientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientIDNull() {
                this[this.tableWorkDetails.ClientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementTakenByNull() {
                return this.IsNull(this.tableWorkDetails.MeasurementTakenByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementTakenByNull() {
                this[this.tableWorkDetails.MeasurementTakenByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreFlushDateNull() {
                return this.IsNull(this.tableWorkDetails.PreFlushDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreFlushDateNull() {
                this[this.tableWorkDetails.PreFlushDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreVideoDateNull() {
                return this.IsNull(this.tableWorkDetails.PreVideoDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreVideoDateNull() {
                this[this.tableWorkDetails.PreVideoDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP1DateNull() {
                return this.IsNull(this.tableWorkDetails.P1DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP1DateNull() {
                this[this.tableWorkDetails.P1DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRepairConfirmationDateNull() {
                return this.IsNull(this.tableWorkDetails.RepairConfirmationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRepairConfirmationDateNull() {
                this[this.tableWorkDetails.RepairConfirmationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrafficControlNull() {
                return this.IsNull(this.tableWorkDetails.TrafficControlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrafficControlNull() {
                this[this.tableWorkDetails.TrafficControlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaterialNull() {
                return this.IsNull(this.tableWorkDetails.MaterialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaterialNull() {
                this[this.tableWorkDetails.MaterialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBypassRequiredNull() {
                return this.IsNull(this.tableWorkDetails.BypassRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBypassRequiredNull() {
                this[this.tableWorkDetails.BypassRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoboticPrepRequiredNull() {
                return this.IsNull(this.tableWorkDetails.RoboticPrepRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoboticPrepRequiredNull() {
                this[this.tableWorkDetails.RoboticPrepRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCXIsRemovedNull() {
                return this.IsNull(this.tableWorkDetails.CXIsRemovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCXIsRemovedNull() {
                this[this.tableWorkDetails.CXIsRemovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoboticDistancesNull() {
                return this.IsNull(this.tableWorkDetails.RoboticDistancesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoboticDistancesNull() {
                this[this.tableWorkDetails.RoboticDistancesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProposedLiningDateNull() {
                return this.IsNull(this.tableWorkDetails.ProposedLiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProposedLiningDateNull() {
                this[this.tableWorkDetails.ProposedLiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeadlineLiningDateNull() {
                return this.IsNull(this.tableWorkDetails.DeadlineLiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeadlineLiningDateNull() {
                this[this.tableWorkDetails.DeadlineLiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalVideoDateNull() {
                return this.IsNull(this.tableWorkDetails.FinalVideoDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalVideoDateNull() {
                this[this.tableWorkDetails.FinalVideoDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimatedJointsNull() {
                return this.IsNull(this.tableWorkDetails.EstimatedJointsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimatedJointsNull() {
                this[this.tableWorkDetails.EstimatedJointsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJointsTestSealedNull() {
                return this.IsNull(this.tableWorkDetails.JointsTestSealedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJointsTestSealedNull() {
                this[this.tableWorkDetails.JointsTestSealedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueIdentifiedNull() {
                return this.IsNull(this.tableWorkDetails.IssueIdentifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueIdentifiedNull() {
                this[this.tableWorkDetails.IssueIdentifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueLFSNull() {
                return this.IsNull(this.tableWorkDetails.IssueLFSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueLFSNull() {
                this[this.tableWorkDetails.IssueLFSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueClientNull() {
                return this.IsNull(this.tableWorkDetails.IssueClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueClientNull() {
                this[this.tableWorkDetails.IssueClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueSalesNull() {
                return this.IsNull(this.tableWorkDetails.IssueSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueSalesNull() {
                this[this.tableWorkDetails.IssueSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueGivenToClientNull() {
                return this.IsNull(this.tableWorkDetails.IssueGivenToClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueGivenToClientNull() {
                this[this.tableWorkDetails.IssueGivenToClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueResolvedNull() {
                return this.IsNull(this.tableWorkDetails.IssueResolvedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueResolvedNull() {
                this[this.tableWorkDetails.IssueResolvedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueInvestigationNull() {
                return this.IsNull(this.tableWorkDetails.IssueInvestigationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueInvestigationNull() {
                this[this.tableWorkDetails.IssueInvestigationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableWorkDetails.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableWorkDetails.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedNull() {
                return this.IsNull(this.tableWorkDetails.DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedNull() {
                this[this.tableWorkDetails.DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANY_IDNull() {
                return this.IsNull(this.tableWorkDetails.COMPANY_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANY_IDNull() {
                this[this.tableWorkDetails.COMPANY_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoLengthNull() {
                return this.IsNull(this.tableWorkDetails.VideoLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoLengthNull() {
                this[this.tableWorkDetails.VideoLengthColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RepairDetailsRow : global::System.Data.DataRow {
            
            private RepairDetailsDataTable tableRepairDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RepairDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepairDetails = ((RepairDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableRepairDetails.WorkIDColumn]));
                }
                set {
                    this[this.tableRepairDetails.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RepairPointID {
                get {
                    return ((string)(this[this.tableRepairDetails.RepairPointIDColumn]));
                }
                set {
                    this[this.tableRepairDetails.RepairPointIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableRepairDetails.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReamDistance {
                get {
                    try {
                        return ((string)(this[this.tableRepairDetails.ReamDistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReamDistance\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.ReamDistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReamDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRepairDetails.ReamDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReamDate\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.ReamDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinerDistance {
                get {
                    try {
                        return ((string)(this[this.tableRepairDetails.LinerDistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerDistance\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.LinerDistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direction {
                get {
                    try {
                        return ((string)(this[this.tableRepairDetails.DirectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Direction\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.DirectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reinstates {
                get {
                    try {
                        return ((int)(this[this.tableRepairDetails.ReinstatesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reinstates\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.ReinstatesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LTMH {
                get {
                    try {
                        return ((string)(this[this.tableRepairDetails.LTMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LTMH\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.LTMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VTMH {
                get {
                    try {
                        return ((string)(this[this.tableRepairDetails.VTMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VTMH\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.VTMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Distance {
                get {
                    try {
                        return ((string)(this[this.tableRepairDetails.DistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Distance\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.DistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size_ {
                get {
                    try {
                        return ((string)(this[this.tableRepairDetails.Size_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size_\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.Size_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InstallDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRepairDetails.InstallDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallDate\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.InstallDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MHShot {
                get {
                    try {
                        return ((string)(this[this.tableRepairDetails.MHShotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MHShot\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.MHShotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GroutDistance {
                get {
                    try {
                        return ((string)(this[this.tableRepairDetails.GroutDistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroutDistance\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.GroutDistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime GroutDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRepairDetails.GroutDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroutDate\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.GroutDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Approval {
                get {
                    try {
                        return ((string)(this[this.tableRepairDetails.ApprovalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Approval\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.ApprovalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ExtraRepair {
                get {
                    return ((bool)(this[this.tableRepairDetails.ExtraRepairColumn]));
                }
                set {
                    this[this.tableRepairDetails.ExtraRepairColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Cancelled {
                get {
                    return ((bool)(this[this.tableRepairDetails.CancelledColumn]));
                }
                set {
                    this[this.tableRepairDetails.CancelledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableRepairDetails.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableRepairDetails.DeletedColumn]));
                }
                set {
                    this[this.tableRepairDetails.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableRepairDetails.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableRepairDetails.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InDatabase {
                get {
                    try {
                        return ((bool)(this[this.tableRepairDetails.InDatabaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InDatabase\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.InDatabaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DefectQualifier {
                get {
                    try {
                        return ((string)(this[this.tableRepairDetails.DefectQualifierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefectQualifier\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.DefectQualifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DefectDetails {
                get {
                    try {
                        return ((string)(this[this.tableRepairDetails.DefectDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefectDetails\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.DefectDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Length {
                get {
                    try {
                        return ((string)(this[this.tableRepairDetails.LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Length\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReinstateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRepairDetails.ReinstateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReinstateDate\' in table \'RepairDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepairDetails.ReinstateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableRepairDetails.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableRepairDetails.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReamDistanceNull() {
                return this.IsNull(this.tableRepairDetails.ReamDistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReamDistanceNull() {
                this[this.tableRepairDetails.ReamDistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReamDateNull() {
                return this.IsNull(this.tableRepairDetails.ReamDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReamDateNull() {
                this[this.tableRepairDetails.ReamDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerDistanceNull() {
                return this.IsNull(this.tableRepairDetails.LinerDistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerDistanceNull() {
                this[this.tableRepairDetails.LinerDistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDirectionNull() {
                return this.IsNull(this.tableRepairDetails.DirectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDirectionNull() {
                this[this.tableRepairDetails.DirectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReinstatesNull() {
                return this.IsNull(this.tableRepairDetails.ReinstatesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReinstatesNull() {
                this[this.tableRepairDetails.ReinstatesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLTMHNull() {
                return this.IsNull(this.tableRepairDetails.LTMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLTMHNull() {
                this[this.tableRepairDetails.LTMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVTMHNull() {
                return this.IsNull(this.tableRepairDetails.VTMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVTMHNull() {
                this[this.tableRepairDetails.VTMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceNull() {
                return this.IsNull(this.tableRepairDetails.DistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceNull() {
                this[this.tableRepairDetails.DistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSize_Null() {
                return this.IsNull(this.tableRepairDetails.Size_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSize_Null() {
                this[this.tableRepairDetails.Size_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallDateNull() {
                return this.IsNull(this.tableRepairDetails.InstallDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallDateNull() {
                this[this.tableRepairDetails.InstallDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMHShotNull() {
                return this.IsNull(this.tableRepairDetails.MHShotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMHShotNull() {
                this[this.tableRepairDetails.MHShotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroutDistanceNull() {
                return this.IsNull(this.tableRepairDetails.GroutDistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroutDistanceNull() {
                this[this.tableRepairDetails.GroutDistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroutDateNull() {
                return this.IsNull(this.tableRepairDetails.GroutDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroutDateNull() {
                this[this.tableRepairDetails.GroutDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovalNull() {
                return this.IsNull(this.tableRepairDetails.ApprovalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovalNull() {
                this[this.tableRepairDetails.ApprovalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableRepairDetails.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableRepairDetails.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInDatabaseNull() {
                return this.IsNull(this.tableRepairDetails.InDatabaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInDatabaseNull() {
                this[this.tableRepairDetails.InDatabaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDefectQualifierNull() {
                return this.IsNull(this.tableRepairDetails.DefectQualifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDefectQualifierNull() {
                this[this.tableRepairDetails.DefectQualifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDefectDetailsNull() {
                return this.IsNull(this.tableRepairDetails.DefectDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDefectDetailsNull() {
                this[this.tableRepairDetails.DefectDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLengthNull() {
                return this.IsNull(this.tableRepairDetails.LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLengthNull() {
                this[this.tableRepairDetails.LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReinstateDateNull() {
                return this.IsNull(this.tableRepairDetails.ReinstateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReinstateDateNull() {
                this[this.tableRepairDetails.ReinstateDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CommentDetailsRow : global::System.Data.DataRow {
            
            private CommentDetailsDataTable tableCommentDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CommentDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCommentDetails = ((CommentDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableCommentDetails.WorkIDColumn]));
                }
                set {
                    this[this.tableCommentDetails.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableCommentDetails.RefIDColumn]));
                }
                set {
                    this[this.tableCommentDetails.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableCommentDetails.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'CommentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommentDetails.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Subject {
                get {
                    return ((string)(this[this.tableCommentDetails.SubjectColumn]));
                }
                set {
                    this[this.tableCommentDetails.SubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    return ((int)(this[this.tableCommentDetails.UserIDColumn]));
                }
                set {
                    this[this.tableCommentDetails.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTime_ {
                get {
                    return ((global::System.DateTime)(this[this.tableCommentDetails.DateTime_Column]));
                }
                set {
                    this[this.tableCommentDetails.DateTime_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    return ((string)(this[this.tableCommentDetails.CommentColumn]));
                }
                set {
                    this[this.tableCommentDetails.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LIBRARY_FILES_ID {
                get {
                    try {
                        return ((int)(this[this.tableCommentDetails.LIBRARY_FILES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LIBRARY_FILES_ID\' in table \'CommentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommentDetails.LIBRARY_FILES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableCommentDetails.DeletedColumn]));
                }
                set {
                    this[this.tableCommentDetails.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableCommentDetails.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableCommentDetails.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InDatabase {
                get {
                    try {
                        return ((bool)(this[this.tableCommentDetails.InDatabaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InDatabase\' in table \'CommentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommentDetails.InDatabaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkType {
                get {
                    try {
                        return ((string)(this[this.tableCommentDetails.WorkTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkType\' in table \'CommentDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommentDetails.WorkTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableCommentDetails.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableCommentDetails.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIBRARY_FILES_IDNull() {
                return this.IsNull(this.tableCommentDetails.LIBRARY_FILES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIBRARY_FILES_IDNull() {
                this[this.tableCommentDetails.LIBRARY_FILES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInDatabaseNull() {
                return this.IsNull(this.tableCommentDetails.InDatabaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInDatabaseNull() {
                this[this.tableCommentDetails.InDatabaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkTypeNull() {
                return this.IsNull(this.tableCommentDetails.WorkTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkTypeNull() {
                this[this.tableCommentDetails.WorkTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SectionDetailsRowChangeEvent : global::System.EventArgs {
            
            private SectionDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SectionDetailsRowChangeEvent(SectionDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SectionDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WorkDetailsRowChangeEvent : global::System.EventArgs {
            
            private WorkDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkDetailsRowChangeEvent(WorkDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RepairDetailsRowChangeEvent : global::System.EventArgs {
            
            private RepairDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepairDetailsRowChangeEvent(RepairDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RepairDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CommentDetailsRowChangeEvent : global::System.EventArgs {
            
            private CommentDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommentDetailsRowChangeEvent(CommentDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommentDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591