//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3623
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.CWP.FullLengthLining {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("FlWetOutReportTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class FlWetOutReportTDS : global::System.Data.DataSet {
        
        private LFS_WORK_FULLLENGTHLINING_WETOUTDataTable tableLFS_WORK_FULLLENGTHLINING_WETOUT;
        
        private LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FlWetOutReportTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected FlWetOutReportTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_WETOUTDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_FULLLENGTHLINING_WETOUTDataTable LFS_WORK_FULLLENGTHLINING_WETOUT {
            get {
                return this.tableLFS_WORK_FULLLENGTHLINING_WETOUT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS {
            get {
                return this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            FlWetOutReportTDS cln = ((FlWetOutReportTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_WETOUTDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableLFS_WORK_FULLLENGTHLINING_WETOUT = ((LFS_WORK_FULLLENGTHLINING_WETOUTDataTable)(base.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_FULLLENGTHLINING_WETOUT != null)) {
                    this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.InitVars();
                }
            }
            this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS = ((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable)(base.Tables["LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS != null)) {
                    this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "FlWetOutReportTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/FlWetOutReportTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLFS_WORK_FULLLENGTHLINING_WETOUT = new LFS_WORK_FULLLENGTHLINING_WETOUTDataTable();
            base.Tables.Add(this.tableLFS_WORK_FULLLENGTHLINING_WETOUT);
            this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS = new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable();
            base.Tables.Add(this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_FULLLENGTHLINING_WETOUT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            FlWetOutReportTDS ds = new FlWetOutReportTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEventHandler(object sender, LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEvent e);
        
        public delegate void LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEventHandler(object sender, LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_FULLLENGTHLINING_WETOUTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnLinerTube;
            
            private global::System.Data.DataColumn columnResinID;
            
            private global::System.Data.DataColumn columnExcessResin;
            
            private global::System.Data.DataColumn columnPoundsDrums;
            
            private global::System.Data.DataColumn columnDrumDiameter;
            
            private global::System.Data.DataColumn columnHoistMaximumHeight;
            
            private global::System.Data.DataColumn columnHoistMinimumHeight;
            
            private global::System.Data.DataColumn columnDownDropTubeLenght;
            
            private global::System.Data.DataColumn columnPumpHeightAboveGround;
            
            private global::System.Data.DataColumn columnTubeResinToFeltFactor;
            
            private global::System.Data.DataColumn columnDateOfSheet;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnRunDetails;
            
            private global::System.Data.DataColumn columnRunDetails2;
            
            private global::System.Data.DataColumn columnWetOutDate;
            
            private global::System.Data.DataColumn columnInstallDate;
            
            private global::System.Data.DataColumn columnThickness;
            
            private global::System.Data.DataColumn columnLengthToLine;
            
            private global::System.Data.DataColumn columnPlusExtra;
            
            private global::System.Data.DataColumn columnForTurnOffset;
            
            private global::System.Data.DataColumn columnLengthToWetOut;
            
            private global::System.Data.DataColumn columnTubeMaxColdHead;
            
            private global::System.Data.DataColumn columnTubeMaxColdHeadPsi;
            
            private global::System.Data.DataColumn columnTubeMaxHotHead;
            
            private global::System.Data.DataColumn columnTubeMaxHotHeadPsi;
            
            private global::System.Data.DataColumn columnTubeIdealHead;
            
            private global::System.Data.DataColumn columnTubeIdealHeadPsi;
            
            private global::System.Data.DataColumn columnNetResinForTube;
            
            private global::System.Data.DataColumn columnNetResinForTubeUsgals;
            
            private global::System.Data.DataColumn columnNetResinForTubeDrumsIns;
            
            private global::System.Data.DataColumn columnNetResinForTubeLbsFt;
            
            private global::System.Data.DataColumn columnNetResinForTubeUsgFt;
            
            private global::System.Data.DataColumn columnExtraResinForMix;
            
            private global::System.Data.DataColumn columnExtraLbsForMix;
            
            private global::System.Data.DataColumn columnTotalMixQuantity;
            
            private global::System.Data.DataColumn columnTotalMixQuantityUsgals;
            
            private global::System.Data.DataColumn columnTotalMixQuantityDrumsIns;
            
            private global::System.Data.DataColumn columnInversionType;
            
            private global::System.Data.DataColumn columnDepthOfInversionMH;
            
            private global::System.Data.DataColumn columnTubeForColumn;
            
            private global::System.Data.DataColumn columnTubeForStartDry;
            
            private global::System.Data.DataColumn columnTotalTube;
            
            private global::System.Data.DataColumn columnDropTubeConnects;
            
            private global::System.Data.DataColumn columnAllowsHeadTo;
            
            private global::System.Data.DataColumn columnRollerGap;
            
            private global::System.Data.DataColumn columnHeightNeeded;
            
            private global::System.Data.DataColumn columnAvailable;
            
            private global::System.Data.DataColumn columnHoistHeight;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnResinsLabel;
            
            private global::System.Data.DataColumn columnDrumContainsLabel;
            
            private global::System.Data.DataColumn columnLinerTubeLabel;
            
            private global::System.Data.DataColumn columnForLbDrumsLabel;
            
            private global::System.Data.DataColumn columnNetResinLabel;
            
            private global::System.Data.DataColumn columnCatalystLabel;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnMadeBy;
            
            private global::System.Data.DataColumn columnTubeSize;
            
            private global::System.Data.DataColumn columnJobName;
            
            private global::System.Data.DataColumn columnJobNumber;
            
            private global::System.Data.DataColumn columnStreet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUTDataTable() {
                this.TableName = "LFS_WORK_FULLLENGTHLINING_WETOUT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_WETOUTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_FULLLENGTHLINING_WETOUTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerTubeColumn {
                get {
                    return this.columnLinerTube;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResinIDColumn {
                get {
                    return this.columnResinID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExcessResinColumn {
                get {
                    return this.columnExcessResin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PoundsDrumsColumn {
                get {
                    return this.columnPoundsDrums;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DrumDiameterColumn {
                get {
                    return this.columnDrumDiameter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoistMaximumHeightColumn {
                get {
                    return this.columnHoistMaximumHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoistMinimumHeightColumn {
                get {
                    return this.columnHoistMinimumHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DownDropTubeLenghtColumn {
                get {
                    return this.columnDownDropTubeLenght;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PumpHeightAboveGroundColumn {
                get {
                    return this.columnPumpHeightAboveGround;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeResinToFeltFactorColumn {
                get {
                    return this.columnTubeResinToFeltFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateOfSheetColumn {
                get {
                    return this.columnDateOfSheet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RunDetailsColumn {
                get {
                    return this.columnRunDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RunDetails2Column {
                get {
                    return this.columnRunDetails2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WetOutDateColumn {
                get {
                    return this.columnWetOutDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallDateColumn {
                get {
                    return this.columnInstallDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThicknessColumn {
                get {
                    return this.columnThickness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthToLineColumn {
                get {
                    return this.columnLengthToLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlusExtraColumn {
                get {
                    return this.columnPlusExtra;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ForTurnOffsetColumn {
                get {
                    return this.columnForTurnOffset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthToWetOutColumn {
                get {
                    return this.columnLengthToWetOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeMaxColdHeadColumn {
                get {
                    return this.columnTubeMaxColdHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeMaxColdHeadPsiColumn {
                get {
                    return this.columnTubeMaxColdHeadPsi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeMaxHotHeadColumn {
                get {
                    return this.columnTubeMaxHotHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeMaxHotHeadPsiColumn {
                get {
                    return this.columnTubeMaxHotHeadPsi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeIdealHeadColumn {
                get {
                    return this.columnTubeIdealHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeIdealHeadPsiColumn {
                get {
                    return this.columnTubeIdealHeadPsi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetResinForTubeColumn {
                get {
                    return this.columnNetResinForTube;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetResinForTubeUsgalsColumn {
                get {
                    return this.columnNetResinForTubeUsgals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetResinForTubeDrumsInsColumn {
                get {
                    return this.columnNetResinForTubeDrumsIns;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetResinForTubeLbsFtColumn {
                get {
                    return this.columnNetResinForTubeLbsFt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetResinForTubeUsgFtColumn {
                get {
                    return this.columnNetResinForTubeUsgFt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraResinForMixColumn {
                get {
                    return this.columnExtraResinForMix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraLbsForMixColumn {
                get {
                    return this.columnExtraLbsForMix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalMixQuantityColumn {
                get {
                    return this.columnTotalMixQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalMixQuantityUsgalsColumn {
                get {
                    return this.columnTotalMixQuantityUsgals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalMixQuantityDrumsInsColumn {
                get {
                    return this.columnTotalMixQuantityDrumsIns;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InversionTypeColumn {
                get {
                    return this.columnInversionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepthOfInversionMHColumn {
                get {
                    return this.columnDepthOfInversionMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeForColumnColumn {
                get {
                    return this.columnTubeForColumn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeForStartDryColumn {
                get {
                    return this.columnTubeForStartDry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalTubeColumn {
                get {
                    return this.columnTotalTube;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DropTubeConnectsColumn {
                get {
                    return this.columnDropTubeConnects;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllowsHeadToColumn {
                get {
                    return this.columnAllowsHeadTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollerGapColumn {
                get {
                    return this.columnRollerGap;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeightNeededColumn {
                get {
                    return this.columnHeightNeeded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AvailableColumn {
                get {
                    return this.columnAvailable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoistHeightColumn {
                get {
                    return this.columnHoistHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResinsLabelColumn {
                get {
                    return this.columnResinsLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DrumContainsLabelColumn {
                get {
                    return this.columnDrumContainsLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerTubeLabelColumn {
                get {
                    return this.columnLinerTubeLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ForLbDrumsLabelColumn {
                get {
                    return this.columnForLbDrumsLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetResinLabelColumn {
                get {
                    return this.columnNetResinLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CatalystLabelColumn {
                get {
                    return this.columnCatalystLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MadeByColumn {
                get {
                    return this.columnMadeBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeSizeColumn {
                get {
                    return this.columnTubeSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobNameColumn {
                get {
                    return this.columnJobName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobNumberColumn {
                get {
                    return this.columnJobNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUTRow this[int index] {
                get {
                    return ((LFS_WORK_FULLLENGTHLINING_WETOUTRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUTRowChanging;
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUTRowChanged;
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUTRowDeleting;
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_FULLLENGTHLINING_WETOUTRow(LFS_WORK_FULLLENGTHLINING_WETOUTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUTRow AddLFS_WORK_FULLLENGTHLINING_WETOUTRow(
                        int WorkID, 
                        string LinerTube, 
                        int ResinID, 
                        double ExcessResin, 
                        string PoundsDrums, 
                        double DrumDiameter, 
                        double HoistMaximumHeight, 
                        double HoistMinimumHeight, 
                        double DownDropTubeLenght, 
                        double PumpHeightAboveGround, 
                        int TubeResinToFeltFactor, 
                        System.DateTime DateOfSheet, 
                        int EmployeeID, 
                        string RunDetails, 
                        string RunDetails2, 
                        System.DateTime WetOutDate, 
                        System.DateTime InstallDate, 
                        string Thickness, 
                        double LengthToLine, 
                        double PlusExtra, 
                        double ForTurnOffset, 
                        double LengthToWetOut, 
                        double TubeMaxColdHead, 
                        double TubeMaxColdHeadPsi, 
                        double TubeMaxHotHead, 
                        double TubeMaxHotHeadPsi, 
                        double TubeIdealHead, 
                        double TubeIdealHeadPsi, 
                        double NetResinForTube, 
                        double NetResinForTubeUsgals, 
                        string NetResinForTubeDrumsIns, 
                        double NetResinForTubeLbsFt, 
                        double NetResinForTubeUsgFt, 
                        int ExtraResinForMix, 
                        double ExtraLbsForMix, 
                        double TotalMixQuantity, 
                        double TotalMixQuantityUsgals, 
                        string TotalMixQuantityDrumsIns, 
                        string InversionType, 
                        double DepthOfInversionMH, 
                        double TubeForColumn, 
                        double TubeForStartDry, 
                        double TotalTube, 
                        string DropTubeConnects, 
                        double AllowsHeadTo, 
                        double RollerGap, 
                        double HeightNeeded, 
                        string Available, 
                        string HoistHeight, 
                        string Comments, 
                        string ResinsLabel, 
                        string DrumContainsLabel, 
                        string LinerTubeLabel, 
                        string ForLbDrumsLabel, 
                        string NetResinLabel, 
                        string CatalystLabel, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        string MadeBy, 
                        string TubeSize, 
                        string JobName, 
                        string JobNumber, 
                        string Street) {
                LFS_WORK_FULLLENGTHLINING_WETOUTRow rowLFS_WORK_FULLLENGTHLINING_WETOUTRow = ((LFS_WORK_FULLLENGTHLINING_WETOUTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        LinerTube,
                        ResinID,
                        ExcessResin,
                        PoundsDrums,
                        DrumDiameter,
                        HoistMaximumHeight,
                        HoistMinimumHeight,
                        DownDropTubeLenght,
                        PumpHeightAboveGround,
                        TubeResinToFeltFactor,
                        DateOfSheet,
                        EmployeeID,
                        RunDetails,
                        RunDetails2,
                        WetOutDate,
                        InstallDate,
                        Thickness,
                        LengthToLine,
                        PlusExtra,
                        ForTurnOffset,
                        LengthToWetOut,
                        TubeMaxColdHead,
                        TubeMaxColdHeadPsi,
                        TubeMaxHotHead,
                        TubeMaxHotHeadPsi,
                        TubeIdealHead,
                        TubeIdealHeadPsi,
                        NetResinForTube,
                        NetResinForTubeUsgals,
                        NetResinForTubeDrumsIns,
                        NetResinForTubeLbsFt,
                        NetResinForTubeUsgFt,
                        ExtraResinForMix,
                        ExtraLbsForMix,
                        TotalMixQuantity,
                        TotalMixQuantityUsgals,
                        TotalMixQuantityDrumsIns,
                        InversionType,
                        DepthOfInversionMH,
                        TubeForColumn,
                        TubeForStartDry,
                        TotalTube,
                        DropTubeConnects,
                        AllowsHeadTo,
                        RollerGap,
                        HeightNeeded,
                        Available,
                        HoistHeight,
                        Comments,
                        ResinsLabel,
                        DrumContainsLabel,
                        LinerTubeLabel,
                        ForLbDrumsLabel,
                        NetResinLabel,
                        CatalystLabel,
                        Deleted,
                        COMPANY_ID,
                        MadeBy,
                        TubeSize,
                        JobName,
                        JobNumber,
                        Street};
                rowLFS_WORK_FULLLENGTHLINING_WETOUTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_FULLLENGTHLINING_WETOUTRow);
                return rowLFS_WORK_FULLLENGTHLINING_WETOUTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUTRow FindByWorkID(int WorkID) {
                return ((LFS_WORK_FULLLENGTHLINING_WETOUTRow)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_FULLLENGTHLINING_WETOUTDataTable cln = ((LFS_WORK_FULLLENGTHLINING_WETOUTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_FULLLENGTHLINING_WETOUTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnLinerTube = base.Columns["LinerTube"];
                this.columnResinID = base.Columns["ResinID"];
                this.columnExcessResin = base.Columns["ExcessResin"];
                this.columnPoundsDrums = base.Columns["PoundsDrums"];
                this.columnDrumDiameter = base.Columns["DrumDiameter"];
                this.columnHoistMaximumHeight = base.Columns["HoistMaximumHeight"];
                this.columnHoistMinimumHeight = base.Columns["HoistMinimumHeight"];
                this.columnDownDropTubeLenght = base.Columns["DownDropTubeLenght"];
                this.columnPumpHeightAboveGround = base.Columns["PumpHeightAboveGround"];
                this.columnTubeResinToFeltFactor = base.Columns["TubeResinToFeltFactor"];
                this.columnDateOfSheet = base.Columns["DateOfSheet"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnRunDetails = base.Columns["RunDetails"];
                this.columnRunDetails2 = base.Columns["RunDetails2"];
                this.columnWetOutDate = base.Columns["WetOutDate"];
                this.columnInstallDate = base.Columns["InstallDate"];
                this.columnThickness = base.Columns["Thickness"];
                this.columnLengthToLine = base.Columns["LengthToLine"];
                this.columnPlusExtra = base.Columns["PlusExtra"];
                this.columnForTurnOffset = base.Columns["ForTurnOffset"];
                this.columnLengthToWetOut = base.Columns["LengthToWetOut"];
                this.columnTubeMaxColdHead = base.Columns["TubeMaxColdHead"];
                this.columnTubeMaxColdHeadPsi = base.Columns["TubeMaxColdHeadPsi"];
                this.columnTubeMaxHotHead = base.Columns["TubeMaxHotHead"];
                this.columnTubeMaxHotHeadPsi = base.Columns["TubeMaxHotHeadPsi"];
                this.columnTubeIdealHead = base.Columns["TubeIdealHead"];
                this.columnTubeIdealHeadPsi = base.Columns["TubeIdealHeadPsi"];
                this.columnNetResinForTube = base.Columns["NetResinForTube"];
                this.columnNetResinForTubeUsgals = base.Columns["NetResinForTubeUsgals"];
                this.columnNetResinForTubeDrumsIns = base.Columns["NetResinForTubeDrumsIns"];
                this.columnNetResinForTubeLbsFt = base.Columns["NetResinForTubeLbsFt"];
                this.columnNetResinForTubeUsgFt = base.Columns["NetResinForTubeUsgFt"];
                this.columnExtraResinForMix = base.Columns["ExtraResinForMix"];
                this.columnExtraLbsForMix = base.Columns["ExtraLbsForMix"];
                this.columnTotalMixQuantity = base.Columns["TotalMixQuantity"];
                this.columnTotalMixQuantityUsgals = base.Columns["TotalMixQuantityUsgals"];
                this.columnTotalMixQuantityDrumsIns = base.Columns["TotalMixQuantityDrumsIns"];
                this.columnInversionType = base.Columns["InversionType"];
                this.columnDepthOfInversionMH = base.Columns["DepthOfInversionMH"];
                this.columnTubeForColumn = base.Columns["TubeForColumn"];
                this.columnTubeForStartDry = base.Columns["TubeForStartDry"];
                this.columnTotalTube = base.Columns["TotalTube"];
                this.columnDropTubeConnects = base.Columns["DropTubeConnects"];
                this.columnAllowsHeadTo = base.Columns["AllowsHeadTo"];
                this.columnRollerGap = base.Columns["RollerGap"];
                this.columnHeightNeeded = base.Columns["HeightNeeded"];
                this.columnAvailable = base.Columns["Available"];
                this.columnHoistHeight = base.Columns["HoistHeight"];
                this.columnComments = base.Columns["Comments"];
                this.columnResinsLabel = base.Columns["ResinsLabel"];
                this.columnDrumContainsLabel = base.Columns["DrumContainsLabel"];
                this.columnLinerTubeLabel = base.Columns["LinerTubeLabel"];
                this.columnForLbDrumsLabel = base.Columns["ForLbDrumsLabel"];
                this.columnNetResinLabel = base.Columns["NetResinLabel"];
                this.columnCatalystLabel = base.Columns["CatalystLabel"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnMadeBy = base.Columns["MadeBy"];
                this.columnTubeSize = base.Columns["TubeSize"];
                this.columnJobName = base.Columns["JobName"];
                this.columnJobNumber = base.Columns["JobNumber"];
                this.columnStreet = base.Columns["Street"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnLinerTube = new global::System.Data.DataColumn("LinerTube", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerTube);
                this.columnResinID = new global::System.Data.DataColumn("ResinID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResinID);
                this.columnExcessResin = new global::System.Data.DataColumn("ExcessResin", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcessResin);
                this.columnPoundsDrums = new global::System.Data.DataColumn("PoundsDrums", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoundsDrums);
                this.columnDrumDiameter = new global::System.Data.DataColumn("DrumDiameter", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrumDiameter);
                this.columnHoistMaximumHeight = new global::System.Data.DataColumn("HoistMaximumHeight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoistMaximumHeight);
                this.columnHoistMinimumHeight = new global::System.Data.DataColumn("HoistMinimumHeight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoistMinimumHeight);
                this.columnDownDropTubeLenght = new global::System.Data.DataColumn("DownDropTubeLenght", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDownDropTubeLenght);
                this.columnPumpHeightAboveGround = new global::System.Data.DataColumn("PumpHeightAboveGround", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumpHeightAboveGround);
                this.columnTubeResinToFeltFactor = new global::System.Data.DataColumn("TubeResinToFeltFactor", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeResinToFeltFactor);
                this.columnDateOfSheet = new global::System.Data.DataColumn("DateOfSheet", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfSheet);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnRunDetails = new global::System.Data.DataColumn("RunDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunDetails);
                this.columnRunDetails2 = new global::System.Data.DataColumn("RunDetails2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunDetails2);
                this.columnWetOutDate = new global::System.Data.DataColumn("WetOutDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWetOutDate);
                this.columnInstallDate = new global::System.Data.DataColumn("InstallDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallDate);
                this.columnThickness = new global::System.Data.DataColumn("Thickness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThickness);
                this.columnLengthToLine = new global::System.Data.DataColumn("LengthToLine", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLengthToLine);
                this.columnPlusExtra = new global::System.Data.DataColumn("PlusExtra", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlusExtra);
                this.columnForTurnOffset = new global::System.Data.DataColumn("ForTurnOffset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForTurnOffset);
                this.columnLengthToWetOut = new global::System.Data.DataColumn("LengthToWetOut", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLengthToWetOut);
                this.columnTubeMaxColdHead = new global::System.Data.DataColumn("TubeMaxColdHead", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeMaxColdHead);
                this.columnTubeMaxColdHeadPsi = new global::System.Data.DataColumn("TubeMaxColdHeadPsi", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeMaxColdHeadPsi);
                this.columnTubeMaxHotHead = new global::System.Data.DataColumn("TubeMaxHotHead", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeMaxHotHead);
                this.columnTubeMaxHotHeadPsi = new global::System.Data.DataColumn("TubeMaxHotHeadPsi", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeMaxHotHeadPsi);
                this.columnTubeIdealHead = new global::System.Data.DataColumn("TubeIdealHead", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeIdealHead);
                this.columnTubeIdealHeadPsi = new global::System.Data.DataColumn("TubeIdealHeadPsi", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeIdealHeadPsi);
                this.columnNetResinForTube = new global::System.Data.DataColumn("NetResinForTube", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetResinForTube);
                this.columnNetResinForTubeUsgals = new global::System.Data.DataColumn("NetResinForTubeUsgals", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetResinForTubeUsgals);
                this.columnNetResinForTubeDrumsIns = new global::System.Data.DataColumn("NetResinForTubeDrumsIns", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetResinForTubeDrumsIns);
                this.columnNetResinForTubeLbsFt = new global::System.Data.DataColumn("NetResinForTubeLbsFt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetResinForTubeLbsFt);
                this.columnNetResinForTubeUsgFt = new global::System.Data.DataColumn("NetResinForTubeUsgFt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetResinForTubeUsgFt);
                this.columnExtraResinForMix = new global::System.Data.DataColumn("ExtraResinForMix", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraResinForMix);
                this.columnExtraLbsForMix = new global::System.Data.DataColumn("ExtraLbsForMix", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraLbsForMix);
                this.columnTotalMixQuantity = new global::System.Data.DataColumn("TotalMixQuantity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalMixQuantity);
                this.columnTotalMixQuantityUsgals = new global::System.Data.DataColumn("TotalMixQuantityUsgals", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalMixQuantityUsgals);
                this.columnTotalMixQuantityDrumsIns = new global::System.Data.DataColumn("TotalMixQuantityDrumsIns", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalMixQuantityDrumsIns);
                this.columnInversionType = new global::System.Data.DataColumn("InversionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInversionType);
                this.columnDepthOfInversionMH = new global::System.Data.DataColumn("DepthOfInversionMH", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepthOfInversionMH);
                this.columnTubeForColumn = new global::System.Data.DataColumn("TubeForColumn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeForColumn);
                this.columnTubeForStartDry = new global::System.Data.DataColumn("TubeForStartDry", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeForStartDry);
                this.columnTotalTube = new global::System.Data.DataColumn("TotalTube", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTube);
                this.columnDropTubeConnects = new global::System.Data.DataColumn("DropTubeConnects", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropTubeConnects);
                this.columnAllowsHeadTo = new global::System.Data.DataColumn("AllowsHeadTo", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowsHeadTo);
                this.columnRollerGap = new global::System.Data.DataColumn("RollerGap", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollerGap);
                this.columnHeightNeeded = new global::System.Data.DataColumn("HeightNeeded", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeightNeeded);
                this.columnAvailable = new global::System.Data.DataColumn("Available", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAvailable);
                this.columnHoistHeight = new global::System.Data.DataColumn("HoistHeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoistHeight);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnResinsLabel = new global::System.Data.DataColumn("ResinsLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResinsLabel);
                this.columnDrumContainsLabel = new global::System.Data.DataColumn("DrumContainsLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrumContainsLabel);
                this.columnLinerTubeLabel = new global::System.Data.DataColumn("LinerTubeLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerTubeLabel);
                this.columnForLbDrumsLabel = new global::System.Data.DataColumn("ForLbDrumsLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForLbDrumsLabel);
                this.columnNetResinLabel = new global::System.Data.DataColumn("NetResinLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetResinLabel);
                this.columnCatalystLabel = new global::System.Data.DataColumn("CatalystLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCatalystLabel);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnMadeBy = new global::System.Data.DataColumn("MadeBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMadeBy);
                this.columnTubeSize = new global::System.Data.DataColumn("TubeSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeSize);
                this.columnJobName = new global::System.Data.DataColumn("JobName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobName);
                this.columnJobNumber = new global::System.Data.DataColumn("JobNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobNumber);
                this.columnStreet = new global::System.Data.DataColumn("Street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.Unique = true;
                this.columnLinerTube.AllowDBNull = false;
                this.columnLinerTube.MaxLength = 100;
                this.columnResinID.AllowDBNull = false;
                this.columnExcessResin.AllowDBNull = false;
                this.columnPoundsDrums.AllowDBNull = false;
                this.columnPoundsDrums.MaxLength = 25;
                this.columnDrumDiameter.AllowDBNull = false;
                this.columnHoistMaximumHeight.AllowDBNull = false;
                this.columnHoistMinimumHeight.AllowDBNull = false;
                this.columnDownDropTubeLenght.AllowDBNull = false;
                this.columnPumpHeightAboveGround.AllowDBNull = false;
                this.columnTubeResinToFeltFactor.AllowDBNull = false;
                this.columnDateOfSheet.AllowDBNull = false;
                this.columnEmployeeID.AllowDBNull = false;
                this.columnRunDetails.AllowDBNull = false;
                this.columnRunDetails.MaxLength = 1073741823;
                this.columnRunDetails2.AllowDBNull = false;
                this.columnRunDetails2.MaxLength = 25;
                this.columnWetOutDate.AllowDBNull = false;
                this.columnInstallDate.AllowDBNull = false;
                this.columnThickness.AllowDBNull = false;
                this.columnThickness.MaxLength = 25;
                this.columnLengthToLine.AllowDBNull = false;
                this.columnPlusExtra.AllowDBNull = false;
                this.columnForTurnOffset.AllowDBNull = false;
                this.columnLengthToWetOut.AllowDBNull = false;
                this.columnTubeMaxColdHead.AllowDBNull = false;
                this.columnTubeMaxColdHeadPsi.AllowDBNull = false;
                this.columnTubeMaxHotHead.AllowDBNull = false;
                this.columnTubeMaxHotHeadPsi.AllowDBNull = false;
                this.columnTubeIdealHead.AllowDBNull = false;
                this.columnTubeIdealHeadPsi.AllowDBNull = false;
                this.columnNetResinForTube.AllowDBNull = false;
                this.columnNetResinForTubeUsgals.AllowDBNull = false;
                this.columnNetResinForTubeDrumsIns.AllowDBNull = false;
                this.columnNetResinForTubeDrumsIns.MaxLength = 25;
                this.columnNetResinForTubeLbsFt.AllowDBNull = false;
                this.columnNetResinForTubeUsgFt.AllowDBNull = false;
                this.columnExtraResinForMix.AllowDBNull = false;
                this.columnExtraLbsForMix.AllowDBNull = false;
                this.columnTotalMixQuantity.AllowDBNull = false;
                this.columnTotalMixQuantityUsgals.AllowDBNull = false;
                this.columnTotalMixQuantityDrumsIns.AllowDBNull = false;
                this.columnTotalMixQuantityDrumsIns.MaxLength = 25;
                this.columnInversionType.AllowDBNull = false;
                this.columnInversionType.MaxLength = 25;
                this.columnDepthOfInversionMH.AllowDBNull = false;
                this.columnTubeForColumn.AllowDBNull = false;
                this.columnTubeForStartDry.AllowDBNull = false;
                this.columnTotalTube.AllowDBNull = false;
                this.columnDropTubeConnects.AllowDBNull = false;
                this.columnDropTubeConnects.MaxLength = 25;
                this.columnAllowsHeadTo.AllowDBNull = false;
                this.columnRollerGap.AllowDBNull = false;
                this.columnHeightNeeded.AllowDBNull = false;
                this.columnAvailable.AllowDBNull = false;
                this.columnAvailable.MaxLength = 25;
                this.columnHoistHeight.AllowDBNull = false;
                this.columnHoistHeight.MaxLength = 25;
                this.columnComments.MaxLength = 1073741823;
                this.columnResinsLabel.AllowDBNull = false;
                this.columnResinsLabel.MaxLength = 150;
                this.columnDrumContainsLabel.AllowDBNull = false;
                this.columnDrumContainsLabel.MaxLength = 150;
                this.columnLinerTubeLabel.AllowDBNull = false;
                this.columnLinerTubeLabel.MaxLength = 150;
                this.columnForLbDrumsLabel.AllowDBNull = false;
                this.columnForLbDrumsLabel.MaxLength = 50;
                this.columnNetResinLabel.AllowDBNull = false;
                this.columnNetResinLabel.MaxLength = 150;
                this.columnCatalystLabel.AllowDBNull = false;
                this.columnCatalystLabel.MaxLength = 150;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUTRow NewLFS_WORK_FULLLENGTHLINING_WETOUTRow() {
                return ((LFS_WORK_FULLLENGTHLINING_WETOUTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_FULLLENGTHLINING_WETOUTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_FULLLENGTHLINING_WETOUTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUTRowChanged != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUTRowChanged(this, new LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUTRowChanging != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUTRowChanging(this, new LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUTRowDeleted != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUTRowDeleted(this, new LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUTRowDeleting != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUTRowDeleting(this, new LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_FULLLENGTHLINING_WETOUTRow(LFS_WORK_FULLLENGTHLINING_WETOUTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FlWetOutReportTDS ds = new FlWetOutReportTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_FULLLENGTHLINING_WETOUTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnCatalystID;
            
            private global::System.Data.DataColumn columnPercentageByWeight;
            
            private global::System.Data.DataColumn columnLbsForMixQuantity;
            
            private global::System.Data.DataColumn columnLbsForDrum;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable() {
                this.TableName = "LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CatalystIDColumn {
                get {
                    return this.columnCatalystID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PercentageByWeightColumn {
                get {
                    return this.columnPercentageByWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LbsForMixQuantityColumn {
                get {
                    return this.columnLbsForMixQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LbsForDrumColumn {
                get {
                    return this.columnLbsForDrum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow this[int index] {
                get {
                    return ((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChanging;
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChanged;
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowDeleting;
            
            public event LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow(LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow AddLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow(int WorkID, int RefID, int CatalystID, double PercentageByWeight, double LbsForMixQuantity, string LbsForDrum, bool Deleted, int COMPANY_ID, string Name) {
                LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow rowLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow = ((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        RefID,
                        CatalystID,
                        PercentageByWeight,
                        LbsForMixQuantity,
                        LbsForDrum,
                        Deleted,
                        COMPANY_ID,
                        Name};
                rowLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow);
                return rowLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow FindByWorkIDRefID(int WorkID, int RefID) {
                return ((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow)(this.Rows.Find(new object[] {
                            WorkID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable cln = ((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnCatalystID = base.Columns["CatalystID"];
                this.columnPercentageByWeight = base.Columns["PercentageByWeight"];
                this.columnLbsForMixQuantity = base.Columns["LbsForMixQuantity"];
                this.columnLbsForDrum = base.Columns["LbsForDrum"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnCatalystID = new global::System.Data.DataColumn("CatalystID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCatalystID);
                this.columnPercentageByWeight = new global::System.Data.DataColumn("PercentageByWeight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageByWeight);
                this.columnLbsForMixQuantity = new global::System.Data.DataColumn("LbsForMixQuantity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLbsForMixQuantity);
                this.columnLbsForDrum = new global::System.Data.DataColumn("LbsForDrum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLbsForDrum);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID,
                                this.columnRefID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnCatalystID.AllowDBNull = false;
                this.columnPercentageByWeight.AllowDBNull = false;
                this.columnLbsForMixQuantity.AllowDBNull = false;
                this.columnLbsForDrum.AllowDBNull = false;
                this.columnLbsForDrum.MaxLength = 50;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow NewLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow() {
                return ((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChanged != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChanged(this, new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChanging != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChanging(this, new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowDeleted != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowDeleted(this, new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowDeleting != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowDeleting(this, new LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow(LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FlWetOutReportTDS ds = new FlWetOutReportTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_FULLLENGTHLINING_WETOUTRow : global::System.Data.DataRow {
            
            private LFS_WORK_FULLLENGTHLINING_WETOUTDataTable tableLFS_WORK_FULLLENGTHLINING_WETOUT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_WETOUTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_FULLLENGTHLINING_WETOUT = ((LFS_WORK_FULLLENGTHLINING_WETOUTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinerTube {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.LinerTubeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.LinerTubeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ResinID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ResinIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ResinIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ExcessResin {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ExcessResinColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ExcessResinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PoundsDrums {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.PoundsDrumsColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.PoundsDrumsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DrumDiameter {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DrumDiameterColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DrumDiameterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HoistMaximumHeight {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.HoistMaximumHeightColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.HoistMaximumHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HoistMinimumHeight {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.HoistMinimumHeightColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.HoistMinimumHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DownDropTubeLenght {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DownDropTubeLenghtColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DownDropTubeLenghtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PumpHeightAboveGround {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.PumpHeightAboveGroundColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.PumpHeightAboveGroundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TubeResinToFeltFactor {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeResinToFeltFactorColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeResinToFeltFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfSheet {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DateOfSheetColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DateOfSheetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.EmployeeIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RunDetails {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.RunDetailsColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.RunDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RunDetails2 {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.RunDetails2Column]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.RunDetails2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WetOutDate {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.WetOutDateColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.WetOutDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InstallDate {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.InstallDateColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.InstallDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Thickness {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ThicknessColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ThicknessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LengthToLine {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.LengthToLineColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.LengthToLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PlusExtra {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.PlusExtraColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.PlusExtraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ForTurnOffset {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ForTurnOffsetColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ForTurnOffsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LengthToWetOut {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.LengthToWetOutColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.LengthToWetOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeMaxColdHead {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeMaxColdHeadColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeMaxColdHeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeMaxColdHeadPsi {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeMaxColdHeadPsiColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeMaxColdHeadPsiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeMaxHotHead {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeMaxHotHeadColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeMaxHotHeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeMaxHotHeadPsi {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeMaxHotHeadPsiColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeMaxHotHeadPsiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeIdealHead {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeIdealHeadColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeIdealHeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeIdealHeadPsi {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeIdealHeadPsiColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeIdealHeadPsiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NetResinForTube {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NetResinForTubeUsgals {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeUsgalsColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeUsgalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NetResinForTubeDrumsIns {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeDrumsInsColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeDrumsInsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NetResinForTubeLbsFt {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeLbsFtColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeLbsFtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NetResinForTubeUsgFt {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeUsgFtColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinForTubeUsgFtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExtraResinForMix {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ExtraResinForMixColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ExtraResinForMixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ExtraLbsForMix {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ExtraLbsForMixColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ExtraLbsForMixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TotalMixQuantity {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TotalMixQuantityColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TotalMixQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TotalMixQuantityUsgals {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TotalMixQuantityUsgalsColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TotalMixQuantityUsgalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalMixQuantityDrumsIns {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TotalMixQuantityDrumsInsColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TotalMixQuantityDrumsInsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InversionType {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.InversionTypeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.InversionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DepthOfInversionMH {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DepthOfInversionMHColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DepthOfInversionMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeForColumn {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeForColumnColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeForColumnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeForStartDry {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeForStartDryColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeForStartDryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TotalTube {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TotalTubeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TotalTubeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DropTubeConnects {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DropTubeConnectsColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DropTubeConnectsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AllowsHeadTo {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.AllowsHeadToColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.AllowsHeadToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double RollerGap {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.RollerGapColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.RollerGapColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HeightNeeded {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.HeightNeededColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.HeightNeededColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Available {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.AvailableColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.AvailableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HoistHeight {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.HoistHeightColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.HoistHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_WORK_FULLLENGTHLINING_WETOUT\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResinsLabel {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ResinsLabelColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ResinsLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DrumContainsLabel {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DrumContainsLabelColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DrumContainsLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinerTubeLabel {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.LinerTubeLabelColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.LinerTubeLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ForLbDrumsLabel {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ForLbDrumsLabelColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.ForLbDrumsLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NetResinLabel {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinLabelColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.NetResinLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CatalystLabel {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.CatalystLabelColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.CatalystLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MadeBy {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.MadeByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MadeBy\' in table \'LFS_WORK_FULLLENGTHLINING_WETOUT\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.MadeByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TubeSize {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TubeSize\' in table \'LFS_WORK_FULLLENGTHLINING_WETOUT\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobName {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.JobNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobName\' in table \'LFS_WORK_FULLLENGTHLINING_WETOUT\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.JobNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobNumber {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.JobNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobNumber\' in table \'LFS_WORK_FULLLENGTHLINING_WETOUT\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.JobNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Street {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.StreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Street\' in table \'LFS_WORK_FULLLENGTHLINING_WETOUT\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.StreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMadeByNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.MadeByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMadeByNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.MadeByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTubeSizeNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTubeSizeNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.TubeSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobNameNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.JobNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobNameNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.JobNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobNumberNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.JobNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobNumberNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.JobNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.StreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT.StreetColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow : global::System.Data.DataRow {
            
            private LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS = ((LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CatalystID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.CatalystIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.CatalystIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PercentageByWeight {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.PercentageByWeightColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.PercentageByWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LbsForMixQuantity {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.LbsForMixQuantityColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.LbsForMixQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LbsForDrum {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.LbsForDrumColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.LbsForDrumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTS.NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_FULLLENGTHLINING_WETOUTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUTRowChangeEvent(LFS_WORK_FULLLENGTHLINING_WETOUTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRowChangeEvent(LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_WETOUT_CATALYSTSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591