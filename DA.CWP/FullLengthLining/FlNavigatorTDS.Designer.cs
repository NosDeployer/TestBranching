//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3620
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.CWP.FullLengthLining {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("FlNavigatorTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class FlNavigatorTDS : global::System.Data.DataSet {
        
        private FlNavigatorDataTable tableFlNavigator;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FlNavigatorTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected FlNavigatorTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["FlNavigator"] != null)) {
                    base.Tables.Add(new FlNavigatorDataTable(ds.Tables["FlNavigator"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FlNavigatorDataTable FlNavigator {
            get {
                return this.tableFlNavigator;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            FlNavigatorTDS cln = ((FlNavigatorTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["FlNavigator"] != null)) {
                    base.Tables.Add(new FlNavigatorDataTable(ds.Tables["FlNavigator"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableFlNavigator = ((FlNavigatorDataTable)(base.Tables["FlNavigator"]));
            if ((initTable == true)) {
                if ((this.tableFlNavigator != null)) {
                    this.tableFlNavigator.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "FlNavigatorTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/FlNavigatorTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFlNavigator = new FlNavigatorDataTable();
            base.Tables.Add(this.tableFlNavigator);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFlNavigator() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            FlNavigatorTDS ds = new FlNavigatorTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void FlNavigatorRowChangeEventHandler(object sender, FlNavigatorRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FlNavigatorDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSelected;
            
            private global::System.Data.DataColumn columnAssetID_;
            
            private global::System.Data.DataColumn columnAssetID;
            
            private global::System.Data.DataColumn columnSectionID;
            
            private global::System.Data.DataColumn columnSubArea;
            
            private global::System.Data.DataColumn columnStreet;
            
            private global::System.Data.DataColumn columnUSMH;
            
            private global::System.Data.DataColumn columnDSMH;
            
            private global::System.Data.DataColumn columnProposedLiningDate;
            
            private global::System.Data.DataColumn columnDeadlineLiningDate;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnUSMHDescription;
            
            private global::System.Data.DataColumn columnDSMHDescription;
            
            private global::System.Data.DataColumn columnFlowOrderID;
            
            private global::System.Data.DataColumn columnPreFlushDate;
            
            private global::System.Data.DataColumn columnPreVideoDate;
            
            private global::System.Data.DataColumn columnRoboticPrepRequired;
            
            private global::System.Data.DataColumn columnMapSize;
            
            private global::System.Data.DataColumn columnMapLength;
            
            private global::System.Data.DataColumn columnOriginalSectionID;
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnSize_;
            
            private global::System.Data.DataColumn columnLength;
            
            private global::System.Data.DataColumn columnVideoLength;
            
            private global::System.Data.DataColumn columnLaterals;
            
            private global::System.Data.DataColumn columnLiveLaterals;
            
            private global::System.Data.DataColumn columnClientID;
            
            private global::System.Data.DataColumn columnP1Date;
            
            private global::System.Data.DataColumn columnCXIsRemoved;
            
            private global::System.Data.DataColumn columnM1Date;
            
            private global::System.Data.DataColumn columnMaterialType;
            
            private global::System.Data.DataColumn columnUSMHAddress;
            
            private global::System.Data.DataColumn columnUSMHDepth;
            
            private global::System.Data.DataColumn columnUSMHMouth12;
            
            private global::System.Data.DataColumn columnUSMHMouth1;
            
            private global::System.Data.DataColumn columnUSMHMouth2;
            
            private global::System.Data.DataColumn columnUSMHMouth3;
            
            private global::System.Data.DataColumn columnUSMHMouth4;
            
            private global::System.Data.DataColumn columnUSMHMouth5;
            
            private global::System.Data.DataColumn columnDSMHAddress;
            
            private global::System.Data.DataColumn columnDSMHDepth;
            
            private global::System.Data.DataColumn columnDSMHMouth12;
            
            private global::System.Data.DataColumn columnDSMHMouth1;
            
            private global::System.Data.DataColumn columnDSMHMouth2;
            
            private global::System.Data.DataColumn columnDSMHMouth3;
            
            private global::System.Data.DataColumn columnDSMHMouth4;
            
            private global::System.Data.DataColumn columnDSMHMouth5;
            
            private global::System.Data.DataColumn columnTrafficControl;
            
            private global::System.Data.DataColumn columnSiteDetails;
            
            private global::System.Data.DataColumn columnPipeSizeChange;
            
            private global::System.Data.DataColumn columnStandardBypass;
            
            private global::System.Data.DataColumn columnStandardBypassComments;
            
            private global::System.Data.DataColumn columnTrafficControlDetails;
            
            private global::System.Data.DataColumn columnMeasurementType;
            
            private global::System.Data.DataColumn columnMeasurementFromMH;
            
            private global::System.Data.DataColumn columnVideoDoneFromMH;
            
            private global::System.Data.DataColumn columnVideoDoneToMH;
            
            private global::System.Data.DataColumn columnM2Date;
            
            private global::System.Data.DataColumn columnInstallDate;
            
            private global::System.Data.DataColumn columnFinalVideoDate;
            
            private global::System.Data.DataColumn columnM1MeasurementTakenBy;
            
            private global::System.Data.DataColumn columnM2MeasurementTakenBy;
            
            private global::System.Data.DataColumn columnDropPipe;
            
            private global::System.Data.DataColumn columnDropPipeInvertDepth;
            
            private global::System.Data.DataColumn columnCappedLaterals;
            
            private global::System.Data.DataColumn columnLineWithID;
            
            private global::System.Data.DataColumn columnHydrantAddress;
            
            private global::System.Data.DataColumn columnDistanceToInversionMH;
            
            private global::System.Data.DataColumn columnHydroWireWithin10FtOfInversionMH;
            
            private global::System.Data.DataColumn columnSurfaceGrade;
            
            private global::System.Data.DataColumn columnHydroPulley;
            
            private global::System.Data.DataColumn columnFridgeCart;
            
            private global::System.Data.DataColumn columnTwoPump;
            
            private global::System.Data.DataColumn columnSixBypass;
            
            private global::System.Data.DataColumn columnScaffolding;
            
            private global::System.Data.DataColumn columnWinchExtention;
            
            private global::System.Data.DataColumn columnExtraGenerator;
            
            private global::System.Data.DataColumn columnGreyCableExtension;
            
            private global::System.Data.DataColumn columnEasementMats;
            
            private global::System.Data.DataColumn columnRampRequired;
            
            private global::System.Data.DataColumn columnCameraSkid;
            
            private global::System.Data.DataColumn columnIssueIdentified;
            
            private global::System.Data.DataColumn columnIssueLFS;
            
            private global::System.Data.DataColumn columnIssueClient;
            
            private global::System.Data.DataColumn columnIssueSales;
            
            private global::System.Data.DataColumn columnIssueGivenToClient;
            
            private global::System.Data.DataColumn columnIssueInvestigation;
            
            private global::System.Data.DataColumn columnIssueResolved;
            
            private global::System.Data.DataColumn columnThickness;
            
            private global::System.Data.DataColumn columnRoboticPrepCompleted;
            
            private global::System.Data.DataColumn columnRoboticPrepCompletedDate;
            
            private global::System.Data.DataColumn columnLateralsSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FlNavigatorDataTable() {
                this.TableName = "FlNavigator";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FlNavigatorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FlNavigatorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectedColumn {
                get {
                    return this.columnSelected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetID_Column {
                get {
                    return this.columnAssetID_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetIDColumn {
                get {
                    return this.columnAssetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionIDColumn {
                get {
                    return this.columnSectionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubAreaColumn {
                get {
                    return this.columnSubArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHColumn {
                get {
                    return this.columnUSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHColumn {
                get {
                    return this.columnDSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProposedLiningDateColumn {
                get {
                    return this.columnProposedLiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeadlineLiningDateColumn {
                get {
                    return this.columnDeadlineLiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHDescriptionColumn {
                get {
                    return this.columnUSMHDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHDescriptionColumn {
                get {
                    return this.columnDSMHDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlowOrderIDColumn {
                get {
                    return this.columnFlowOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreFlushDateColumn {
                get {
                    return this.columnPreFlushDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreVideoDateColumn {
                get {
                    return this.columnPreVideoDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoboticPrepRequiredColumn {
                get {
                    return this.columnRoboticPrepRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MapSizeColumn {
                get {
                    return this.columnMapSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MapLengthColumn {
                get {
                    return this.columnMapLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OriginalSectionIDColumn {
                get {
                    return this.columnOriginalSectionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Size_Column {
                get {
                    return this.columnSize_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoLengthColumn {
                get {
                    return this.columnVideoLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralsColumn {
                get {
                    return this.columnLaterals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LiveLateralsColumn {
                get {
                    return this.columnLiveLaterals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P1DateColumn {
                get {
                    return this.columnP1Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CXIsRemovedColumn {
                get {
                    return this.columnCXIsRemoved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M1DateColumn {
                get {
                    return this.columnM1Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialTypeColumn {
                get {
                    return this.columnMaterialType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAddressColumn {
                get {
                    return this.columnUSMHAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHDepthColumn {
                get {
                    return this.columnUSMHDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMouth12Column {
                get {
                    return this.columnUSMHMouth12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMouth1Column {
                get {
                    return this.columnUSMHMouth1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMouth2Column {
                get {
                    return this.columnUSMHMouth2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMouth3Column {
                get {
                    return this.columnUSMHMouth3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMouth4Column {
                get {
                    return this.columnUSMHMouth4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMouth5Column {
                get {
                    return this.columnUSMHMouth5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAddressColumn {
                get {
                    return this.columnDSMHAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHDepthColumn {
                get {
                    return this.columnDSMHDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMouth12Column {
                get {
                    return this.columnDSMHMouth12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMouth1Column {
                get {
                    return this.columnDSMHMouth1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMouth2Column {
                get {
                    return this.columnDSMHMouth2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMouth3Column {
                get {
                    return this.columnDSMHMouth3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMouth4Column {
                get {
                    return this.columnDSMHMouth4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMouth5Column {
                get {
                    return this.columnDSMHMouth5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrafficControlColumn {
                get {
                    return this.columnTrafficControl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteDetailsColumn {
                get {
                    return this.columnSiteDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PipeSizeChangeColumn {
                get {
                    return this.columnPipeSizeChange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardBypassColumn {
                get {
                    return this.columnStandardBypass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardBypassCommentsColumn {
                get {
                    return this.columnStandardBypassComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrafficControlDetailsColumn {
                get {
                    return this.columnTrafficControlDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementTypeColumn {
                get {
                    return this.columnMeasurementType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementFromMHColumn {
                get {
                    return this.columnMeasurementFromMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoDoneFromMHColumn {
                get {
                    return this.columnVideoDoneFromMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoDoneToMHColumn {
                get {
                    return this.columnVideoDoneToMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M2DateColumn {
                get {
                    return this.columnM2Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallDateColumn {
                get {
                    return this.columnInstallDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinalVideoDateColumn {
                get {
                    return this.columnFinalVideoDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M1MeasurementTakenByColumn {
                get {
                    return this.columnM1MeasurementTakenBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M2MeasurementTakenByColumn {
                get {
                    return this.columnM2MeasurementTakenBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DropPipeColumn {
                get {
                    return this.columnDropPipe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DropPipeInvertDepthColumn {
                get {
                    return this.columnDropPipeInvertDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CappedLateralsColumn {
                get {
                    return this.columnCappedLaterals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineWithIDColumn {
                get {
                    return this.columnLineWithID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HydrantAddressColumn {
                get {
                    return this.columnHydrantAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceToInversionMHColumn {
                get {
                    return this.columnDistanceToInversionMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HydroWireWithin10FtOfInversionMHColumn {
                get {
                    return this.columnHydroWireWithin10FtOfInversionMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SurfaceGradeColumn {
                get {
                    return this.columnSurfaceGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HydroPulleyColumn {
                get {
                    return this.columnHydroPulley;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FridgeCartColumn {
                get {
                    return this.columnFridgeCart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TwoPumpColumn {
                get {
                    return this.columnTwoPump;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SixBypassColumn {
                get {
                    return this.columnSixBypass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScaffoldingColumn {
                get {
                    return this.columnScaffolding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WinchExtentionColumn {
                get {
                    return this.columnWinchExtention;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraGeneratorColumn {
                get {
                    return this.columnExtraGenerator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GreyCableExtensionColumn {
                get {
                    return this.columnGreyCableExtension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EasementMatsColumn {
                get {
                    return this.columnEasementMats;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RampRequiredColumn {
                get {
                    return this.columnRampRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CameraSkidColumn {
                get {
                    return this.columnCameraSkid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueIdentifiedColumn {
                get {
                    return this.columnIssueIdentified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueLFSColumn {
                get {
                    return this.columnIssueLFS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueClientColumn {
                get {
                    return this.columnIssueClient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueSalesColumn {
                get {
                    return this.columnIssueSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueGivenToClientColumn {
                get {
                    return this.columnIssueGivenToClient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueInvestigationColumn {
                get {
                    return this.columnIssueInvestigation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueResolvedColumn {
                get {
                    return this.columnIssueResolved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThicknessColumn {
                get {
                    return this.columnThickness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoboticPrepCompletedColumn {
                get {
                    return this.columnRoboticPrepCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoboticPrepCompletedDateColumn {
                get {
                    return this.columnRoboticPrepCompletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralsSummaryColumn {
                get {
                    return this.columnLateralsSummary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FlNavigatorRow this[int index] {
                get {
                    return ((FlNavigatorRow)(this.Rows[index]));
                }
            }
            
            public event FlNavigatorRowChangeEventHandler FlNavigatorRowChanging;
            
            public event FlNavigatorRowChangeEventHandler FlNavigatorRowChanged;
            
            public event FlNavigatorRowChangeEventHandler FlNavigatorRowDeleting;
            
            public event FlNavigatorRowChangeEventHandler FlNavigatorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFlNavigatorRow(FlNavigatorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FlNavigatorRow AddFlNavigatorRow(
                        bool Selected, 
                        string AssetID_, 
                        int AssetID, 
                        string SectionID, 
                        string SubArea, 
                        string Street, 
                        int USMH, 
                        int DSMH, 
                        System.DateTime ProposedLiningDate, 
                        System.DateTime DeadlineLiningDate, 
                        string Comments, 
                        string USMHDescription, 
                        string DSMHDescription, 
                        string FlowOrderID, 
                        System.DateTime PreFlushDate, 
                        System.DateTime PreVideoDate, 
                        bool RoboticPrepRequired, 
                        string MapSize, 
                        string MapLength, 
                        string OriginalSectionID, 
                        int ProjectID, 
                        string Size_, 
                        string Length, 
                        string VideoLength, 
                        int Laterals, 
                        int LiveLaterals, 
                        string ClientID, 
                        System.DateTime P1Date, 
                        int CXIsRemoved, 
                        System.DateTime M1Date, 
                        string MaterialType, 
                        string USMHAddress, 
                        string USMHDepth, 
                        string USMHMouth12, 
                        string USMHMouth1, 
                        string USMHMouth2, 
                        string USMHMouth3, 
                        string USMHMouth4, 
                        string USMHMouth5, 
                        string DSMHAddress, 
                        string DSMHDepth, 
                        string DSMHMouth12, 
                        string DSMHMouth1, 
                        string DSMHMouth2, 
                        string DSMHMouth3, 
                        string DSMHMouth4, 
                        string DSMHMouth5, 
                        string TrafficControl, 
                        string SiteDetails, 
                        bool PipeSizeChange, 
                        bool StandardBypass, 
                        string StandardBypassComments, 
                        string TrafficControlDetails, 
                        string MeasurementType, 
                        string MeasurementFromMH, 
                        string VideoDoneFromMH, 
                        string VideoDoneToMH, 
                        System.DateTime M2Date, 
                        System.DateTime InstallDate, 
                        System.DateTime FinalVideoDate, 
                        string M1MeasurementTakenBy, 
                        string M2MeasurementTakenBy, 
                        bool DropPipe, 
                        string DropPipeInvertDepth, 
                        int CappedLaterals, 
                        string LineWithID, 
                        string HydrantAddress, 
                        string DistanceToInversionMH, 
                        string HydroWireWithin10FtOfInversionMH, 
                        string SurfaceGrade, 
                        bool HydroPulley, 
                        bool FridgeCart, 
                        bool TwoPump, 
                        bool SixBypass, 
                        bool Scaffolding, 
                        bool WinchExtention, 
                        bool ExtraGenerator, 
                        bool GreyCableExtension, 
                        bool EasementMats, 
                        bool RampRequired, 
                        bool CameraSkid, 
                        bool IssueIdentified, 
                        bool IssueLFS, 
                        bool IssueClient, 
                        bool IssueSales, 
                        bool IssueGivenToClient, 
                        bool IssueInvestigation, 
                        bool IssueResolved, 
                        string Thickness, 
                        bool RoboticPrepCompleted, 
                        System.DateTime RoboticPrepCompletedDate, 
                        string LateralsSummary) {
                FlNavigatorRow rowFlNavigatorRow = ((FlNavigatorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Selected,
                        AssetID_,
                        AssetID,
                        SectionID,
                        SubArea,
                        Street,
                        USMH,
                        DSMH,
                        ProposedLiningDate,
                        DeadlineLiningDate,
                        Comments,
                        USMHDescription,
                        DSMHDescription,
                        FlowOrderID,
                        PreFlushDate,
                        PreVideoDate,
                        RoboticPrepRequired,
                        MapSize,
                        MapLength,
                        OriginalSectionID,
                        ProjectID,
                        Size_,
                        Length,
                        VideoLength,
                        Laterals,
                        LiveLaterals,
                        ClientID,
                        P1Date,
                        CXIsRemoved,
                        M1Date,
                        MaterialType,
                        USMHAddress,
                        USMHDepth,
                        USMHMouth12,
                        USMHMouth1,
                        USMHMouth2,
                        USMHMouth3,
                        USMHMouth4,
                        USMHMouth5,
                        DSMHAddress,
                        DSMHDepth,
                        DSMHMouth12,
                        DSMHMouth1,
                        DSMHMouth2,
                        DSMHMouth3,
                        DSMHMouth4,
                        DSMHMouth5,
                        TrafficControl,
                        SiteDetails,
                        PipeSizeChange,
                        StandardBypass,
                        StandardBypassComments,
                        TrafficControlDetails,
                        MeasurementType,
                        MeasurementFromMH,
                        VideoDoneFromMH,
                        VideoDoneToMH,
                        M2Date,
                        InstallDate,
                        FinalVideoDate,
                        M1MeasurementTakenBy,
                        M2MeasurementTakenBy,
                        DropPipe,
                        DropPipeInvertDepth,
                        CappedLaterals,
                        LineWithID,
                        HydrantAddress,
                        DistanceToInversionMH,
                        HydroWireWithin10FtOfInversionMH,
                        SurfaceGrade,
                        HydroPulley,
                        FridgeCart,
                        TwoPump,
                        SixBypass,
                        Scaffolding,
                        WinchExtention,
                        ExtraGenerator,
                        GreyCableExtension,
                        EasementMats,
                        RampRequired,
                        CameraSkid,
                        IssueIdentified,
                        IssueLFS,
                        IssueClient,
                        IssueSales,
                        IssueGivenToClient,
                        IssueInvestigation,
                        IssueResolved,
                        Thickness,
                        RoboticPrepCompleted,
                        RoboticPrepCompletedDate,
                        LateralsSummary};
                rowFlNavigatorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFlNavigatorRow);
                return rowFlNavigatorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FlNavigatorRow FindByAssetID_(string AssetID_) {
                return ((FlNavigatorRow)(this.Rows.Find(new object[] {
                            AssetID_})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FlNavigatorDataTable cln = ((FlNavigatorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FlNavigatorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSelected = base.Columns["Selected"];
                this.columnAssetID_ = base.Columns["AssetID_"];
                this.columnAssetID = base.Columns["AssetID"];
                this.columnSectionID = base.Columns["SectionID"];
                this.columnSubArea = base.Columns["SubArea"];
                this.columnStreet = base.Columns["Street"];
                this.columnUSMH = base.Columns["USMH"];
                this.columnDSMH = base.Columns["DSMH"];
                this.columnProposedLiningDate = base.Columns["ProposedLiningDate"];
                this.columnDeadlineLiningDate = base.Columns["DeadlineLiningDate"];
                this.columnComments = base.Columns["Comments"];
                this.columnUSMHDescription = base.Columns["USMHDescription"];
                this.columnDSMHDescription = base.Columns["DSMHDescription"];
                this.columnFlowOrderID = base.Columns["FlowOrderID"];
                this.columnPreFlushDate = base.Columns["PreFlushDate"];
                this.columnPreVideoDate = base.Columns["PreVideoDate"];
                this.columnRoboticPrepRequired = base.Columns["RoboticPrepRequired"];
                this.columnMapSize = base.Columns["MapSize"];
                this.columnMapLength = base.Columns["MapLength"];
                this.columnOriginalSectionID = base.Columns["OriginalSectionID"];
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnSize_ = base.Columns["Size_"];
                this.columnLength = base.Columns["Length"];
                this.columnVideoLength = base.Columns["VideoLength"];
                this.columnLaterals = base.Columns["Laterals"];
                this.columnLiveLaterals = base.Columns["LiveLaterals"];
                this.columnClientID = base.Columns["ClientID"];
                this.columnP1Date = base.Columns["P1Date"];
                this.columnCXIsRemoved = base.Columns["CXIsRemoved"];
                this.columnM1Date = base.Columns["M1Date"];
                this.columnMaterialType = base.Columns["MaterialType"];
                this.columnUSMHAddress = base.Columns["USMHAddress"];
                this.columnUSMHDepth = base.Columns["USMHDepth"];
                this.columnUSMHMouth12 = base.Columns["USMHMouth12"];
                this.columnUSMHMouth1 = base.Columns["USMHMouth1"];
                this.columnUSMHMouth2 = base.Columns["USMHMouth2"];
                this.columnUSMHMouth3 = base.Columns["USMHMouth3"];
                this.columnUSMHMouth4 = base.Columns["USMHMouth4"];
                this.columnUSMHMouth5 = base.Columns["USMHMouth5"];
                this.columnDSMHAddress = base.Columns["DSMHAddress"];
                this.columnDSMHDepth = base.Columns["DSMHDepth"];
                this.columnDSMHMouth12 = base.Columns["DSMHMouth12"];
                this.columnDSMHMouth1 = base.Columns["DSMHMouth1"];
                this.columnDSMHMouth2 = base.Columns["DSMHMouth2"];
                this.columnDSMHMouth3 = base.Columns["DSMHMouth3"];
                this.columnDSMHMouth4 = base.Columns["DSMHMouth4"];
                this.columnDSMHMouth5 = base.Columns["DSMHMouth5"];
                this.columnTrafficControl = base.Columns["TrafficControl"];
                this.columnSiteDetails = base.Columns["SiteDetails"];
                this.columnPipeSizeChange = base.Columns["PipeSizeChange"];
                this.columnStandardBypass = base.Columns["StandardBypass"];
                this.columnStandardBypassComments = base.Columns["StandardBypassComments"];
                this.columnTrafficControlDetails = base.Columns["TrafficControlDetails"];
                this.columnMeasurementType = base.Columns["MeasurementType"];
                this.columnMeasurementFromMH = base.Columns["MeasurementFromMH"];
                this.columnVideoDoneFromMH = base.Columns["VideoDoneFromMH"];
                this.columnVideoDoneToMH = base.Columns["VideoDoneToMH"];
                this.columnM2Date = base.Columns["M2Date"];
                this.columnInstallDate = base.Columns["InstallDate"];
                this.columnFinalVideoDate = base.Columns["FinalVideoDate"];
                this.columnM1MeasurementTakenBy = base.Columns["M1MeasurementTakenBy"];
                this.columnM2MeasurementTakenBy = base.Columns["M2MeasurementTakenBy"];
                this.columnDropPipe = base.Columns["DropPipe"];
                this.columnDropPipeInvertDepth = base.Columns["DropPipeInvertDepth"];
                this.columnCappedLaterals = base.Columns["CappedLaterals"];
                this.columnLineWithID = base.Columns["LineWithID"];
                this.columnHydrantAddress = base.Columns["HydrantAddress"];
                this.columnDistanceToInversionMH = base.Columns["DistanceToInversionMH"];
                this.columnHydroWireWithin10FtOfInversionMH = base.Columns["HydroWireWithin10FtOfInversionMH"];
                this.columnSurfaceGrade = base.Columns["SurfaceGrade"];
                this.columnHydroPulley = base.Columns["HydroPulley"];
                this.columnFridgeCart = base.Columns["FridgeCart"];
                this.columnTwoPump = base.Columns["TwoPump"];
                this.columnSixBypass = base.Columns["SixBypass"];
                this.columnScaffolding = base.Columns["Scaffolding"];
                this.columnWinchExtention = base.Columns["WinchExtention"];
                this.columnExtraGenerator = base.Columns["ExtraGenerator"];
                this.columnGreyCableExtension = base.Columns["GreyCableExtension"];
                this.columnEasementMats = base.Columns["EasementMats"];
                this.columnRampRequired = base.Columns["RampRequired"];
                this.columnCameraSkid = base.Columns["CameraSkid"];
                this.columnIssueIdentified = base.Columns["IssueIdentified"];
                this.columnIssueLFS = base.Columns["IssueLFS"];
                this.columnIssueClient = base.Columns["IssueClient"];
                this.columnIssueSales = base.Columns["IssueSales"];
                this.columnIssueGivenToClient = base.Columns["IssueGivenToClient"];
                this.columnIssueInvestigation = base.Columns["IssueInvestigation"];
                this.columnIssueResolved = base.Columns["IssueResolved"];
                this.columnThickness = base.Columns["Thickness"];
                this.columnRoboticPrepCompleted = base.Columns["RoboticPrepCompleted"];
                this.columnRoboticPrepCompletedDate = base.Columns["RoboticPrepCompletedDate"];
                this.columnLateralsSummary = base.Columns["LateralsSummary"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSelected = new global::System.Data.DataColumn("Selected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelected);
                this.columnAssetID_ = new global::System.Data.DataColumn("AssetID_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetID_);
                this.columnAssetID = new global::System.Data.DataColumn("AssetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetID);
                this.columnSectionID = new global::System.Data.DataColumn("SectionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionID);
                this.columnSubArea = new global::System.Data.DataColumn("SubArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubArea);
                this.columnStreet = new global::System.Data.DataColumn("Street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnUSMH = new global::System.Data.DataColumn("USMH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMH);
                this.columnDSMH = new global::System.Data.DataColumn("DSMH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMH);
                this.columnProposedLiningDate = new global::System.Data.DataColumn("ProposedLiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProposedLiningDate);
                this.columnDeadlineLiningDate = new global::System.Data.DataColumn("DeadlineLiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeadlineLiningDate);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnUSMHDescription = new global::System.Data.DataColumn("USMHDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHDescription);
                this.columnDSMHDescription = new global::System.Data.DataColumn("DSMHDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHDescription);
                this.columnFlowOrderID = new global::System.Data.DataColumn("FlowOrderID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlowOrderID);
                this.columnPreFlushDate = new global::System.Data.DataColumn("PreFlushDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreFlushDate);
                this.columnPreVideoDate = new global::System.Data.DataColumn("PreVideoDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreVideoDate);
                this.columnRoboticPrepRequired = new global::System.Data.DataColumn("RoboticPrepRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticPrepRequired);
                this.columnMapSize = new global::System.Data.DataColumn("MapSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMapSize);
                this.columnMapLength = new global::System.Data.DataColumn("MapLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMapLength);
                this.columnOriginalSectionID = new global::System.Data.DataColumn("OriginalSectionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalSectionID);
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnSize_ = new global::System.Data.DataColumn("Size_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_);
                this.columnLength = new global::System.Data.DataColumn("Length", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLength);
                this.columnVideoLength = new global::System.Data.DataColumn("VideoLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoLength);
                this.columnLaterals = new global::System.Data.DataColumn("Laterals", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaterals);
                this.columnLiveLaterals = new global::System.Data.DataColumn("LiveLaterals", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiveLaterals);
                this.columnClientID = new global::System.Data.DataColumn("ClientID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnP1Date = new global::System.Data.DataColumn("P1Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP1Date);
                this.columnCXIsRemoved = new global::System.Data.DataColumn("CXIsRemoved", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXIsRemoved);
                this.columnM1Date = new global::System.Data.DataColumn("M1Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM1Date);
                this.columnMaterialType = new global::System.Data.DataColumn("MaterialType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialType);
                this.columnUSMHAddress = new global::System.Data.DataColumn("USMHAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAddress);
                this.columnUSMHDepth = new global::System.Data.DataColumn("USMHDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHDepth);
                this.columnUSMHMouth12 = new global::System.Data.DataColumn("USMHMouth12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMouth12);
                this.columnUSMHMouth1 = new global::System.Data.DataColumn("USMHMouth1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMouth1);
                this.columnUSMHMouth2 = new global::System.Data.DataColumn("USMHMouth2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMouth2);
                this.columnUSMHMouth3 = new global::System.Data.DataColumn("USMHMouth3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMouth3);
                this.columnUSMHMouth4 = new global::System.Data.DataColumn("USMHMouth4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMouth4);
                this.columnUSMHMouth5 = new global::System.Data.DataColumn("USMHMouth5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMouth5);
                this.columnDSMHAddress = new global::System.Data.DataColumn("DSMHAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAddress);
                this.columnDSMHDepth = new global::System.Data.DataColumn("DSMHDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHDepth);
                this.columnDSMHMouth12 = new global::System.Data.DataColumn("DSMHMouth12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMouth12);
                this.columnDSMHMouth1 = new global::System.Data.DataColumn("DSMHMouth1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMouth1);
                this.columnDSMHMouth2 = new global::System.Data.DataColumn("DSMHMouth2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMouth2);
                this.columnDSMHMouth3 = new global::System.Data.DataColumn("DSMHMouth3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMouth3);
                this.columnDSMHMouth4 = new global::System.Data.DataColumn("DSMHMouth4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMouth4);
                this.columnDSMHMouth5 = new global::System.Data.DataColumn("DSMHMouth5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMouth5);
                this.columnTrafficControl = new global::System.Data.DataColumn("TrafficControl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrafficControl);
                this.columnSiteDetails = new global::System.Data.DataColumn("SiteDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteDetails);
                this.columnPipeSizeChange = new global::System.Data.DataColumn("PipeSizeChange", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeSizeChange);
                this.columnStandardBypass = new global::System.Data.DataColumn("StandardBypass", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardBypass);
                this.columnStandardBypassComments = new global::System.Data.DataColumn("StandardBypassComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardBypassComments);
                this.columnTrafficControlDetails = new global::System.Data.DataColumn("TrafficControlDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrafficControlDetails);
                this.columnMeasurementType = new global::System.Data.DataColumn("MeasurementType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementType);
                this.columnMeasurementFromMH = new global::System.Data.DataColumn("MeasurementFromMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementFromMH);
                this.columnVideoDoneFromMH = new global::System.Data.DataColumn("VideoDoneFromMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoDoneFromMH);
                this.columnVideoDoneToMH = new global::System.Data.DataColumn("VideoDoneToMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoDoneToMH);
                this.columnM2Date = new global::System.Data.DataColumn("M2Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM2Date);
                this.columnInstallDate = new global::System.Data.DataColumn("InstallDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallDate);
                this.columnFinalVideoDate = new global::System.Data.DataColumn("FinalVideoDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalVideoDate);
                this.columnM1MeasurementTakenBy = new global::System.Data.DataColumn("M1MeasurementTakenBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM1MeasurementTakenBy);
                this.columnM2MeasurementTakenBy = new global::System.Data.DataColumn("M2MeasurementTakenBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM2MeasurementTakenBy);
                this.columnDropPipe = new global::System.Data.DataColumn("DropPipe", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropPipe);
                this.columnDropPipeInvertDepth = new global::System.Data.DataColumn("DropPipeInvertDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropPipeInvertDepth);
                this.columnCappedLaterals = new global::System.Data.DataColumn("CappedLaterals", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCappedLaterals);
                this.columnLineWithID = new global::System.Data.DataColumn("LineWithID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineWithID);
                this.columnHydrantAddress = new global::System.Data.DataColumn("HydrantAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydrantAddress);
                this.columnDistanceToInversionMH = new global::System.Data.DataColumn("DistanceToInversionMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceToInversionMH);
                this.columnHydroWireWithin10FtOfInversionMH = new global::System.Data.DataColumn("HydroWireWithin10FtOfInversionMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydroWireWithin10FtOfInversionMH);
                this.columnSurfaceGrade = new global::System.Data.DataColumn("SurfaceGrade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurfaceGrade);
                this.columnHydroPulley = new global::System.Data.DataColumn("HydroPulley", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydroPulley);
                this.columnFridgeCart = new global::System.Data.DataColumn("FridgeCart", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFridgeCart);
                this.columnTwoPump = new global::System.Data.DataColumn("TwoPump", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTwoPump);
                this.columnSixBypass = new global::System.Data.DataColumn("SixBypass", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSixBypass);
                this.columnScaffolding = new global::System.Data.DataColumn("Scaffolding", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffolding);
                this.columnWinchExtention = new global::System.Data.DataColumn("WinchExtention", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWinchExtention);
                this.columnExtraGenerator = new global::System.Data.DataColumn("ExtraGenerator", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraGenerator);
                this.columnGreyCableExtension = new global::System.Data.DataColumn("GreyCableExtension", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGreyCableExtension);
                this.columnEasementMats = new global::System.Data.DataColumn("EasementMats", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEasementMats);
                this.columnRampRequired = new global::System.Data.DataColumn("RampRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRampRequired);
                this.columnCameraSkid = new global::System.Data.DataColumn("CameraSkid", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCameraSkid);
                this.columnIssueIdentified = new global::System.Data.DataColumn("IssueIdentified", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueIdentified);
                this.columnIssueLFS = new global::System.Data.DataColumn("IssueLFS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueLFS);
                this.columnIssueClient = new global::System.Data.DataColumn("IssueClient", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueClient);
                this.columnIssueSales = new global::System.Data.DataColumn("IssueSales", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueSales);
                this.columnIssueGivenToClient = new global::System.Data.DataColumn("IssueGivenToClient", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueGivenToClient);
                this.columnIssueInvestigation = new global::System.Data.DataColumn("IssueInvestigation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueInvestigation);
                this.columnIssueResolved = new global::System.Data.DataColumn("IssueResolved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueResolved);
                this.columnThickness = new global::System.Data.DataColumn("Thickness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThickness);
                this.columnRoboticPrepCompleted = new global::System.Data.DataColumn("RoboticPrepCompleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticPrepCompleted);
                this.columnRoboticPrepCompletedDate = new global::System.Data.DataColumn("RoboticPrepCompletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticPrepCompletedDate);
                this.columnLateralsSummary = new global::System.Data.DataColumn("LateralsSummary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralsSummary);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAssetID_}, true));
                this.columnSelected.AllowDBNull = false;
                this.columnSelected.DefaultValue = ((bool)(false));
                this.columnAssetID_.AllowDBNull = false;
                this.columnAssetID_.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FlNavigatorRow NewFlNavigatorRow() {
                return ((FlNavigatorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FlNavigatorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FlNavigatorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FlNavigatorRowChanged != null)) {
                    this.FlNavigatorRowChanged(this, new FlNavigatorRowChangeEvent(((FlNavigatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FlNavigatorRowChanging != null)) {
                    this.FlNavigatorRowChanging(this, new FlNavigatorRowChangeEvent(((FlNavigatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FlNavigatorRowDeleted != null)) {
                    this.FlNavigatorRowDeleted(this, new FlNavigatorRowChangeEvent(((FlNavigatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FlNavigatorRowDeleting != null)) {
                    this.FlNavigatorRowDeleting(this, new FlNavigatorRowChangeEvent(((FlNavigatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFlNavigatorRow(FlNavigatorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FlNavigatorTDS ds = new FlNavigatorTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FlNavigatorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FlNavigatorRow : global::System.Data.DataRow {
            
            private FlNavigatorDataTable tableFlNavigator;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FlNavigatorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFlNavigator = ((FlNavigatorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Selected {
                get {
                    return ((bool)(this[this.tableFlNavigator.SelectedColumn]));
                }
                set {
                    this[this.tableFlNavigator.SelectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssetID_ {
                get {
                    return ((string)(this[this.tableFlNavigator.AssetID_Column]));
                }
                set {
                    this[this.tableFlNavigator.AssetID_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssetID {
                get {
                    try {
                        return ((int)(this[this.tableFlNavigator.AssetIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssetID\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.AssetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionID {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.SectionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SectionID\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.SectionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubArea {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.SubAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubArea\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.SubAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Street {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.StreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Street\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.StreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USMH {
                get {
                    try {
                        return ((int)(this[this.tableFlNavigator.USMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMH\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.USMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DSMH {
                get {
                    try {
                        return ((int)(this[this.tableFlNavigator.DSMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMH\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.DSMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ProposedLiningDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFlNavigator.ProposedLiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProposedLiningDate\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.ProposedLiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeadlineLiningDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFlNavigator.DeadlineLiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeadlineLiningDate\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.DeadlineLiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHDescription {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.USMHDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHDescription\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.USMHDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHDescription {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.DSMHDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHDescription\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.DSMHDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FlowOrderID {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.FlowOrderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FlowOrderID\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.FlowOrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreFlushDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFlNavigator.PreFlushDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreFlushDate\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.PreFlushDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreVideoDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFlNavigator.PreVideoDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreVideoDate\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.PreVideoDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RoboticPrepRequired {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.RoboticPrepRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoboticPrepRequired\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.RoboticPrepRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MapSize {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.MapSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MapSize\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.MapSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MapLength {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.MapLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MapLength\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.MapLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OriginalSectionID {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.OriginalSectionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalSectionID\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.OriginalSectionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    try {
                        return ((int)(this[this.tableFlNavigator.ProjectIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectID\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size_ {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.Size_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size_\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.Size_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Length {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Length\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoLength {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.VideoLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoLength\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.VideoLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Laterals {
                get {
                    try {
                        return ((int)(this[this.tableFlNavigator.LateralsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Laterals\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.LateralsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LiveLaterals {
                get {
                    try {
                        return ((int)(this[this.tableFlNavigator.LiveLateralsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LiveLaterals\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.LiveLateralsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientID {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.ClientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientID\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.ClientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime P1Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFlNavigator.P1DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P1Date\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.P1DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CXIsRemoved {
                get {
                    try {
                        return ((int)(this[this.tableFlNavigator.CXIsRemovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CXIsRemoved\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.CXIsRemovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime M1Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFlNavigator.M1DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M1Date\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.M1DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaterialType {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.MaterialTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialType\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.MaterialTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHAddress {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.USMHAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAddress\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.USMHAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.USMHDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHDepth\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.USMHDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMouth12 {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.USMHMouth12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMouth12\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.USMHMouth12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMouth1 {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.USMHMouth1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMouth1\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.USMHMouth1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMouth2 {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.USMHMouth2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMouth2\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.USMHMouth2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMouth3 {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.USMHMouth3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMouth3\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.USMHMouth3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMouth4 {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.USMHMouth4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMouth4\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.USMHMouth4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMouth5 {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.USMHMouth5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMouth5\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.USMHMouth5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHAddress {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.DSMHAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAddress\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.DSMHAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.DSMHDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHDepth\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.DSMHDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMouth12 {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.DSMHMouth12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMouth12\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.DSMHMouth12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMouth1 {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.DSMHMouth1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMouth1\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.DSMHMouth1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMouth2 {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.DSMHMouth2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMouth2\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.DSMHMouth2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMouth3 {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.DSMHMouth3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMouth3\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.DSMHMouth3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMouth4 {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.DSMHMouth4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMouth4\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.DSMHMouth4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMouth5 {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.DSMHMouth5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMouth5\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.DSMHMouth5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrafficControl {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.TrafficControlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrafficControl\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.TrafficControlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SiteDetails {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.SiteDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteDetails\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.SiteDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PipeSizeChange {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.PipeSizeChangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PipeSizeChange\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.PipeSizeChangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool StandardBypass {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.StandardBypassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandardBypass\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.StandardBypassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StandardBypassComments {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.StandardBypassCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandardBypassComments\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.StandardBypassCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrafficControlDetails {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.TrafficControlDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrafficControlDetails\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.TrafficControlDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementType {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.MeasurementTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementType\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.MeasurementTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementFromMH {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.MeasurementFromMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementFromMH\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.MeasurementFromMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoDoneFromMH {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.VideoDoneFromMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoDoneFromMH\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.VideoDoneFromMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoDoneToMH {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.VideoDoneToMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoDoneToMH\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.VideoDoneToMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime M2Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFlNavigator.M2DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M2Date\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.M2DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InstallDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFlNavigator.InstallDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallDate\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.InstallDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FinalVideoDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFlNavigator.FinalVideoDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalVideoDate\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.FinalVideoDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string M1MeasurementTakenBy {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.M1MeasurementTakenByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M1MeasurementTakenBy\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.M1MeasurementTakenByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string M2MeasurementTakenBy {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.M2MeasurementTakenByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M2MeasurementTakenBy\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.M2MeasurementTakenByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DropPipe {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.DropPipeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropPipe\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.DropPipeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DropPipeInvertDepth {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.DropPipeInvertDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropPipeInvertDepth\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.DropPipeInvertDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CappedLaterals {
                get {
                    try {
                        return ((int)(this[this.tableFlNavigator.CappedLateralsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CappedLaterals\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.CappedLateralsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LineWithID {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.LineWithIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineWithID\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.LineWithIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HydrantAddress {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.HydrantAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HydrantAddress\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.HydrantAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistanceToInversionMH {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.DistanceToInversionMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceToInversionMH\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.DistanceToInversionMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HydroWireWithin10FtOfInversionMH {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.HydroWireWithin10FtOfInversionMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HydroWireWithin10FtOfInversionMH\' in table \'FlNavigator\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.HydroWireWithin10FtOfInversionMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SurfaceGrade {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.SurfaceGradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurfaceGrade\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.SurfaceGradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HydroPulley {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.HydroPulleyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HydroPulley\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.HydroPulleyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FridgeCart {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.FridgeCartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FridgeCart\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.FridgeCartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TwoPump {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.TwoPumpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TwoPump\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.TwoPumpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SixBypass {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.SixBypassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SixBypass\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.SixBypassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Scaffolding {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.ScaffoldingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Scaffolding\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.ScaffoldingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WinchExtention {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.WinchExtentionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WinchExtention\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.WinchExtentionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ExtraGenerator {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.ExtraGeneratorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraGenerator\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.ExtraGeneratorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool GreyCableExtension {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.GreyCableExtensionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GreyCableExtension\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.GreyCableExtensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EasementMats {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.EasementMatsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EasementMats\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.EasementMatsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RampRequired {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.RampRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RampRequired\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.RampRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CameraSkid {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.CameraSkidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CameraSkid\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.CameraSkidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueIdentified {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.IssueIdentifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueIdentified\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.IssueIdentifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueLFS {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.IssueLFSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueLFS\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.IssueLFSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueClient {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.IssueClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueClient\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.IssueClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueSales {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.IssueSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueSales\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.IssueSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueGivenToClient {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.IssueGivenToClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueGivenToClient\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.IssueGivenToClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueInvestigation {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.IssueInvestigationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueInvestigation\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.IssueInvestigationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueResolved {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.IssueResolvedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueResolved\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.IssueResolvedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Thickness {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.ThicknessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Thickness\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.ThicknessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RoboticPrepCompleted {
                get {
                    try {
                        return ((bool)(this[this.tableFlNavigator.RoboticPrepCompletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoboticPrepCompleted\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.RoboticPrepCompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RoboticPrepCompletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFlNavigator.RoboticPrepCompletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoboticPrepCompletedDate\' in table \'FlNavigator\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.RoboticPrepCompletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LateralsSummary {
                get {
                    try {
                        return ((string)(this[this.tableFlNavigator.LateralsSummaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralsSummary\' in table \'FlNavigator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFlNavigator.LateralsSummaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssetIDNull() {
                return this.IsNull(this.tableFlNavigator.AssetIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssetIDNull() {
                this[this.tableFlNavigator.AssetIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionIDNull() {
                return this.IsNull(this.tableFlNavigator.SectionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionIDNull() {
                this[this.tableFlNavigator.SectionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubAreaNull() {
                return this.IsNull(this.tableFlNavigator.SubAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubAreaNull() {
                this[this.tableFlNavigator.SubAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNull() {
                return this.IsNull(this.tableFlNavigator.StreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNull() {
                this[this.tableFlNavigator.StreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHNull() {
                return this.IsNull(this.tableFlNavigator.USMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHNull() {
                this[this.tableFlNavigator.USMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHNull() {
                return this.IsNull(this.tableFlNavigator.DSMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHNull() {
                this[this.tableFlNavigator.DSMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProposedLiningDateNull() {
                return this.IsNull(this.tableFlNavigator.ProposedLiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProposedLiningDateNull() {
                this[this.tableFlNavigator.ProposedLiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeadlineLiningDateNull() {
                return this.IsNull(this.tableFlNavigator.DeadlineLiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeadlineLiningDateNull() {
                this[this.tableFlNavigator.DeadlineLiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableFlNavigator.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableFlNavigator.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHDescriptionNull() {
                return this.IsNull(this.tableFlNavigator.USMHDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHDescriptionNull() {
                this[this.tableFlNavigator.USMHDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHDescriptionNull() {
                return this.IsNull(this.tableFlNavigator.DSMHDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHDescriptionNull() {
                this[this.tableFlNavigator.DSMHDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFlowOrderIDNull() {
                return this.IsNull(this.tableFlNavigator.FlowOrderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFlowOrderIDNull() {
                this[this.tableFlNavigator.FlowOrderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreFlushDateNull() {
                return this.IsNull(this.tableFlNavigator.PreFlushDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreFlushDateNull() {
                this[this.tableFlNavigator.PreFlushDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreVideoDateNull() {
                return this.IsNull(this.tableFlNavigator.PreVideoDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreVideoDateNull() {
                this[this.tableFlNavigator.PreVideoDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoboticPrepRequiredNull() {
                return this.IsNull(this.tableFlNavigator.RoboticPrepRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoboticPrepRequiredNull() {
                this[this.tableFlNavigator.RoboticPrepRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMapSizeNull() {
                return this.IsNull(this.tableFlNavigator.MapSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMapSizeNull() {
                this[this.tableFlNavigator.MapSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMapLengthNull() {
                return this.IsNull(this.tableFlNavigator.MapLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMapLengthNull() {
                this[this.tableFlNavigator.MapLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOriginalSectionIDNull() {
                return this.IsNull(this.tableFlNavigator.OriginalSectionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOriginalSectionIDNull() {
                this[this.tableFlNavigator.OriginalSectionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectIDNull() {
                return this.IsNull(this.tableFlNavigator.ProjectIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectIDNull() {
                this[this.tableFlNavigator.ProjectIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSize_Null() {
                return this.IsNull(this.tableFlNavigator.Size_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSize_Null() {
                this[this.tableFlNavigator.Size_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLengthNull() {
                return this.IsNull(this.tableFlNavigator.LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLengthNull() {
                this[this.tableFlNavigator.LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoLengthNull() {
                return this.IsNull(this.tableFlNavigator.VideoLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoLengthNull() {
                this[this.tableFlNavigator.VideoLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateralsNull() {
                return this.IsNull(this.tableFlNavigator.LateralsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateralsNull() {
                this[this.tableFlNavigator.LateralsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLiveLateralsNull() {
                return this.IsNull(this.tableFlNavigator.LiveLateralsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLiveLateralsNull() {
                this[this.tableFlNavigator.LiveLateralsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientIDNull() {
                return this.IsNull(this.tableFlNavigator.ClientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientIDNull() {
                this[this.tableFlNavigator.ClientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP1DateNull() {
                return this.IsNull(this.tableFlNavigator.P1DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP1DateNull() {
                this[this.tableFlNavigator.P1DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCXIsRemovedNull() {
                return this.IsNull(this.tableFlNavigator.CXIsRemovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCXIsRemovedNull() {
                this[this.tableFlNavigator.CXIsRemovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM1DateNull() {
                return this.IsNull(this.tableFlNavigator.M1DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM1DateNull() {
                this[this.tableFlNavigator.M1DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaterialTypeNull() {
                return this.IsNull(this.tableFlNavigator.MaterialTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaterialTypeNull() {
                this[this.tableFlNavigator.MaterialTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAddressNull() {
                return this.IsNull(this.tableFlNavigator.USMHAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAddressNull() {
                this[this.tableFlNavigator.USMHAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHDepthNull() {
                return this.IsNull(this.tableFlNavigator.USMHDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHDepthNull() {
                this[this.tableFlNavigator.USMHDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMouth12Null() {
                return this.IsNull(this.tableFlNavigator.USMHMouth12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMouth12Null() {
                this[this.tableFlNavigator.USMHMouth12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMouth1Null() {
                return this.IsNull(this.tableFlNavigator.USMHMouth1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMouth1Null() {
                this[this.tableFlNavigator.USMHMouth1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMouth2Null() {
                return this.IsNull(this.tableFlNavigator.USMHMouth2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMouth2Null() {
                this[this.tableFlNavigator.USMHMouth2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMouth3Null() {
                return this.IsNull(this.tableFlNavigator.USMHMouth3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMouth3Null() {
                this[this.tableFlNavigator.USMHMouth3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMouth4Null() {
                return this.IsNull(this.tableFlNavigator.USMHMouth4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMouth4Null() {
                this[this.tableFlNavigator.USMHMouth4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMouth5Null() {
                return this.IsNull(this.tableFlNavigator.USMHMouth5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMouth5Null() {
                this[this.tableFlNavigator.USMHMouth5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAddressNull() {
                return this.IsNull(this.tableFlNavigator.DSMHAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAddressNull() {
                this[this.tableFlNavigator.DSMHAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHDepthNull() {
                return this.IsNull(this.tableFlNavigator.DSMHDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHDepthNull() {
                this[this.tableFlNavigator.DSMHDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMouth12Null() {
                return this.IsNull(this.tableFlNavigator.DSMHMouth12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMouth12Null() {
                this[this.tableFlNavigator.DSMHMouth12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMouth1Null() {
                return this.IsNull(this.tableFlNavigator.DSMHMouth1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMouth1Null() {
                this[this.tableFlNavigator.DSMHMouth1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMouth2Null() {
                return this.IsNull(this.tableFlNavigator.DSMHMouth2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMouth2Null() {
                this[this.tableFlNavigator.DSMHMouth2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMouth3Null() {
                return this.IsNull(this.tableFlNavigator.DSMHMouth3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMouth3Null() {
                this[this.tableFlNavigator.DSMHMouth3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMouth4Null() {
                return this.IsNull(this.tableFlNavigator.DSMHMouth4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMouth4Null() {
                this[this.tableFlNavigator.DSMHMouth4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMouth5Null() {
                return this.IsNull(this.tableFlNavigator.DSMHMouth5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMouth5Null() {
                this[this.tableFlNavigator.DSMHMouth5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrafficControlNull() {
                return this.IsNull(this.tableFlNavigator.TrafficControlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrafficControlNull() {
                this[this.tableFlNavigator.TrafficControlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteDetailsNull() {
                return this.IsNull(this.tableFlNavigator.SiteDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteDetailsNull() {
                this[this.tableFlNavigator.SiteDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPipeSizeChangeNull() {
                return this.IsNull(this.tableFlNavigator.PipeSizeChangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPipeSizeChangeNull() {
                this[this.tableFlNavigator.PipeSizeChangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandardBypassNull() {
                return this.IsNull(this.tableFlNavigator.StandardBypassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandardBypassNull() {
                this[this.tableFlNavigator.StandardBypassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandardBypassCommentsNull() {
                return this.IsNull(this.tableFlNavigator.StandardBypassCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandardBypassCommentsNull() {
                this[this.tableFlNavigator.StandardBypassCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrafficControlDetailsNull() {
                return this.IsNull(this.tableFlNavigator.TrafficControlDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrafficControlDetailsNull() {
                this[this.tableFlNavigator.TrafficControlDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementTypeNull() {
                return this.IsNull(this.tableFlNavigator.MeasurementTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementTypeNull() {
                this[this.tableFlNavigator.MeasurementTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementFromMHNull() {
                return this.IsNull(this.tableFlNavigator.MeasurementFromMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementFromMHNull() {
                this[this.tableFlNavigator.MeasurementFromMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoDoneFromMHNull() {
                return this.IsNull(this.tableFlNavigator.VideoDoneFromMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoDoneFromMHNull() {
                this[this.tableFlNavigator.VideoDoneFromMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoDoneToMHNull() {
                return this.IsNull(this.tableFlNavigator.VideoDoneToMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoDoneToMHNull() {
                this[this.tableFlNavigator.VideoDoneToMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM2DateNull() {
                return this.IsNull(this.tableFlNavigator.M2DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM2DateNull() {
                this[this.tableFlNavigator.M2DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallDateNull() {
                return this.IsNull(this.tableFlNavigator.InstallDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallDateNull() {
                this[this.tableFlNavigator.InstallDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalVideoDateNull() {
                return this.IsNull(this.tableFlNavigator.FinalVideoDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalVideoDateNull() {
                this[this.tableFlNavigator.FinalVideoDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM1MeasurementTakenByNull() {
                return this.IsNull(this.tableFlNavigator.M1MeasurementTakenByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM1MeasurementTakenByNull() {
                this[this.tableFlNavigator.M1MeasurementTakenByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM2MeasurementTakenByNull() {
                return this.IsNull(this.tableFlNavigator.M2MeasurementTakenByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM2MeasurementTakenByNull() {
                this[this.tableFlNavigator.M2MeasurementTakenByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDropPipeNull() {
                return this.IsNull(this.tableFlNavigator.DropPipeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDropPipeNull() {
                this[this.tableFlNavigator.DropPipeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDropPipeInvertDepthNull() {
                return this.IsNull(this.tableFlNavigator.DropPipeInvertDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDropPipeInvertDepthNull() {
                this[this.tableFlNavigator.DropPipeInvertDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCappedLateralsNull() {
                return this.IsNull(this.tableFlNavigator.CappedLateralsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCappedLateralsNull() {
                this[this.tableFlNavigator.CappedLateralsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineWithIDNull() {
                return this.IsNull(this.tableFlNavigator.LineWithIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineWithIDNull() {
                this[this.tableFlNavigator.LineWithIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydrantAddressNull() {
                return this.IsNull(this.tableFlNavigator.HydrantAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydrantAddressNull() {
                this[this.tableFlNavigator.HydrantAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceToInversionMHNull() {
                return this.IsNull(this.tableFlNavigator.DistanceToInversionMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceToInversionMHNull() {
                this[this.tableFlNavigator.DistanceToInversionMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydroWireWithin10FtOfInversionMHNull() {
                return this.IsNull(this.tableFlNavigator.HydroWireWithin10FtOfInversionMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydroWireWithin10FtOfInversionMHNull() {
                this[this.tableFlNavigator.HydroWireWithin10FtOfInversionMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSurfaceGradeNull() {
                return this.IsNull(this.tableFlNavigator.SurfaceGradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSurfaceGradeNull() {
                this[this.tableFlNavigator.SurfaceGradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydroPulleyNull() {
                return this.IsNull(this.tableFlNavigator.HydroPulleyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydroPulleyNull() {
                this[this.tableFlNavigator.HydroPulleyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFridgeCartNull() {
                return this.IsNull(this.tableFlNavigator.FridgeCartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFridgeCartNull() {
                this[this.tableFlNavigator.FridgeCartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTwoPumpNull() {
                return this.IsNull(this.tableFlNavigator.TwoPumpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTwoPumpNull() {
                this[this.tableFlNavigator.TwoPumpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSixBypassNull() {
                return this.IsNull(this.tableFlNavigator.SixBypassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSixBypassNull() {
                this[this.tableFlNavigator.SixBypassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScaffoldingNull() {
                return this.IsNull(this.tableFlNavigator.ScaffoldingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScaffoldingNull() {
                this[this.tableFlNavigator.ScaffoldingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWinchExtentionNull() {
                return this.IsNull(this.tableFlNavigator.WinchExtentionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWinchExtentionNull() {
                this[this.tableFlNavigator.WinchExtentionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraGeneratorNull() {
                return this.IsNull(this.tableFlNavigator.ExtraGeneratorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraGeneratorNull() {
                this[this.tableFlNavigator.ExtraGeneratorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGreyCableExtensionNull() {
                return this.IsNull(this.tableFlNavigator.GreyCableExtensionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGreyCableExtensionNull() {
                this[this.tableFlNavigator.GreyCableExtensionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEasementMatsNull() {
                return this.IsNull(this.tableFlNavigator.EasementMatsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEasementMatsNull() {
                this[this.tableFlNavigator.EasementMatsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRampRequiredNull() {
                return this.IsNull(this.tableFlNavigator.RampRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRampRequiredNull() {
                this[this.tableFlNavigator.RampRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCameraSkidNull() {
                return this.IsNull(this.tableFlNavigator.CameraSkidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCameraSkidNull() {
                this[this.tableFlNavigator.CameraSkidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueIdentifiedNull() {
                return this.IsNull(this.tableFlNavigator.IssueIdentifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueIdentifiedNull() {
                this[this.tableFlNavigator.IssueIdentifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueLFSNull() {
                return this.IsNull(this.tableFlNavigator.IssueLFSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueLFSNull() {
                this[this.tableFlNavigator.IssueLFSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueClientNull() {
                return this.IsNull(this.tableFlNavigator.IssueClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueClientNull() {
                this[this.tableFlNavigator.IssueClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueSalesNull() {
                return this.IsNull(this.tableFlNavigator.IssueSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueSalesNull() {
                this[this.tableFlNavigator.IssueSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueGivenToClientNull() {
                return this.IsNull(this.tableFlNavigator.IssueGivenToClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueGivenToClientNull() {
                this[this.tableFlNavigator.IssueGivenToClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueInvestigationNull() {
                return this.IsNull(this.tableFlNavigator.IssueInvestigationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueInvestigationNull() {
                this[this.tableFlNavigator.IssueInvestigationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueResolvedNull() {
                return this.IsNull(this.tableFlNavigator.IssueResolvedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueResolvedNull() {
                this[this.tableFlNavigator.IssueResolvedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThicknessNull() {
                return this.IsNull(this.tableFlNavigator.ThicknessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThicknessNull() {
                this[this.tableFlNavigator.ThicknessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoboticPrepCompletedNull() {
                return this.IsNull(this.tableFlNavigator.RoboticPrepCompletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoboticPrepCompletedNull() {
                this[this.tableFlNavigator.RoboticPrepCompletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoboticPrepCompletedDateNull() {
                return this.IsNull(this.tableFlNavigator.RoboticPrepCompletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoboticPrepCompletedDateNull() {
                this[this.tableFlNavigator.RoboticPrepCompletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateralsSummaryNull() {
                return this.IsNull(this.tableFlNavigator.LateralsSummaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateralsSummaryNull() {
                this[this.tableFlNavigator.LateralsSummaryColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FlNavigatorRowChangeEvent : global::System.EventArgs {
            
            private FlNavigatorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FlNavigatorRowChangeEvent(FlNavigatorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FlNavigatorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591