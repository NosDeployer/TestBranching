//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3623
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.CWP.FullLengthLining {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("FlInversionReportTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class FlInversionReportTDS : global::System.Data.DataSet {
        
        private LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable tableLFS_WORK_FULLLENGTHLINING_INVERSION;
        
        private LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FlInversionReportTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected FlInversionReportTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable LFS_WORK_FULLLENGTHLINING_INVERSION {
            get {
                return this.tableLFS_WORK_FULLLENGTHLINING_INVERSION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD {
            get {
                return this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            FlInversionReportTDS cln = ((FlInversionReportTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION"]));
                }
                if ((ds.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD"] != null)) {
                    base.Tables.Add(new LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable(ds.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableLFS_WORK_FULLLENGTHLINING_INVERSION = ((LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable)(base.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_FULLLENGTHLINING_INVERSION != null)) {
                    this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.InitVars();
                }
            }
            this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD = ((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable)(base.Tables["LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD"]));
            if ((initTable == true)) {
                if ((this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD != null)) {
                    this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "FlInversionReportTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/FlInversionReportTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLFS_WORK_FULLLENGTHLINING_INVERSION = new LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable();
            base.Tables.Add(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION);
            this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD = new LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable();
            base.Tables.Add(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_FULLLENGTHLINING_INVERSION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            FlInversionReportTDS ds = new FlInversionReportTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEventHandler(object sender, LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEvent e);
        
        public delegate void LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEventHandler(object sender, LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnPipeType;
            
            private global::System.Data.DataColumn columnPipeCondition;
            
            private global::System.Data.DataColumn columnGroundMoisture;
            
            private global::System.Data.DataColumn columnBoilerSize;
            
            private global::System.Data.DataColumn columnPumpTotalCapacity;
            
            private global::System.Data.DataColumn columnLayFlatSize;
            
            private global::System.Data.DataColumn columnLayFlatQuantityTotal;
            
            private global::System.Data.DataColumn columnWaterStartTemp;
            
            private global::System.Data.DataColumn columnTemp1;
            
            private global::System.Data.DataColumn columnHoldAtT1;
            
            private global::System.Data.DataColumn columnTempT2;
            
            private global::System.Data.DataColumn columnCookAtT2;
            
            private global::System.Data.DataColumn columnCoolDownFor;
            
            private global::System.Data.DataColumn columnCoolToTemp;
            
            private global::System.Data.DataColumn columnDropInPipeRun;
            
            private global::System.Data.DataColumn columnPipeSlopOf;
            
            private global::System.Data.DataColumn columnF45F120;
            
            private global::System.Data.DataColumn columnHold;
            
            private global::System.Data.DataColumn columnF120F185;
            
            private global::System.Data.DataColumn columnCookTime;
            
            private global::System.Data.DataColumn columnCoolTime;
            
            private global::System.Data.DataColumn columnAproxTotal;
            
            private global::System.Data.DataColumn columnWaterChangesPerHour;
            
            private global::System.Data.DataColumn columnReturnWaterVelocity;
            
            private global::System.Data.DataColumn columnLayflatBackPressure;
            
            private global::System.Data.DataColumn columnPumpLiftAtIdealHead;
            
            private global::System.Data.DataColumn columnWaterToFillLinerColumn;
            
            private global::System.Data.DataColumn columnWaterPerFit;
            
            private global::System.Data.DataColumn columnInstallationResults;
            
            private global::System.Data.DataColumn columnLinerTubeLabel;
            
            private global::System.Data.DataColumn columnHeadsIdealLabel;
            
            private global::System.Data.DataColumn columnPumpingAndCirculationLabel;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnTubeSize;
            
            private global::System.Data.DataColumn columnJobName;
            
            private global::System.Data.DataColumn columnJobNumber;
            
            private global::System.Data.DataColumn columnStreet;
            
            private global::System.Data.DataColumn columnLengthToWetOut;
            
            private global::System.Data.DataColumn columnLengthToLine;
            
            private global::System.Data.DataColumn columnWetOutDate;
            
            private global::System.Data.DataColumn columnInstallDate;
            
            private global::System.Data.DataColumn columnInstalledBy;
            
            private global::System.Data.DataColumn columnThickness;
            
            private global::System.Data.DataColumn columnTubeMaxColdHead;
            
            private global::System.Data.DataColumn columnTubeMaxHotHead;
            
            private global::System.Data.DataColumn columnTubeIdealHead;
            
            private global::System.Data.DataColumn columnPumpHeightAboveGround;
            
            private global::System.Data.DataColumn columnDepthOfInversionMH;
            
            private global::System.Data.DataColumn columnRunDetails;
            
            private global::System.Data.DataColumn columnRunDetails2;
            
            private global::System.Data.DataColumn columnLinerTube;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable() {
                this.TableName = "LFS_WORK_FULLLENGTHLINING_INVERSION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PipeTypeColumn {
                get {
                    return this.columnPipeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PipeConditionColumn {
                get {
                    return this.columnPipeCondition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroundMoistureColumn {
                get {
                    return this.columnGroundMoisture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BoilerSizeColumn {
                get {
                    return this.columnBoilerSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PumpTotalCapacityColumn {
                get {
                    return this.columnPumpTotalCapacity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LayFlatSizeColumn {
                get {
                    return this.columnLayFlatSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LayFlatQuantityTotalColumn {
                get {
                    return this.columnLayFlatQuantityTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WaterStartTempColumn {
                get {
                    return this.columnWaterStartTemp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Temp1Column {
                get {
                    return this.columnTemp1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoldAtT1Column {
                get {
                    return this.columnHoldAtT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TempT2Column {
                get {
                    return this.columnTempT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CookAtT2Column {
                get {
                    return this.columnCookAtT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoolDownForColumn {
                get {
                    return this.columnCoolDownFor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoolToTempColumn {
                get {
                    return this.columnCoolToTemp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DropInPipeRunColumn {
                get {
                    return this.columnDropInPipeRun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PipeSlopOfColumn {
                get {
                    return this.columnPipeSlopOf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F45F120Column {
                get {
                    return this.columnF45F120;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoldColumn {
                get {
                    return this.columnHold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F120F185Column {
                get {
                    return this.columnF120F185;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CookTimeColumn {
                get {
                    return this.columnCookTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoolTimeColumn {
                get {
                    return this.columnCoolTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AproxTotalColumn {
                get {
                    return this.columnAproxTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WaterChangesPerHourColumn {
                get {
                    return this.columnWaterChangesPerHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnWaterVelocityColumn {
                get {
                    return this.columnReturnWaterVelocity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LayflatBackPressureColumn {
                get {
                    return this.columnLayflatBackPressure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PumpLiftAtIdealHeadColumn {
                get {
                    return this.columnPumpLiftAtIdealHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WaterToFillLinerColumnColumn {
                get {
                    return this.columnWaterToFillLinerColumn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WaterPerFitColumn {
                get {
                    return this.columnWaterPerFit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallationResultsColumn {
                get {
                    return this.columnInstallationResults;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerTubeLabelColumn {
                get {
                    return this.columnLinerTubeLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeadsIdealLabelColumn {
                get {
                    return this.columnHeadsIdealLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PumpingAndCirculationLabelColumn {
                get {
                    return this.columnPumpingAndCirculationLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeSizeColumn {
                get {
                    return this.columnTubeSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobNameColumn {
                get {
                    return this.columnJobName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobNumberColumn {
                get {
                    return this.columnJobNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthToWetOutColumn {
                get {
                    return this.columnLengthToWetOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthToLineColumn {
                get {
                    return this.columnLengthToLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WetOutDateColumn {
                get {
                    return this.columnWetOutDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallDateColumn {
                get {
                    return this.columnInstallDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstalledByColumn {
                get {
                    return this.columnInstalledBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThicknessColumn {
                get {
                    return this.columnThickness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeMaxColdHeadColumn {
                get {
                    return this.columnTubeMaxColdHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeMaxHotHeadColumn {
                get {
                    return this.columnTubeMaxHotHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TubeIdealHeadColumn {
                get {
                    return this.columnTubeIdealHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PumpHeightAboveGroundColumn {
                get {
                    return this.columnPumpHeightAboveGround;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepthOfInversionMHColumn {
                get {
                    return this.columnDepthOfInversionMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RunDetailsColumn {
                get {
                    return this.columnRunDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RunDetails2Column {
                get {
                    return this.columnRunDetails2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerTubeColumn {
                get {
                    return this.columnLinerTube;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSIONRow this[int index] {
                get {
                    return ((LFS_WORK_FULLLENGTHLINING_INVERSIONRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_INVERSIONRowChanging;
            
            public event LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_INVERSIONRowChanged;
            
            public event LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_INVERSIONRowDeleting;
            
            public event LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_INVERSIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_FULLLENGTHLINING_INVERSIONRow(LFS_WORK_FULLLENGTHLINING_INVERSIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSIONRow AddLFS_WORK_FULLLENGTHLINING_INVERSIONRow(
                        int WorkID, 
                        string Comment, 
                        string PipeType, 
                        string PipeCondition, 
                        string GroundMoisture, 
                        double BoilerSize, 
                        double PumpTotalCapacity, 
                        double LayFlatSize, 
                        double LayFlatQuantityTotal, 
                        double WaterStartTemp, 
                        double Temp1, 
                        double HoldAtT1, 
                        double TempT2, 
                        double CookAtT2, 
                        double CoolDownFor, 
                        double CoolToTemp, 
                        double DropInPipeRun, 
                        double PipeSlopOf, 
                        double F45F120, 
                        double Hold, 
                        double F120F185, 
                        double CookTime, 
                        double CoolTime, 
                        double AproxTotal, 
                        double WaterChangesPerHour, 
                        double ReturnWaterVelocity, 
                        double LayflatBackPressure, 
                        double PumpLiftAtIdealHead, 
                        double WaterToFillLinerColumn, 
                        double WaterPerFit, 
                        string InstallationResults, 
                        string LinerTubeLabel, 
                        string HeadsIdealLabel, 
                        string PumpingAndCirculationLabel, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        string TubeSize, 
                        string JobName, 
                        string JobNumber, 
                        string Street, 
                        double LengthToWetOut, 
                        double LengthToLine, 
                        System.DateTime WetOutDate, 
                        System.DateTime InstallDate, 
                        string InstalledBy, 
                        string Thickness, 
                        double TubeMaxColdHead, 
                        double TubeMaxHotHead, 
                        double TubeIdealHead, 
                        double PumpHeightAboveGround, 
                        double DepthOfInversionMH, 
                        string RunDetails, 
                        string RunDetails2, 
                        string LinerTube) {
                LFS_WORK_FULLLENGTHLINING_INVERSIONRow rowLFS_WORK_FULLLENGTHLINING_INVERSIONRow = ((LFS_WORK_FULLLENGTHLINING_INVERSIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        Comment,
                        PipeType,
                        PipeCondition,
                        GroundMoisture,
                        BoilerSize,
                        PumpTotalCapacity,
                        LayFlatSize,
                        LayFlatQuantityTotal,
                        WaterStartTemp,
                        Temp1,
                        HoldAtT1,
                        TempT2,
                        CookAtT2,
                        CoolDownFor,
                        CoolToTemp,
                        DropInPipeRun,
                        PipeSlopOf,
                        F45F120,
                        Hold,
                        F120F185,
                        CookTime,
                        CoolTime,
                        AproxTotal,
                        WaterChangesPerHour,
                        ReturnWaterVelocity,
                        LayflatBackPressure,
                        PumpLiftAtIdealHead,
                        WaterToFillLinerColumn,
                        WaterPerFit,
                        InstallationResults,
                        LinerTubeLabel,
                        HeadsIdealLabel,
                        PumpingAndCirculationLabel,
                        Deleted,
                        COMPANY_ID,
                        TubeSize,
                        JobName,
                        JobNumber,
                        Street,
                        LengthToWetOut,
                        LengthToLine,
                        WetOutDate,
                        InstallDate,
                        InstalledBy,
                        Thickness,
                        TubeMaxColdHead,
                        TubeMaxHotHead,
                        TubeIdealHead,
                        PumpHeightAboveGround,
                        DepthOfInversionMH,
                        RunDetails,
                        RunDetails2,
                        LinerTube};
                rowLFS_WORK_FULLLENGTHLINING_INVERSIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_FULLLENGTHLINING_INVERSIONRow);
                return rowLFS_WORK_FULLLENGTHLINING_INVERSIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSIONRow FindByWorkID(int WorkID) {
                return ((LFS_WORK_FULLLENGTHLINING_INVERSIONRow)(this.Rows.Find(new object[] {
                            WorkID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable cln = ((LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnComment = base.Columns["Comment"];
                this.columnPipeType = base.Columns["PipeType"];
                this.columnPipeCondition = base.Columns["PipeCondition"];
                this.columnGroundMoisture = base.Columns["GroundMoisture"];
                this.columnBoilerSize = base.Columns["BoilerSize"];
                this.columnPumpTotalCapacity = base.Columns["PumpTotalCapacity"];
                this.columnLayFlatSize = base.Columns["LayFlatSize"];
                this.columnLayFlatQuantityTotal = base.Columns["LayFlatQuantityTotal"];
                this.columnWaterStartTemp = base.Columns["WaterStartTemp"];
                this.columnTemp1 = base.Columns["Temp1"];
                this.columnHoldAtT1 = base.Columns["HoldAtT1"];
                this.columnTempT2 = base.Columns["TempT2"];
                this.columnCookAtT2 = base.Columns["CookAtT2"];
                this.columnCoolDownFor = base.Columns["CoolDownFor"];
                this.columnCoolToTemp = base.Columns["CoolToTemp"];
                this.columnDropInPipeRun = base.Columns["DropInPipeRun"];
                this.columnPipeSlopOf = base.Columns["PipeSlopOf"];
                this.columnF45F120 = base.Columns["F45F120"];
                this.columnHold = base.Columns["Hold"];
                this.columnF120F185 = base.Columns["F120F185"];
                this.columnCookTime = base.Columns["CookTime"];
                this.columnCoolTime = base.Columns["CoolTime"];
                this.columnAproxTotal = base.Columns["AproxTotal"];
                this.columnWaterChangesPerHour = base.Columns["WaterChangesPerHour"];
                this.columnReturnWaterVelocity = base.Columns["ReturnWaterVelocity"];
                this.columnLayflatBackPressure = base.Columns["LayflatBackPressure"];
                this.columnPumpLiftAtIdealHead = base.Columns["PumpLiftAtIdealHead"];
                this.columnWaterToFillLinerColumn = base.Columns["WaterToFillLinerColumn"];
                this.columnWaterPerFit = base.Columns["WaterPerFit"];
                this.columnInstallationResults = base.Columns["InstallationResults"];
                this.columnLinerTubeLabel = base.Columns["LinerTubeLabel"];
                this.columnHeadsIdealLabel = base.Columns["HeadsIdealLabel"];
                this.columnPumpingAndCirculationLabel = base.Columns["PumpingAndCirculationLabel"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnTubeSize = base.Columns["TubeSize"];
                this.columnJobName = base.Columns["JobName"];
                this.columnJobNumber = base.Columns["JobNumber"];
                this.columnStreet = base.Columns["Street"];
                this.columnLengthToWetOut = base.Columns["LengthToWetOut"];
                this.columnLengthToLine = base.Columns["LengthToLine"];
                this.columnWetOutDate = base.Columns["WetOutDate"];
                this.columnInstallDate = base.Columns["InstallDate"];
                this.columnInstalledBy = base.Columns["InstalledBy"];
                this.columnThickness = base.Columns["Thickness"];
                this.columnTubeMaxColdHead = base.Columns["TubeMaxColdHead"];
                this.columnTubeMaxHotHead = base.Columns["TubeMaxHotHead"];
                this.columnTubeIdealHead = base.Columns["TubeIdealHead"];
                this.columnPumpHeightAboveGround = base.Columns["PumpHeightAboveGround"];
                this.columnDepthOfInversionMH = base.Columns["DepthOfInversionMH"];
                this.columnRunDetails = base.Columns["RunDetails"];
                this.columnRunDetails2 = base.Columns["RunDetails2"];
                this.columnLinerTube = base.Columns["LinerTube"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnPipeType = new global::System.Data.DataColumn("PipeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeType);
                this.columnPipeCondition = new global::System.Data.DataColumn("PipeCondition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeCondition);
                this.columnGroundMoisture = new global::System.Data.DataColumn("GroundMoisture", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroundMoisture);
                this.columnBoilerSize = new global::System.Data.DataColumn("BoilerSize", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoilerSize);
                this.columnPumpTotalCapacity = new global::System.Data.DataColumn("PumpTotalCapacity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumpTotalCapacity);
                this.columnLayFlatSize = new global::System.Data.DataColumn("LayFlatSize", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLayFlatSize);
                this.columnLayFlatQuantityTotal = new global::System.Data.DataColumn("LayFlatQuantityTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLayFlatQuantityTotal);
                this.columnWaterStartTemp = new global::System.Data.DataColumn("WaterStartTemp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaterStartTemp);
                this.columnTemp1 = new global::System.Data.DataColumn("Temp1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemp1);
                this.columnHoldAtT1 = new global::System.Data.DataColumn("HoldAtT1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoldAtT1);
                this.columnTempT2 = new global::System.Data.DataColumn("TempT2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTempT2);
                this.columnCookAtT2 = new global::System.Data.DataColumn("CookAtT2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCookAtT2);
                this.columnCoolDownFor = new global::System.Data.DataColumn("CoolDownFor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoolDownFor);
                this.columnCoolToTemp = new global::System.Data.DataColumn("CoolToTemp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoolToTemp);
                this.columnDropInPipeRun = new global::System.Data.DataColumn("DropInPipeRun", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropInPipeRun);
                this.columnPipeSlopOf = new global::System.Data.DataColumn("PipeSlopOf", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeSlopOf);
                this.columnF45F120 = new global::System.Data.DataColumn("F45F120", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF45F120);
                this.columnHold = new global::System.Data.DataColumn("Hold", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHold);
                this.columnF120F185 = new global::System.Data.DataColumn("F120F185", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF120F185);
                this.columnCookTime = new global::System.Data.DataColumn("CookTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCookTime);
                this.columnCoolTime = new global::System.Data.DataColumn("CoolTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoolTime);
                this.columnAproxTotal = new global::System.Data.DataColumn("AproxTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAproxTotal);
                this.columnWaterChangesPerHour = new global::System.Data.DataColumn("WaterChangesPerHour", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaterChangesPerHour);
                this.columnReturnWaterVelocity = new global::System.Data.DataColumn("ReturnWaterVelocity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnWaterVelocity);
                this.columnLayflatBackPressure = new global::System.Data.DataColumn("LayflatBackPressure", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLayflatBackPressure);
                this.columnPumpLiftAtIdealHead = new global::System.Data.DataColumn("PumpLiftAtIdealHead", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumpLiftAtIdealHead);
                this.columnWaterToFillLinerColumn = new global::System.Data.DataColumn("WaterToFillLinerColumn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaterToFillLinerColumn);
                this.columnWaterPerFit = new global::System.Data.DataColumn("WaterPerFit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaterPerFit);
                this.columnInstallationResults = new global::System.Data.DataColumn("InstallationResults", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallationResults);
                this.columnLinerTubeLabel = new global::System.Data.DataColumn("LinerTubeLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerTubeLabel);
                this.columnHeadsIdealLabel = new global::System.Data.DataColumn("HeadsIdealLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadsIdealLabel);
                this.columnPumpingAndCirculationLabel = new global::System.Data.DataColumn("PumpingAndCirculationLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumpingAndCirculationLabel);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnTubeSize = new global::System.Data.DataColumn("TubeSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeSize);
                this.columnJobName = new global::System.Data.DataColumn("JobName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobName);
                this.columnJobNumber = new global::System.Data.DataColumn("JobNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobNumber);
                this.columnStreet = new global::System.Data.DataColumn("Street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnLengthToWetOut = new global::System.Data.DataColumn("LengthToWetOut", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLengthToWetOut);
                this.columnLengthToLine = new global::System.Data.DataColumn("LengthToLine", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLengthToLine);
                this.columnWetOutDate = new global::System.Data.DataColumn("WetOutDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWetOutDate);
                this.columnInstallDate = new global::System.Data.DataColumn("InstallDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallDate);
                this.columnInstalledBy = new global::System.Data.DataColumn("InstalledBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstalledBy);
                this.columnThickness = new global::System.Data.DataColumn("Thickness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThickness);
                this.columnTubeMaxColdHead = new global::System.Data.DataColumn("TubeMaxColdHead", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeMaxColdHead);
                this.columnTubeMaxHotHead = new global::System.Data.DataColumn("TubeMaxHotHead", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeMaxHotHead);
                this.columnTubeIdealHead = new global::System.Data.DataColumn("TubeIdealHead", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubeIdealHead);
                this.columnPumpHeightAboveGround = new global::System.Data.DataColumn("PumpHeightAboveGround", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumpHeightAboveGround);
                this.columnDepthOfInversionMH = new global::System.Data.DataColumn("DepthOfInversionMH", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepthOfInversionMH);
                this.columnRunDetails = new global::System.Data.DataColumn("RunDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunDetails);
                this.columnRunDetails2 = new global::System.Data.DataColumn("RunDetails2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunDetails2);
                this.columnLinerTube = new global::System.Data.DataColumn("LinerTube", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerTube);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnWorkID.Unique = true;
                this.columnComment.MaxLength = 1073741823;
                this.columnPipeType.AllowDBNull = false;
                this.columnPipeType.MaxLength = 25;
                this.columnPipeCondition.AllowDBNull = false;
                this.columnPipeCondition.MaxLength = 25;
                this.columnGroundMoisture.AllowDBNull = false;
                this.columnGroundMoisture.MaxLength = 25;
                this.columnBoilerSize.AllowDBNull = false;
                this.columnPumpTotalCapacity.AllowDBNull = false;
                this.columnLayFlatSize.AllowDBNull = false;
                this.columnLayFlatQuantityTotal.AllowDBNull = false;
                this.columnWaterStartTemp.AllowDBNull = false;
                this.columnTemp1.AllowDBNull = false;
                this.columnHoldAtT1.AllowDBNull = false;
                this.columnTempT2.AllowDBNull = false;
                this.columnCookAtT2.AllowDBNull = false;
                this.columnCoolDownFor.AllowDBNull = false;
                this.columnCoolToTemp.AllowDBNull = false;
                this.columnDropInPipeRun.AllowDBNull = false;
                this.columnPipeSlopOf.AllowDBNull = false;
                this.columnF45F120.AllowDBNull = false;
                this.columnHold.AllowDBNull = false;
                this.columnF120F185.AllowDBNull = false;
                this.columnCookTime.AllowDBNull = false;
                this.columnCoolTime.AllowDBNull = false;
                this.columnAproxTotal.AllowDBNull = false;
                this.columnWaterChangesPerHour.AllowDBNull = false;
                this.columnReturnWaterVelocity.AllowDBNull = false;
                this.columnLayflatBackPressure.AllowDBNull = false;
                this.columnPumpLiftAtIdealHead.AllowDBNull = false;
                this.columnWaterToFillLinerColumn.AllowDBNull = false;
                this.columnWaterPerFit.AllowDBNull = false;
                this.columnInstallationResults.MaxLength = 1073741823;
                this.columnLinerTubeLabel.AllowDBNull = false;
                this.columnLinerTubeLabel.MaxLength = 150;
                this.columnHeadsIdealLabel.AllowDBNull = false;
                this.columnHeadsIdealLabel.MaxLength = 150;
                this.columnPumpingAndCirculationLabel.AllowDBNull = false;
                this.columnPumpingAndCirculationLabel.MaxLength = 150;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnRunDetails.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSIONRow NewLFS_WORK_FULLLENGTHLINING_INVERSIONRow() {
                return ((LFS_WORK_FULLLENGTHLINING_INVERSIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_FULLLENGTHLINING_INVERSIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_FULLLENGTHLINING_INVERSIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_INVERSIONRowChanged != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_INVERSIONRowChanged(this, new LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_INVERSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_INVERSIONRowChanging != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_INVERSIONRowChanging(this, new LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_INVERSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_INVERSIONRowDeleted != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_INVERSIONRowDeleted(this, new LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_INVERSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_INVERSIONRowDeleting != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_INVERSIONRowDeleting(this, new LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_INVERSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_FULLLENGTHLINING_INVERSIONRow(LFS_WORK_FULLLENGTHLINING_INVERSIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FlInversionReportTDS ds = new FlInversionReportTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnReadingTime;
            
            private global::System.Data.DataColumn columnHeadFt;
            
            private global::System.Data.DataColumn columnBoilerInF;
            
            private global::System.Data.DataColumn columnBoilerOutF;
            
            private global::System.Data.DataColumn columnPumpFlow;
            
            private global::System.Data.DataColumn columnPumpPsi;
            
            private global::System.Data.DataColumn columnMH1Top;
            
            private global::System.Data.DataColumn columnMH1Bot;
            
            private global::System.Data.DataColumn columnMH2Top;
            
            private global::System.Data.DataColumn columnMH2Bot;
            
            private global::System.Data.DataColumn columnMH3Top;
            
            private global::System.Data.DataColumn columnMH3Bot;
            
            private global::System.Data.DataColumn columnMH4Top;
            
            private global::System.Data.DataColumn columnMH4Bot;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable() {
                this.TableName = "LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReadingTimeColumn {
                get {
                    return this.columnReadingTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeadFtColumn {
                get {
                    return this.columnHeadFt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BoilerInFColumn {
                get {
                    return this.columnBoilerInF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BoilerOutFColumn {
                get {
                    return this.columnBoilerOutF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PumpFlowColumn {
                get {
                    return this.columnPumpFlow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PumpPsiColumn {
                get {
                    return this.columnPumpPsi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MH1TopColumn {
                get {
                    return this.columnMH1Top;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MH1BotColumn {
                get {
                    return this.columnMH1Bot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MH2TopColumn {
                get {
                    return this.columnMH2Top;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MH2BotColumn {
                get {
                    return this.columnMH2Bot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MH3TopColumn {
                get {
                    return this.columnMH3Top;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MH3BotColumn {
                get {
                    return this.columnMH3Bot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MH4TopColumn {
                get {
                    return this.columnMH4Top;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MH4BotColumn {
                get {
                    return this.columnMH4Bot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow this[int index] {
                get {
                    return ((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow)(this.Rows[index]));
                }
            }
            
            public event LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChanging;
            
            public event LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChanged;
            
            public event LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowDeleting;
            
            public event LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEventHandler LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow(LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow AddLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow(
                        int WorkID, 
                        int RefID, 
                        System.DateTime ReadingTime, 
                        double HeadFt, 
                        double BoilerInF, 
                        double BoilerOutF, 
                        double PumpFlow, 
                        double PumpPsi, 
                        double MH1Top, 
                        double MH1Bot, 
                        double MH2Top, 
                        double MH2Bot, 
                        double MH3Top, 
                        double MH3Bot, 
                        double MH4Top, 
                        double MH4Bot, 
                        string Comments, 
                        bool Deleted, 
                        int COMPANY_ID) {
                LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow rowLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow = ((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        RefID,
                        ReadingTime,
                        HeadFt,
                        BoilerInF,
                        BoilerOutF,
                        PumpFlow,
                        PumpPsi,
                        MH1Top,
                        MH1Bot,
                        MH2Top,
                        MH2Bot,
                        MH3Top,
                        MH3Bot,
                        MH4Top,
                        MH4Bot,
                        Comments,
                        Deleted,
                        COMPANY_ID};
                rowLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow);
                return rowLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow FindByWorkIDRefID(int WorkID, int RefID) {
                return ((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow)(this.Rows.Find(new object[] {
                            WorkID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable cln = ((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnReadingTime = base.Columns["ReadingTime"];
                this.columnHeadFt = base.Columns["HeadFt"];
                this.columnBoilerInF = base.Columns["BoilerInF"];
                this.columnBoilerOutF = base.Columns["BoilerOutF"];
                this.columnPumpFlow = base.Columns["PumpFlow"];
                this.columnPumpPsi = base.Columns["PumpPsi"];
                this.columnMH1Top = base.Columns["MH1Top"];
                this.columnMH1Bot = base.Columns["MH1Bot"];
                this.columnMH2Top = base.Columns["MH2Top"];
                this.columnMH2Bot = base.Columns["MH2Bot"];
                this.columnMH3Top = base.Columns["MH3Top"];
                this.columnMH3Bot = base.Columns["MH3Bot"];
                this.columnMH4Top = base.Columns["MH4Top"];
                this.columnMH4Bot = base.Columns["MH4Bot"];
                this.columnComments = base.Columns["Comments"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnReadingTime = new global::System.Data.DataColumn("ReadingTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReadingTime);
                this.columnHeadFt = new global::System.Data.DataColumn("HeadFt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadFt);
                this.columnBoilerInF = new global::System.Data.DataColumn("BoilerInF", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoilerInF);
                this.columnBoilerOutF = new global::System.Data.DataColumn("BoilerOutF", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoilerOutF);
                this.columnPumpFlow = new global::System.Data.DataColumn("PumpFlow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumpFlow);
                this.columnPumpPsi = new global::System.Data.DataColumn("PumpPsi", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumpPsi);
                this.columnMH1Top = new global::System.Data.DataColumn("MH1Top", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMH1Top);
                this.columnMH1Bot = new global::System.Data.DataColumn("MH1Bot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMH1Bot);
                this.columnMH2Top = new global::System.Data.DataColumn("MH2Top", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMH2Top);
                this.columnMH2Bot = new global::System.Data.DataColumn("MH2Bot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMH2Bot);
                this.columnMH3Top = new global::System.Data.DataColumn("MH3Top", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMH3Top);
                this.columnMH3Bot = new global::System.Data.DataColumn("MH3Bot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMH3Bot);
                this.columnMH4Top = new global::System.Data.DataColumn("MH4Top", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMH4Top);
                this.columnMH4Bot = new global::System.Data.DataColumn("MH4Bot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMH4Bot);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkID,
                                this.columnRefID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnReadingTime.AllowDBNull = false;
                this.columnComments.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow NewLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow() {
                return ((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChanged != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChanged(this, new LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChanging != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChanging(this, new LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowDeleted != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowDeleted(this, new LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowDeleting != null)) {
                    this.LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowDeleting(this, new LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEvent(((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow(LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FlInversionReportTDS ds = new FlInversionReportTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_FULLLENGTHLINING_INVERSIONRow : global::System.Data.DataRow {
            
            private LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable tableLFS_WORK_FULLLENGTHLINING_INVERSION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_INVERSIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_FULLLENGTHLINING_INVERSION = ((LFS_WORK_FULLLENGTHLINING_INVERSIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PipeType {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PipeTypeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PipeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PipeCondition {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PipeConditionColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PipeConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GroundMoisture {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.GroundMoistureColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.GroundMoistureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BoilerSize {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.BoilerSizeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.BoilerSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PumpTotalCapacity {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PumpTotalCapacityColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PumpTotalCapacityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LayFlatSize {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LayFlatSizeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LayFlatSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LayFlatQuantityTotal {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LayFlatQuantityTotalColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LayFlatQuantityTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double WaterStartTemp {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WaterStartTempColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WaterStartTempColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Temp1 {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.Temp1Column]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.Temp1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HoldAtT1 {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.HoldAtT1Column]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.HoldAtT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TempT2 {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TempT2Column]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TempT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CookAtT2 {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CookAtT2Column]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CookAtT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CoolDownFor {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CoolDownForColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CoolDownForColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CoolToTemp {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CoolToTempColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CoolToTempColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DropInPipeRun {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.DropInPipeRunColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.DropInPipeRunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PipeSlopOf {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PipeSlopOfColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PipeSlopOfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double F45F120 {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.F45F120Column]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.F45F120Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Hold {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.HoldColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.HoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double F120F185 {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.F120F185Column]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.F120F185Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CookTime {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CookTimeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CookTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CoolTime {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CoolTimeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CoolTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AproxTotal {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.AproxTotalColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.AproxTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double WaterChangesPerHour {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WaterChangesPerHourColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WaterChangesPerHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ReturnWaterVelocity {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.ReturnWaterVelocityColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.ReturnWaterVelocityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LayflatBackPressure {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LayflatBackPressureColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LayflatBackPressureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PumpLiftAtIdealHead {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PumpLiftAtIdealHeadColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PumpLiftAtIdealHeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double WaterToFillLinerColumn {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WaterToFillLinerColumnColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WaterToFillLinerColumnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double WaterPerFit {
                get {
                    return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WaterPerFitColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WaterPerFitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InstallationResults {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.InstallationResultsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallationResults\' in table \'LFS_WORK_FULLLENGTHLINING_IN" +
                                "VERSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.InstallationResultsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinerTubeLabel {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LinerTubeLabelColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LinerTubeLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeadsIdealLabel {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.HeadsIdealLabelColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.HeadsIdealLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PumpingAndCirculationLabel {
                get {
                    return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PumpingAndCirculationLabelColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PumpingAndCirculationLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TubeSize {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TubeSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TubeSize\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TubeSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobName {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.JobNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobName\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.JobNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobNumber {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.JobNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobNumber\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.JobNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Street {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.StreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Street\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.StreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LengthToWetOut {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LengthToWetOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LengthToWetOut\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSI" +
                                "ON\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LengthToWetOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LengthToLine {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LengthToLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LengthToLine\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LengthToLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WetOutDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WetOutDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WetOutDate\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WetOutDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InstallDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.InstallDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallDate\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.InstallDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InstalledBy {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.InstalledByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstalledBy\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.InstalledByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Thickness {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.ThicknessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Thickness\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.ThicknessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeMaxColdHead {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TubeMaxColdHeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TubeMaxColdHead\' in table \'LFS_WORK_FULLLENGTHLINING_INVERS" +
                                "ION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TubeMaxColdHeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeMaxHotHead {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TubeMaxHotHeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TubeMaxHotHead\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSI" +
                                "ON\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TubeMaxHotHeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TubeIdealHead {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TubeIdealHeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TubeIdealHead\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSIO" +
                                "N\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TubeIdealHeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PumpHeightAboveGround {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PumpHeightAboveGroundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PumpHeightAboveGround\' in table \'LFS_WORK_FULLLENGTHLINING_" +
                                "INVERSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PumpHeightAboveGroundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DepthOfInversionMH {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.DepthOfInversionMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepthOfInversionMH\' in table \'LFS_WORK_FULLLENGTHLINING_INV" +
                                "ERSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.DepthOfInversionMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RunDetails {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.RunDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RunDetails\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.RunDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RunDetails2 {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.RunDetails2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RunDetails2\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.RunDetails2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinerTube {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LinerTubeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerTube\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LinerTubeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallationResultsNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.InstallationResultsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallationResultsNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.InstallationResultsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTubeSizeNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TubeSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTubeSizeNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TubeSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobNameNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.JobNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobNameNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.JobNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobNumberNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.JobNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobNumberNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.JobNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.StreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.StreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLengthToWetOutNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LengthToWetOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLengthToWetOutNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LengthToWetOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLengthToLineNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LengthToLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLengthToLineNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LengthToLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWetOutDateNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WetOutDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWetOutDateNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.WetOutDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallDateNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.InstallDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallDateNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.InstallDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstalledByNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.InstalledByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstalledByNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.InstalledByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThicknessNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.ThicknessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThicknessNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.ThicknessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTubeMaxColdHeadNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TubeMaxColdHeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTubeMaxColdHeadNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TubeMaxColdHeadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTubeMaxHotHeadNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TubeMaxHotHeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTubeMaxHotHeadNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TubeMaxHotHeadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTubeIdealHeadNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TubeIdealHeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTubeIdealHeadNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.TubeIdealHeadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPumpHeightAboveGroundNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PumpHeightAboveGroundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPumpHeightAboveGroundNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.PumpHeightAboveGroundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepthOfInversionMHNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.DepthOfInversionMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepthOfInversionMHNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.DepthOfInversionMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRunDetailsNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.RunDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRunDetailsNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.RunDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRunDetails2Null() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.RunDetails2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRunDetails2Null() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.RunDetails2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerTubeNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LinerTubeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerTubeNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION.LinerTubeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow : global::System.Data.DataRow {
            
            private LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD = ((LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.WorkIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReadingTime {
                get {
                    return ((global::System.DateTime)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.ReadingTimeColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.ReadingTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HeadFt {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.HeadFtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeadFt\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_" +
                                "CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.HeadFtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BoilerInF {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.BoilerInFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoilerInF\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FI" +
                                "EL_CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.BoilerInFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BoilerOutF {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.BoilerOutFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoilerOutF\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_F" +
                                "IEL_CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.BoilerOutFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PumpFlow {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.PumpFlowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PumpFlow\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIE" +
                                "L_CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.PumpFlowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PumpPsi {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.PumpPsiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PumpPsi\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL" +
                                "_CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.PumpPsiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MH1Top {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH1TopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MH1Top\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_" +
                                "CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH1TopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MH1Bot {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH1BotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MH1Bot\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_" +
                                "CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH1BotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MH2Top {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH2TopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MH2Top\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_" +
                                "CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH2TopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MH2Bot {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH2BotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MH2Bot\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_" +
                                "CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH2BotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MH3Top {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH3TopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MH3Top\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_" +
                                "CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH3TopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MH3Bot {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH3BotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MH3Bot\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_" +
                                "CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH3BotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MH4Top {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH4TopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MH4Top\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_" +
                                "CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH4TopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MH4Bot {
                get {
                    try {
                        return ((double)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH4BotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MH4Bot\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_" +
                                "CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH4BotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_WORK_FULLLENGTHLINING_INVERSION_FIE" +
                                "L_CURE_RECORD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.DeletedColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeadFtNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.HeadFtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeadFtNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.HeadFtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBoilerInFNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.BoilerInFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBoilerInFNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.BoilerInFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBoilerOutFNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.BoilerOutFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBoilerOutFNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.BoilerOutFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPumpFlowNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.PumpFlowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPumpFlowNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.PumpFlowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPumpPsiNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.PumpPsiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPumpPsiNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.PumpPsiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMH1TopNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH1TopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMH1TopNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH1TopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMH1BotNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH1BotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMH1BotNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH1BotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMH2TopNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH2TopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMH2TopNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH2TopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMH2BotNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH2BotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMH2BotNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH2BotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMH3TopNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH3TopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMH3TopNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH3TopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMH3BotNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH3BotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMH3BotNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH3BotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMH4TopNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH4TopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMH4TopNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH4TopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMH4BotNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH4BotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMH4BotNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.MH4BotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORD.CommentsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_FULLLENGTHLINING_INVERSIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSIONRowChangeEvent(LFS_WORK_FULLLENGTHLINING_INVERSIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEvent : global::System.EventArgs {
            
            private LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRowChangeEvent(LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_WORK_FULLLENGTHLINING_INVERSION_FIEL_CURE_RECORDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591