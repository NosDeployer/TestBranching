//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.CWP.FullLengthLining {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("FlReinstateReportTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class FlReinstateReportTDS : global::System.Data.DataSet {
        
        private ReinstateSectionDataTable tableReinstateSection;
        
        private ReinstateLateralDataTable tableReinstateLateral;
        
        private global::System.Data.DataRelation relationReinstateSection_ReinstateLateral;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FlReinstateReportTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected FlReinstateReportTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ReinstateSection"] != null)) {
                    base.Tables.Add(new ReinstateSectionDataTable(ds.Tables["ReinstateSection"]));
                }
                if ((ds.Tables["ReinstateLateral"] != null)) {
                    base.Tables.Add(new ReinstateLateralDataTable(ds.Tables["ReinstateLateral"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReinstateSectionDataTable ReinstateSection {
            get {
                return this.tableReinstateSection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReinstateLateralDataTable ReinstateLateral {
            get {
                return this.tableReinstateLateral;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            FlReinstateReportTDS cln = ((FlReinstateReportTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ReinstateSection"] != null)) {
                    base.Tables.Add(new ReinstateSectionDataTable(ds.Tables["ReinstateSection"]));
                }
                if ((ds.Tables["ReinstateLateral"] != null)) {
                    base.Tables.Add(new ReinstateLateralDataTable(ds.Tables["ReinstateLateral"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableReinstateSection = ((ReinstateSectionDataTable)(base.Tables["ReinstateSection"]));
            if ((initTable == true)) {
                if ((this.tableReinstateSection != null)) {
                    this.tableReinstateSection.InitVars();
                }
            }
            this.tableReinstateLateral = ((ReinstateLateralDataTable)(base.Tables["ReinstateLateral"]));
            if ((initTable == true)) {
                if ((this.tableReinstateLateral != null)) {
                    this.tableReinstateLateral.InitVars();
                }
            }
            this.relationReinstateSection_ReinstateLateral = this.Relations["ReinstateSection_ReinstateLateral"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "FlReinstateReportTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/FlReinstateReportTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableReinstateSection = new ReinstateSectionDataTable();
            base.Tables.Add(this.tableReinstateSection);
            this.tableReinstateLateral = new ReinstateLateralDataTable();
            base.Tables.Add(this.tableReinstateLateral);
            this.relationReinstateSection_ReinstateLateral = new global::System.Data.DataRelation("ReinstateSection_ReinstateLateral", new global::System.Data.DataColumn[] {
                        this.tableReinstateSection.AssetIDColumn,
                        this.tableReinstateSection.COMPANY_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableReinstateLateral.LateralColumn,
                        this.tableReinstateLateral.COMPANY_IDColumn}, false);
            this.Relations.Add(this.relationReinstateSection_ReinstateLateral);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReinstateSection() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReinstateLateral() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            FlReinstateReportTDS ds = new FlReinstateReportTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ReinstateSectionRowChangeEventHandler(object sender, ReinstateSectionRowChangeEvent e);
        
        public delegate void ReinstateLateralRowChangeEventHandler(object sender, ReinstateLateralRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReinstateSectionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnAssetID;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnSectionID;
            
            private global::System.Data.DataColumn columnCOMPANIES_ID;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnSubArea;
            
            private global::System.Data.DataColumn columnStreet;
            
            private global::System.Data.DataColumn columnLength;
            
            private global::System.Data.DataColumn columnSize_;
            
            private global::System.Data.DataColumn columnUSMHDescription;
            
            private global::System.Data.DataColumn columnDSMHDescription;
            
            private global::System.Data.DataColumn columnProjectName;
            
            private global::System.Data.DataColumn columnFlowOrderID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReinstateSectionDataTable() {
                this.TableName = "ReinstateSection";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReinstateSectionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ReinstateSectionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetIDColumn {
                get {
                    return this.columnAssetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionIDColumn {
                get {
                    return this.columnSectionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANIES_IDColumn {
                get {
                    return this.columnCOMPANIES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubAreaColumn {
                get {
                    return this.columnSubArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Size_Column {
                get {
                    return this.columnSize_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHDescriptionColumn {
                get {
                    return this.columnUSMHDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHDescriptionColumn {
                get {
                    return this.columnDSMHDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectNameColumn {
                get {
                    return this.columnProjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlowOrderIDColumn {
                get {
                    return this.columnFlowOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReinstateSectionRow this[int index] {
                get {
                    return ((ReinstateSectionRow)(this.Rows[index]));
                }
            }
            
            public event ReinstateSectionRowChangeEventHandler ReinstateSectionRowChanging;
            
            public event ReinstateSectionRowChangeEventHandler ReinstateSectionRowChanged;
            
            public event ReinstateSectionRowChangeEventHandler ReinstateSectionRowDeleting;
            
            public event ReinstateSectionRowChangeEventHandler ReinstateSectionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReinstateSectionRow(ReinstateSectionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReinstateSectionRow AddReinstateSectionRow(int WorkID, int AssetID, int COMPANY_ID, int ProjectID, string SectionID, int COMPANIES_ID, string NAME, string SubArea, string Street, string Length, string Size_, string USMHDescription, string DSMHDescription, string ProjectName, string FlowOrderID) {
                ReinstateSectionRow rowReinstateSectionRow = ((ReinstateSectionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        AssetID,
                        COMPANY_ID,
                        ProjectID,
                        SectionID,
                        COMPANIES_ID,
                        NAME,
                        SubArea,
                        Street,
                        Length,
                        Size_,
                        USMHDescription,
                        DSMHDescription,
                        ProjectName,
                        FlowOrderID};
                rowReinstateSectionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReinstateSectionRow);
                return rowReinstateSectionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReinstateSectionRow FindByProjectIDCOMPANY_IDAssetID(int ProjectID, int COMPANY_ID, int AssetID) {
                return ((ReinstateSectionRow)(this.Rows.Find(new object[] {
                            ProjectID,
                            COMPANY_ID,
                            AssetID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ReinstateSectionDataTable cln = ((ReinstateSectionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReinstateSectionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnAssetID = base.Columns["AssetID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnSectionID = base.Columns["SectionID"];
                this.columnCOMPANIES_ID = base.Columns["COMPANIES_ID"];
                this.columnNAME = base.Columns["NAME"];
                this.columnSubArea = base.Columns["SubArea"];
                this.columnStreet = base.Columns["Street"];
                this.columnLength = base.Columns["Length"];
                this.columnSize_ = base.Columns["Size_"];
                this.columnUSMHDescription = base.Columns["USMHDescription"];
                this.columnDSMHDescription = base.Columns["DSMHDescription"];
                this.columnProjectName = base.Columns["ProjectName"];
                this.columnFlowOrderID = base.Columns["FlowOrderID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnAssetID = new global::System.Data.DataColumn("AssetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetID);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnSectionID = new global::System.Data.DataColumn("SectionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionID);
                this.columnCOMPANIES_ID = new global::System.Data.DataColumn("COMPANIES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANIES_ID);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnSubArea = new global::System.Data.DataColumn("SubArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubArea);
                this.columnStreet = new global::System.Data.DataColumn("Street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnLength = new global::System.Data.DataColumn("Length", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLength);
                this.columnSize_ = new global::System.Data.DataColumn("Size_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_);
                this.columnUSMHDescription = new global::System.Data.DataColumn("USMHDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHDescription);
                this.columnDSMHDescription = new global::System.Data.DataColumn("DSMHDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHDescription);
                this.columnProjectName = new global::System.Data.DataColumn("ProjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectName);
                this.columnFlowOrderID = new global::System.Data.DataColumn("FlowOrderID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlowOrderID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID,
                                this.columnCOMPANY_ID,
                                this.columnAssetID}, true));
                this.columnAssetID.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnProjectID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReinstateSectionRow NewReinstateSectionRow() {
                return ((ReinstateSectionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReinstateSectionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ReinstateSectionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReinstateSectionRowChanged != null)) {
                    this.ReinstateSectionRowChanged(this, new ReinstateSectionRowChangeEvent(((ReinstateSectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReinstateSectionRowChanging != null)) {
                    this.ReinstateSectionRowChanging(this, new ReinstateSectionRowChangeEvent(((ReinstateSectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReinstateSectionRowDeleted != null)) {
                    this.ReinstateSectionRowDeleted(this, new ReinstateSectionRowChangeEvent(((ReinstateSectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReinstateSectionRowDeleting != null)) {
                    this.ReinstateSectionRowDeleting(this, new ReinstateSectionRowChangeEvent(((ReinstateSectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReinstateSectionRow(ReinstateSectionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FlReinstateReportTDS ds = new FlReinstateReportTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReinstateSectionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReinstateLateralDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkID;
            
            private global::System.Data.DataColumn columnLateral;
            
            private global::System.Data.DataColumn columnVideoDistance;
            
            private global::System.Data.DataColumn columnClockPosition;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnDistanceToCentre;
            
            private global::System.Data.DataColumn columnSize_;
            
            private global::System.Data.DataColumn columnTimeOpened;
            
            private global::System.Data.DataColumn columnReverseSetup;
            
            private global::System.Data.DataColumn columnReinstate;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnClientLateralID;
            
            private global::System.Data.DataColumn columnMaterial;
            
            private global::System.Data.DataColumn columnDistanceFromUSMH;
            
            private global::System.Data.DataColumn columnDistanceFromDSMH;
            
            private global::System.Data.DataColumn columnFlowOrderIDLateralID;
            
            private global::System.Data.DataColumn columnLateralID;
            
            private global::System.Data.DataColumn columnReverseClockPosition;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReinstateLateralDataTable() {
                this.TableName = "ReinstateLateral";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReinstateLateralDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ReinstateLateralDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkIDColumn {
                get {
                    return this.columnWorkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralColumn {
                get {
                    return this.columnLateral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoDistanceColumn {
                get {
                    return this.columnVideoDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClockPositionColumn {
                get {
                    return this.columnClockPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceToCentreColumn {
                get {
                    return this.columnDistanceToCentre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Size_Column {
                get {
                    return this.columnSize_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimeOpenedColumn {
                get {
                    return this.columnTimeOpened;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReverseSetupColumn {
                get {
                    return this.columnReverseSetup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReinstateColumn {
                get {
                    return this.columnReinstate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientLateralIDColumn {
                get {
                    return this.columnClientLateralID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialColumn {
                get {
                    return this.columnMaterial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceFromUSMHColumn {
                get {
                    return this.columnDistanceFromUSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceFromDSMHColumn {
                get {
                    return this.columnDistanceFromDSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlowOrderIDLateralIDColumn {
                get {
                    return this.columnFlowOrderIDLateralID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralIDColumn {
                get {
                    return this.columnLateralID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReverseClockPositionColumn {
                get {
                    return this.columnReverseClockPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReinstateLateralRow this[int index] {
                get {
                    return ((ReinstateLateralRow)(this.Rows[index]));
                }
            }
            
            public event ReinstateLateralRowChangeEventHandler ReinstateLateralRowChanging;
            
            public event ReinstateLateralRowChangeEventHandler ReinstateLateralRowChanged;
            
            public event ReinstateLateralRowChangeEventHandler ReinstateLateralRowDeleting;
            
            public event ReinstateLateralRowChangeEventHandler ReinstateLateralRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReinstateLateralRow(ReinstateLateralRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReinstateLateralRow AddReinstateLateralRow(
                        int WorkID, 
                        int Lateral, 
                        string VideoDistance, 
                        string ClockPosition, 
                        string State, 
                        string DistanceToCentre, 
                        string Size_, 
                        string TimeOpened, 
                        string ReverseSetup, 
                        System.DateTime Reinstate, 
                        string Comments, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        string ClientLateralID, 
                        string Material, 
                        string DistanceFromUSMH, 
                        string DistanceFromDSMH, 
                        string FlowOrderIDLateralID, 
                        string LateralID, 
                        string ReverseClockPosition) {
                ReinstateLateralRow rowReinstateLateralRow = ((ReinstateLateralRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkID,
                        Lateral,
                        VideoDistance,
                        ClockPosition,
                        State,
                        DistanceToCentre,
                        Size_,
                        TimeOpened,
                        ReverseSetup,
                        Reinstate,
                        Comments,
                        Deleted,
                        COMPANY_ID,
                        ClientLateralID,
                        Material,
                        DistanceFromUSMH,
                        DistanceFromDSMH,
                        FlowOrderIDLateralID,
                        LateralID,
                        ReverseClockPosition};
                rowReinstateLateralRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReinstateLateralRow);
                return rowReinstateLateralRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReinstateLateralRow FindByLateralWorkIDCOMPANY_ID(int Lateral, int WorkID, int COMPANY_ID) {
                return ((ReinstateLateralRow)(this.Rows.Find(new object[] {
                            Lateral,
                            WorkID,
                            COMPANY_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ReinstateLateralDataTable cln = ((ReinstateLateralDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReinstateLateralDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkID = base.Columns["WorkID"];
                this.columnLateral = base.Columns["Lateral"];
                this.columnVideoDistance = base.Columns["VideoDistance"];
                this.columnClockPosition = base.Columns["ClockPosition"];
                this.columnState = base.Columns["State"];
                this.columnDistanceToCentre = base.Columns["DistanceToCentre"];
                this.columnSize_ = base.Columns["Size_"];
                this.columnTimeOpened = base.Columns["TimeOpened"];
                this.columnReverseSetup = base.Columns["ReverseSetup"];
                this.columnReinstate = base.Columns["Reinstate"];
                this.columnComments = base.Columns["Comments"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnClientLateralID = base.Columns["ClientLateralID"];
                this.columnMaterial = base.Columns["Material"];
                this.columnDistanceFromUSMH = base.Columns["DistanceFromUSMH"];
                this.columnDistanceFromDSMH = base.Columns["DistanceFromDSMH"];
                this.columnFlowOrderIDLateralID = base.Columns["FlowOrderIDLateralID"];
                this.columnLateralID = base.Columns["LateralID"];
                this.columnReverseClockPosition = base.Columns["ReverseClockPosition"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkID = new global::System.Data.DataColumn("WorkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkID);
                this.columnLateral = new global::System.Data.DataColumn("Lateral", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateral);
                this.columnVideoDistance = new global::System.Data.DataColumn("VideoDistance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoDistance);
                this.columnClockPosition = new global::System.Data.DataColumn("ClockPosition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClockPosition);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnDistanceToCentre = new global::System.Data.DataColumn("DistanceToCentre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceToCentre);
                this.columnSize_ = new global::System.Data.DataColumn("Size_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_);
                this.columnTimeOpened = new global::System.Data.DataColumn("TimeOpened", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeOpened);
                this.columnReverseSetup = new global::System.Data.DataColumn("ReverseSetup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReverseSetup);
                this.columnReinstate = new global::System.Data.DataColumn("Reinstate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReinstate);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnClientLateralID = new global::System.Data.DataColumn("ClientLateralID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientLateralID);
                this.columnMaterial = new global::System.Data.DataColumn("Material", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterial);
                this.columnDistanceFromUSMH = new global::System.Data.DataColumn("DistanceFromUSMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceFromUSMH);
                this.columnDistanceFromDSMH = new global::System.Data.DataColumn("DistanceFromDSMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceFromDSMH);
                this.columnFlowOrderIDLateralID = new global::System.Data.DataColumn("FlowOrderIDLateralID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlowOrderIDLateralID);
                this.columnLateralID = new global::System.Data.DataColumn("LateralID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralID);
                this.columnReverseClockPosition = new global::System.Data.DataColumn("ReverseClockPosition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReverseClockPosition);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLateral,
                                this.columnWorkID,
                                this.columnCOMPANY_ID}, true));
                this.columnWorkID.AllowDBNull = false;
                this.columnLateral.AllowDBNull = false;
                this.columnVideoDistance.MaxLength = 25;
                this.columnClockPosition.MaxLength = 50;
                this.columnDistanceToCentre.MaxLength = 25;
                this.columnTimeOpened.MaxLength = 50;
                this.columnReverseSetup.MaxLength = 25;
                this.columnComments.MaxLength = 1073741823;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReinstateLateralRow NewReinstateLateralRow() {
                return ((ReinstateLateralRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReinstateLateralRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ReinstateLateralRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReinstateLateralRowChanged != null)) {
                    this.ReinstateLateralRowChanged(this, new ReinstateLateralRowChangeEvent(((ReinstateLateralRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReinstateLateralRowChanging != null)) {
                    this.ReinstateLateralRowChanging(this, new ReinstateLateralRowChangeEvent(((ReinstateLateralRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReinstateLateralRowDeleted != null)) {
                    this.ReinstateLateralRowDeleted(this, new ReinstateLateralRowChangeEvent(((ReinstateLateralRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReinstateLateralRowDeleting != null)) {
                    this.ReinstateLateralRowDeleting(this, new ReinstateLateralRowChangeEvent(((ReinstateLateralRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReinstateLateralRow(ReinstateLateralRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FlReinstateReportTDS ds = new FlReinstateReportTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReinstateLateralDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ReinstateSectionRow : global::System.Data.DataRow {
            
            private ReinstateSectionDataTable tableReinstateSection;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReinstateSectionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReinstateSection = ((ReinstateSectionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    try {
                        return ((int)(this[this.tableReinstateSection.WorkIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkID\' in table \'ReinstateSection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateSection.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssetID {
                get {
                    return ((int)(this[this.tableReinstateSection.AssetIDColumn]));
                }
                set {
                    this[this.tableReinstateSection.AssetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableReinstateSection.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableReinstateSection.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableReinstateSection.ProjectIDColumn]));
                }
                set {
                    this[this.tableReinstateSection.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionID {
                get {
                    try {
                        return ((string)(this[this.tableReinstateSection.SectionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SectionID\' in table \'ReinstateSection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateSection.SectionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANIES_ID {
                get {
                    try {
                        return ((int)(this[this.tableReinstateSection.COMPANIES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPANIES_ID\' in table \'ReinstateSection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateSection.COMPANIES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tableReinstateSection.NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME\' in table \'ReinstateSection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateSection.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubArea {
                get {
                    try {
                        return ((string)(this[this.tableReinstateSection.SubAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubArea\' in table \'ReinstateSection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateSection.SubAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Street {
                get {
                    try {
                        return ((string)(this[this.tableReinstateSection.StreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Street\' in table \'ReinstateSection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateSection.StreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Length {
                get {
                    try {
                        return ((string)(this[this.tableReinstateSection.LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Length\' in table \'ReinstateSection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateSection.LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size_ {
                get {
                    try {
                        return ((string)(this[this.tableReinstateSection.Size_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size_\' in table \'ReinstateSection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateSection.Size_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHDescription {
                get {
                    try {
                        return ((string)(this[this.tableReinstateSection.USMHDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHDescription\' in table \'ReinstateSection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateSection.USMHDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHDescription {
                get {
                    try {
                        return ((string)(this[this.tableReinstateSection.DSMHDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHDescription\' in table \'ReinstateSection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateSection.DSMHDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProjectName {
                get {
                    try {
                        return ((string)(this[this.tableReinstateSection.ProjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectName\' in table \'ReinstateSection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateSection.ProjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FlowOrderID {
                get {
                    try {
                        return ((string)(this[this.tableReinstateSection.FlowOrderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FlowOrderID\' in table \'ReinstateSection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateSection.FlowOrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkIDNull() {
                return this.IsNull(this.tableReinstateSection.WorkIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkIDNull() {
                this[this.tableReinstateSection.WorkIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionIDNull() {
                return this.IsNull(this.tableReinstateSection.SectionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionIDNull() {
                this[this.tableReinstateSection.SectionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANIES_IDNull() {
                return this.IsNull(this.tableReinstateSection.COMPANIES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANIES_IDNull() {
                this[this.tableReinstateSection.COMPANIES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.tableReinstateSection.NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.tableReinstateSection.NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubAreaNull() {
                return this.IsNull(this.tableReinstateSection.SubAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubAreaNull() {
                this[this.tableReinstateSection.SubAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNull() {
                return this.IsNull(this.tableReinstateSection.StreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNull() {
                this[this.tableReinstateSection.StreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLengthNull() {
                return this.IsNull(this.tableReinstateSection.LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLengthNull() {
                this[this.tableReinstateSection.LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSize_Null() {
                return this.IsNull(this.tableReinstateSection.Size_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSize_Null() {
                this[this.tableReinstateSection.Size_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHDescriptionNull() {
                return this.IsNull(this.tableReinstateSection.USMHDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHDescriptionNull() {
                this[this.tableReinstateSection.USMHDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHDescriptionNull() {
                return this.IsNull(this.tableReinstateSection.DSMHDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHDescriptionNull() {
                this[this.tableReinstateSection.DSMHDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectNameNull() {
                return this.IsNull(this.tableReinstateSection.ProjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectNameNull() {
                this[this.tableReinstateSection.ProjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFlowOrderIDNull() {
                return this.IsNull(this.tableReinstateSection.FlowOrderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFlowOrderIDNull() {
                this[this.tableReinstateSection.FlowOrderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReinstateLateralRow[] GetReinstateLateralRows() {
                if ((this.Table.ChildRelations["ReinstateSection_ReinstateLateral"] == null)) {
                    return new ReinstateLateralRow[0];
                }
                else {
                    return ((ReinstateLateralRow[])(base.GetChildRows(this.Table.ChildRelations["ReinstateSection_ReinstateLateral"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ReinstateLateralRow : global::System.Data.DataRow {
            
            private ReinstateLateralDataTable tableReinstateLateral;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReinstateLateralRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReinstateLateral = ((ReinstateLateralDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkID {
                get {
                    return ((int)(this[this.tableReinstateLateral.WorkIDColumn]));
                }
                set {
                    this[this.tableReinstateLateral.WorkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Lateral {
                get {
                    return ((int)(this[this.tableReinstateLateral.LateralColumn]));
                }
                set {
                    this[this.tableReinstateLateral.LateralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoDistance {
                get {
                    try {
                        return ((string)(this[this.tableReinstateLateral.VideoDistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoDistance\' in table \'ReinstateLateral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateLateral.VideoDistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClockPosition {
                get {
                    try {
                        return ((string)(this[this.tableReinstateLateral.ClockPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClockPosition\' in table \'ReinstateLateral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateLateral.ClockPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableReinstateLateral.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'ReinstateLateral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateLateral.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistanceToCentre {
                get {
                    try {
                        return ((string)(this[this.tableReinstateLateral.DistanceToCentreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceToCentre\' in table \'ReinstateLateral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateLateral.DistanceToCentreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size_ {
                get {
                    try {
                        return ((string)(this[this.tableReinstateLateral.Size_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size_\' in table \'ReinstateLateral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateLateral.Size_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TimeOpened {
                get {
                    try {
                        return ((string)(this[this.tableReinstateLateral.TimeOpenedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeOpened\' in table \'ReinstateLateral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateLateral.TimeOpenedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReverseSetup {
                get {
                    try {
                        return ((string)(this[this.tableReinstateLateral.ReverseSetupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReverseSetup\' in table \'ReinstateLateral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateLateral.ReverseSetupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Reinstate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableReinstateLateral.ReinstateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reinstate\' in table \'ReinstateLateral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateLateral.ReinstateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableReinstateLateral.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'ReinstateLateral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateLateral.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableReinstateLateral.DeletedColumn]));
                }
                set {
                    this[this.tableReinstateLateral.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableReinstateLateral.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableReinstateLateral.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientLateralID {
                get {
                    try {
                        return ((string)(this[this.tableReinstateLateral.ClientLateralIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientLateralID\' in table \'ReinstateLateral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateLateral.ClientLateralIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Material {
                get {
                    try {
                        return ((string)(this[this.tableReinstateLateral.MaterialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Material\' in table \'ReinstateLateral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateLateral.MaterialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistanceFromUSMH {
                get {
                    try {
                        return ((string)(this[this.tableReinstateLateral.DistanceFromUSMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceFromUSMH\' in table \'ReinstateLateral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateLateral.DistanceFromUSMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistanceFromDSMH {
                get {
                    try {
                        return ((string)(this[this.tableReinstateLateral.DistanceFromDSMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceFromDSMH\' in table \'ReinstateLateral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateLateral.DistanceFromDSMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FlowOrderIDLateralID {
                get {
                    try {
                        return ((string)(this[this.tableReinstateLateral.FlowOrderIDLateralIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FlowOrderIDLateralID\' in table \'ReinstateLateral\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableReinstateLateral.FlowOrderIDLateralIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LateralID {
                get {
                    try {
                        return ((string)(this[this.tableReinstateLateral.LateralIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralID\' in table \'ReinstateLateral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReinstateLateral.LateralIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReverseClockPosition {
                get {
                    try {
                        return ((string)(this[this.tableReinstateLateral.ReverseClockPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReverseClockPosition\' in table \'ReinstateLateral\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableReinstateLateral.ReverseClockPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReinstateSectionRow ReinstateSectionRowParent {
                get {
                    return ((ReinstateSectionRow)(this.GetParentRow(this.Table.ParentRelations["ReinstateSection_ReinstateLateral"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ReinstateSection_ReinstateLateral"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoDistanceNull() {
                return this.IsNull(this.tableReinstateLateral.VideoDistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoDistanceNull() {
                this[this.tableReinstateLateral.VideoDistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClockPositionNull() {
                return this.IsNull(this.tableReinstateLateral.ClockPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClockPositionNull() {
                this[this.tableReinstateLateral.ClockPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableReinstateLateral.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableReinstateLateral.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceToCentreNull() {
                return this.IsNull(this.tableReinstateLateral.DistanceToCentreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceToCentreNull() {
                this[this.tableReinstateLateral.DistanceToCentreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSize_Null() {
                return this.IsNull(this.tableReinstateLateral.Size_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSize_Null() {
                this[this.tableReinstateLateral.Size_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeOpenedNull() {
                return this.IsNull(this.tableReinstateLateral.TimeOpenedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeOpenedNull() {
                this[this.tableReinstateLateral.TimeOpenedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReverseSetupNull() {
                return this.IsNull(this.tableReinstateLateral.ReverseSetupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReverseSetupNull() {
                this[this.tableReinstateLateral.ReverseSetupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReinstateNull() {
                return this.IsNull(this.tableReinstateLateral.ReinstateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReinstateNull() {
                this[this.tableReinstateLateral.ReinstateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableReinstateLateral.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableReinstateLateral.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientLateralIDNull() {
                return this.IsNull(this.tableReinstateLateral.ClientLateralIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientLateralIDNull() {
                this[this.tableReinstateLateral.ClientLateralIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaterialNull() {
                return this.IsNull(this.tableReinstateLateral.MaterialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaterialNull() {
                this[this.tableReinstateLateral.MaterialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceFromUSMHNull() {
                return this.IsNull(this.tableReinstateLateral.DistanceFromUSMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceFromUSMHNull() {
                this[this.tableReinstateLateral.DistanceFromUSMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceFromDSMHNull() {
                return this.IsNull(this.tableReinstateLateral.DistanceFromDSMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceFromDSMHNull() {
                this[this.tableReinstateLateral.DistanceFromDSMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFlowOrderIDLateralIDNull() {
                return this.IsNull(this.tableReinstateLateral.FlowOrderIDLateralIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFlowOrderIDLateralIDNull() {
                this[this.tableReinstateLateral.FlowOrderIDLateralIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateralIDNull() {
                return this.IsNull(this.tableReinstateLateral.LateralIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateralIDNull() {
                this[this.tableReinstateLateral.LateralIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReverseClockPositionNull() {
                return this.IsNull(this.tableReinstateLateral.ReverseClockPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReverseClockPositionNull() {
                this[this.tableReinstateLateral.ReverseClockPositionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ReinstateSectionRowChangeEvent : global::System.EventArgs {
            
            private ReinstateSectionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReinstateSectionRowChangeEvent(ReinstateSectionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReinstateSectionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ReinstateLateralRowChangeEvent : global::System.EventArgs {
            
            private ReinstateLateralRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReinstateLateralRowChangeEvent(ReinstateLateralRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReinstateLateralRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591