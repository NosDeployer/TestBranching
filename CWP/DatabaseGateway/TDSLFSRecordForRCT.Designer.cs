//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.CWP.DatabaseGateway {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("TDSLFSRecordForRCT")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class TDSLFSRecordForRCT : global::System.Data.DataSet {
        
        private LFS_MASTER_AREADataTable tableLFS_MASTER_AREA;
        
        private LFS_POINT_REPAIRSDataTable tableLFS_POINT_REPAIRS;
        
        private LFS_M2_TABLESDataTable tableLFS_M2_TABLES;
        
        private LFS_MASTER_AREA_RCT_EXPANDEDDataTable tableLFS_MASTER_AREA_RCT_EXPANDED;
        
        private LFS_M2_TABLES_RCT_EXPANDEDDataTable tableLFS_M2_TABLES_RCT_EXPANDED;
        
        private LFS_POINT_REPAIRS_RCT_EXPANDEDDataTable tableLFS_POINT_REPAIRS_RCT_EXPANDED;
        
        private LFS_MASTER_AREA_RCTDataTable tableLFS_MASTER_AREA_RCT;
        
        private LFS_POINT_REPAIRS_RCTDataTable tableLFS_POINT_REPAIRS_RCT;
        
        private LFS_M2_TABLES_RCTDataTable tableLFS_M2_TABLES_RCT;
        
        private LFS_MASTER_AREA2DataTable tableLFS_MASTER_AREA2;
        
        private LFS_JUNCTION_LINERDataTable tableLFS_JUNCTION_LINER;
        
        private LFS_JUNCTION_LINER_RCTDataTable tableLFS_JUNCTION_LINER_RCT;
        
        private LFS_JUNCTION_LINER_RCT_EXPANDEDDataTable tableLFS_JUNCTION_LINER_RCT_EXPANDED;
        
        private global::System.Data.DataRelation relationLFS_MASTER_AREALFS_POINT_REPAIRS;
        
        private global::System.Data.DataRelation relationLFS_MASTER_AREALFS_M2_TABLES;
        
        private global::System.Data.DataRelation relationLFS_MASTER_AREALFS_JUNCTION_LINER;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TDSLFSRecordForRCT() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected TDSLFSRecordForRCT(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LFS_MASTER_AREA"] != null)) {
                    base.Tables.Add(new LFS_MASTER_AREADataTable(ds.Tables["LFS_MASTER_AREA"]));
                }
                if ((ds.Tables["LFS_POINT_REPAIRS"] != null)) {
                    base.Tables.Add(new LFS_POINT_REPAIRSDataTable(ds.Tables["LFS_POINT_REPAIRS"]));
                }
                if ((ds.Tables["LFS_M2_TABLES"] != null)) {
                    base.Tables.Add(new LFS_M2_TABLESDataTable(ds.Tables["LFS_M2_TABLES"]));
                }
                if ((ds.Tables["LFS_MASTER_AREA_RCT_EXPANDED"] != null)) {
                    base.Tables.Add(new LFS_MASTER_AREA_RCT_EXPANDEDDataTable(ds.Tables["LFS_MASTER_AREA_RCT_EXPANDED"]));
                }
                if ((ds.Tables["LFS_M2_TABLES_RCT_EXPANDED"] != null)) {
                    base.Tables.Add(new LFS_M2_TABLES_RCT_EXPANDEDDataTable(ds.Tables["LFS_M2_TABLES_RCT_EXPANDED"]));
                }
                if ((ds.Tables["LFS_POINT_REPAIRS_RCT_EXPANDED"] != null)) {
                    base.Tables.Add(new LFS_POINT_REPAIRS_RCT_EXPANDEDDataTable(ds.Tables["LFS_POINT_REPAIRS_RCT_EXPANDED"]));
                }
                if ((ds.Tables["LFS_MASTER_AREA_RCT"] != null)) {
                    base.Tables.Add(new LFS_MASTER_AREA_RCTDataTable(ds.Tables["LFS_MASTER_AREA_RCT"]));
                }
                if ((ds.Tables["LFS_POINT_REPAIRS_RCT"] != null)) {
                    base.Tables.Add(new LFS_POINT_REPAIRS_RCTDataTable(ds.Tables["LFS_POINT_REPAIRS_RCT"]));
                }
                if ((ds.Tables["LFS_M2_TABLES_RCT"] != null)) {
                    base.Tables.Add(new LFS_M2_TABLES_RCTDataTable(ds.Tables["LFS_M2_TABLES_RCT"]));
                }
                if ((ds.Tables["LFS_MASTER_AREA2"] != null)) {
                    base.Tables.Add(new LFS_MASTER_AREA2DataTable(ds.Tables["LFS_MASTER_AREA2"]));
                }
                if ((ds.Tables["LFS_JUNCTION_LINER"] != null)) {
                    base.Tables.Add(new LFS_JUNCTION_LINERDataTable(ds.Tables["LFS_JUNCTION_LINER"]));
                }
                if ((ds.Tables["LFS_JUNCTION_LINER_RCT"] != null)) {
                    base.Tables.Add(new LFS_JUNCTION_LINER_RCTDataTable(ds.Tables["LFS_JUNCTION_LINER_RCT"]));
                }
                if ((ds.Tables["LFS_JUNCTION_LINER_RCT_EXPANDED"] != null)) {
                    base.Tables.Add(new LFS_JUNCTION_LINER_RCT_EXPANDEDDataTable(ds.Tables["LFS_JUNCTION_LINER_RCT_EXPANDED"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_MASTER_AREADataTable LFS_MASTER_AREA {
            get {
                return this.tableLFS_MASTER_AREA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_POINT_REPAIRSDataTable LFS_POINT_REPAIRS {
            get {
                return this.tableLFS_POINT_REPAIRS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_M2_TABLESDataTable LFS_M2_TABLES {
            get {
                return this.tableLFS_M2_TABLES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_MASTER_AREA_RCT_EXPANDEDDataTable LFS_MASTER_AREA_RCT_EXPANDED {
            get {
                return this.tableLFS_MASTER_AREA_RCT_EXPANDED;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_M2_TABLES_RCT_EXPANDEDDataTable LFS_M2_TABLES_RCT_EXPANDED {
            get {
                return this.tableLFS_M2_TABLES_RCT_EXPANDED;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_POINT_REPAIRS_RCT_EXPANDEDDataTable LFS_POINT_REPAIRS_RCT_EXPANDED {
            get {
                return this.tableLFS_POINT_REPAIRS_RCT_EXPANDED;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_MASTER_AREA_RCTDataTable LFS_MASTER_AREA_RCT {
            get {
                return this.tableLFS_MASTER_AREA_RCT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_POINT_REPAIRS_RCTDataTable LFS_POINT_REPAIRS_RCT {
            get {
                return this.tableLFS_POINT_REPAIRS_RCT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_M2_TABLES_RCTDataTable LFS_M2_TABLES_RCT {
            get {
                return this.tableLFS_M2_TABLES_RCT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_MASTER_AREA2DataTable LFS_MASTER_AREA2 {
            get {
                return this.tableLFS_MASTER_AREA2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_JUNCTION_LINERDataTable LFS_JUNCTION_LINER {
            get {
                return this.tableLFS_JUNCTION_LINER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_JUNCTION_LINER_RCTDataTable LFS_JUNCTION_LINER_RCT {
            get {
                return this.tableLFS_JUNCTION_LINER_RCT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LFS_JUNCTION_LINER_RCT_EXPANDEDDataTable LFS_JUNCTION_LINER_RCT_EXPANDED {
            get {
                return this.tableLFS_JUNCTION_LINER_RCT_EXPANDED;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            TDSLFSRecordForRCT cln = ((TDSLFSRecordForRCT)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LFS_MASTER_AREA"] != null)) {
                    base.Tables.Add(new LFS_MASTER_AREADataTable(ds.Tables["LFS_MASTER_AREA"]));
                }
                if ((ds.Tables["LFS_POINT_REPAIRS"] != null)) {
                    base.Tables.Add(new LFS_POINT_REPAIRSDataTable(ds.Tables["LFS_POINT_REPAIRS"]));
                }
                if ((ds.Tables["LFS_M2_TABLES"] != null)) {
                    base.Tables.Add(new LFS_M2_TABLESDataTable(ds.Tables["LFS_M2_TABLES"]));
                }
                if ((ds.Tables["LFS_MASTER_AREA_RCT_EXPANDED"] != null)) {
                    base.Tables.Add(new LFS_MASTER_AREA_RCT_EXPANDEDDataTable(ds.Tables["LFS_MASTER_AREA_RCT_EXPANDED"]));
                }
                if ((ds.Tables["LFS_M2_TABLES_RCT_EXPANDED"] != null)) {
                    base.Tables.Add(new LFS_M2_TABLES_RCT_EXPANDEDDataTable(ds.Tables["LFS_M2_TABLES_RCT_EXPANDED"]));
                }
                if ((ds.Tables["LFS_POINT_REPAIRS_RCT_EXPANDED"] != null)) {
                    base.Tables.Add(new LFS_POINT_REPAIRS_RCT_EXPANDEDDataTable(ds.Tables["LFS_POINT_REPAIRS_RCT_EXPANDED"]));
                }
                if ((ds.Tables["LFS_MASTER_AREA_RCT"] != null)) {
                    base.Tables.Add(new LFS_MASTER_AREA_RCTDataTable(ds.Tables["LFS_MASTER_AREA_RCT"]));
                }
                if ((ds.Tables["LFS_POINT_REPAIRS_RCT"] != null)) {
                    base.Tables.Add(new LFS_POINT_REPAIRS_RCTDataTable(ds.Tables["LFS_POINT_REPAIRS_RCT"]));
                }
                if ((ds.Tables["LFS_M2_TABLES_RCT"] != null)) {
                    base.Tables.Add(new LFS_M2_TABLES_RCTDataTable(ds.Tables["LFS_M2_TABLES_RCT"]));
                }
                if ((ds.Tables["LFS_MASTER_AREA2"] != null)) {
                    base.Tables.Add(new LFS_MASTER_AREA2DataTable(ds.Tables["LFS_MASTER_AREA2"]));
                }
                if ((ds.Tables["LFS_JUNCTION_LINER"] != null)) {
                    base.Tables.Add(new LFS_JUNCTION_LINERDataTable(ds.Tables["LFS_JUNCTION_LINER"]));
                }
                if ((ds.Tables["LFS_JUNCTION_LINER_RCT"] != null)) {
                    base.Tables.Add(new LFS_JUNCTION_LINER_RCTDataTable(ds.Tables["LFS_JUNCTION_LINER_RCT"]));
                }
                if ((ds.Tables["LFS_JUNCTION_LINER_RCT_EXPANDED"] != null)) {
                    base.Tables.Add(new LFS_JUNCTION_LINER_RCT_EXPANDEDDataTable(ds.Tables["LFS_JUNCTION_LINER_RCT_EXPANDED"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableLFS_MASTER_AREA = ((LFS_MASTER_AREADataTable)(base.Tables["LFS_MASTER_AREA"]));
            if ((initTable == true)) {
                if ((this.tableLFS_MASTER_AREA != null)) {
                    this.tableLFS_MASTER_AREA.InitVars();
                }
            }
            this.tableLFS_POINT_REPAIRS = ((LFS_POINT_REPAIRSDataTable)(base.Tables["LFS_POINT_REPAIRS"]));
            if ((initTable == true)) {
                if ((this.tableLFS_POINT_REPAIRS != null)) {
                    this.tableLFS_POINT_REPAIRS.InitVars();
                }
            }
            this.tableLFS_M2_TABLES = ((LFS_M2_TABLESDataTable)(base.Tables["LFS_M2_TABLES"]));
            if ((initTable == true)) {
                if ((this.tableLFS_M2_TABLES != null)) {
                    this.tableLFS_M2_TABLES.InitVars();
                }
            }
            this.tableLFS_MASTER_AREA_RCT_EXPANDED = ((LFS_MASTER_AREA_RCT_EXPANDEDDataTable)(base.Tables["LFS_MASTER_AREA_RCT_EXPANDED"]));
            if ((initTable == true)) {
                if ((this.tableLFS_MASTER_AREA_RCT_EXPANDED != null)) {
                    this.tableLFS_MASTER_AREA_RCT_EXPANDED.InitVars();
                }
            }
            this.tableLFS_M2_TABLES_RCT_EXPANDED = ((LFS_M2_TABLES_RCT_EXPANDEDDataTable)(base.Tables["LFS_M2_TABLES_RCT_EXPANDED"]));
            if ((initTable == true)) {
                if ((this.tableLFS_M2_TABLES_RCT_EXPANDED != null)) {
                    this.tableLFS_M2_TABLES_RCT_EXPANDED.InitVars();
                }
            }
            this.tableLFS_POINT_REPAIRS_RCT_EXPANDED = ((LFS_POINT_REPAIRS_RCT_EXPANDEDDataTable)(base.Tables["LFS_POINT_REPAIRS_RCT_EXPANDED"]));
            if ((initTable == true)) {
                if ((this.tableLFS_POINT_REPAIRS_RCT_EXPANDED != null)) {
                    this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.InitVars();
                }
            }
            this.tableLFS_MASTER_AREA_RCT = ((LFS_MASTER_AREA_RCTDataTable)(base.Tables["LFS_MASTER_AREA_RCT"]));
            if ((initTable == true)) {
                if ((this.tableLFS_MASTER_AREA_RCT != null)) {
                    this.tableLFS_MASTER_AREA_RCT.InitVars();
                }
            }
            this.tableLFS_POINT_REPAIRS_RCT = ((LFS_POINT_REPAIRS_RCTDataTable)(base.Tables["LFS_POINT_REPAIRS_RCT"]));
            if ((initTable == true)) {
                if ((this.tableLFS_POINT_REPAIRS_RCT != null)) {
                    this.tableLFS_POINT_REPAIRS_RCT.InitVars();
                }
            }
            this.tableLFS_M2_TABLES_RCT = ((LFS_M2_TABLES_RCTDataTable)(base.Tables["LFS_M2_TABLES_RCT"]));
            if ((initTable == true)) {
                if ((this.tableLFS_M2_TABLES_RCT != null)) {
                    this.tableLFS_M2_TABLES_RCT.InitVars();
                }
            }
            this.tableLFS_MASTER_AREA2 = ((LFS_MASTER_AREA2DataTable)(base.Tables["LFS_MASTER_AREA2"]));
            if ((initTable == true)) {
                if ((this.tableLFS_MASTER_AREA2 != null)) {
                    this.tableLFS_MASTER_AREA2.InitVars();
                }
            }
            this.tableLFS_JUNCTION_LINER = ((LFS_JUNCTION_LINERDataTable)(base.Tables["LFS_JUNCTION_LINER"]));
            if ((initTable == true)) {
                if ((this.tableLFS_JUNCTION_LINER != null)) {
                    this.tableLFS_JUNCTION_LINER.InitVars();
                }
            }
            this.tableLFS_JUNCTION_LINER_RCT = ((LFS_JUNCTION_LINER_RCTDataTable)(base.Tables["LFS_JUNCTION_LINER_RCT"]));
            if ((initTable == true)) {
                if ((this.tableLFS_JUNCTION_LINER_RCT != null)) {
                    this.tableLFS_JUNCTION_LINER_RCT.InitVars();
                }
            }
            this.tableLFS_JUNCTION_LINER_RCT_EXPANDED = ((LFS_JUNCTION_LINER_RCT_EXPANDEDDataTable)(base.Tables["LFS_JUNCTION_LINER_RCT_EXPANDED"]));
            if ((initTable == true)) {
                if ((this.tableLFS_JUNCTION_LINER_RCT_EXPANDED != null)) {
                    this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.InitVars();
                }
            }
            this.relationLFS_MASTER_AREALFS_POINT_REPAIRS = this.Relations["LFS_MASTER_AREALFS_POINT_REPAIRS"];
            this.relationLFS_MASTER_AREALFS_M2_TABLES = this.Relations["LFS_MASTER_AREALFS_M2_TABLES"];
            this.relationLFS_MASTER_AREALFS_JUNCTION_LINER = this.Relations["LFS_MASTER_AREALFS_JUNCTION_LINER"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "TDSLFSRecordForRCT";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/TDSLFSRecordForRCT.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLFS_MASTER_AREA = new LFS_MASTER_AREADataTable();
            base.Tables.Add(this.tableLFS_MASTER_AREA);
            this.tableLFS_POINT_REPAIRS = new LFS_POINT_REPAIRSDataTable();
            base.Tables.Add(this.tableLFS_POINT_REPAIRS);
            this.tableLFS_M2_TABLES = new LFS_M2_TABLESDataTable();
            base.Tables.Add(this.tableLFS_M2_TABLES);
            this.tableLFS_MASTER_AREA_RCT_EXPANDED = new LFS_MASTER_AREA_RCT_EXPANDEDDataTable();
            base.Tables.Add(this.tableLFS_MASTER_AREA_RCT_EXPANDED);
            this.tableLFS_M2_TABLES_RCT_EXPANDED = new LFS_M2_TABLES_RCT_EXPANDEDDataTable();
            base.Tables.Add(this.tableLFS_M2_TABLES_RCT_EXPANDED);
            this.tableLFS_POINT_REPAIRS_RCT_EXPANDED = new LFS_POINT_REPAIRS_RCT_EXPANDEDDataTable();
            base.Tables.Add(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED);
            this.tableLFS_MASTER_AREA_RCT = new LFS_MASTER_AREA_RCTDataTable();
            base.Tables.Add(this.tableLFS_MASTER_AREA_RCT);
            this.tableLFS_POINT_REPAIRS_RCT = new LFS_POINT_REPAIRS_RCTDataTable();
            base.Tables.Add(this.tableLFS_POINT_REPAIRS_RCT);
            this.tableLFS_M2_TABLES_RCT = new LFS_M2_TABLES_RCTDataTable();
            base.Tables.Add(this.tableLFS_M2_TABLES_RCT);
            this.tableLFS_MASTER_AREA2 = new LFS_MASTER_AREA2DataTable();
            base.Tables.Add(this.tableLFS_MASTER_AREA2);
            this.tableLFS_JUNCTION_LINER = new LFS_JUNCTION_LINERDataTable();
            base.Tables.Add(this.tableLFS_JUNCTION_LINER);
            this.tableLFS_JUNCTION_LINER_RCT = new LFS_JUNCTION_LINER_RCTDataTable();
            base.Tables.Add(this.tableLFS_JUNCTION_LINER_RCT);
            this.tableLFS_JUNCTION_LINER_RCT_EXPANDED = new LFS_JUNCTION_LINER_RCT_EXPANDEDDataTable();
            base.Tables.Add(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("LFS_MASTER_AREALFS_POINT_REPAIRS", new global::System.Data.DataColumn[] {
                        this.tableLFS_MASTER_AREA.IDColumn,
                        this.tableLFS_MASTER_AREA.COMPANY_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_POINT_REPAIRS.IDColumn,
                        this.tableLFS_POINT_REPAIRS.COMPANY_IDColumn});
            this.tableLFS_POINT_REPAIRS.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("LFS_MASTER_AREALFS_M2_TABLES", new global::System.Data.DataColumn[] {
                        this.tableLFS_MASTER_AREA.IDColumn,
                        this.tableLFS_MASTER_AREA.COMPANY_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_M2_TABLES.IDColumn,
                        this.tableLFS_M2_TABLES.COMPANY_IDColumn});
            this.tableLFS_M2_TABLES.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("LFS_MASTER_AREALFS_JUNCTION_LINER", new global::System.Data.DataColumn[] {
                        this.tableLFS_MASTER_AREA.IDColumn,
                        this.tableLFS_MASTER_AREA.COMPANY_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_JUNCTION_LINER.IDColumn,
                        this.tableLFS_JUNCTION_LINER.COMPANY_IDColumn});
            this.tableLFS_JUNCTION_LINER.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationLFS_MASTER_AREALFS_POINT_REPAIRS = new global::System.Data.DataRelation("LFS_MASTER_AREALFS_POINT_REPAIRS", new global::System.Data.DataColumn[] {
                        this.tableLFS_MASTER_AREA.IDColumn,
                        this.tableLFS_MASTER_AREA.COMPANY_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_POINT_REPAIRS.IDColumn,
                        this.tableLFS_POINT_REPAIRS.COMPANY_IDColumn}, false);
            this.Relations.Add(this.relationLFS_MASTER_AREALFS_POINT_REPAIRS);
            this.relationLFS_MASTER_AREALFS_M2_TABLES = new global::System.Data.DataRelation("LFS_MASTER_AREALFS_M2_TABLES", new global::System.Data.DataColumn[] {
                        this.tableLFS_MASTER_AREA.IDColumn,
                        this.tableLFS_MASTER_AREA.COMPANY_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_M2_TABLES.IDColumn,
                        this.tableLFS_M2_TABLES.COMPANY_IDColumn}, false);
            this.Relations.Add(this.relationLFS_MASTER_AREALFS_M2_TABLES);
            this.relationLFS_MASTER_AREALFS_JUNCTION_LINER = new global::System.Data.DataRelation("LFS_MASTER_AREALFS_JUNCTION_LINER", new global::System.Data.DataColumn[] {
                        this.tableLFS_MASTER_AREA.IDColumn,
                        this.tableLFS_MASTER_AREA.COMPANY_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLFS_JUNCTION_LINER.IDColumn,
                        this.tableLFS_JUNCTION_LINER.COMPANY_IDColumn}, false);
            this.Relations.Add(this.relationLFS_MASTER_AREALFS_JUNCTION_LINER);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_MASTER_AREA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_POINT_REPAIRS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_M2_TABLES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_MASTER_AREA_RCT_EXPANDED() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_M2_TABLES_RCT_EXPANDED() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_POINT_REPAIRS_RCT_EXPANDED() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_MASTER_AREA_RCT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_POINT_REPAIRS_RCT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_M2_TABLES_RCT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_MASTER_AREA2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_JUNCTION_LINER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_JUNCTION_LINER_RCT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLFS_JUNCTION_LINER_RCT_EXPANDED() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            TDSLFSRecordForRCT ds = new TDSLFSRecordForRCT();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void LFS_MASTER_AREARowChangeEventHandler(object sender, LFS_MASTER_AREARowChangeEvent e);
        
        public delegate void LFS_POINT_REPAIRSRowChangeEventHandler(object sender, LFS_POINT_REPAIRSRowChangeEvent e);
        
        public delegate void LFS_M2_TABLESRowChangeEventHandler(object sender, LFS_M2_TABLESRowChangeEvent e);
        
        public delegate void LFS_MASTER_AREA_RCT_EXPANDEDRowChangeEventHandler(object sender, LFS_MASTER_AREA_RCT_EXPANDEDRowChangeEvent e);
        
        public delegate void LFS_M2_TABLES_RCT_EXPANDEDRowChangeEventHandler(object sender, LFS_M2_TABLES_RCT_EXPANDEDRowChangeEvent e);
        
        public delegate void LFS_POINT_REPAIRS_RCT_EXPANDEDRowChangeEventHandler(object sender, LFS_POINT_REPAIRS_RCT_EXPANDEDRowChangeEvent e);
        
        public delegate void LFS_MASTER_AREA_RCTRowChangeEventHandler(object sender, LFS_MASTER_AREA_RCTRowChangeEvent e);
        
        public delegate void LFS_POINT_REPAIRS_RCTRowChangeEventHandler(object sender, LFS_POINT_REPAIRS_RCTRowChangeEvent e);
        
        public delegate void LFS_M2_TABLES_RCTRowChangeEventHandler(object sender, LFS_M2_TABLES_RCTRowChangeEvent e);
        
        public delegate void LFS_MASTER_AREA2RowChangeEventHandler(object sender, LFS_MASTER_AREA2RowChangeEvent e);
        
        public delegate void LFS_JUNCTION_LINERRowChangeEventHandler(object sender, LFS_JUNCTION_LINERRowChangeEvent e);
        
        public delegate void LFS_JUNCTION_LINER_RCTRowChangeEventHandler(object sender, LFS_JUNCTION_LINER_RCTRowChangeEvent e);
        
        public delegate void LFS_JUNCTION_LINER_RCT_EXPANDEDRowChangeEventHandler(object sender, LFS_JUNCTION_LINER_RCT_EXPANDEDRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_MASTER_AREADataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnRecordID;
            
            private global::System.Data.DataColumn columnClientID;
            
            private global::System.Data.DataColumn columnCOMPANIES_ID;
            
            private global::System.Data.DataColumn columnSubArea;
            
            private global::System.Data.DataColumn columnStreet;
            
            private global::System.Data.DataColumn columnUSMH;
            
            private global::System.Data.DataColumn columnDSMH;
            
            private global::System.Data.DataColumn columnSize_;
            
            private global::System.Data.DataColumn columnScaledLength;
            
            private global::System.Data.DataColumn columnP1Date;
            
            private global::System.Data.DataColumn columnActualLength;
            
            private global::System.Data.DataColumn columnLiveLats;
            
            private global::System.Data.DataColumn columnCXIsRemoved;
            
            private global::System.Data.DataColumn columnM1Date;
            
            private global::System.Data.DataColumn columnM2Date;
            
            private global::System.Data.DataColumn columnInstallDate;
            
            private global::System.Data.DataColumn columnFinalVideo;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnIssueIdentified;
            
            private global::System.Data.DataColumn columnIssueResolved;
            
            private global::System.Data.DataColumn columnFullLengthLining;
            
            private global::System.Data.DataColumn columnSubcontractorLining;
            
            private global::System.Data.DataColumn columnOutOfScopeInArea;
            
            private global::System.Data.DataColumn columnIssueGivenToBayCity;
            
            private global::System.Data.DataColumn columnConfirmedSize;
            
            private global::System.Data.DataColumn columnInstallRate;
            
            private global::System.Data.DataColumn columnDeadlineDate;
            
            private global::System.Data.DataColumn columnProposedLiningDate;
            
            private global::System.Data.DataColumn columnSalesIssue;
            
            private global::System.Data.DataColumn columnLFSIssue;
            
            private global::System.Data.DataColumn columnClientIssue;
            
            private global::System.Data.DataColumn columnInvestigationIssue;
            
            private global::System.Data.DataColumn columnPointLining;
            
            private global::System.Data.DataColumn columnGrouting;
            
            private global::System.Data.DataColumn columnLateralLining;
            
            private global::System.Data.DataColumn columnVacExDate;
            
            private global::System.Data.DataColumn columnPusherDate;
            
            private global::System.Data.DataColumn columnLinerOrdered;
            
            private global::System.Data.DataColumn columnRestoration;
            
            private global::System.Data.DataColumn columnGroutDate;
            
            private global::System.Data.DataColumn columnJLiner;
            
            private global::System.Data.DataColumn columnRehabAssessment;
            
            private global::System.Data.DataColumn columnEstimatedJoints;
            
            private global::System.Data.DataColumn columnJointsTestSealed;
            
            private global::System.Data.DataColumn columnPreFlushDate;
            
            private global::System.Data.DataColumn columnPreVideoDate;
            
            private global::System.Data.DataColumn columnUSMHMN;
            
            private global::System.Data.DataColumn columnDSMHMN;
            
            private global::System.Data.DataColumn columnUSMHDepth;
            
            private global::System.Data.DataColumn columnDSMHDepth;
            
            private global::System.Data.DataColumn columnMeasurementsTakenBy;
            
            private global::System.Data.DataColumn columnSteelTapeThruPipe;
            
            private global::System.Data.DataColumn columnUSMHAtMouth1200;
            
            private global::System.Data.DataColumn columnUSMHAtMouth100;
            
            private global::System.Data.DataColumn columnUSMHAtMouth200;
            
            private global::System.Data.DataColumn columnUSMHAtMouth300;
            
            private global::System.Data.DataColumn columnUSMHAtMouth400;
            
            private global::System.Data.DataColumn columnUSMHAtMouth500;
            
            private global::System.Data.DataColumn columnDSMHAtMouth1200;
            
            private global::System.Data.DataColumn columnDSMHAtMouth100;
            
            private global::System.Data.DataColumn columnDSMHAtMouth200;
            
            private global::System.Data.DataColumn columnDSMHAtMouth300;
            
            private global::System.Data.DataColumn columnDSMHAtMouth400;
            
            private global::System.Data.DataColumn columnDSMHAtMouth500;
            
            private global::System.Data.DataColumn columnHydrantAddress;
            
            private global::System.Data.DataColumn columnDistanceToInversionMH;
            
            private global::System.Data.DataColumn columnRampsRequired;
            
            private global::System.Data.DataColumn columnDegreeOfTrafficControl;
            
            private global::System.Data.DataColumn columnStandarBypass;
            
            private global::System.Data.DataColumn columnHydroWireDetails;
            
            private global::System.Data.DataColumn columnPipeMaterialType;
            
            private global::System.Data.DataColumn columnCappedLaterals;
            
            private global::System.Data.DataColumn columnRoboticPrepRequired;
            
            private global::System.Data.DataColumn columnPipeSizeChange;
            
            private global::System.Data.DataColumn columnM1Comments;
            
            private global::System.Data.DataColumn columnVideoDoneFrom;
            
            private global::System.Data.DataColumn columnToManhole;
            
            private global::System.Data.DataColumn columnCutterDescriptionDuringMeasuring;
            
            private global::System.Data.DataColumn columnFullLengthPointLiner;
            
            private global::System.Data.DataColumn columnBypassRequired;
            
            private global::System.Data.DataColumn columnRoboticDistances;
            
            private global::System.Data.DataColumn columnTrafficControlDetails;
            
            private global::System.Data.DataColumn columnLineWithID;
            
            private global::System.Data.DataColumn columnSchoolZone;
            
            private global::System.Data.DataColumn columnRestaurantArea;
            
            private global::System.Data.DataColumn columnCarwashLaundromat;
            
            private global::System.Data.DataColumn columnHydroPulley;
            
            private global::System.Data.DataColumn columnFridgeCart;
            
            private global::System.Data.DataColumn columnTwoInchPump;
            
            private global::System.Data.DataColumn columnSixInchBypass;
            
            private global::System.Data.DataColumn columnScaffolding;
            
            private global::System.Data.DataColumn columnWinchExtension;
            
            private global::System.Data.DataColumn columnExtraGenerator;
            
            private global::System.Data.DataColumn columnGreyCableExtension;
            
            private global::System.Data.DataColumn columnEasementMats;
            
            private global::System.Data.DataColumn columnMeasurementType;
            
            private global::System.Data.DataColumn columnDropPipe;
            
            private global::System.Data.DataColumn columnDropPipeInvertDepth;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnMeasuredFromManhole;
            
            private global::System.Data.DataColumn columnMainLined;
            
            private global::System.Data.DataColumn columnBenchingIssue;
            
            private global::System.Data.DataColumn columnArchived;
            
            private global::System.Data.DataColumn columnHistory;
            
            private global::System.Data.DataColumn columnNumLats;
            
            private global::System.Data.DataColumn columnNotLinedYet;
            
            private global::System.Data.DataColumn columnAllMeasured;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnProvState;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREADataTable() {
                this.TableName = "LFS_MASTER_AREA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_MASTER_AREADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_MASTER_AREADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordIDColumn {
                get {
                    return this.columnRecordID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANIES_IDColumn {
                get {
                    return this.columnCOMPANIES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubAreaColumn {
                get {
                    return this.columnSubArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHColumn {
                get {
                    return this.columnUSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHColumn {
                get {
                    return this.columnDSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Size_Column {
                get {
                    return this.columnSize_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScaledLengthColumn {
                get {
                    return this.columnScaledLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P1DateColumn {
                get {
                    return this.columnP1Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActualLengthColumn {
                get {
                    return this.columnActualLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LiveLatsColumn {
                get {
                    return this.columnLiveLats;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CXIsRemovedColumn {
                get {
                    return this.columnCXIsRemoved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M1DateColumn {
                get {
                    return this.columnM1Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M2DateColumn {
                get {
                    return this.columnM2Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallDateColumn {
                get {
                    return this.columnInstallDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinalVideoColumn {
                get {
                    return this.columnFinalVideo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueIdentifiedColumn {
                get {
                    return this.columnIssueIdentified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueResolvedColumn {
                get {
                    return this.columnIssueResolved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullLengthLiningColumn {
                get {
                    return this.columnFullLengthLining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubcontractorLiningColumn {
                get {
                    return this.columnSubcontractorLining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutOfScopeInAreaColumn {
                get {
                    return this.columnOutOfScopeInArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueGivenToBayCityColumn {
                get {
                    return this.columnIssueGivenToBayCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConfirmedSizeColumn {
                get {
                    return this.columnConfirmedSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallRateColumn {
                get {
                    return this.columnInstallRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeadlineDateColumn {
                get {
                    return this.columnDeadlineDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProposedLiningDateColumn {
                get {
                    return this.columnProposedLiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesIssueColumn {
                get {
                    return this.columnSalesIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LFSIssueColumn {
                get {
                    return this.columnLFSIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIssueColumn {
                get {
                    return this.columnClientIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvestigationIssueColumn {
                get {
                    return this.columnInvestigationIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PointLiningColumn {
                get {
                    return this.columnPointLining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroutingColumn {
                get {
                    return this.columnGrouting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralLiningColumn {
                get {
                    return this.columnLateralLining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VacExDateColumn {
                get {
                    return this.columnVacExDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PusherDateColumn {
                get {
                    return this.columnPusherDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerOrderedColumn {
                get {
                    return this.columnLinerOrdered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RestorationColumn {
                get {
                    return this.columnRestoration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroutDateColumn {
                get {
                    return this.columnGroutDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JLinerColumn {
                get {
                    return this.columnJLiner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RehabAssessmentColumn {
                get {
                    return this.columnRehabAssessment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimatedJointsColumn {
                get {
                    return this.columnEstimatedJoints;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JointsTestSealedColumn {
                get {
                    return this.columnJointsTestSealed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreFlushDateColumn {
                get {
                    return this.columnPreFlushDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreVideoDateColumn {
                get {
                    return this.columnPreVideoDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMNColumn {
                get {
                    return this.columnUSMHMN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMNColumn {
                get {
                    return this.columnDSMHMN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHDepthColumn {
                get {
                    return this.columnUSMHDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHDepthColumn {
                get {
                    return this.columnDSMHDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementsTakenByColumn {
                get {
                    return this.columnMeasurementsTakenBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SteelTapeThruPipeColumn {
                get {
                    return this.columnSteelTapeThruPipe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth1200Column {
                get {
                    return this.columnUSMHAtMouth1200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth100Column {
                get {
                    return this.columnUSMHAtMouth100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth200Column {
                get {
                    return this.columnUSMHAtMouth200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth300Column {
                get {
                    return this.columnUSMHAtMouth300;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth400Column {
                get {
                    return this.columnUSMHAtMouth400;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth500Column {
                get {
                    return this.columnUSMHAtMouth500;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth1200Column {
                get {
                    return this.columnDSMHAtMouth1200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth100Column {
                get {
                    return this.columnDSMHAtMouth100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth200Column {
                get {
                    return this.columnDSMHAtMouth200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth300Column {
                get {
                    return this.columnDSMHAtMouth300;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth400Column {
                get {
                    return this.columnDSMHAtMouth400;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth500Column {
                get {
                    return this.columnDSMHAtMouth500;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HydrantAddressColumn {
                get {
                    return this.columnHydrantAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceToInversionMHColumn {
                get {
                    return this.columnDistanceToInversionMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RampsRequiredColumn {
                get {
                    return this.columnRampsRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DegreeOfTrafficControlColumn {
                get {
                    return this.columnDegreeOfTrafficControl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandarBypassColumn {
                get {
                    return this.columnStandarBypass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HydroWireDetailsColumn {
                get {
                    return this.columnHydroWireDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PipeMaterialTypeColumn {
                get {
                    return this.columnPipeMaterialType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CappedLateralsColumn {
                get {
                    return this.columnCappedLaterals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoboticPrepRequiredColumn {
                get {
                    return this.columnRoboticPrepRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PipeSizeChangeColumn {
                get {
                    return this.columnPipeSizeChange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M1CommentsColumn {
                get {
                    return this.columnM1Comments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoDoneFromColumn {
                get {
                    return this.columnVideoDoneFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToManholeColumn {
                get {
                    return this.columnToManhole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CutterDescriptionDuringMeasuringColumn {
                get {
                    return this.columnCutterDescriptionDuringMeasuring;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullLengthPointLinerColumn {
                get {
                    return this.columnFullLengthPointLiner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BypassRequiredColumn {
                get {
                    return this.columnBypassRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoboticDistancesColumn {
                get {
                    return this.columnRoboticDistances;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrafficControlDetailsColumn {
                get {
                    return this.columnTrafficControlDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineWithIDColumn {
                get {
                    return this.columnLineWithID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchoolZoneColumn {
                get {
                    return this.columnSchoolZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RestaurantAreaColumn {
                get {
                    return this.columnRestaurantArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarwashLaundromatColumn {
                get {
                    return this.columnCarwashLaundromat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HydroPulleyColumn {
                get {
                    return this.columnHydroPulley;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FridgeCartColumn {
                get {
                    return this.columnFridgeCart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TwoInchPumpColumn {
                get {
                    return this.columnTwoInchPump;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SixInchBypassColumn {
                get {
                    return this.columnSixInchBypass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScaffoldingColumn {
                get {
                    return this.columnScaffolding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WinchExtensionColumn {
                get {
                    return this.columnWinchExtension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraGeneratorColumn {
                get {
                    return this.columnExtraGenerator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GreyCableExtensionColumn {
                get {
                    return this.columnGreyCableExtension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EasementMatsColumn {
                get {
                    return this.columnEasementMats;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementTypeColumn {
                get {
                    return this.columnMeasurementType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DropPipeColumn {
                get {
                    return this.columnDropPipe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DropPipeInvertDepthColumn {
                get {
                    return this.columnDropPipeInvertDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasuredFromManholeColumn {
                get {
                    return this.columnMeasuredFromManhole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MainLinedColumn {
                get {
                    return this.columnMainLined;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BenchingIssueColumn {
                get {
                    return this.columnBenchingIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArchivedColumn {
                get {
                    return this.columnArchived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryColumn {
                get {
                    return this.columnHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumLatsColumn {
                get {
                    return this.columnNumLats;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotLinedYetColumn {
                get {
                    return this.columnNotLinedYet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllMeasuredColumn {
                get {
                    return this.columnAllMeasured;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProvStateColumn {
                get {
                    return this.columnProvState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREARow this[int index] {
                get {
                    return ((LFS_MASTER_AREARow)(this.Rows[index]));
                }
            }
            
            public event LFS_MASTER_AREARowChangeEventHandler LFS_MASTER_AREARowChanging;
            
            public event LFS_MASTER_AREARowChangeEventHandler LFS_MASTER_AREARowChanged;
            
            public event LFS_MASTER_AREARowChangeEventHandler LFS_MASTER_AREARowDeleting;
            
            public event LFS_MASTER_AREARowChangeEventHandler LFS_MASTER_AREARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_MASTER_AREARow(LFS_MASTER_AREARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREARow AddLFS_MASTER_AREARow(
                        System.Guid ID, 
                        int COMPANY_ID, 
                        string RecordID, 
                        string ClientID, 
                        int COMPANIES_ID, 
                        string SubArea, 
                        string Street, 
                        string USMH, 
                        string DSMH, 
                        string Size_, 
                        string ScaledLength, 
                        System.DateTime P1Date, 
                        string ActualLength, 
                        double LiveLats, 
                        string CXIsRemoved, 
                        System.DateTime M1Date, 
                        System.DateTime M2Date, 
                        System.DateTime InstallDate, 
                        System.DateTime FinalVideo, 
                        string Comments, 
                        bool IssueIdentified, 
                        bool IssueResolved, 
                        bool FullLengthLining, 
                        bool SubcontractorLining, 
                        bool OutOfScopeInArea, 
                        bool IssueGivenToBayCity, 
                        int ConfirmedSize, 
                        decimal InstallRate, 
                        System.DateTime DeadlineDate, 
                        System.DateTime ProposedLiningDate, 
                        bool SalesIssue, 
                        bool LFSIssue, 
                        bool ClientIssue, 
                        bool InvestigationIssue, 
                        bool PointLining, 
                        bool Grouting, 
                        bool LateralLining, 
                        System.DateTime VacExDate, 
                        System.DateTime PusherDate, 
                        System.DateTime LinerOrdered, 
                        System.DateTime Restoration, 
                        System.DateTime GroutDate, 
                        bool JLiner, 
                        bool RehabAssessment, 
                        int EstimatedJoints, 
                        int JointsTestSealed, 
                        System.DateTime PreFlushDate, 
                        System.DateTime PreVideoDate, 
                        string USMHMN, 
                        string DSMHMN, 
                        string USMHDepth, 
                        string DSMHDepth, 
                        string MeasurementsTakenBy, 
                        string SteelTapeThruPipe, 
                        double USMHAtMouth1200, 
                        double USMHAtMouth100, 
                        double USMHAtMouth200, 
                        double USMHAtMouth300, 
                        double USMHAtMouth400, 
                        double USMHAtMouth500, 
                        double DSMHAtMouth1200, 
                        double DSMHAtMouth100, 
                        double DSMHAtMouth200, 
                        double DSMHAtMouth300, 
                        double DSMHAtMouth400, 
                        double DSMHAtMouth500, 
                        string HydrantAddress, 
                        string DistanceToInversionMH, 
                        bool RampsRequired, 
                        string DegreeOfTrafficControl, 
                        bool StandarBypass, 
                        string HydroWireDetails, 
                        string PipeMaterialType, 
                        int CappedLaterals, 
                        bool RoboticPrepRequired, 
                        bool PipeSizeChange, 
                        string M1Comments, 
                        string VideoDoneFrom, 
                        string ToManhole, 
                        string CutterDescriptionDuringMeasuring, 
                        bool FullLengthPointLiner, 
                        bool BypassRequired, 
                        string RoboticDistances, 
                        string TrafficControlDetails, 
                        string LineWithID, 
                        bool SchoolZone, 
                        bool RestaurantArea, 
                        bool CarwashLaundromat, 
                        bool HydroPulley, 
                        bool FridgeCart, 
                        bool TwoInchPump, 
                        bool SixInchBypass, 
                        bool Scaffolding, 
                        bool WinchExtension, 
                        bool ExtraGenerator, 
                        bool GreyCableExtension, 
                        bool EasementMats, 
                        string MeasurementType, 
                        bool DropPipe, 
                        string DropPipeInvertDepth, 
                        bool Deleted, 
                        string MeasuredFromManhole, 
                        string MainLined, 
                        string BenchingIssue, 
                        bool Archived, 
                        string History, 
                        int NumLats, 
                        int NotLinedYet, 
                        bool AllMeasured, 
                        string City, 
                        string ProvState) {
                LFS_MASTER_AREARow rowLFS_MASTER_AREARow = ((LFS_MASTER_AREARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        COMPANY_ID,
                        RecordID,
                        ClientID,
                        COMPANIES_ID,
                        SubArea,
                        Street,
                        USMH,
                        DSMH,
                        Size_,
                        ScaledLength,
                        P1Date,
                        ActualLength,
                        LiveLats,
                        CXIsRemoved,
                        M1Date,
                        M2Date,
                        InstallDate,
                        FinalVideo,
                        Comments,
                        IssueIdentified,
                        IssueResolved,
                        FullLengthLining,
                        SubcontractorLining,
                        OutOfScopeInArea,
                        IssueGivenToBayCity,
                        ConfirmedSize,
                        InstallRate,
                        DeadlineDate,
                        ProposedLiningDate,
                        SalesIssue,
                        LFSIssue,
                        ClientIssue,
                        InvestigationIssue,
                        PointLining,
                        Grouting,
                        LateralLining,
                        VacExDate,
                        PusherDate,
                        LinerOrdered,
                        Restoration,
                        GroutDate,
                        JLiner,
                        RehabAssessment,
                        EstimatedJoints,
                        JointsTestSealed,
                        PreFlushDate,
                        PreVideoDate,
                        USMHMN,
                        DSMHMN,
                        USMHDepth,
                        DSMHDepth,
                        MeasurementsTakenBy,
                        SteelTapeThruPipe,
                        USMHAtMouth1200,
                        USMHAtMouth100,
                        USMHAtMouth200,
                        USMHAtMouth300,
                        USMHAtMouth400,
                        USMHAtMouth500,
                        DSMHAtMouth1200,
                        DSMHAtMouth100,
                        DSMHAtMouth200,
                        DSMHAtMouth300,
                        DSMHAtMouth400,
                        DSMHAtMouth500,
                        HydrantAddress,
                        DistanceToInversionMH,
                        RampsRequired,
                        DegreeOfTrafficControl,
                        StandarBypass,
                        HydroWireDetails,
                        PipeMaterialType,
                        CappedLaterals,
                        RoboticPrepRequired,
                        PipeSizeChange,
                        M1Comments,
                        VideoDoneFrom,
                        ToManhole,
                        CutterDescriptionDuringMeasuring,
                        FullLengthPointLiner,
                        BypassRequired,
                        RoboticDistances,
                        TrafficControlDetails,
                        LineWithID,
                        SchoolZone,
                        RestaurantArea,
                        CarwashLaundromat,
                        HydroPulley,
                        FridgeCart,
                        TwoInchPump,
                        SixInchBypass,
                        Scaffolding,
                        WinchExtension,
                        ExtraGenerator,
                        GreyCableExtension,
                        EasementMats,
                        MeasurementType,
                        DropPipe,
                        DropPipeInvertDepth,
                        Deleted,
                        MeasuredFromManhole,
                        MainLined,
                        BenchingIssue,
                        Archived,
                        History,
                        NumLats,
                        NotLinedYet,
                        AllMeasured,
                        City,
                        ProvState};
                rowLFS_MASTER_AREARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_MASTER_AREARow);
                return rowLFS_MASTER_AREARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREARow FindByIDCOMPANY_ID(System.Guid ID, int COMPANY_ID) {
                return ((LFS_MASTER_AREARow)(this.Rows.Find(new object[] {
                            ID,
                            COMPANY_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_MASTER_AREADataTable cln = ((LFS_MASTER_AREADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_MASTER_AREADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnRecordID = base.Columns["RecordID"];
                this.columnClientID = base.Columns["ClientID"];
                this.columnCOMPANIES_ID = base.Columns["COMPANIES_ID"];
                this.columnSubArea = base.Columns["SubArea"];
                this.columnStreet = base.Columns["Street"];
                this.columnUSMH = base.Columns["USMH"];
                this.columnDSMH = base.Columns["DSMH"];
                this.columnSize_ = base.Columns["Size_"];
                this.columnScaledLength = base.Columns["ScaledLength"];
                this.columnP1Date = base.Columns["P1Date"];
                this.columnActualLength = base.Columns["ActualLength"];
                this.columnLiveLats = base.Columns["LiveLats"];
                this.columnCXIsRemoved = base.Columns["CXIsRemoved"];
                this.columnM1Date = base.Columns["M1Date"];
                this.columnM2Date = base.Columns["M2Date"];
                this.columnInstallDate = base.Columns["InstallDate"];
                this.columnFinalVideo = base.Columns["FinalVideo"];
                this.columnComments = base.Columns["Comments"];
                this.columnIssueIdentified = base.Columns["IssueIdentified"];
                this.columnIssueResolved = base.Columns["IssueResolved"];
                this.columnFullLengthLining = base.Columns["FullLengthLining"];
                this.columnSubcontractorLining = base.Columns["SubcontractorLining"];
                this.columnOutOfScopeInArea = base.Columns["OutOfScopeInArea"];
                this.columnIssueGivenToBayCity = base.Columns["IssueGivenToBayCity"];
                this.columnConfirmedSize = base.Columns["ConfirmedSize"];
                this.columnInstallRate = base.Columns["InstallRate"];
                this.columnDeadlineDate = base.Columns["DeadlineDate"];
                this.columnProposedLiningDate = base.Columns["ProposedLiningDate"];
                this.columnSalesIssue = base.Columns["SalesIssue"];
                this.columnLFSIssue = base.Columns["LFSIssue"];
                this.columnClientIssue = base.Columns["ClientIssue"];
                this.columnInvestigationIssue = base.Columns["InvestigationIssue"];
                this.columnPointLining = base.Columns["PointLining"];
                this.columnGrouting = base.Columns["Grouting"];
                this.columnLateralLining = base.Columns["LateralLining"];
                this.columnVacExDate = base.Columns["VacExDate"];
                this.columnPusherDate = base.Columns["PusherDate"];
                this.columnLinerOrdered = base.Columns["LinerOrdered"];
                this.columnRestoration = base.Columns["Restoration"];
                this.columnGroutDate = base.Columns["GroutDate"];
                this.columnJLiner = base.Columns["JLiner"];
                this.columnRehabAssessment = base.Columns["RehabAssessment"];
                this.columnEstimatedJoints = base.Columns["EstimatedJoints"];
                this.columnJointsTestSealed = base.Columns["JointsTestSealed"];
                this.columnPreFlushDate = base.Columns["PreFlushDate"];
                this.columnPreVideoDate = base.Columns["PreVideoDate"];
                this.columnUSMHMN = base.Columns["USMHMN"];
                this.columnDSMHMN = base.Columns["DSMHMN"];
                this.columnUSMHDepth = base.Columns["USMHDepth"];
                this.columnDSMHDepth = base.Columns["DSMHDepth"];
                this.columnMeasurementsTakenBy = base.Columns["MeasurementsTakenBy"];
                this.columnSteelTapeThruPipe = base.Columns["SteelTapeThruPipe"];
                this.columnUSMHAtMouth1200 = base.Columns["USMHAtMouth1200"];
                this.columnUSMHAtMouth100 = base.Columns["USMHAtMouth100"];
                this.columnUSMHAtMouth200 = base.Columns["USMHAtMouth200"];
                this.columnUSMHAtMouth300 = base.Columns["USMHAtMouth300"];
                this.columnUSMHAtMouth400 = base.Columns["USMHAtMouth400"];
                this.columnUSMHAtMouth500 = base.Columns["USMHAtMouth500"];
                this.columnDSMHAtMouth1200 = base.Columns["DSMHAtMouth1200"];
                this.columnDSMHAtMouth100 = base.Columns["DSMHAtMouth100"];
                this.columnDSMHAtMouth200 = base.Columns["DSMHAtMouth200"];
                this.columnDSMHAtMouth300 = base.Columns["DSMHAtMouth300"];
                this.columnDSMHAtMouth400 = base.Columns["DSMHAtMouth400"];
                this.columnDSMHAtMouth500 = base.Columns["DSMHAtMouth500"];
                this.columnHydrantAddress = base.Columns["HydrantAddress"];
                this.columnDistanceToInversionMH = base.Columns["DistanceToInversionMH"];
                this.columnRampsRequired = base.Columns["RampsRequired"];
                this.columnDegreeOfTrafficControl = base.Columns["DegreeOfTrafficControl"];
                this.columnStandarBypass = base.Columns["StandarBypass"];
                this.columnHydroWireDetails = base.Columns["HydroWireDetails"];
                this.columnPipeMaterialType = base.Columns["PipeMaterialType"];
                this.columnCappedLaterals = base.Columns["CappedLaterals"];
                this.columnRoboticPrepRequired = base.Columns["RoboticPrepRequired"];
                this.columnPipeSizeChange = base.Columns["PipeSizeChange"];
                this.columnM1Comments = base.Columns["M1Comments"];
                this.columnVideoDoneFrom = base.Columns["VideoDoneFrom"];
                this.columnToManhole = base.Columns["ToManhole"];
                this.columnCutterDescriptionDuringMeasuring = base.Columns["CutterDescriptionDuringMeasuring"];
                this.columnFullLengthPointLiner = base.Columns["FullLengthPointLiner"];
                this.columnBypassRequired = base.Columns["BypassRequired"];
                this.columnRoboticDistances = base.Columns["RoboticDistances"];
                this.columnTrafficControlDetails = base.Columns["TrafficControlDetails"];
                this.columnLineWithID = base.Columns["LineWithID"];
                this.columnSchoolZone = base.Columns["SchoolZone"];
                this.columnRestaurantArea = base.Columns["RestaurantArea"];
                this.columnCarwashLaundromat = base.Columns["CarwashLaundromat"];
                this.columnHydroPulley = base.Columns["HydroPulley"];
                this.columnFridgeCart = base.Columns["FridgeCart"];
                this.columnTwoInchPump = base.Columns["TwoInchPump"];
                this.columnSixInchBypass = base.Columns["SixInchBypass"];
                this.columnScaffolding = base.Columns["Scaffolding"];
                this.columnWinchExtension = base.Columns["WinchExtension"];
                this.columnExtraGenerator = base.Columns["ExtraGenerator"];
                this.columnGreyCableExtension = base.Columns["GreyCableExtension"];
                this.columnEasementMats = base.Columns["EasementMats"];
                this.columnMeasurementType = base.Columns["MeasurementType"];
                this.columnDropPipe = base.Columns["DropPipe"];
                this.columnDropPipeInvertDepth = base.Columns["DropPipeInvertDepth"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnMeasuredFromManhole = base.Columns["MeasuredFromManhole"];
                this.columnMainLined = base.Columns["MainLined"];
                this.columnBenchingIssue = base.Columns["BenchingIssue"];
                this.columnArchived = base.Columns["Archived"];
                this.columnHistory = base.Columns["History"];
                this.columnNumLats = base.Columns["NumLats"];
                this.columnNotLinedYet = base.Columns["NotLinedYet"];
                this.columnAllMeasured = base.Columns["AllMeasured"];
                this.columnCity = base.Columns["City"];
                this.columnProvState = base.Columns["ProvState"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnRecordID = new global::System.Data.DataColumn("RecordID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordID);
                this.columnClientID = new global::System.Data.DataColumn("ClientID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnCOMPANIES_ID = new global::System.Data.DataColumn("COMPANIES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANIES_ID);
                this.columnSubArea = new global::System.Data.DataColumn("SubArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubArea);
                this.columnStreet = new global::System.Data.DataColumn("Street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnUSMH = new global::System.Data.DataColumn("USMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMH);
                this.columnDSMH = new global::System.Data.DataColumn("DSMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMH);
                this.columnSize_ = new global::System.Data.DataColumn("Size_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_);
                this.columnScaledLength = new global::System.Data.DataColumn("ScaledLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaledLength);
                this.columnP1Date = new global::System.Data.DataColumn("P1Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP1Date);
                this.columnActualLength = new global::System.Data.DataColumn("ActualLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualLength);
                this.columnLiveLats = new global::System.Data.DataColumn("LiveLats", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiveLats);
                this.columnCXIsRemoved = new global::System.Data.DataColumn("CXIsRemoved", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXIsRemoved);
                this.columnM1Date = new global::System.Data.DataColumn("M1Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM1Date);
                this.columnM2Date = new global::System.Data.DataColumn("M2Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM2Date);
                this.columnInstallDate = new global::System.Data.DataColumn("InstallDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallDate);
                this.columnFinalVideo = new global::System.Data.DataColumn("FinalVideo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalVideo);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnIssueIdentified = new global::System.Data.DataColumn("IssueIdentified", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueIdentified);
                this.columnIssueResolved = new global::System.Data.DataColumn("IssueResolved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueResolved);
                this.columnFullLengthLining = new global::System.Data.DataColumn("FullLengthLining", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullLengthLining);
                this.columnSubcontractorLining = new global::System.Data.DataColumn("SubcontractorLining", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubcontractorLining);
                this.columnOutOfScopeInArea = new global::System.Data.DataColumn("OutOfScopeInArea", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutOfScopeInArea);
                this.columnIssueGivenToBayCity = new global::System.Data.DataColumn("IssueGivenToBayCity", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueGivenToBayCity);
                this.columnConfirmedSize = new global::System.Data.DataColumn("ConfirmedSize", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmedSize);
                this.columnInstallRate = new global::System.Data.DataColumn("InstallRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallRate);
                this.columnDeadlineDate = new global::System.Data.DataColumn("DeadlineDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeadlineDate);
                this.columnProposedLiningDate = new global::System.Data.DataColumn("ProposedLiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProposedLiningDate);
                this.columnSalesIssue = new global::System.Data.DataColumn("SalesIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesIssue);
                this.columnLFSIssue = new global::System.Data.DataColumn("LFSIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLFSIssue);
                this.columnClientIssue = new global::System.Data.DataColumn("ClientIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientIssue);
                this.columnInvestigationIssue = new global::System.Data.DataColumn("InvestigationIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestigationIssue);
                this.columnPointLining = new global::System.Data.DataColumn("PointLining", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPointLining);
                this.columnGrouting = new global::System.Data.DataColumn("Grouting", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrouting);
                this.columnLateralLining = new global::System.Data.DataColumn("LateralLining", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralLining);
                this.columnVacExDate = new global::System.Data.DataColumn("VacExDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacExDate);
                this.columnPusherDate = new global::System.Data.DataColumn("PusherDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPusherDate);
                this.columnLinerOrdered = new global::System.Data.DataColumn("LinerOrdered", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerOrdered);
                this.columnRestoration = new global::System.Data.DataColumn("Restoration", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestoration);
                this.columnGroutDate = new global::System.Data.DataColumn("GroutDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroutDate);
                this.columnJLiner = new global::System.Data.DataColumn("JLiner", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJLiner);
                this.columnRehabAssessment = new global::System.Data.DataColumn("RehabAssessment", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRehabAssessment);
                this.columnEstimatedJoints = new global::System.Data.DataColumn("EstimatedJoints", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimatedJoints);
                this.columnJointsTestSealed = new global::System.Data.DataColumn("JointsTestSealed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJointsTestSealed);
                this.columnPreFlushDate = new global::System.Data.DataColumn("PreFlushDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreFlushDate);
                this.columnPreVideoDate = new global::System.Data.DataColumn("PreVideoDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreVideoDate);
                this.columnUSMHMN = new global::System.Data.DataColumn("USMHMN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMN);
                this.columnDSMHMN = new global::System.Data.DataColumn("DSMHMN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMN);
                this.columnUSMHDepth = new global::System.Data.DataColumn("USMHDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHDepth);
                this.columnDSMHDepth = new global::System.Data.DataColumn("DSMHDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHDepth);
                this.columnMeasurementsTakenBy = new global::System.Data.DataColumn("MeasurementsTakenBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementsTakenBy);
                this.columnSteelTapeThruPipe = new global::System.Data.DataColumn("SteelTapeThruPipe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSteelTapeThruPipe);
                this.columnUSMHAtMouth1200 = new global::System.Data.DataColumn("USMHAtMouth1200", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth1200);
                this.columnUSMHAtMouth100 = new global::System.Data.DataColumn("USMHAtMouth100", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth100);
                this.columnUSMHAtMouth200 = new global::System.Data.DataColumn("USMHAtMouth200", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth200);
                this.columnUSMHAtMouth300 = new global::System.Data.DataColumn("USMHAtMouth300", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth300);
                this.columnUSMHAtMouth400 = new global::System.Data.DataColumn("USMHAtMouth400", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth400);
                this.columnUSMHAtMouth500 = new global::System.Data.DataColumn("USMHAtMouth500", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth500);
                this.columnDSMHAtMouth1200 = new global::System.Data.DataColumn("DSMHAtMouth1200", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth1200);
                this.columnDSMHAtMouth100 = new global::System.Data.DataColumn("DSMHAtMouth100", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth100);
                this.columnDSMHAtMouth200 = new global::System.Data.DataColumn("DSMHAtMouth200", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth200);
                this.columnDSMHAtMouth300 = new global::System.Data.DataColumn("DSMHAtMouth300", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth300);
                this.columnDSMHAtMouth400 = new global::System.Data.DataColumn("DSMHAtMouth400", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth400);
                this.columnDSMHAtMouth500 = new global::System.Data.DataColumn("DSMHAtMouth500", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth500);
                this.columnHydrantAddress = new global::System.Data.DataColumn("HydrantAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydrantAddress);
                this.columnDistanceToInversionMH = new global::System.Data.DataColumn("DistanceToInversionMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceToInversionMH);
                this.columnRampsRequired = new global::System.Data.DataColumn("RampsRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRampsRequired);
                this.columnDegreeOfTrafficControl = new global::System.Data.DataColumn("DegreeOfTrafficControl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDegreeOfTrafficControl);
                this.columnStandarBypass = new global::System.Data.DataColumn("StandarBypass", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandarBypass);
                this.columnHydroWireDetails = new global::System.Data.DataColumn("HydroWireDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydroWireDetails);
                this.columnPipeMaterialType = new global::System.Data.DataColumn("PipeMaterialType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeMaterialType);
                this.columnCappedLaterals = new global::System.Data.DataColumn("CappedLaterals", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCappedLaterals);
                this.columnRoboticPrepRequired = new global::System.Data.DataColumn("RoboticPrepRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticPrepRequired);
                this.columnPipeSizeChange = new global::System.Data.DataColumn("PipeSizeChange", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeSizeChange);
                this.columnM1Comments = new global::System.Data.DataColumn("M1Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM1Comments);
                this.columnVideoDoneFrom = new global::System.Data.DataColumn("VideoDoneFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoDoneFrom);
                this.columnToManhole = new global::System.Data.DataColumn("ToManhole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToManhole);
                this.columnCutterDescriptionDuringMeasuring = new global::System.Data.DataColumn("CutterDescriptionDuringMeasuring", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCutterDescriptionDuringMeasuring);
                this.columnFullLengthPointLiner = new global::System.Data.DataColumn("FullLengthPointLiner", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullLengthPointLiner);
                this.columnBypassRequired = new global::System.Data.DataColumn("BypassRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBypassRequired);
                this.columnRoboticDistances = new global::System.Data.DataColumn("RoboticDistances", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticDistances);
                this.columnTrafficControlDetails = new global::System.Data.DataColumn("TrafficControlDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrafficControlDetails);
                this.columnLineWithID = new global::System.Data.DataColumn("LineWithID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineWithID);
                this.columnSchoolZone = new global::System.Data.DataColumn("SchoolZone", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchoolZone);
                this.columnRestaurantArea = new global::System.Data.DataColumn("RestaurantArea", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestaurantArea);
                this.columnCarwashLaundromat = new global::System.Data.DataColumn("CarwashLaundromat", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarwashLaundromat);
                this.columnHydroPulley = new global::System.Data.DataColumn("HydroPulley", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydroPulley);
                this.columnFridgeCart = new global::System.Data.DataColumn("FridgeCart", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFridgeCart);
                this.columnTwoInchPump = new global::System.Data.DataColumn("TwoInchPump", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTwoInchPump);
                this.columnSixInchBypass = new global::System.Data.DataColumn("SixInchBypass", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSixInchBypass);
                this.columnScaffolding = new global::System.Data.DataColumn("Scaffolding", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffolding);
                this.columnWinchExtension = new global::System.Data.DataColumn("WinchExtension", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWinchExtension);
                this.columnExtraGenerator = new global::System.Data.DataColumn("ExtraGenerator", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraGenerator);
                this.columnGreyCableExtension = new global::System.Data.DataColumn("GreyCableExtension", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGreyCableExtension);
                this.columnEasementMats = new global::System.Data.DataColumn("EasementMats", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEasementMats);
                this.columnMeasurementType = new global::System.Data.DataColumn("MeasurementType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementType);
                this.columnDropPipe = new global::System.Data.DataColumn("DropPipe", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropPipe);
                this.columnDropPipeInvertDepth = new global::System.Data.DataColumn("DropPipeInvertDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropPipeInvertDepth);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnMeasuredFromManhole = new global::System.Data.DataColumn("MeasuredFromManhole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasuredFromManhole);
                this.columnMainLined = new global::System.Data.DataColumn("MainLined", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainLined);
                this.columnBenchingIssue = new global::System.Data.DataColumn("BenchingIssue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenchingIssue);
                this.columnArchived = new global::System.Data.DataColumn("Archived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchived);
                this.columnHistory = new global::System.Data.DataColumn("History", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistory);
                this.columnNumLats = new global::System.Data.DataColumn("NumLats", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumLats);
                this.columnNotLinedYet = new global::System.Data.DataColumn("NotLinedYet", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotLinedYet);
                this.columnAllMeasured = new global::System.Data.DataColumn("AllMeasured", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllMeasured);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnProvState = new global::System.Data.DataColumn("ProvState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvState);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("TDSLFSRecordForRCTKey1", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnCOMPANY_ID}, true));
                this.columnID.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnRecordID.AllowDBNull = false;
                this.columnCity.MaxLength = 50;
                this.columnProvState.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREARow NewLFS_MASTER_AREARow() {
                return ((LFS_MASTER_AREARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_MASTER_AREARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_MASTER_AREARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_MASTER_AREARowChanged != null)) {
                    this.LFS_MASTER_AREARowChanged(this, new LFS_MASTER_AREARowChangeEvent(((LFS_MASTER_AREARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_MASTER_AREARowChanging != null)) {
                    this.LFS_MASTER_AREARowChanging(this, new LFS_MASTER_AREARowChangeEvent(((LFS_MASTER_AREARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_MASTER_AREARowDeleted != null)) {
                    this.LFS_MASTER_AREARowDeleted(this, new LFS_MASTER_AREARowChangeEvent(((LFS_MASTER_AREARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_MASTER_AREARowDeleting != null)) {
                    this.LFS_MASTER_AREARowDeleting(this, new LFS_MASTER_AREARowChangeEvent(((LFS_MASTER_AREARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_MASTER_AREARow(LFS_MASTER_AREARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TDSLFSRecordForRCT ds = new TDSLFSRecordForRCT();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_MASTER_AREADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_POINT_REPAIRSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnDetailID;
            
            private global::System.Data.DataColumn columnRepairSize;
            
            private global::System.Data.DataColumn columnInstallDate;
            
            private global::System.Data.DataColumn columnDistance;
            
            private global::System.Data.DataColumn columnCost;
            
            private global::System.Data.DataColumn columnReinstates;
            
            private global::System.Data.DataColumn columnLTAtMH;
            
            private global::System.Data.DataColumn columnVTAtMH;
            
            private global::System.Data.DataColumn columnLinerDistance;
            
            private global::System.Data.DataColumn columnDirection;
            
            private global::System.Data.DataColumn columnMHShot;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnExtraRepair;
            
            private global::System.Data.DataColumn columnCancelled;
            
            private global::System.Data.DataColumn columnApproved;
            
            private global::System.Data.DataColumn columnNotApproved;
            
            private global::System.Data.DataColumn columnArchived;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRSDataTable() {
                this.TableName = "LFS_POINT_REPAIRS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_POINT_REPAIRSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_POINT_REPAIRSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailIDColumn {
                get {
                    return this.columnDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RepairSizeColumn {
                get {
                    return this.columnRepairSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallDateColumn {
                get {
                    return this.columnInstallDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceColumn {
                get {
                    return this.columnDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostColumn {
                get {
                    return this.columnCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReinstatesColumn {
                get {
                    return this.columnReinstates;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LTAtMHColumn {
                get {
                    return this.columnLTAtMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VTAtMHColumn {
                get {
                    return this.columnVTAtMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerDistanceColumn {
                get {
                    return this.columnLinerDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DirectionColumn {
                get {
                    return this.columnDirection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MHShotColumn {
                get {
                    return this.columnMHShot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraRepairColumn {
                get {
                    return this.columnExtraRepair;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CancelledColumn {
                get {
                    return this.columnCancelled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApprovedColumn {
                get {
                    return this.columnApproved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotApprovedColumn {
                get {
                    return this.columnNotApproved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArchivedColumn {
                get {
                    return this.columnArchived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRSRow this[int index] {
                get {
                    return ((LFS_POINT_REPAIRSRow)(this.Rows[index]));
                }
            }
            
            public event LFS_POINT_REPAIRSRowChangeEventHandler LFS_POINT_REPAIRSRowChanging;
            
            public event LFS_POINT_REPAIRSRowChangeEventHandler LFS_POINT_REPAIRSRowChanged;
            
            public event LFS_POINT_REPAIRSRowChangeEventHandler LFS_POINT_REPAIRSRowDeleting;
            
            public event LFS_POINT_REPAIRSRowChangeEventHandler LFS_POINT_REPAIRSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_POINT_REPAIRSRow(LFS_POINT_REPAIRSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRSRow AddLFS_POINT_REPAIRSRow(
                        System.Guid ID, 
                        int RefID, 
                        int COMPANY_ID, 
                        string DetailID, 
                        string RepairSize, 
                        System.DateTime InstallDate, 
                        string Distance, 
                        decimal Cost, 
                        int Reinstates, 
                        string LTAtMH, 
                        string VTAtMH, 
                        string LinerDistance, 
                        string Direction, 
                        string MHShot, 
                        string Comments, 
                        bool Deleted, 
                        bool ExtraRepair, 
                        bool Cancelled, 
                        bool Approved, 
                        bool NotApproved, 
                        bool Archived) {
                LFS_POINT_REPAIRSRow rowLFS_POINT_REPAIRSRow = ((LFS_POINT_REPAIRSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        RefID,
                        COMPANY_ID,
                        DetailID,
                        RepairSize,
                        InstallDate,
                        Distance,
                        Cost,
                        Reinstates,
                        LTAtMH,
                        VTAtMH,
                        LinerDistance,
                        Direction,
                        MHShot,
                        Comments,
                        Deleted,
                        ExtraRepair,
                        Cancelled,
                        Approved,
                        NotApproved,
                        Archived};
                rowLFS_POINT_REPAIRSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_POINT_REPAIRSRow);
                return rowLFS_POINT_REPAIRSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRSRow FindByIDRefIDCOMPANY_ID(System.Guid ID, int RefID, int COMPANY_ID) {
                return ((LFS_POINT_REPAIRSRow)(this.Rows.Find(new object[] {
                            ID,
                            RefID,
                            COMPANY_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_POINT_REPAIRSDataTable cln = ((LFS_POINT_REPAIRSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_POINT_REPAIRSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnDetailID = base.Columns["DetailID"];
                this.columnRepairSize = base.Columns["RepairSize"];
                this.columnInstallDate = base.Columns["InstallDate"];
                this.columnDistance = base.Columns["Distance"];
                this.columnCost = base.Columns["Cost"];
                this.columnReinstates = base.Columns["Reinstates"];
                this.columnLTAtMH = base.Columns["LTAtMH"];
                this.columnVTAtMH = base.Columns["VTAtMH"];
                this.columnLinerDistance = base.Columns["LinerDistance"];
                this.columnDirection = base.Columns["Direction"];
                this.columnMHShot = base.Columns["MHShot"];
                this.columnComments = base.Columns["Comments"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnExtraRepair = base.Columns["ExtraRepair"];
                this.columnCancelled = base.Columns["Cancelled"];
                this.columnApproved = base.Columns["Approved"];
                this.columnNotApproved = base.Columns["NotApproved"];
                this.columnArchived = base.Columns["Archived"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnDetailID = new global::System.Data.DataColumn("DetailID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailID);
                this.columnRepairSize = new global::System.Data.DataColumn("RepairSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepairSize);
                this.columnInstallDate = new global::System.Data.DataColumn("InstallDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallDate);
                this.columnDistance = new global::System.Data.DataColumn("Distance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistance);
                this.columnCost = new global::System.Data.DataColumn("Cost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCost);
                this.columnReinstates = new global::System.Data.DataColumn("Reinstates", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReinstates);
                this.columnLTAtMH = new global::System.Data.DataColumn("LTAtMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLTAtMH);
                this.columnVTAtMH = new global::System.Data.DataColumn("VTAtMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVTAtMH);
                this.columnLinerDistance = new global::System.Data.DataColumn("LinerDistance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerDistance);
                this.columnDirection = new global::System.Data.DataColumn("Direction", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirection);
                this.columnMHShot = new global::System.Data.DataColumn("MHShot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMHShot);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnExtraRepair = new global::System.Data.DataColumn("ExtraRepair", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraRepair);
                this.columnCancelled = new global::System.Data.DataColumn("Cancelled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancelled);
                this.columnApproved = new global::System.Data.DataColumn("Approved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApproved);
                this.columnNotApproved = new global::System.Data.DataColumn("NotApproved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotApproved);
                this.columnArchived = new global::System.Data.DataColumn("Archived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchived);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("TDSLFSRecordForRCTKey2", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnRefID,
                                this.columnCOMPANY_ID}, true));
                this.columnID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnDetailID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRSRow NewLFS_POINT_REPAIRSRow() {
                return ((LFS_POINT_REPAIRSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_POINT_REPAIRSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_POINT_REPAIRSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_POINT_REPAIRSRowChanged != null)) {
                    this.LFS_POINT_REPAIRSRowChanged(this, new LFS_POINT_REPAIRSRowChangeEvent(((LFS_POINT_REPAIRSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_POINT_REPAIRSRowChanging != null)) {
                    this.LFS_POINT_REPAIRSRowChanging(this, new LFS_POINT_REPAIRSRowChangeEvent(((LFS_POINT_REPAIRSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_POINT_REPAIRSRowDeleted != null)) {
                    this.LFS_POINT_REPAIRSRowDeleted(this, new LFS_POINT_REPAIRSRowChangeEvent(((LFS_POINT_REPAIRSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_POINT_REPAIRSRowDeleting != null)) {
                    this.LFS_POINT_REPAIRSRowDeleting(this, new LFS_POINT_REPAIRSRowChangeEvent(((LFS_POINT_REPAIRSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_POINT_REPAIRSRow(LFS_POINT_REPAIRSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TDSLFSRecordForRCT ds = new TDSLFSRecordForRCT();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_POINT_REPAIRSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_M2_TABLESDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnVideoDistance;
            
            private global::System.Data.DataColumn columnClockPosition;
            
            private global::System.Data.DataColumn columnLiveOrAbandoned;
            
            private global::System.Data.DataColumn columnDistanceToCentreOfLateral;
            
            private global::System.Data.DataColumn columnLateralDiameter;
            
            private global::System.Data.DataColumn columnLateralType;
            
            private global::System.Data.DataColumn columnDateTimeOpened;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnReverseSetup;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnArchived;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLESDataTable() {
                this.TableName = "LFS_M2_TABLES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_M2_TABLESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_M2_TABLESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoDistanceColumn {
                get {
                    return this.columnVideoDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClockPositionColumn {
                get {
                    return this.columnClockPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LiveOrAbandonedColumn {
                get {
                    return this.columnLiveOrAbandoned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceToCentreOfLateralColumn {
                get {
                    return this.columnDistanceToCentreOfLateral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralDiameterColumn {
                get {
                    return this.columnLateralDiameter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralTypeColumn {
                get {
                    return this.columnLateralType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeOpenedColumn {
                get {
                    return this.columnDateTimeOpened;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReverseSetupColumn {
                get {
                    return this.columnReverseSetup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArchivedColumn {
                get {
                    return this.columnArchived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLESRow this[int index] {
                get {
                    return ((LFS_M2_TABLESRow)(this.Rows[index]));
                }
            }
            
            public event LFS_M2_TABLESRowChangeEventHandler LFS_M2_TABLESRowChanging;
            
            public event LFS_M2_TABLESRowChangeEventHandler LFS_M2_TABLESRowChanged;
            
            public event LFS_M2_TABLESRowChangeEventHandler LFS_M2_TABLESRowDeleting;
            
            public event LFS_M2_TABLESRowChangeEventHandler LFS_M2_TABLESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_M2_TABLESRow(LFS_M2_TABLESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLESRow AddLFS_M2_TABLESRow(System.Guid ID, int RefID, int COMPANY_ID, float VideoDistance, string ClockPosition, string LiveOrAbandoned, string DistanceToCentreOfLateral, string LateralDiameter, string LateralType, string DateTimeOpened, string Comments, string ReverseSetup, bool Deleted, bool Archived) {
                LFS_M2_TABLESRow rowLFS_M2_TABLESRow = ((LFS_M2_TABLESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        RefID,
                        COMPANY_ID,
                        VideoDistance,
                        ClockPosition,
                        LiveOrAbandoned,
                        DistanceToCentreOfLateral,
                        LateralDiameter,
                        LateralType,
                        DateTimeOpened,
                        Comments,
                        ReverseSetup,
                        Deleted,
                        Archived};
                rowLFS_M2_TABLESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_M2_TABLESRow);
                return rowLFS_M2_TABLESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLESRow FindByIDRefIDCOMPANY_ID(System.Guid ID, int RefID, int COMPANY_ID) {
                return ((LFS_M2_TABLESRow)(this.Rows.Find(new object[] {
                            ID,
                            RefID,
                            COMPANY_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_M2_TABLESDataTable cln = ((LFS_M2_TABLESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_M2_TABLESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnVideoDistance = base.Columns["VideoDistance"];
                this.columnClockPosition = base.Columns["ClockPosition"];
                this.columnLiveOrAbandoned = base.Columns["LiveOrAbandoned"];
                this.columnDistanceToCentreOfLateral = base.Columns["DistanceToCentreOfLateral"];
                this.columnLateralDiameter = base.Columns["LateralDiameter"];
                this.columnLateralType = base.Columns["LateralType"];
                this.columnDateTimeOpened = base.Columns["DateTimeOpened"];
                this.columnComments = base.Columns["Comments"];
                this.columnReverseSetup = base.Columns["ReverseSetup"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnArchived = base.Columns["Archived"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnVideoDistance = new global::System.Data.DataColumn("VideoDistance", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoDistance);
                this.columnClockPosition = new global::System.Data.DataColumn("ClockPosition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClockPosition);
                this.columnLiveOrAbandoned = new global::System.Data.DataColumn("LiveOrAbandoned", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiveOrAbandoned);
                this.columnDistanceToCentreOfLateral = new global::System.Data.DataColumn("DistanceToCentreOfLateral", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceToCentreOfLateral);
                this.columnLateralDiameter = new global::System.Data.DataColumn("LateralDiameter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralDiameter);
                this.columnLateralType = new global::System.Data.DataColumn("LateralType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralType);
                this.columnDateTimeOpened = new global::System.Data.DataColumn("DateTimeOpened", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeOpened);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnReverseSetup = new global::System.Data.DataColumn("ReverseSetup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReverseSetup);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnArchived = new global::System.Data.DataColumn("Archived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchived);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("TDSLFSRecordForRCTKey3", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnRefID,
                                this.columnCOMPANY_ID}, true));
                this.columnID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLESRow NewLFS_M2_TABLESRow() {
                return ((LFS_M2_TABLESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_M2_TABLESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_M2_TABLESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_M2_TABLESRowChanged != null)) {
                    this.LFS_M2_TABLESRowChanged(this, new LFS_M2_TABLESRowChangeEvent(((LFS_M2_TABLESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_M2_TABLESRowChanging != null)) {
                    this.LFS_M2_TABLESRowChanging(this, new LFS_M2_TABLESRowChangeEvent(((LFS_M2_TABLESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_M2_TABLESRowDeleted != null)) {
                    this.LFS_M2_TABLESRowDeleted(this, new LFS_M2_TABLESRowChangeEvent(((LFS_M2_TABLESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_M2_TABLESRowDeleting != null)) {
                    this.LFS_M2_TABLESRowDeleting(this, new LFS_M2_TABLESRowChangeEvent(((LFS_M2_TABLESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_M2_TABLESRow(LFS_M2_TABLESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TDSLFSRecordForRCT ds = new TDSLFSRecordForRCT();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_M2_TABLESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_MASTER_AREA_RCT_EXPANDEDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnRctID;
            
            private global::System.Data.DataColumn columnRecordID;
            
            private global::System.Data.DataColumn columnClientID;
            
            private global::System.Data.DataColumn columnCOMPANIES_ID;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnSubArea;
            
            private global::System.Data.DataColumn columnStreet;
            
            private global::System.Data.DataColumn columnUSMH;
            
            private global::System.Data.DataColumn columnDSMH;
            
            private global::System.Data.DataColumn columnSize_;
            
            private global::System.Data.DataColumn columnScaledLength;
            
            private global::System.Data.DataColumn columnP1Date;
            
            private global::System.Data.DataColumn columnActualLength;
            
            private global::System.Data.DataColumn columnLiveLats;
            
            private global::System.Data.DataColumn columnCXIsRemoved;
            
            private global::System.Data.DataColumn columnM1Date;
            
            private global::System.Data.DataColumn columnM2Date;
            
            private global::System.Data.DataColumn columnInstallDate;
            
            private global::System.Data.DataColumn columnFinalVideo;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnIssueIdentified;
            
            private global::System.Data.DataColumn columnIssueResolved;
            
            private global::System.Data.DataColumn columnFullLengthLining;
            
            private global::System.Data.DataColumn columnSubcontractorLining;
            
            private global::System.Data.DataColumn columnOutOfScopeInArea;
            
            private global::System.Data.DataColumn columnIssueGivenToBayCity;
            
            private global::System.Data.DataColumn columnConfirmedSize;
            
            private global::System.Data.DataColumn columnInstallRate;
            
            private global::System.Data.DataColumn columnDeadlineDate;
            
            private global::System.Data.DataColumn columnProposedLiningDate;
            
            private global::System.Data.DataColumn columnSalesIssue;
            
            private global::System.Data.DataColumn columnLFSIssue;
            
            private global::System.Data.DataColumn columnClientIssue;
            
            private global::System.Data.DataColumn columnInvestigationIssue;
            
            private global::System.Data.DataColumn columnPointLining;
            
            private global::System.Data.DataColumn columnGrouting;
            
            private global::System.Data.DataColumn columnLateralLining;
            
            private global::System.Data.DataColumn columnVacExDate;
            
            private global::System.Data.DataColumn columnPusherDate;
            
            private global::System.Data.DataColumn columnLinerOrdered;
            
            private global::System.Data.DataColumn columnRestoration;
            
            private global::System.Data.DataColumn columnGroutDate;
            
            private global::System.Data.DataColumn columnJLiner;
            
            private global::System.Data.DataColumn columnRehabAssessment;
            
            private global::System.Data.DataColumn columnEstimatedJoints;
            
            private global::System.Data.DataColumn columnJointsTestSealed;
            
            private global::System.Data.DataColumn columnPreFlushDate;
            
            private global::System.Data.DataColumn columnPreVideoDate;
            
            private global::System.Data.DataColumn columnUSMHMN;
            
            private global::System.Data.DataColumn columnDSMHMN;
            
            private global::System.Data.DataColumn columnUSMHDepth;
            
            private global::System.Data.DataColumn columnDSMHDepth;
            
            private global::System.Data.DataColumn columnMeasurementsTakenBy;
            
            private global::System.Data.DataColumn columnSteelTapeThruPipe;
            
            private global::System.Data.DataColumn columnUSMHAtMouth1200;
            
            private global::System.Data.DataColumn columnUSMHAtMouth100;
            
            private global::System.Data.DataColumn columnUSMHAtMouth200;
            
            private global::System.Data.DataColumn columnUSMHAtMouth300;
            
            private global::System.Data.DataColumn columnUSMHAtMouth400;
            
            private global::System.Data.DataColumn columnUSMHAtMouth500;
            
            private global::System.Data.DataColumn columnDSMHAtMouth1200;
            
            private global::System.Data.DataColumn columnDSMHAtMouth100;
            
            private global::System.Data.DataColumn columnDSMHAtMouth200;
            
            private global::System.Data.DataColumn columnDSMHAtMouth300;
            
            private global::System.Data.DataColumn columnDSMHAtMouth400;
            
            private global::System.Data.DataColumn columnDSMHAtMouth500;
            
            private global::System.Data.DataColumn columnHydrantAddress;
            
            private global::System.Data.DataColumn columnDistanceToInversionMH;
            
            private global::System.Data.DataColumn columnRampsRequired;
            
            private global::System.Data.DataColumn columnDegreeOfTrafficControl;
            
            private global::System.Data.DataColumn columnStandarBypass;
            
            private global::System.Data.DataColumn columnHydroWireDetails;
            
            private global::System.Data.DataColumn columnPipeMaterialType;
            
            private global::System.Data.DataColumn columnCappedLaterals;
            
            private global::System.Data.DataColumn columnRoboticPrepRequired;
            
            private global::System.Data.DataColumn columnPipeSizeChange;
            
            private global::System.Data.DataColumn columnM1Comments;
            
            private global::System.Data.DataColumn columnVideoDoneFrom;
            
            private global::System.Data.DataColumn columnToManhole;
            
            private global::System.Data.DataColumn columnCutterDescriptionDuringMeasuring;
            
            private global::System.Data.DataColumn columnFullLengthPointLiner;
            
            private global::System.Data.DataColumn columnBypassRequired;
            
            private global::System.Data.DataColumn columnRoboticDistances;
            
            private global::System.Data.DataColumn columnTrafficControlDetails;
            
            private global::System.Data.DataColumn columnLineWithID;
            
            private global::System.Data.DataColumn columnSchoolZone;
            
            private global::System.Data.DataColumn columnRestaurantArea;
            
            private global::System.Data.DataColumn columnCarwashLaundromat;
            
            private global::System.Data.DataColumn columnHydroPulley;
            
            private global::System.Data.DataColumn columnFridgeCart;
            
            private global::System.Data.DataColumn columnTwoInchPump;
            
            private global::System.Data.DataColumn columnSixInchBypass;
            
            private global::System.Data.DataColumn columnScaffolding;
            
            private global::System.Data.DataColumn columnWinchExtension;
            
            private global::System.Data.DataColumn columnExtraGenerator;
            
            private global::System.Data.DataColumn columnGreyCableExtension;
            
            private global::System.Data.DataColumn columnEasementMats;
            
            private global::System.Data.DataColumn columnMeasurementType;
            
            private global::System.Data.DataColumn columnDropPipe;
            
            private global::System.Data.DataColumn columnDropPipeInvertDepth;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnMeasuredFromManhole;
            
            private global::System.Data.DataColumn columnMainLined;
            
            private global::System.Data.DataColumn columnBenchingIssue;
            
            private global::System.Data.DataColumn columnArchived;
            
            private global::System.Data.DataColumn columnHistory;
            
            private global::System.Data.DataColumn columnNumLats;
            
            private global::System.Data.DataColumn columnNotLinedYet;
            
            private global::System.Data.DataColumn columnAllMeasured;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnProvState;
            
            private global::System.Data.DataColumn columnOperation;
            
            private global::System.Data.DataColumn columnChangedBy;
            
            private global::System.Data.DataColumn columnUSERNAME;
            
            private global::System.Data.DataColumn columnChanged;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA_RCT_EXPANDEDDataTable() {
                this.TableName = "LFS_MASTER_AREA_RCT_EXPANDED";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_MASTER_AREA_RCT_EXPANDEDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_MASTER_AREA_RCT_EXPANDEDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RctIDColumn {
                get {
                    return this.columnRctID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordIDColumn {
                get {
                    return this.columnRecordID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANIES_IDColumn {
                get {
                    return this.columnCOMPANIES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubAreaColumn {
                get {
                    return this.columnSubArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHColumn {
                get {
                    return this.columnUSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHColumn {
                get {
                    return this.columnDSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Size_Column {
                get {
                    return this.columnSize_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScaledLengthColumn {
                get {
                    return this.columnScaledLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P1DateColumn {
                get {
                    return this.columnP1Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActualLengthColumn {
                get {
                    return this.columnActualLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LiveLatsColumn {
                get {
                    return this.columnLiveLats;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CXIsRemovedColumn {
                get {
                    return this.columnCXIsRemoved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M1DateColumn {
                get {
                    return this.columnM1Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M2DateColumn {
                get {
                    return this.columnM2Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallDateColumn {
                get {
                    return this.columnInstallDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinalVideoColumn {
                get {
                    return this.columnFinalVideo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueIdentifiedColumn {
                get {
                    return this.columnIssueIdentified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueResolvedColumn {
                get {
                    return this.columnIssueResolved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullLengthLiningColumn {
                get {
                    return this.columnFullLengthLining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubcontractorLiningColumn {
                get {
                    return this.columnSubcontractorLining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutOfScopeInAreaColumn {
                get {
                    return this.columnOutOfScopeInArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueGivenToBayCityColumn {
                get {
                    return this.columnIssueGivenToBayCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConfirmedSizeColumn {
                get {
                    return this.columnConfirmedSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallRateColumn {
                get {
                    return this.columnInstallRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeadlineDateColumn {
                get {
                    return this.columnDeadlineDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProposedLiningDateColumn {
                get {
                    return this.columnProposedLiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesIssueColumn {
                get {
                    return this.columnSalesIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LFSIssueColumn {
                get {
                    return this.columnLFSIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIssueColumn {
                get {
                    return this.columnClientIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvestigationIssueColumn {
                get {
                    return this.columnInvestigationIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PointLiningColumn {
                get {
                    return this.columnPointLining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroutingColumn {
                get {
                    return this.columnGrouting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralLiningColumn {
                get {
                    return this.columnLateralLining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VacExDateColumn {
                get {
                    return this.columnVacExDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PusherDateColumn {
                get {
                    return this.columnPusherDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerOrderedColumn {
                get {
                    return this.columnLinerOrdered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RestorationColumn {
                get {
                    return this.columnRestoration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroutDateColumn {
                get {
                    return this.columnGroutDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JLinerColumn {
                get {
                    return this.columnJLiner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RehabAssessmentColumn {
                get {
                    return this.columnRehabAssessment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimatedJointsColumn {
                get {
                    return this.columnEstimatedJoints;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JointsTestSealedColumn {
                get {
                    return this.columnJointsTestSealed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreFlushDateColumn {
                get {
                    return this.columnPreFlushDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreVideoDateColumn {
                get {
                    return this.columnPreVideoDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMNColumn {
                get {
                    return this.columnUSMHMN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMNColumn {
                get {
                    return this.columnDSMHMN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHDepthColumn {
                get {
                    return this.columnUSMHDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHDepthColumn {
                get {
                    return this.columnDSMHDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementsTakenByColumn {
                get {
                    return this.columnMeasurementsTakenBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SteelTapeThruPipeColumn {
                get {
                    return this.columnSteelTapeThruPipe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth1200Column {
                get {
                    return this.columnUSMHAtMouth1200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth100Column {
                get {
                    return this.columnUSMHAtMouth100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth200Column {
                get {
                    return this.columnUSMHAtMouth200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth300Column {
                get {
                    return this.columnUSMHAtMouth300;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth400Column {
                get {
                    return this.columnUSMHAtMouth400;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth500Column {
                get {
                    return this.columnUSMHAtMouth500;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth1200Column {
                get {
                    return this.columnDSMHAtMouth1200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth100Column {
                get {
                    return this.columnDSMHAtMouth100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth200Column {
                get {
                    return this.columnDSMHAtMouth200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth300Column {
                get {
                    return this.columnDSMHAtMouth300;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth400Column {
                get {
                    return this.columnDSMHAtMouth400;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth500Column {
                get {
                    return this.columnDSMHAtMouth500;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HydrantAddressColumn {
                get {
                    return this.columnHydrantAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceToInversionMHColumn {
                get {
                    return this.columnDistanceToInversionMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RampsRequiredColumn {
                get {
                    return this.columnRampsRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DegreeOfTrafficControlColumn {
                get {
                    return this.columnDegreeOfTrafficControl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandarBypassColumn {
                get {
                    return this.columnStandarBypass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HydroWireDetailsColumn {
                get {
                    return this.columnHydroWireDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PipeMaterialTypeColumn {
                get {
                    return this.columnPipeMaterialType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CappedLateralsColumn {
                get {
                    return this.columnCappedLaterals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoboticPrepRequiredColumn {
                get {
                    return this.columnRoboticPrepRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PipeSizeChangeColumn {
                get {
                    return this.columnPipeSizeChange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M1CommentsColumn {
                get {
                    return this.columnM1Comments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoDoneFromColumn {
                get {
                    return this.columnVideoDoneFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToManholeColumn {
                get {
                    return this.columnToManhole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CutterDescriptionDuringMeasuringColumn {
                get {
                    return this.columnCutterDescriptionDuringMeasuring;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullLengthPointLinerColumn {
                get {
                    return this.columnFullLengthPointLiner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BypassRequiredColumn {
                get {
                    return this.columnBypassRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoboticDistancesColumn {
                get {
                    return this.columnRoboticDistances;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrafficControlDetailsColumn {
                get {
                    return this.columnTrafficControlDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineWithIDColumn {
                get {
                    return this.columnLineWithID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchoolZoneColumn {
                get {
                    return this.columnSchoolZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RestaurantAreaColumn {
                get {
                    return this.columnRestaurantArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarwashLaundromatColumn {
                get {
                    return this.columnCarwashLaundromat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HydroPulleyColumn {
                get {
                    return this.columnHydroPulley;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FridgeCartColumn {
                get {
                    return this.columnFridgeCart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TwoInchPumpColumn {
                get {
                    return this.columnTwoInchPump;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SixInchBypassColumn {
                get {
                    return this.columnSixInchBypass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScaffoldingColumn {
                get {
                    return this.columnScaffolding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WinchExtensionColumn {
                get {
                    return this.columnWinchExtension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraGeneratorColumn {
                get {
                    return this.columnExtraGenerator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GreyCableExtensionColumn {
                get {
                    return this.columnGreyCableExtension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EasementMatsColumn {
                get {
                    return this.columnEasementMats;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementTypeColumn {
                get {
                    return this.columnMeasurementType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DropPipeColumn {
                get {
                    return this.columnDropPipe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DropPipeInvertDepthColumn {
                get {
                    return this.columnDropPipeInvertDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasuredFromManholeColumn {
                get {
                    return this.columnMeasuredFromManhole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MainLinedColumn {
                get {
                    return this.columnMainLined;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BenchingIssueColumn {
                get {
                    return this.columnBenchingIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArchivedColumn {
                get {
                    return this.columnArchived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryColumn {
                get {
                    return this.columnHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumLatsColumn {
                get {
                    return this.columnNumLats;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotLinedYetColumn {
                get {
                    return this.columnNotLinedYet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllMeasuredColumn {
                get {
                    return this.columnAllMeasured;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProvStateColumn {
                get {
                    return this.columnProvState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperationColumn {
                get {
                    return this.columnOperation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USERNAMEColumn {
                get {
                    return this.columnUSERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedColumn {
                get {
                    return this.columnChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA_RCT_EXPANDEDRow this[int index] {
                get {
                    return ((LFS_MASTER_AREA_RCT_EXPANDEDRow)(this.Rows[index]));
                }
            }
            
            public event LFS_MASTER_AREA_RCT_EXPANDEDRowChangeEventHandler LFS_MASTER_AREA_RCT_EXPANDEDRowChanging;
            
            public event LFS_MASTER_AREA_RCT_EXPANDEDRowChangeEventHandler LFS_MASTER_AREA_RCT_EXPANDEDRowChanged;
            
            public event LFS_MASTER_AREA_RCT_EXPANDEDRowChangeEventHandler LFS_MASTER_AREA_RCT_EXPANDEDRowDeleting;
            
            public event LFS_MASTER_AREA_RCT_EXPANDEDRowChangeEventHandler LFS_MASTER_AREA_RCT_EXPANDEDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_MASTER_AREA_RCT_EXPANDEDRow(LFS_MASTER_AREA_RCT_EXPANDEDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA_RCT_EXPANDEDRow AddLFS_MASTER_AREA_RCT_EXPANDEDRow(
                        System.Guid ID, 
                        int COMPANY_ID, 
                        string RecordID, 
                        string ClientID, 
                        int COMPANIES_ID, 
                        string NAME, 
                        string SubArea, 
                        string Street, 
                        string USMH, 
                        string DSMH, 
                        string Size_, 
                        string ScaledLength, 
                        System.DateTime P1Date, 
                        string ActualLength, 
                        double LiveLats, 
                        string CXIsRemoved, 
                        System.DateTime M1Date, 
                        System.DateTime M2Date, 
                        System.DateTime InstallDate, 
                        System.DateTime FinalVideo, 
                        string Comments, 
                        bool IssueIdentified, 
                        bool IssueResolved, 
                        bool FullLengthLining, 
                        bool SubcontractorLining, 
                        bool OutOfScopeInArea, 
                        bool IssueGivenToBayCity, 
                        int ConfirmedSize, 
                        decimal InstallRate, 
                        System.DateTime DeadlineDate, 
                        System.DateTime ProposedLiningDate, 
                        bool SalesIssue, 
                        bool LFSIssue, 
                        bool ClientIssue, 
                        bool InvestigationIssue, 
                        bool PointLining, 
                        bool Grouting, 
                        bool LateralLining, 
                        System.DateTime VacExDate, 
                        System.DateTime PusherDate, 
                        System.DateTime LinerOrdered, 
                        System.DateTime Restoration, 
                        System.DateTime GroutDate, 
                        bool JLiner, 
                        bool RehabAssessment, 
                        int EstimatedJoints, 
                        int JointsTestSealed, 
                        System.DateTime PreFlushDate, 
                        System.DateTime PreVideoDate, 
                        string USMHMN, 
                        string DSMHMN, 
                        string USMHDepth, 
                        string DSMHDepth, 
                        string MeasurementsTakenBy, 
                        string SteelTapeThruPipe, 
                        double USMHAtMouth1200, 
                        double USMHAtMouth100, 
                        double USMHAtMouth200, 
                        double USMHAtMouth300, 
                        double USMHAtMouth400, 
                        double USMHAtMouth500, 
                        double DSMHAtMouth1200, 
                        double DSMHAtMouth100, 
                        double DSMHAtMouth200, 
                        double DSMHAtMouth300, 
                        double DSMHAtMouth400, 
                        double DSMHAtMouth500, 
                        string HydrantAddress, 
                        string DistanceToInversionMH, 
                        bool RampsRequired, 
                        string DegreeOfTrafficControl, 
                        bool StandarBypass, 
                        string HydroWireDetails, 
                        string PipeMaterialType, 
                        int CappedLaterals, 
                        bool RoboticPrepRequired, 
                        bool PipeSizeChange, 
                        string M1Comments, 
                        string VideoDoneFrom, 
                        string ToManhole, 
                        string CutterDescriptionDuringMeasuring, 
                        bool FullLengthPointLiner, 
                        bool BypassRequired, 
                        string RoboticDistances, 
                        string TrafficControlDetails, 
                        string LineWithID, 
                        bool SchoolZone, 
                        bool RestaurantArea, 
                        bool CarwashLaundromat, 
                        bool HydroPulley, 
                        bool FridgeCart, 
                        bool TwoInchPump, 
                        bool SixInchBypass, 
                        bool Scaffolding, 
                        bool WinchExtension, 
                        bool ExtraGenerator, 
                        bool GreyCableExtension, 
                        bool EasementMats, 
                        string MeasurementType, 
                        bool DropPipe, 
                        string DropPipeInvertDepth, 
                        bool Deleted, 
                        string MeasuredFromManhole, 
                        string MainLined, 
                        string BenchingIssue, 
                        bool Archived, 
                        string History, 
                        int NumLats, 
                        int NotLinedYet, 
                        bool AllMeasured, 
                        string City, 
                        string ProvState, 
                        string Operation, 
                        int ChangedBy, 
                        string USERNAME, 
                        System.DateTime Changed) {
                LFS_MASTER_AREA_RCT_EXPANDEDRow rowLFS_MASTER_AREA_RCT_EXPANDEDRow = ((LFS_MASTER_AREA_RCT_EXPANDEDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        COMPANY_ID,
                        null,
                        RecordID,
                        ClientID,
                        COMPANIES_ID,
                        NAME,
                        SubArea,
                        Street,
                        USMH,
                        DSMH,
                        Size_,
                        ScaledLength,
                        P1Date,
                        ActualLength,
                        LiveLats,
                        CXIsRemoved,
                        M1Date,
                        M2Date,
                        InstallDate,
                        FinalVideo,
                        Comments,
                        IssueIdentified,
                        IssueResolved,
                        FullLengthLining,
                        SubcontractorLining,
                        OutOfScopeInArea,
                        IssueGivenToBayCity,
                        ConfirmedSize,
                        InstallRate,
                        DeadlineDate,
                        ProposedLiningDate,
                        SalesIssue,
                        LFSIssue,
                        ClientIssue,
                        InvestigationIssue,
                        PointLining,
                        Grouting,
                        LateralLining,
                        VacExDate,
                        PusherDate,
                        LinerOrdered,
                        Restoration,
                        GroutDate,
                        JLiner,
                        RehabAssessment,
                        EstimatedJoints,
                        JointsTestSealed,
                        PreFlushDate,
                        PreVideoDate,
                        USMHMN,
                        DSMHMN,
                        USMHDepth,
                        DSMHDepth,
                        MeasurementsTakenBy,
                        SteelTapeThruPipe,
                        USMHAtMouth1200,
                        USMHAtMouth100,
                        USMHAtMouth200,
                        USMHAtMouth300,
                        USMHAtMouth400,
                        USMHAtMouth500,
                        DSMHAtMouth1200,
                        DSMHAtMouth100,
                        DSMHAtMouth200,
                        DSMHAtMouth300,
                        DSMHAtMouth400,
                        DSMHAtMouth500,
                        HydrantAddress,
                        DistanceToInversionMH,
                        RampsRequired,
                        DegreeOfTrafficControl,
                        StandarBypass,
                        HydroWireDetails,
                        PipeMaterialType,
                        CappedLaterals,
                        RoboticPrepRequired,
                        PipeSizeChange,
                        M1Comments,
                        VideoDoneFrom,
                        ToManhole,
                        CutterDescriptionDuringMeasuring,
                        FullLengthPointLiner,
                        BypassRequired,
                        RoboticDistances,
                        TrafficControlDetails,
                        LineWithID,
                        SchoolZone,
                        RestaurantArea,
                        CarwashLaundromat,
                        HydroPulley,
                        FridgeCart,
                        TwoInchPump,
                        SixInchBypass,
                        Scaffolding,
                        WinchExtension,
                        ExtraGenerator,
                        GreyCableExtension,
                        EasementMats,
                        MeasurementType,
                        DropPipe,
                        DropPipeInvertDepth,
                        Deleted,
                        MeasuredFromManhole,
                        MainLined,
                        BenchingIssue,
                        Archived,
                        History,
                        NumLats,
                        NotLinedYet,
                        AllMeasured,
                        City,
                        ProvState,
                        Operation,
                        ChangedBy,
                        USERNAME,
                        Changed};
                rowLFS_MASTER_AREA_RCT_EXPANDEDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_MASTER_AREA_RCT_EXPANDEDRow);
                return rowLFS_MASTER_AREA_RCT_EXPANDEDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA_RCT_EXPANDEDRow FindByIDCOMPANY_IDRctID(System.Guid ID, int COMPANY_ID, int RctID) {
                return ((LFS_MASTER_AREA_RCT_EXPANDEDRow)(this.Rows.Find(new object[] {
                            ID,
                            COMPANY_ID,
                            RctID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_MASTER_AREA_RCT_EXPANDEDDataTable cln = ((LFS_MASTER_AREA_RCT_EXPANDEDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_MASTER_AREA_RCT_EXPANDEDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnRctID = base.Columns["RctID"];
                this.columnRecordID = base.Columns["RecordID"];
                this.columnClientID = base.Columns["ClientID"];
                this.columnCOMPANIES_ID = base.Columns["COMPANIES_ID"];
                this.columnNAME = base.Columns["NAME"];
                this.columnSubArea = base.Columns["SubArea"];
                this.columnStreet = base.Columns["Street"];
                this.columnUSMH = base.Columns["USMH"];
                this.columnDSMH = base.Columns["DSMH"];
                this.columnSize_ = base.Columns["Size_"];
                this.columnScaledLength = base.Columns["ScaledLength"];
                this.columnP1Date = base.Columns["P1Date"];
                this.columnActualLength = base.Columns["ActualLength"];
                this.columnLiveLats = base.Columns["LiveLats"];
                this.columnCXIsRemoved = base.Columns["CXIsRemoved"];
                this.columnM1Date = base.Columns["M1Date"];
                this.columnM2Date = base.Columns["M2Date"];
                this.columnInstallDate = base.Columns["InstallDate"];
                this.columnFinalVideo = base.Columns["FinalVideo"];
                this.columnComments = base.Columns["Comments"];
                this.columnIssueIdentified = base.Columns["IssueIdentified"];
                this.columnIssueResolved = base.Columns["IssueResolved"];
                this.columnFullLengthLining = base.Columns["FullLengthLining"];
                this.columnSubcontractorLining = base.Columns["SubcontractorLining"];
                this.columnOutOfScopeInArea = base.Columns["OutOfScopeInArea"];
                this.columnIssueGivenToBayCity = base.Columns["IssueGivenToBayCity"];
                this.columnConfirmedSize = base.Columns["ConfirmedSize"];
                this.columnInstallRate = base.Columns["InstallRate"];
                this.columnDeadlineDate = base.Columns["DeadlineDate"];
                this.columnProposedLiningDate = base.Columns["ProposedLiningDate"];
                this.columnSalesIssue = base.Columns["SalesIssue"];
                this.columnLFSIssue = base.Columns["LFSIssue"];
                this.columnClientIssue = base.Columns["ClientIssue"];
                this.columnInvestigationIssue = base.Columns["InvestigationIssue"];
                this.columnPointLining = base.Columns["PointLining"];
                this.columnGrouting = base.Columns["Grouting"];
                this.columnLateralLining = base.Columns["LateralLining"];
                this.columnVacExDate = base.Columns["VacExDate"];
                this.columnPusherDate = base.Columns["PusherDate"];
                this.columnLinerOrdered = base.Columns["LinerOrdered"];
                this.columnRestoration = base.Columns["Restoration"];
                this.columnGroutDate = base.Columns["GroutDate"];
                this.columnJLiner = base.Columns["JLiner"];
                this.columnRehabAssessment = base.Columns["RehabAssessment"];
                this.columnEstimatedJoints = base.Columns["EstimatedJoints"];
                this.columnJointsTestSealed = base.Columns["JointsTestSealed"];
                this.columnPreFlushDate = base.Columns["PreFlushDate"];
                this.columnPreVideoDate = base.Columns["PreVideoDate"];
                this.columnUSMHMN = base.Columns["USMHMN"];
                this.columnDSMHMN = base.Columns["DSMHMN"];
                this.columnUSMHDepth = base.Columns["USMHDepth"];
                this.columnDSMHDepth = base.Columns["DSMHDepth"];
                this.columnMeasurementsTakenBy = base.Columns["MeasurementsTakenBy"];
                this.columnSteelTapeThruPipe = base.Columns["SteelTapeThruPipe"];
                this.columnUSMHAtMouth1200 = base.Columns["USMHAtMouth1200"];
                this.columnUSMHAtMouth100 = base.Columns["USMHAtMouth100"];
                this.columnUSMHAtMouth200 = base.Columns["USMHAtMouth200"];
                this.columnUSMHAtMouth300 = base.Columns["USMHAtMouth300"];
                this.columnUSMHAtMouth400 = base.Columns["USMHAtMouth400"];
                this.columnUSMHAtMouth500 = base.Columns["USMHAtMouth500"];
                this.columnDSMHAtMouth1200 = base.Columns["DSMHAtMouth1200"];
                this.columnDSMHAtMouth100 = base.Columns["DSMHAtMouth100"];
                this.columnDSMHAtMouth200 = base.Columns["DSMHAtMouth200"];
                this.columnDSMHAtMouth300 = base.Columns["DSMHAtMouth300"];
                this.columnDSMHAtMouth400 = base.Columns["DSMHAtMouth400"];
                this.columnDSMHAtMouth500 = base.Columns["DSMHAtMouth500"];
                this.columnHydrantAddress = base.Columns["HydrantAddress"];
                this.columnDistanceToInversionMH = base.Columns["DistanceToInversionMH"];
                this.columnRampsRequired = base.Columns["RampsRequired"];
                this.columnDegreeOfTrafficControl = base.Columns["DegreeOfTrafficControl"];
                this.columnStandarBypass = base.Columns["StandarBypass"];
                this.columnHydroWireDetails = base.Columns["HydroWireDetails"];
                this.columnPipeMaterialType = base.Columns["PipeMaterialType"];
                this.columnCappedLaterals = base.Columns["CappedLaterals"];
                this.columnRoboticPrepRequired = base.Columns["RoboticPrepRequired"];
                this.columnPipeSizeChange = base.Columns["PipeSizeChange"];
                this.columnM1Comments = base.Columns["M1Comments"];
                this.columnVideoDoneFrom = base.Columns["VideoDoneFrom"];
                this.columnToManhole = base.Columns["ToManhole"];
                this.columnCutterDescriptionDuringMeasuring = base.Columns["CutterDescriptionDuringMeasuring"];
                this.columnFullLengthPointLiner = base.Columns["FullLengthPointLiner"];
                this.columnBypassRequired = base.Columns["BypassRequired"];
                this.columnRoboticDistances = base.Columns["RoboticDistances"];
                this.columnTrafficControlDetails = base.Columns["TrafficControlDetails"];
                this.columnLineWithID = base.Columns["LineWithID"];
                this.columnSchoolZone = base.Columns["SchoolZone"];
                this.columnRestaurantArea = base.Columns["RestaurantArea"];
                this.columnCarwashLaundromat = base.Columns["CarwashLaundromat"];
                this.columnHydroPulley = base.Columns["HydroPulley"];
                this.columnFridgeCart = base.Columns["FridgeCart"];
                this.columnTwoInchPump = base.Columns["TwoInchPump"];
                this.columnSixInchBypass = base.Columns["SixInchBypass"];
                this.columnScaffolding = base.Columns["Scaffolding"];
                this.columnWinchExtension = base.Columns["WinchExtension"];
                this.columnExtraGenerator = base.Columns["ExtraGenerator"];
                this.columnGreyCableExtension = base.Columns["GreyCableExtension"];
                this.columnEasementMats = base.Columns["EasementMats"];
                this.columnMeasurementType = base.Columns["MeasurementType"];
                this.columnDropPipe = base.Columns["DropPipe"];
                this.columnDropPipeInvertDepth = base.Columns["DropPipeInvertDepth"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnMeasuredFromManhole = base.Columns["MeasuredFromManhole"];
                this.columnMainLined = base.Columns["MainLined"];
                this.columnBenchingIssue = base.Columns["BenchingIssue"];
                this.columnArchived = base.Columns["Archived"];
                this.columnHistory = base.Columns["History"];
                this.columnNumLats = base.Columns["NumLats"];
                this.columnNotLinedYet = base.Columns["NotLinedYet"];
                this.columnAllMeasured = base.Columns["AllMeasured"];
                this.columnCity = base.Columns["City"];
                this.columnProvState = base.Columns["ProvState"];
                this.columnOperation = base.Columns["Operation"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnUSERNAME = base.Columns["USERNAME"];
                this.columnChanged = base.Columns["Changed"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnRctID = new global::System.Data.DataColumn("RctID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRctID);
                this.columnRecordID = new global::System.Data.DataColumn("RecordID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordID);
                this.columnClientID = new global::System.Data.DataColumn("ClientID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnCOMPANIES_ID = new global::System.Data.DataColumn("COMPANIES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANIES_ID);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnSubArea = new global::System.Data.DataColumn("SubArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubArea);
                this.columnStreet = new global::System.Data.DataColumn("Street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnUSMH = new global::System.Data.DataColumn("USMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMH);
                this.columnDSMH = new global::System.Data.DataColumn("DSMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMH);
                this.columnSize_ = new global::System.Data.DataColumn("Size_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_);
                this.columnScaledLength = new global::System.Data.DataColumn("ScaledLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaledLength);
                this.columnP1Date = new global::System.Data.DataColumn("P1Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP1Date);
                this.columnActualLength = new global::System.Data.DataColumn("ActualLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualLength);
                this.columnLiveLats = new global::System.Data.DataColumn("LiveLats", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiveLats);
                this.columnCXIsRemoved = new global::System.Data.DataColumn("CXIsRemoved", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXIsRemoved);
                this.columnM1Date = new global::System.Data.DataColumn("M1Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM1Date);
                this.columnM2Date = new global::System.Data.DataColumn("M2Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM2Date);
                this.columnInstallDate = new global::System.Data.DataColumn("InstallDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallDate);
                this.columnFinalVideo = new global::System.Data.DataColumn("FinalVideo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalVideo);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnIssueIdentified = new global::System.Data.DataColumn("IssueIdentified", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueIdentified);
                this.columnIssueResolved = new global::System.Data.DataColumn("IssueResolved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueResolved);
                this.columnFullLengthLining = new global::System.Data.DataColumn("FullLengthLining", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullLengthLining);
                this.columnSubcontractorLining = new global::System.Data.DataColumn("SubcontractorLining", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubcontractorLining);
                this.columnOutOfScopeInArea = new global::System.Data.DataColumn("OutOfScopeInArea", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutOfScopeInArea);
                this.columnIssueGivenToBayCity = new global::System.Data.DataColumn("IssueGivenToBayCity", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueGivenToBayCity);
                this.columnConfirmedSize = new global::System.Data.DataColumn("ConfirmedSize", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmedSize);
                this.columnInstallRate = new global::System.Data.DataColumn("InstallRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallRate);
                this.columnDeadlineDate = new global::System.Data.DataColumn("DeadlineDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeadlineDate);
                this.columnProposedLiningDate = new global::System.Data.DataColumn("ProposedLiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProposedLiningDate);
                this.columnSalesIssue = new global::System.Data.DataColumn("SalesIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesIssue);
                this.columnLFSIssue = new global::System.Data.DataColumn("LFSIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLFSIssue);
                this.columnClientIssue = new global::System.Data.DataColumn("ClientIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientIssue);
                this.columnInvestigationIssue = new global::System.Data.DataColumn("InvestigationIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestigationIssue);
                this.columnPointLining = new global::System.Data.DataColumn("PointLining", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPointLining);
                this.columnGrouting = new global::System.Data.DataColumn("Grouting", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrouting);
                this.columnLateralLining = new global::System.Data.DataColumn("LateralLining", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralLining);
                this.columnVacExDate = new global::System.Data.DataColumn("VacExDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacExDate);
                this.columnPusherDate = new global::System.Data.DataColumn("PusherDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPusherDate);
                this.columnLinerOrdered = new global::System.Data.DataColumn("LinerOrdered", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerOrdered);
                this.columnRestoration = new global::System.Data.DataColumn("Restoration", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestoration);
                this.columnGroutDate = new global::System.Data.DataColumn("GroutDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroutDate);
                this.columnJLiner = new global::System.Data.DataColumn("JLiner", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJLiner);
                this.columnRehabAssessment = new global::System.Data.DataColumn("RehabAssessment", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRehabAssessment);
                this.columnEstimatedJoints = new global::System.Data.DataColumn("EstimatedJoints", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimatedJoints);
                this.columnJointsTestSealed = new global::System.Data.DataColumn("JointsTestSealed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJointsTestSealed);
                this.columnPreFlushDate = new global::System.Data.DataColumn("PreFlushDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreFlushDate);
                this.columnPreVideoDate = new global::System.Data.DataColumn("PreVideoDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreVideoDate);
                this.columnUSMHMN = new global::System.Data.DataColumn("USMHMN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMN);
                this.columnDSMHMN = new global::System.Data.DataColumn("DSMHMN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMN);
                this.columnUSMHDepth = new global::System.Data.DataColumn("USMHDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHDepth);
                this.columnDSMHDepth = new global::System.Data.DataColumn("DSMHDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHDepth);
                this.columnMeasurementsTakenBy = new global::System.Data.DataColumn("MeasurementsTakenBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementsTakenBy);
                this.columnSteelTapeThruPipe = new global::System.Data.DataColumn("SteelTapeThruPipe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSteelTapeThruPipe);
                this.columnUSMHAtMouth1200 = new global::System.Data.DataColumn("USMHAtMouth1200", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth1200);
                this.columnUSMHAtMouth100 = new global::System.Data.DataColumn("USMHAtMouth100", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth100);
                this.columnUSMHAtMouth200 = new global::System.Data.DataColumn("USMHAtMouth200", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth200);
                this.columnUSMHAtMouth300 = new global::System.Data.DataColumn("USMHAtMouth300", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth300);
                this.columnUSMHAtMouth400 = new global::System.Data.DataColumn("USMHAtMouth400", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth400);
                this.columnUSMHAtMouth500 = new global::System.Data.DataColumn("USMHAtMouth500", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth500);
                this.columnDSMHAtMouth1200 = new global::System.Data.DataColumn("DSMHAtMouth1200", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth1200);
                this.columnDSMHAtMouth100 = new global::System.Data.DataColumn("DSMHAtMouth100", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth100);
                this.columnDSMHAtMouth200 = new global::System.Data.DataColumn("DSMHAtMouth200", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth200);
                this.columnDSMHAtMouth300 = new global::System.Data.DataColumn("DSMHAtMouth300", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth300);
                this.columnDSMHAtMouth400 = new global::System.Data.DataColumn("DSMHAtMouth400", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth400);
                this.columnDSMHAtMouth500 = new global::System.Data.DataColumn("DSMHAtMouth500", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth500);
                this.columnHydrantAddress = new global::System.Data.DataColumn("HydrantAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydrantAddress);
                this.columnDistanceToInversionMH = new global::System.Data.DataColumn("DistanceToInversionMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceToInversionMH);
                this.columnRampsRequired = new global::System.Data.DataColumn("RampsRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRampsRequired);
                this.columnDegreeOfTrafficControl = new global::System.Data.DataColumn("DegreeOfTrafficControl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDegreeOfTrafficControl);
                this.columnStandarBypass = new global::System.Data.DataColumn("StandarBypass", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandarBypass);
                this.columnHydroWireDetails = new global::System.Data.DataColumn("HydroWireDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydroWireDetails);
                this.columnPipeMaterialType = new global::System.Data.DataColumn("PipeMaterialType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeMaterialType);
                this.columnCappedLaterals = new global::System.Data.DataColumn("CappedLaterals", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCappedLaterals);
                this.columnRoboticPrepRequired = new global::System.Data.DataColumn("RoboticPrepRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticPrepRequired);
                this.columnPipeSizeChange = new global::System.Data.DataColumn("PipeSizeChange", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeSizeChange);
                this.columnM1Comments = new global::System.Data.DataColumn("M1Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM1Comments);
                this.columnVideoDoneFrom = new global::System.Data.DataColumn("VideoDoneFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoDoneFrom);
                this.columnToManhole = new global::System.Data.DataColumn("ToManhole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToManhole);
                this.columnCutterDescriptionDuringMeasuring = new global::System.Data.DataColumn("CutterDescriptionDuringMeasuring", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCutterDescriptionDuringMeasuring);
                this.columnFullLengthPointLiner = new global::System.Data.DataColumn("FullLengthPointLiner", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullLengthPointLiner);
                this.columnBypassRequired = new global::System.Data.DataColumn("BypassRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBypassRequired);
                this.columnRoboticDistances = new global::System.Data.DataColumn("RoboticDistances", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticDistances);
                this.columnTrafficControlDetails = new global::System.Data.DataColumn("TrafficControlDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrafficControlDetails);
                this.columnLineWithID = new global::System.Data.DataColumn("LineWithID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineWithID);
                this.columnSchoolZone = new global::System.Data.DataColumn("SchoolZone", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchoolZone);
                this.columnRestaurantArea = new global::System.Data.DataColumn("RestaurantArea", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestaurantArea);
                this.columnCarwashLaundromat = new global::System.Data.DataColumn("CarwashLaundromat", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarwashLaundromat);
                this.columnHydroPulley = new global::System.Data.DataColumn("HydroPulley", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydroPulley);
                this.columnFridgeCart = new global::System.Data.DataColumn("FridgeCart", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFridgeCart);
                this.columnTwoInchPump = new global::System.Data.DataColumn("TwoInchPump", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTwoInchPump);
                this.columnSixInchBypass = new global::System.Data.DataColumn("SixInchBypass", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSixInchBypass);
                this.columnScaffolding = new global::System.Data.DataColumn("Scaffolding", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffolding);
                this.columnWinchExtension = new global::System.Data.DataColumn("WinchExtension", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWinchExtension);
                this.columnExtraGenerator = new global::System.Data.DataColumn("ExtraGenerator", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraGenerator);
                this.columnGreyCableExtension = new global::System.Data.DataColumn("GreyCableExtension", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGreyCableExtension);
                this.columnEasementMats = new global::System.Data.DataColumn("EasementMats", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEasementMats);
                this.columnMeasurementType = new global::System.Data.DataColumn("MeasurementType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementType);
                this.columnDropPipe = new global::System.Data.DataColumn("DropPipe", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropPipe);
                this.columnDropPipeInvertDepth = new global::System.Data.DataColumn("DropPipeInvertDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropPipeInvertDepth);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnMeasuredFromManhole = new global::System.Data.DataColumn("MeasuredFromManhole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasuredFromManhole);
                this.columnMainLined = new global::System.Data.DataColumn("MainLined", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainLined);
                this.columnBenchingIssue = new global::System.Data.DataColumn("BenchingIssue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenchingIssue);
                this.columnArchived = new global::System.Data.DataColumn("Archived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchived);
                this.columnHistory = new global::System.Data.DataColumn("History", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistory);
                this.columnNumLats = new global::System.Data.DataColumn("NumLats", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumLats);
                this.columnNotLinedYet = new global::System.Data.DataColumn("NotLinedYet", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotLinedYet);
                this.columnAllMeasured = new global::System.Data.DataColumn("AllMeasured", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllMeasured);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnProvState = new global::System.Data.DataColumn("ProvState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvState);
                this.columnOperation = new global::System.Data.DataColumn("Operation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperation);
                this.columnChangedBy = new global::System.Data.DataColumn("ChangedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnUSERNAME = new global::System.Data.DataColumn("USERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERNAME);
                this.columnChanged = new global::System.Data.DataColumn("Changed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChanged);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("TDSLFSRecordForRCTKey4", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnCOMPANY_ID,
                                this.columnRctID}, true));
                this.columnID.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnRctID.AutoIncrement = true;
                this.columnRctID.AllowDBNull = false;
                this.columnRctID.ReadOnly = true;
                this.columnRecordID.AllowDBNull = false;
                this.columnCity.MaxLength = 50;
                this.columnProvState.MaxLength = 20;
                this.columnUSERNAME.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA_RCT_EXPANDEDRow NewLFS_MASTER_AREA_RCT_EXPANDEDRow() {
                return ((LFS_MASTER_AREA_RCT_EXPANDEDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_MASTER_AREA_RCT_EXPANDEDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_MASTER_AREA_RCT_EXPANDEDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_MASTER_AREA_RCT_EXPANDEDRowChanged != null)) {
                    this.LFS_MASTER_AREA_RCT_EXPANDEDRowChanged(this, new LFS_MASTER_AREA_RCT_EXPANDEDRowChangeEvent(((LFS_MASTER_AREA_RCT_EXPANDEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_MASTER_AREA_RCT_EXPANDEDRowChanging != null)) {
                    this.LFS_MASTER_AREA_RCT_EXPANDEDRowChanging(this, new LFS_MASTER_AREA_RCT_EXPANDEDRowChangeEvent(((LFS_MASTER_AREA_RCT_EXPANDEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_MASTER_AREA_RCT_EXPANDEDRowDeleted != null)) {
                    this.LFS_MASTER_AREA_RCT_EXPANDEDRowDeleted(this, new LFS_MASTER_AREA_RCT_EXPANDEDRowChangeEvent(((LFS_MASTER_AREA_RCT_EXPANDEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_MASTER_AREA_RCT_EXPANDEDRowDeleting != null)) {
                    this.LFS_MASTER_AREA_RCT_EXPANDEDRowDeleting(this, new LFS_MASTER_AREA_RCT_EXPANDEDRowChangeEvent(((LFS_MASTER_AREA_RCT_EXPANDEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_MASTER_AREA_RCT_EXPANDEDRow(LFS_MASTER_AREA_RCT_EXPANDEDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TDSLFSRecordForRCT ds = new TDSLFSRecordForRCT();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_MASTER_AREA_RCT_EXPANDEDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_M2_TABLES_RCT_EXPANDEDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnRctID;
            
            private global::System.Data.DataColumn columnVideoDistance;
            
            private global::System.Data.DataColumn columnClockPosition;
            
            private global::System.Data.DataColumn columnLiveOrAbandoned;
            
            private global::System.Data.DataColumn columnDistanceToCentreOfLateral;
            
            private global::System.Data.DataColumn columnLateralDiameter;
            
            private global::System.Data.DataColumn columnLateralType;
            
            private global::System.Data.DataColumn columnDateTimeOpened;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnReverseSetup;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnArchived;
            
            private global::System.Data.DataColumn columnOperation;
            
            private global::System.Data.DataColumn columnChangedBy;
            
            private global::System.Data.DataColumn columnUSERNAME;
            
            private global::System.Data.DataColumn columnChanged;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLES_RCT_EXPANDEDDataTable() {
                this.TableName = "LFS_M2_TABLES_RCT_EXPANDED";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_M2_TABLES_RCT_EXPANDEDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_M2_TABLES_RCT_EXPANDEDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RctIDColumn {
                get {
                    return this.columnRctID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoDistanceColumn {
                get {
                    return this.columnVideoDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClockPositionColumn {
                get {
                    return this.columnClockPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LiveOrAbandonedColumn {
                get {
                    return this.columnLiveOrAbandoned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceToCentreOfLateralColumn {
                get {
                    return this.columnDistanceToCentreOfLateral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralDiameterColumn {
                get {
                    return this.columnLateralDiameter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralTypeColumn {
                get {
                    return this.columnLateralType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeOpenedColumn {
                get {
                    return this.columnDateTimeOpened;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReverseSetupColumn {
                get {
                    return this.columnReverseSetup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArchivedColumn {
                get {
                    return this.columnArchived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperationColumn {
                get {
                    return this.columnOperation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USERNAMEColumn {
                get {
                    return this.columnUSERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedColumn {
                get {
                    return this.columnChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLES_RCT_EXPANDEDRow this[int index] {
                get {
                    return ((LFS_M2_TABLES_RCT_EXPANDEDRow)(this.Rows[index]));
                }
            }
            
            public event LFS_M2_TABLES_RCT_EXPANDEDRowChangeEventHandler LFS_M2_TABLES_RCT_EXPANDEDRowChanging;
            
            public event LFS_M2_TABLES_RCT_EXPANDEDRowChangeEventHandler LFS_M2_TABLES_RCT_EXPANDEDRowChanged;
            
            public event LFS_M2_TABLES_RCT_EXPANDEDRowChangeEventHandler LFS_M2_TABLES_RCT_EXPANDEDRowDeleting;
            
            public event LFS_M2_TABLES_RCT_EXPANDEDRowChangeEventHandler LFS_M2_TABLES_RCT_EXPANDEDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_M2_TABLES_RCT_EXPANDEDRow(LFS_M2_TABLES_RCT_EXPANDEDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLES_RCT_EXPANDEDRow AddLFS_M2_TABLES_RCT_EXPANDEDRow(
                        System.Guid ID, 
                        int RefID, 
                        int COMPANY_ID, 
                        float VideoDistance, 
                        string ClockPosition, 
                        string LiveOrAbandoned, 
                        string DistanceToCentreOfLateral, 
                        string LateralDiameter, 
                        string LateralType, 
                        string DateTimeOpened, 
                        string Comments, 
                        string ReverseSetup, 
                        bool Deleted, 
                        bool Archived, 
                        string Operation, 
                        int ChangedBy, 
                        string USERNAME, 
                        System.DateTime Changed) {
                LFS_M2_TABLES_RCT_EXPANDEDRow rowLFS_M2_TABLES_RCT_EXPANDEDRow = ((LFS_M2_TABLES_RCT_EXPANDEDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        RefID,
                        COMPANY_ID,
                        null,
                        VideoDistance,
                        ClockPosition,
                        LiveOrAbandoned,
                        DistanceToCentreOfLateral,
                        LateralDiameter,
                        LateralType,
                        DateTimeOpened,
                        Comments,
                        ReverseSetup,
                        Deleted,
                        Archived,
                        Operation,
                        ChangedBy,
                        USERNAME,
                        Changed};
                rowLFS_M2_TABLES_RCT_EXPANDEDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_M2_TABLES_RCT_EXPANDEDRow);
                return rowLFS_M2_TABLES_RCT_EXPANDEDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLES_RCT_EXPANDEDRow FindByIDRefIDCOMPANY_IDRctID(System.Guid ID, int RefID, int COMPANY_ID, int RctID) {
                return ((LFS_M2_TABLES_RCT_EXPANDEDRow)(this.Rows.Find(new object[] {
                            ID,
                            RefID,
                            COMPANY_ID,
                            RctID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_M2_TABLES_RCT_EXPANDEDDataTable cln = ((LFS_M2_TABLES_RCT_EXPANDEDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_M2_TABLES_RCT_EXPANDEDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnRctID = base.Columns["RctID"];
                this.columnVideoDistance = base.Columns["VideoDistance"];
                this.columnClockPosition = base.Columns["ClockPosition"];
                this.columnLiveOrAbandoned = base.Columns["LiveOrAbandoned"];
                this.columnDistanceToCentreOfLateral = base.Columns["DistanceToCentreOfLateral"];
                this.columnLateralDiameter = base.Columns["LateralDiameter"];
                this.columnLateralType = base.Columns["LateralType"];
                this.columnDateTimeOpened = base.Columns["DateTimeOpened"];
                this.columnComments = base.Columns["Comments"];
                this.columnReverseSetup = base.Columns["ReverseSetup"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnArchived = base.Columns["Archived"];
                this.columnOperation = base.Columns["Operation"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnUSERNAME = base.Columns["USERNAME"];
                this.columnChanged = base.Columns["Changed"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnRctID = new global::System.Data.DataColumn("RctID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRctID);
                this.columnVideoDistance = new global::System.Data.DataColumn("VideoDistance", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoDistance);
                this.columnClockPosition = new global::System.Data.DataColumn("ClockPosition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClockPosition);
                this.columnLiveOrAbandoned = new global::System.Data.DataColumn("LiveOrAbandoned", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiveOrAbandoned);
                this.columnDistanceToCentreOfLateral = new global::System.Data.DataColumn("DistanceToCentreOfLateral", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceToCentreOfLateral);
                this.columnLateralDiameter = new global::System.Data.DataColumn("LateralDiameter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralDiameter);
                this.columnLateralType = new global::System.Data.DataColumn("LateralType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralType);
                this.columnDateTimeOpened = new global::System.Data.DataColumn("DateTimeOpened", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeOpened);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnReverseSetup = new global::System.Data.DataColumn("ReverseSetup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReverseSetup);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnArchived = new global::System.Data.DataColumn("Archived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchived);
                this.columnOperation = new global::System.Data.DataColumn("Operation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperation);
                this.columnChangedBy = new global::System.Data.DataColumn("ChangedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnUSERNAME = new global::System.Data.DataColumn("USERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERNAME);
                this.columnChanged = new global::System.Data.DataColumn("Changed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChanged);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("TDSLFSRecordForRCTKey5", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnRefID,
                                this.columnCOMPANY_ID,
                                this.columnRctID}, true));
                this.columnID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnRctID.AutoIncrement = true;
                this.columnRctID.AllowDBNull = false;
                this.columnRctID.ReadOnly = true;
                this.columnUSERNAME.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLES_RCT_EXPANDEDRow NewLFS_M2_TABLES_RCT_EXPANDEDRow() {
                return ((LFS_M2_TABLES_RCT_EXPANDEDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_M2_TABLES_RCT_EXPANDEDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_M2_TABLES_RCT_EXPANDEDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_M2_TABLES_RCT_EXPANDEDRowChanged != null)) {
                    this.LFS_M2_TABLES_RCT_EXPANDEDRowChanged(this, new LFS_M2_TABLES_RCT_EXPANDEDRowChangeEvent(((LFS_M2_TABLES_RCT_EXPANDEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_M2_TABLES_RCT_EXPANDEDRowChanging != null)) {
                    this.LFS_M2_TABLES_RCT_EXPANDEDRowChanging(this, new LFS_M2_TABLES_RCT_EXPANDEDRowChangeEvent(((LFS_M2_TABLES_RCT_EXPANDEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_M2_TABLES_RCT_EXPANDEDRowDeleted != null)) {
                    this.LFS_M2_TABLES_RCT_EXPANDEDRowDeleted(this, new LFS_M2_TABLES_RCT_EXPANDEDRowChangeEvent(((LFS_M2_TABLES_RCT_EXPANDEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_M2_TABLES_RCT_EXPANDEDRowDeleting != null)) {
                    this.LFS_M2_TABLES_RCT_EXPANDEDRowDeleting(this, new LFS_M2_TABLES_RCT_EXPANDEDRowChangeEvent(((LFS_M2_TABLES_RCT_EXPANDEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_M2_TABLES_RCT_EXPANDEDRow(LFS_M2_TABLES_RCT_EXPANDEDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TDSLFSRecordForRCT ds = new TDSLFSRecordForRCT();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_M2_TABLES_RCT_EXPANDEDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_POINT_REPAIRS_RCT_EXPANDEDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnRctID;
            
            private global::System.Data.DataColumn columnDetailID;
            
            private global::System.Data.DataColumn columnRepairSize;
            
            private global::System.Data.DataColumn columnInstallDate;
            
            private global::System.Data.DataColumn columnDistance;
            
            private global::System.Data.DataColumn columnCost;
            
            private global::System.Data.DataColumn columnReinstates;
            
            private global::System.Data.DataColumn columnLTAtMH;
            
            private global::System.Data.DataColumn columnVTAtMH;
            
            private global::System.Data.DataColumn columnLinerDistance;
            
            private global::System.Data.DataColumn columnDirection;
            
            private global::System.Data.DataColumn columnMHShot;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnExtraRepair;
            
            private global::System.Data.DataColumn columnCancelled;
            
            private global::System.Data.DataColumn columnApproved;
            
            private global::System.Data.DataColumn columnNotApproved;
            
            private global::System.Data.DataColumn columnArchived;
            
            private global::System.Data.DataColumn columnOperation;
            
            private global::System.Data.DataColumn columnChangedBy;
            
            private global::System.Data.DataColumn columnUSERNAME;
            
            private global::System.Data.DataColumn columnChanged;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRS_RCT_EXPANDEDDataTable() {
                this.TableName = "LFS_POINT_REPAIRS_RCT_EXPANDED";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_POINT_REPAIRS_RCT_EXPANDEDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_POINT_REPAIRS_RCT_EXPANDEDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RctIDColumn {
                get {
                    return this.columnRctID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailIDColumn {
                get {
                    return this.columnDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RepairSizeColumn {
                get {
                    return this.columnRepairSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallDateColumn {
                get {
                    return this.columnInstallDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceColumn {
                get {
                    return this.columnDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostColumn {
                get {
                    return this.columnCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReinstatesColumn {
                get {
                    return this.columnReinstates;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LTAtMHColumn {
                get {
                    return this.columnLTAtMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VTAtMHColumn {
                get {
                    return this.columnVTAtMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerDistanceColumn {
                get {
                    return this.columnLinerDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DirectionColumn {
                get {
                    return this.columnDirection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MHShotColumn {
                get {
                    return this.columnMHShot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraRepairColumn {
                get {
                    return this.columnExtraRepair;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CancelledColumn {
                get {
                    return this.columnCancelled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApprovedColumn {
                get {
                    return this.columnApproved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotApprovedColumn {
                get {
                    return this.columnNotApproved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArchivedColumn {
                get {
                    return this.columnArchived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperationColumn {
                get {
                    return this.columnOperation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USERNAMEColumn {
                get {
                    return this.columnUSERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedColumn {
                get {
                    return this.columnChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRS_RCT_EXPANDEDRow this[int index] {
                get {
                    return ((LFS_POINT_REPAIRS_RCT_EXPANDEDRow)(this.Rows[index]));
                }
            }
            
            public event LFS_POINT_REPAIRS_RCT_EXPANDEDRowChangeEventHandler LFS_POINT_REPAIRS_RCT_EXPANDEDRowChanging;
            
            public event LFS_POINT_REPAIRS_RCT_EXPANDEDRowChangeEventHandler LFS_POINT_REPAIRS_RCT_EXPANDEDRowChanged;
            
            public event LFS_POINT_REPAIRS_RCT_EXPANDEDRowChangeEventHandler LFS_POINT_REPAIRS_RCT_EXPANDEDRowDeleting;
            
            public event LFS_POINT_REPAIRS_RCT_EXPANDEDRowChangeEventHandler LFS_POINT_REPAIRS_RCT_EXPANDEDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_POINT_REPAIRS_RCT_EXPANDEDRow(LFS_POINT_REPAIRS_RCT_EXPANDEDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRS_RCT_EXPANDEDRow AddLFS_POINT_REPAIRS_RCT_EXPANDEDRow(
                        System.Guid ID, 
                        int RefID, 
                        int COMPANY_ID, 
                        string DetailID, 
                        string RepairSize, 
                        System.DateTime InstallDate, 
                        string Distance, 
                        decimal Cost, 
                        int Reinstates, 
                        string LTAtMH, 
                        string VTAtMH, 
                        string LinerDistance, 
                        string Direction, 
                        string MHShot, 
                        string Comments, 
                        bool Deleted, 
                        bool ExtraRepair, 
                        bool Cancelled, 
                        bool Approved, 
                        bool NotApproved, 
                        bool Archived, 
                        string Operation, 
                        int ChangedBy, 
                        string USERNAME, 
                        System.DateTime Changed) {
                LFS_POINT_REPAIRS_RCT_EXPANDEDRow rowLFS_POINT_REPAIRS_RCT_EXPANDEDRow = ((LFS_POINT_REPAIRS_RCT_EXPANDEDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        RefID,
                        COMPANY_ID,
                        null,
                        DetailID,
                        RepairSize,
                        InstallDate,
                        Distance,
                        Cost,
                        Reinstates,
                        LTAtMH,
                        VTAtMH,
                        LinerDistance,
                        Direction,
                        MHShot,
                        Comments,
                        Deleted,
                        ExtraRepair,
                        Cancelled,
                        Approved,
                        NotApproved,
                        Archived,
                        Operation,
                        ChangedBy,
                        USERNAME,
                        Changed};
                rowLFS_POINT_REPAIRS_RCT_EXPANDEDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_POINT_REPAIRS_RCT_EXPANDEDRow);
                return rowLFS_POINT_REPAIRS_RCT_EXPANDEDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRS_RCT_EXPANDEDRow FindByIDRefIDCOMPANY_IDRctID(System.Guid ID, int RefID, int COMPANY_ID, int RctID) {
                return ((LFS_POINT_REPAIRS_RCT_EXPANDEDRow)(this.Rows.Find(new object[] {
                            ID,
                            RefID,
                            COMPANY_ID,
                            RctID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_POINT_REPAIRS_RCT_EXPANDEDDataTable cln = ((LFS_POINT_REPAIRS_RCT_EXPANDEDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_POINT_REPAIRS_RCT_EXPANDEDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnRctID = base.Columns["RctID"];
                this.columnDetailID = base.Columns["DetailID"];
                this.columnRepairSize = base.Columns["RepairSize"];
                this.columnInstallDate = base.Columns["InstallDate"];
                this.columnDistance = base.Columns["Distance"];
                this.columnCost = base.Columns["Cost"];
                this.columnReinstates = base.Columns["Reinstates"];
                this.columnLTAtMH = base.Columns["LTAtMH"];
                this.columnVTAtMH = base.Columns["VTAtMH"];
                this.columnLinerDistance = base.Columns["LinerDistance"];
                this.columnDirection = base.Columns["Direction"];
                this.columnMHShot = base.Columns["MHShot"];
                this.columnComments = base.Columns["Comments"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnExtraRepair = base.Columns["ExtraRepair"];
                this.columnCancelled = base.Columns["Cancelled"];
                this.columnApproved = base.Columns["Approved"];
                this.columnNotApproved = base.Columns["NotApproved"];
                this.columnArchived = base.Columns["Archived"];
                this.columnOperation = base.Columns["Operation"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnUSERNAME = base.Columns["USERNAME"];
                this.columnChanged = base.Columns["Changed"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnRctID = new global::System.Data.DataColumn("RctID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRctID);
                this.columnDetailID = new global::System.Data.DataColumn("DetailID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailID);
                this.columnRepairSize = new global::System.Data.DataColumn("RepairSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepairSize);
                this.columnInstallDate = new global::System.Data.DataColumn("InstallDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallDate);
                this.columnDistance = new global::System.Data.DataColumn("Distance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistance);
                this.columnCost = new global::System.Data.DataColumn("Cost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCost);
                this.columnReinstates = new global::System.Data.DataColumn("Reinstates", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReinstates);
                this.columnLTAtMH = new global::System.Data.DataColumn("LTAtMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLTAtMH);
                this.columnVTAtMH = new global::System.Data.DataColumn("VTAtMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVTAtMH);
                this.columnLinerDistance = new global::System.Data.DataColumn("LinerDistance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerDistance);
                this.columnDirection = new global::System.Data.DataColumn("Direction", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirection);
                this.columnMHShot = new global::System.Data.DataColumn("MHShot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMHShot);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnExtraRepair = new global::System.Data.DataColumn("ExtraRepair", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraRepair);
                this.columnCancelled = new global::System.Data.DataColumn("Cancelled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancelled);
                this.columnApproved = new global::System.Data.DataColumn("Approved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApproved);
                this.columnNotApproved = new global::System.Data.DataColumn("NotApproved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotApproved);
                this.columnArchived = new global::System.Data.DataColumn("Archived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchived);
                this.columnOperation = new global::System.Data.DataColumn("Operation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperation);
                this.columnChangedBy = new global::System.Data.DataColumn("ChangedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnUSERNAME = new global::System.Data.DataColumn("USERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERNAME);
                this.columnChanged = new global::System.Data.DataColumn("Changed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChanged);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("TDSLFSRecordForRCTKey6", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnRefID,
                                this.columnCOMPANY_ID,
                                this.columnRctID}, true));
                this.columnID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnRctID.AutoIncrement = true;
                this.columnRctID.AllowDBNull = false;
                this.columnRctID.ReadOnly = true;
                this.columnDetailID.AllowDBNull = false;
                this.columnUSERNAME.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRS_RCT_EXPANDEDRow NewLFS_POINT_REPAIRS_RCT_EXPANDEDRow() {
                return ((LFS_POINT_REPAIRS_RCT_EXPANDEDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_POINT_REPAIRS_RCT_EXPANDEDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_POINT_REPAIRS_RCT_EXPANDEDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_POINT_REPAIRS_RCT_EXPANDEDRowChanged != null)) {
                    this.LFS_POINT_REPAIRS_RCT_EXPANDEDRowChanged(this, new LFS_POINT_REPAIRS_RCT_EXPANDEDRowChangeEvent(((LFS_POINT_REPAIRS_RCT_EXPANDEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_POINT_REPAIRS_RCT_EXPANDEDRowChanging != null)) {
                    this.LFS_POINT_REPAIRS_RCT_EXPANDEDRowChanging(this, new LFS_POINT_REPAIRS_RCT_EXPANDEDRowChangeEvent(((LFS_POINT_REPAIRS_RCT_EXPANDEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_POINT_REPAIRS_RCT_EXPANDEDRowDeleted != null)) {
                    this.LFS_POINT_REPAIRS_RCT_EXPANDEDRowDeleted(this, new LFS_POINT_REPAIRS_RCT_EXPANDEDRowChangeEvent(((LFS_POINT_REPAIRS_RCT_EXPANDEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_POINT_REPAIRS_RCT_EXPANDEDRowDeleting != null)) {
                    this.LFS_POINT_REPAIRS_RCT_EXPANDEDRowDeleting(this, new LFS_POINT_REPAIRS_RCT_EXPANDEDRowChangeEvent(((LFS_POINT_REPAIRS_RCT_EXPANDEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_POINT_REPAIRS_RCT_EXPANDEDRow(LFS_POINT_REPAIRS_RCT_EXPANDEDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TDSLFSRecordForRCT ds = new TDSLFSRecordForRCT();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_POINT_REPAIRS_RCT_EXPANDEDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_MASTER_AREA_RCTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnRctID;
            
            private global::System.Data.DataColumn columnChanges;
            
            private global::System.Data.DataColumn columnOperation;
            
            private global::System.Data.DataColumn columnChangedBy;
            
            private global::System.Data.DataColumn columnChanged;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA_RCTDataTable() {
                this.TableName = "LFS_MASTER_AREA_RCT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_MASTER_AREA_RCTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_MASTER_AREA_RCTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RctIDColumn {
                get {
                    return this.columnRctID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangesColumn {
                get {
                    return this.columnChanges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperationColumn {
                get {
                    return this.columnOperation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedColumn {
                get {
                    return this.columnChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA_RCTRow this[int index] {
                get {
                    return ((LFS_MASTER_AREA_RCTRow)(this.Rows[index]));
                }
            }
            
            public event LFS_MASTER_AREA_RCTRowChangeEventHandler LFS_MASTER_AREA_RCTRowChanging;
            
            public event LFS_MASTER_AREA_RCTRowChangeEventHandler LFS_MASTER_AREA_RCTRowChanged;
            
            public event LFS_MASTER_AREA_RCTRowChangeEventHandler LFS_MASTER_AREA_RCTRowDeleting;
            
            public event LFS_MASTER_AREA_RCTRowChangeEventHandler LFS_MASTER_AREA_RCTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_MASTER_AREA_RCTRow(LFS_MASTER_AREA_RCTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA_RCTRow AddLFS_MASTER_AREA_RCTRow(System.Guid ID, int COMPANY_ID, string Changes, string Operation, int ChangedBy, System.DateTime Changed) {
                LFS_MASTER_AREA_RCTRow rowLFS_MASTER_AREA_RCTRow = ((LFS_MASTER_AREA_RCTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        COMPANY_ID,
                        null,
                        Changes,
                        Operation,
                        ChangedBy,
                        Changed};
                rowLFS_MASTER_AREA_RCTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_MASTER_AREA_RCTRow);
                return rowLFS_MASTER_AREA_RCTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA_RCTRow FindByIDCOMPANY_IDRctID(System.Guid ID, int COMPANY_ID, int RctID) {
                return ((LFS_MASTER_AREA_RCTRow)(this.Rows.Find(new object[] {
                            ID,
                            COMPANY_ID,
                            RctID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_MASTER_AREA_RCTDataTable cln = ((LFS_MASTER_AREA_RCTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_MASTER_AREA_RCTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnRctID = base.Columns["RctID"];
                this.columnChanges = base.Columns["Changes"];
                this.columnOperation = base.Columns["Operation"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnChanged = base.Columns["Changed"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnRctID = new global::System.Data.DataColumn("RctID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRctID);
                this.columnChanges = new global::System.Data.DataColumn("Changes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChanges);
                this.columnOperation = new global::System.Data.DataColumn("Operation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperation);
                this.columnChangedBy = new global::System.Data.DataColumn("ChangedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnChanged = new global::System.Data.DataColumn("Changed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChanged);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("TDSLFSRecordForRCTKey7", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnCOMPANY_ID,
                                this.columnRctID}, true));
                this.columnID.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnRctID.AutoIncrement = true;
                this.columnRctID.AllowDBNull = false;
                this.columnRctID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA_RCTRow NewLFS_MASTER_AREA_RCTRow() {
                return ((LFS_MASTER_AREA_RCTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_MASTER_AREA_RCTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_MASTER_AREA_RCTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_MASTER_AREA_RCTRowChanged != null)) {
                    this.LFS_MASTER_AREA_RCTRowChanged(this, new LFS_MASTER_AREA_RCTRowChangeEvent(((LFS_MASTER_AREA_RCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_MASTER_AREA_RCTRowChanging != null)) {
                    this.LFS_MASTER_AREA_RCTRowChanging(this, new LFS_MASTER_AREA_RCTRowChangeEvent(((LFS_MASTER_AREA_RCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_MASTER_AREA_RCTRowDeleted != null)) {
                    this.LFS_MASTER_AREA_RCTRowDeleted(this, new LFS_MASTER_AREA_RCTRowChangeEvent(((LFS_MASTER_AREA_RCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_MASTER_AREA_RCTRowDeleting != null)) {
                    this.LFS_MASTER_AREA_RCTRowDeleting(this, new LFS_MASTER_AREA_RCTRowChangeEvent(((LFS_MASTER_AREA_RCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_MASTER_AREA_RCTRow(LFS_MASTER_AREA_RCTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TDSLFSRecordForRCT ds = new TDSLFSRecordForRCT();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_MASTER_AREA_RCTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_POINT_REPAIRS_RCTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnRctID;
            
            private global::System.Data.DataColumn columnChanges;
            
            private global::System.Data.DataColumn columnOperation;
            
            private global::System.Data.DataColumn columnChangedBy;
            
            private global::System.Data.DataColumn columnChanged;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRS_RCTDataTable() {
                this.TableName = "LFS_POINT_REPAIRS_RCT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_POINT_REPAIRS_RCTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_POINT_REPAIRS_RCTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RctIDColumn {
                get {
                    return this.columnRctID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangesColumn {
                get {
                    return this.columnChanges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperationColumn {
                get {
                    return this.columnOperation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedColumn {
                get {
                    return this.columnChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRS_RCTRow this[int index] {
                get {
                    return ((LFS_POINT_REPAIRS_RCTRow)(this.Rows[index]));
                }
            }
            
            public event LFS_POINT_REPAIRS_RCTRowChangeEventHandler LFS_POINT_REPAIRS_RCTRowChanging;
            
            public event LFS_POINT_REPAIRS_RCTRowChangeEventHandler LFS_POINT_REPAIRS_RCTRowChanged;
            
            public event LFS_POINT_REPAIRS_RCTRowChangeEventHandler LFS_POINT_REPAIRS_RCTRowDeleting;
            
            public event LFS_POINT_REPAIRS_RCTRowChangeEventHandler LFS_POINT_REPAIRS_RCTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_POINT_REPAIRS_RCTRow(LFS_POINT_REPAIRS_RCTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRS_RCTRow AddLFS_POINT_REPAIRS_RCTRow(System.Guid ID, int RefID, int COMPANY_ID, string Changes, string Operation, int ChangedBy, System.DateTime Changed) {
                LFS_POINT_REPAIRS_RCTRow rowLFS_POINT_REPAIRS_RCTRow = ((LFS_POINT_REPAIRS_RCTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        RefID,
                        COMPANY_ID,
                        null,
                        Changes,
                        Operation,
                        ChangedBy,
                        Changed};
                rowLFS_POINT_REPAIRS_RCTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_POINT_REPAIRS_RCTRow);
                return rowLFS_POINT_REPAIRS_RCTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRS_RCTRow FindByIDRefIDCOMPANY_IDRctID(System.Guid ID, int RefID, int COMPANY_ID, int RctID) {
                return ((LFS_POINT_REPAIRS_RCTRow)(this.Rows.Find(new object[] {
                            ID,
                            RefID,
                            COMPANY_ID,
                            RctID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_POINT_REPAIRS_RCTDataTable cln = ((LFS_POINT_REPAIRS_RCTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_POINT_REPAIRS_RCTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnRctID = base.Columns["RctID"];
                this.columnChanges = base.Columns["Changes"];
                this.columnOperation = base.Columns["Operation"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnChanged = base.Columns["Changed"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnRctID = new global::System.Data.DataColumn("RctID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRctID);
                this.columnChanges = new global::System.Data.DataColumn("Changes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChanges);
                this.columnOperation = new global::System.Data.DataColumn("Operation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperation);
                this.columnChangedBy = new global::System.Data.DataColumn("ChangedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnChanged = new global::System.Data.DataColumn("Changed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChanged);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("TDSLFSRecordForRCTKey8", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnRefID,
                                this.columnCOMPANY_ID,
                                this.columnRctID}, true));
                this.columnID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnRctID.AutoIncrement = true;
                this.columnRctID.AllowDBNull = false;
                this.columnRctID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRS_RCTRow NewLFS_POINT_REPAIRS_RCTRow() {
                return ((LFS_POINT_REPAIRS_RCTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_POINT_REPAIRS_RCTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_POINT_REPAIRS_RCTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_POINT_REPAIRS_RCTRowChanged != null)) {
                    this.LFS_POINT_REPAIRS_RCTRowChanged(this, new LFS_POINT_REPAIRS_RCTRowChangeEvent(((LFS_POINT_REPAIRS_RCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_POINT_REPAIRS_RCTRowChanging != null)) {
                    this.LFS_POINT_REPAIRS_RCTRowChanging(this, new LFS_POINT_REPAIRS_RCTRowChangeEvent(((LFS_POINT_REPAIRS_RCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_POINT_REPAIRS_RCTRowDeleted != null)) {
                    this.LFS_POINT_REPAIRS_RCTRowDeleted(this, new LFS_POINT_REPAIRS_RCTRowChangeEvent(((LFS_POINT_REPAIRS_RCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_POINT_REPAIRS_RCTRowDeleting != null)) {
                    this.LFS_POINT_REPAIRS_RCTRowDeleting(this, new LFS_POINT_REPAIRS_RCTRowChangeEvent(((LFS_POINT_REPAIRS_RCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_POINT_REPAIRS_RCTRow(LFS_POINT_REPAIRS_RCTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TDSLFSRecordForRCT ds = new TDSLFSRecordForRCT();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_POINT_REPAIRS_RCTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_M2_TABLES_RCTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnRctID;
            
            private global::System.Data.DataColumn columnChanges;
            
            private global::System.Data.DataColumn columnOperation;
            
            private global::System.Data.DataColumn columnChangedBy;
            
            private global::System.Data.DataColumn columnChanged;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLES_RCTDataTable() {
                this.TableName = "LFS_M2_TABLES_RCT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_M2_TABLES_RCTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_M2_TABLES_RCTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RctIDColumn {
                get {
                    return this.columnRctID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangesColumn {
                get {
                    return this.columnChanges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperationColumn {
                get {
                    return this.columnOperation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedColumn {
                get {
                    return this.columnChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLES_RCTRow this[int index] {
                get {
                    return ((LFS_M2_TABLES_RCTRow)(this.Rows[index]));
                }
            }
            
            public event LFS_M2_TABLES_RCTRowChangeEventHandler LFS_M2_TABLES_RCTRowChanging;
            
            public event LFS_M2_TABLES_RCTRowChangeEventHandler LFS_M2_TABLES_RCTRowChanged;
            
            public event LFS_M2_TABLES_RCTRowChangeEventHandler LFS_M2_TABLES_RCTRowDeleting;
            
            public event LFS_M2_TABLES_RCTRowChangeEventHandler LFS_M2_TABLES_RCTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_M2_TABLES_RCTRow(LFS_M2_TABLES_RCTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLES_RCTRow AddLFS_M2_TABLES_RCTRow(System.Guid ID, int RefID, int COMPANY_ID, string Changes, string Operation, int ChangedBy, System.DateTime Changed) {
                LFS_M2_TABLES_RCTRow rowLFS_M2_TABLES_RCTRow = ((LFS_M2_TABLES_RCTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        RefID,
                        COMPANY_ID,
                        null,
                        Changes,
                        Operation,
                        ChangedBy,
                        Changed};
                rowLFS_M2_TABLES_RCTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_M2_TABLES_RCTRow);
                return rowLFS_M2_TABLES_RCTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLES_RCTRow FindByIDRefIDCOMPANY_IDRctID(System.Guid ID, int RefID, int COMPANY_ID, int RctID) {
                return ((LFS_M2_TABLES_RCTRow)(this.Rows.Find(new object[] {
                            ID,
                            RefID,
                            COMPANY_ID,
                            RctID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_M2_TABLES_RCTDataTable cln = ((LFS_M2_TABLES_RCTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_M2_TABLES_RCTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnRctID = base.Columns["RctID"];
                this.columnChanges = base.Columns["Changes"];
                this.columnOperation = base.Columns["Operation"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnChanged = base.Columns["Changed"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnRctID = new global::System.Data.DataColumn("RctID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRctID);
                this.columnChanges = new global::System.Data.DataColumn("Changes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChanges);
                this.columnOperation = new global::System.Data.DataColumn("Operation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperation);
                this.columnChangedBy = new global::System.Data.DataColumn("ChangedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnChanged = new global::System.Data.DataColumn("Changed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChanged);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("TDSLFSRecordForRCTKey9", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnRefID,
                                this.columnCOMPANY_ID,
                                this.columnRctID}, true));
                this.columnID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnRctID.AutoIncrement = true;
                this.columnRctID.AllowDBNull = false;
                this.columnRctID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLES_RCTRow NewLFS_M2_TABLES_RCTRow() {
                return ((LFS_M2_TABLES_RCTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_M2_TABLES_RCTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_M2_TABLES_RCTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_M2_TABLES_RCTRowChanged != null)) {
                    this.LFS_M2_TABLES_RCTRowChanged(this, new LFS_M2_TABLES_RCTRowChangeEvent(((LFS_M2_TABLES_RCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_M2_TABLES_RCTRowChanging != null)) {
                    this.LFS_M2_TABLES_RCTRowChanging(this, new LFS_M2_TABLES_RCTRowChangeEvent(((LFS_M2_TABLES_RCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_M2_TABLES_RCTRowDeleted != null)) {
                    this.LFS_M2_TABLES_RCTRowDeleted(this, new LFS_M2_TABLES_RCTRowChangeEvent(((LFS_M2_TABLES_RCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_M2_TABLES_RCTRowDeleting != null)) {
                    this.LFS_M2_TABLES_RCTRowDeleting(this, new LFS_M2_TABLES_RCTRowChangeEvent(((LFS_M2_TABLES_RCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_M2_TABLES_RCTRow(LFS_M2_TABLES_RCTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TDSLFSRecordForRCT ds = new TDSLFSRecordForRCT();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_M2_TABLES_RCTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_MASTER_AREA2DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnRecordID;
            
            private global::System.Data.DataColumn columnClientID;
            
            private global::System.Data.DataColumn columnCOMPANIES_ID;
            
            private global::System.Data.DataColumn columnSubArea;
            
            private global::System.Data.DataColumn columnStreet;
            
            private global::System.Data.DataColumn columnUSMH;
            
            private global::System.Data.DataColumn columnDSMH;
            
            private global::System.Data.DataColumn columnSize_;
            
            private global::System.Data.DataColumn columnScaledLength;
            
            private global::System.Data.DataColumn columnP1Date;
            
            private global::System.Data.DataColumn columnActualLength;
            
            private global::System.Data.DataColumn columnLiveLats;
            
            private global::System.Data.DataColumn columnCXIsRemoved;
            
            private global::System.Data.DataColumn columnM1Date;
            
            private global::System.Data.DataColumn columnM2Date;
            
            private global::System.Data.DataColumn columnInstallDate;
            
            private global::System.Data.DataColumn columnFinalVideo;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnIssueIdentified;
            
            private global::System.Data.DataColumn columnIssueResolved;
            
            private global::System.Data.DataColumn columnFullLengthLining;
            
            private global::System.Data.DataColumn columnSubcontractorLining;
            
            private global::System.Data.DataColumn columnOutOfScopeInArea;
            
            private global::System.Data.DataColumn columnIssueGivenToBayCity;
            
            private global::System.Data.DataColumn columnConfirmedSize;
            
            private global::System.Data.DataColumn columnInstallRate;
            
            private global::System.Data.DataColumn columnDeadlineDate;
            
            private global::System.Data.DataColumn columnProposedLiningDate;
            
            private global::System.Data.DataColumn columnSalesIssue;
            
            private global::System.Data.DataColumn columnLFSIssue;
            
            private global::System.Data.DataColumn columnClientIssue;
            
            private global::System.Data.DataColumn columnInvestigationIssue;
            
            private global::System.Data.DataColumn columnPointLining;
            
            private global::System.Data.DataColumn columnGrouting;
            
            private global::System.Data.DataColumn columnLateralLining;
            
            private global::System.Data.DataColumn columnVacExDate;
            
            private global::System.Data.DataColumn columnPusherDate;
            
            private global::System.Data.DataColumn columnLinerOrdered;
            
            private global::System.Data.DataColumn columnRestoration;
            
            private global::System.Data.DataColumn columnGroutDate;
            
            private global::System.Data.DataColumn columnJLiner;
            
            private global::System.Data.DataColumn columnRehabAssessment;
            
            private global::System.Data.DataColumn columnEstimatedJoints;
            
            private global::System.Data.DataColumn columnJointsTestSealed;
            
            private global::System.Data.DataColumn columnPreFlushDate;
            
            private global::System.Data.DataColumn columnPreVideoDate;
            
            private global::System.Data.DataColumn columnUSMHMN;
            
            private global::System.Data.DataColumn columnDSMHMN;
            
            private global::System.Data.DataColumn columnUSMHDepth;
            
            private global::System.Data.DataColumn columnDSMHDepth;
            
            private global::System.Data.DataColumn columnMeasurementsTakenBy;
            
            private global::System.Data.DataColumn columnSteelTapeThruPipe;
            
            private global::System.Data.DataColumn columnUSMHAtMouth1200;
            
            private global::System.Data.DataColumn columnUSMHAtMouth100;
            
            private global::System.Data.DataColumn columnUSMHAtMouth200;
            
            private global::System.Data.DataColumn columnUSMHAtMouth300;
            
            private global::System.Data.DataColumn columnUSMHAtMouth400;
            
            private global::System.Data.DataColumn columnUSMHAtMouth500;
            
            private global::System.Data.DataColumn columnDSMHAtMouth1200;
            
            private global::System.Data.DataColumn columnDSMHAtMouth100;
            
            private global::System.Data.DataColumn columnDSMHAtMouth200;
            
            private global::System.Data.DataColumn columnDSMHAtMouth300;
            
            private global::System.Data.DataColumn columnDSMHAtMouth400;
            
            private global::System.Data.DataColumn columnDSMHAtMouth500;
            
            private global::System.Data.DataColumn columnHydrantAddress;
            
            private global::System.Data.DataColumn columnDistanceToInversionMH;
            
            private global::System.Data.DataColumn columnRampsRequired;
            
            private global::System.Data.DataColumn columnDegreeOfTrafficControl;
            
            private global::System.Data.DataColumn columnStandarBypass;
            
            private global::System.Data.DataColumn columnHydroWireDetails;
            
            private global::System.Data.DataColumn columnPipeMaterialType;
            
            private global::System.Data.DataColumn columnCappedLaterals;
            
            private global::System.Data.DataColumn columnRoboticPrepRequired;
            
            private global::System.Data.DataColumn columnPipeSizeChange;
            
            private global::System.Data.DataColumn columnM1Comments;
            
            private global::System.Data.DataColumn columnVideoDoneFrom;
            
            private global::System.Data.DataColumn columnToManhole;
            
            private global::System.Data.DataColumn columnCutterDescriptionDuringMeasuring;
            
            private global::System.Data.DataColumn columnFullLengthPointLiner;
            
            private global::System.Data.DataColumn columnBypassRequired;
            
            private global::System.Data.DataColumn columnRoboticDistances;
            
            private global::System.Data.DataColumn columnTrafficControlDetails;
            
            private global::System.Data.DataColumn columnLineWithID;
            
            private global::System.Data.DataColumn columnSchoolZone;
            
            private global::System.Data.DataColumn columnRestaurantArea;
            
            private global::System.Data.DataColumn columnCarwashLaundromat;
            
            private global::System.Data.DataColumn columnHydroPulley;
            
            private global::System.Data.DataColumn columnFridgeCart;
            
            private global::System.Data.DataColumn columnTwoInchPump;
            
            private global::System.Data.DataColumn columnSixInchBypass;
            
            private global::System.Data.DataColumn columnScaffolding;
            
            private global::System.Data.DataColumn columnWinchExtension;
            
            private global::System.Data.DataColumn columnExtraGenerator;
            
            private global::System.Data.DataColumn columnGreyCableExtension;
            
            private global::System.Data.DataColumn columnEasementMats;
            
            private global::System.Data.DataColumn columnMeasurementType;
            
            private global::System.Data.DataColumn columnDropPipe;
            
            private global::System.Data.DataColumn columnDropPipeInvertDepth;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnMeasuredFromManhole;
            
            private global::System.Data.DataColumn columnMainLined;
            
            private global::System.Data.DataColumn columnBenchingIssue;
            
            private global::System.Data.DataColumn columnArchived;
            
            private global::System.Data.DataColumn columnHistory;
            
            private global::System.Data.DataColumn columnNumLats;
            
            private global::System.Data.DataColumn columnNotLinedYet;
            
            private global::System.Data.DataColumn columnAllMeasured;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnProvState;
            
            private global::System.Data.DataColumn columnNAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA2DataTable() {
                this.TableName = "LFS_MASTER_AREA2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_MASTER_AREA2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_MASTER_AREA2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordIDColumn {
                get {
                    return this.columnRecordID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANIES_IDColumn {
                get {
                    return this.columnCOMPANIES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubAreaColumn {
                get {
                    return this.columnSubArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHColumn {
                get {
                    return this.columnUSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHColumn {
                get {
                    return this.columnDSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Size_Column {
                get {
                    return this.columnSize_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScaledLengthColumn {
                get {
                    return this.columnScaledLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P1DateColumn {
                get {
                    return this.columnP1Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActualLengthColumn {
                get {
                    return this.columnActualLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LiveLatsColumn {
                get {
                    return this.columnLiveLats;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CXIsRemovedColumn {
                get {
                    return this.columnCXIsRemoved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M1DateColumn {
                get {
                    return this.columnM1Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M2DateColumn {
                get {
                    return this.columnM2Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallDateColumn {
                get {
                    return this.columnInstallDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinalVideoColumn {
                get {
                    return this.columnFinalVideo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueIdentifiedColumn {
                get {
                    return this.columnIssueIdentified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueResolvedColumn {
                get {
                    return this.columnIssueResolved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullLengthLiningColumn {
                get {
                    return this.columnFullLengthLining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubcontractorLiningColumn {
                get {
                    return this.columnSubcontractorLining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutOfScopeInAreaColumn {
                get {
                    return this.columnOutOfScopeInArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueGivenToBayCityColumn {
                get {
                    return this.columnIssueGivenToBayCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConfirmedSizeColumn {
                get {
                    return this.columnConfirmedSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstallRateColumn {
                get {
                    return this.columnInstallRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeadlineDateColumn {
                get {
                    return this.columnDeadlineDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProposedLiningDateColumn {
                get {
                    return this.columnProposedLiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesIssueColumn {
                get {
                    return this.columnSalesIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LFSIssueColumn {
                get {
                    return this.columnLFSIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIssueColumn {
                get {
                    return this.columnClientIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvestigationIssueColumn {
                get {
                    return this.columnInvestigationIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PointLiningColumn {
                get {
                    return this.columnPointLining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroutingColumn {
                get {
                    return this.columnGrouting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralLiningColumn {
                get {
                    return this.columnLateralLining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VacExDateColumn {
                get {
                    return this.columnVacExDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PusherDateColumn {
                get {
                    return this.columnPusherDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerOrderedColumn {
                get {
                    return this.columnLinerOrdered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RestorationColumn {
                get {
                    return this.columnRestoration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroutDateColumn {
                get {
                    return this.columnGroutDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JLinerColumn {
                get {
                    return this.columnJLiner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RehabAssessmentColumn {
                get {
                    return this.columnRehabAssessment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimatedJointsColumn {
                get {
                    return this.columnEstimatedJoints;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JointsTestSealedColumn {
                get {
                    return this.columnJointsTestSealed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreFlushDateColumn {
                get {
                    return this.columnPreFlushDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreVideoDateColumn {
                get {
                    return this.columnPreVideoDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHMNColumn {
                get {
                    return this.columnUSMHMN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHMNColumn {
                get {
                    return this.columnDSMHMN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHDepthColumn {
                get {
                    return this.columnUSMHDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHDepthColumn {
                get {
                    return this.columnDSMHDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementsTakenByColumn {
                get {
                    return this.columnMeasurementsTakenBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SteelTapeThruPipeColumn {
                get {
                    return this.columnSteelTapeThruPipe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth1200Column {
                get {
                    return this.columnUSMHAtMouth1200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth100Column {
                get {
                    return this.columnUSMHAtMouth100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth200Column {
                get {
                    return this.columnUSMHAtMouth200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth300Column {
                get {
                    return this.columnUSMHAtMouth300;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth400Column {
                get {
                    return this.columnUSMHAtMouth400;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHAtMouth500Column {
                get {
                    return this.columnUSMHAtMouth500;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth1200Column {
                get {
                    return this.columnDSMHAtMouth1200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth100Column {
                get {
                    return this.columnDSMHAtMouth100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth200Column {
                get {
                    return this.columnDSMHAtMouth200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth300Column {
                get {
                    return this.columnDSMHAtMouth300;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth400Column {
                get {
                    return this.columnDSMHAtMouth400;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHAtMouth500Column {
                get {
                    return this.columnDSMHAtMouth500;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HydrantAddressColumn {
                get {
                    return this.columnHydrantAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceToInversionMHColumn {
                get {
                    return this.columnDistanceToInversionMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RampsRequiredColumn {
                get {
                    return this.columnRampsRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DegreeOfTrafficControlColumn {
                get {
                    return this.columnDegreeOfTrafficControl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandarBypassColumn {
                get {
                    return this.columnStandarBypass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HydroWireDetailsColumn {
                get {
                    return this.columnHydroWireDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PipeMaterialTypeColumn {
                get {
                    return this.columnPipeMaterialType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CappedLateralsColumn {
                get {
                    return this.columnCappedLaterals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoboticPrepRequiredColumn {
                get {
                    return this.columnRoboticPrepRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PipeSizeChangeColumn {
                get {
                    return this.columnPipeSizeChange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M1CommentsColumn {
                get {
                    return this.columnM1Comments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VideoDoneFromColumn {
                get {
                    return this.columnVideoDoneFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToManholeColumn {
                get {
                    return this.columnToManhole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CutterDescriptionDuringMeasuringColumn {
                get {
                    return this.columnCutterDescriptionDuringMeasuring;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullLengthPointLinerColumn {
                get {
                    return this.columnFullLengthPointLiner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BypassRequiredColumn {
                get {
                    return this.columnBypassRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoboticDistancesColumn {
                get {
                    return this.columnRoboticDistances;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrafficControlDetailsColumn {
                get {
                    return this.columnTrafficControlDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineWithIDColumn {
                get {
                    return this.columnLineWithID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchoolZoneColumn {
                get {
                    return this.columnSchoolZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RestaurantAreaColumn {
                get {
                    return this.columnRestaurantArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarwashLaundromatColumn {
                get {
                    return this.columnCarwashLaundromat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HydroPulleyColumn {
                get {
                    return this.columnHydroPulley;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FridgeCartColumn {
                get {
                    return this.columnFridgeCart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TwoInchPumpColumn {
                get {
                    return this.columnTwoInchPump;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SixInchBypassColumn {
                get {
                    return this.columnSixInchBypass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScaffoldingColumn {
                get {
                    return this.columnScaffolding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WinchExtensionColumn {
                get {
                    return this.columnWinchExtension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraGeneratorColumn {
                get {
                    return this.columnExtraGenerator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GreyCableExtensionColumn {
                get {
                    return this.columnGreyCableExtension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EasementMatsColumn {
                get {
                    return this.columnEasementMats;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementTypeColumn {
                get {
                    return this.columnMeasurementType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DropPipeColumn {
                get {
                    return this.columnDropPipe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DropPipeInvertDepthColumn {
                get {
                    return this.columnDropPipeInvertDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasuredFromManholeColumn {
                get {
                    return this.columnMeasuredFromManhole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MainLinedColumn {
                get {
                    return this.columnMainLined;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BenchingIssueColumn {
                get {
                    return this.columnBenchingIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArchivedColumn {
                get {
                    return this.columnArchived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryColumn {
                get {
                    return this.columnHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumLatsColumn {
                get {
                    return this.columnNumLats;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotLinedYetColumn {
                get {
                    return this.columnNotLinedYet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllMeasuredColumn {
                get {
                    return this.columnAllMeasured;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProvStateColumn {
                get {
                    return this.columnProvState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA2Row this[int index] {
                get {
                    return ((LFS_MASTER_AREA2Row)(this.Rows[index]));
                }
            }
            
            public event LFS_MASTER_AREA2RowChangeEventHandler LFS_MASTER_AREA2RowChanging;
            
            public event LFS_MASTER_AREA2RowChangeEventHandler LFS_MASTER_AREA2RowChanged;
            
            public event LFS_MASTER_AREA2RowChangeEventHandler LFS_MASTER_AREA2RowDeleting;
            
            public event LFS_MASTER_AREA2RowChangeEventHandler LFS_MASTER_AREA2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_MASTER_AREA2Row(LFS_MASTER_AREA2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA2Row AddLFS_MASTER_AREA2Row(
                        System.Guid ID, 
                        int COMPANY_ID, 
                        string RecordID, 
                        string ClientID, 
                        int COMPANIES_ID, 
                        string SubArea, 
                        string Street, 
                        string USMH, 
                        string DSMH, 
                        string Size_, 
                        string ScaledLength, 
                        System.DateTime P1Date, 
                        string ActualLength, 
                        double LiveLats, 
                        string CXIsRemoved, 
                        System.DateTime M1Date, 
                        System.DateTime M2Date, 
                        System.DateTime InstallDate, 
                        System.DateTime FinalVideo, 
                        string Comments, 
                        bool IssueIdentified, 
                        bool IssueResolved, 
                        bool FullLengthLining, 
                        bool SubcontractorLining, 
                        bool OutOfScopeInArea, 
                        bool IssueGivenToBayCity, 
                        int ConfirmedSize, 
                        decimal InstallRate, 
                        System.DateTime DeadlineDate, 
                        System.DateTime ProposedLiningDate, 
                        bool SalesIssue, 
                        bool LFSIssue, 
                        bool ClientIssue, 
                        bool InvestigationIssue, 
                        bool PointLining, 
                        bool Grouting, 
                        bool LateralLining, 
                        System.DateTime VacExDate, 
                        System.DateTime PusherDate, 
                        System.DateTime LinerOrdered, 
                        System.DateTime Restoration, 
                        System.DateTime GroutDate, 
                        bool JLiner, 
                        bool RehabAssessment, 
                        int EstimatedJoints, 
                        int JointsTestSealed, 
                        System.DateTime PreFlushDate, 
                        System.DateTime PreVideoDate, 
                        string USMHMN, 
                        string DSMHMN, 
                        string USMHDepth, 
                        string DSMHDepth, 
                        string MeasurementsTakenBy, 
                        string SteelTapeThruPipe, 
                        double USMHAtMouth1200, 
                        double USMHAtMouth100, 
                        double USMHAtMouth200, 
                        double USMHAtMouth300, 
                        double USMHAtMouth400, 
                        double USMHAtMouth500, 
                        double DSMHAtMouth1200, 
                        double DSMHAtMouth100, 
                        double DSMHAtMouth200, 
                        double DSMHAtMouth300, 
                        double DSMHAtMouth400, 
                        double DSMHAtMouth500, 
                        string HydrantAddress, 
                        string DistanceToInversionMH, 
                        bool RampsRequired, 
                        string DegreeOfTrafficControl, 
                        bool StandarBypass, 
                        string HydroWireDetails, 
                        string PipeMaterialType, 
                        int CappedLaterals, 
                        bool RoboticPrepRequired, 
                        bool PipeSizeChange, 
                        string M1Comments, 
                        string VideoDoneFrom, 
                        string ToManhole, 
                        string CutterDescriptionDuringMeasuring, 
                        bool FullLengthPointLiner, 
                        bool BypassRequired, 
                        string RoboticDistances, 
                        string TrafficControlDetails, 
                        string LineWithID, 
                        bool SchoolZone, 
                        bool RestaurantArea, 
                        bool CarwashLaundromat, 
                        bool HydroPulley, 
                        bool FridgeCart, 
                        bool TwoInchPump, 
                        bool SixInchBypass, 
                        bool Scaffolding, 
                        bool WinchExtension, 
                        bool ExtraGenerator, 
                        bool GreyCableExtension, 
                        bool EasementMats, 
                        string MeasurementType, 
                        bool DropPipe, 
                        string DropPipeInvertDepth, 
                        bool Deleted, 
                        string MeasuredFromManhole, 
                        string MainLined, 
                        string BenchingIssue, 
                        bool Archived, 
                        string History, 
                        int NumLats, 
                        int NotLinedYet, 
                        bool AllMeasured, 
                        string City, 
                        string ProvState, 
                        string NAME) {
                LFS_MASTER_AREA2Row rowLFS_MASTER_AREA2Row = ((LFS_MASTER_AREA2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        COMPANY_ID,
                        RecordID,
                        ClientID,
                        COMPANIES_ID,
                        SubArea,
                        Street,
                        USMH,
                        DSMH,
                        Size_,
                        ScaledLength,
                        P1Date,
                        ActualLength,
                        LiveLats,
                        CXIsRemoved,
                        M1Date,
                        M2Date,
                        InstallDate,
                        FinalVideo,
                        Comments,
                        IssueIdentified,
                        IssueResolved,
                        FullLengthLining,
                        SubcontractorLining,
                        OutOfScopeInArea,
                        IssueGivenToBayCity,
                        ConfirmedSize,
                        InstallRate,
                        DeadlineDate,
                        ProposedLiningDate,
                        SalesIssue,
                        LFSIssue,
                        ClientIssue,
                        InvestigationIssue,
                        PointLining,
                        Grouting,
                        LateralLining,
                        VacExDate,
                        PusherDate,
                        LinerOrdered,
                        Restoration,
                        GroutDate,
                        JLiner,
                        RehabAssessment,
                        EstimatedJoints,
                        JointsTestSealed,
                        PreFlushDate,
                        PreVideoDate,
                        USMHMN,
                        DSMHMN,
                        USMHDepth,
                        DSMHDepth,
                        MeasurementsTakenBy,
                        SteelTapeThruPipe,
                        USMHAtMouth1200,
                        USMHAtMouth100,
                        USMHAtMouth200,
                        USMHAtMouth300,
                        USMHAtMouth400,
                        USMHAtMouth500,
                        DSMHAtMouth1200,
                        DSMHAtMouth100,
                        DSMHAtMouth200,
                        DSMHAtMouth300,
                        DSMHAtMouth400,
                        DSMHAtMouth500,
                        HydrantAddress,
                        DistanceToInversionMH,
                        RampsRequired,
                        DegreeOfTrafficControl,
                        StandarBypass,
                        HydroWireDetails,
                        PipeMaterialType,
                        CappedLaterals,
                        RoboticPrepRequired,
                        PipeSizeChange,
                        M1Comments,
                        VideoDoneFrom,
                        ToManhole,
                        CutterDescriptionDuringMeasuring,
                        FullLengthPointLiner,
                        BypassRequired,
                        RoboticDistances,
                        TrafficControlDetails,
                        LineWithID,
                        SchoolZone,
                        RestaurantArea,
                        CarwashLaundromat,
                        HydroPulley,
                        FridgeCart,
                        TwoInchPump,
                        SixInchBypass,
                        Scaffolding,
                        WinchExtension,
                        ExtraGenerator,
                        GreyCableExtension,
                        EasementMats,
                        MeasurementType,
                        DropPipe,
                        DropPipeInvertDepth,
                        Deleted,
                        MeasuredFromManhole,
                        MainLined,
                        BenchingIssue,
                        Archived,
                        History,
                        NumLats,
                        NotLinedYet,
                        AllMeasured,
                        City,
                        ProvState,
                        NAME};
                rowLFS_MASTER_AREA2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_MASTER_AREA2Row);
                return rowLFS_MASTER_AREA2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA2Row FindByIDCOMPANY_ID(System.Guid ID, int COMPANY_ID) {
                return ((LFS_MASTER_AREA2Row)(this.Rows.Find(new object[] {
                            ID,
                            COMPANY_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_MASTER_AREA2DataTable cln = ((LFS_MASTER_AREA2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_MASTER_AREA2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnRecordID = base.Columns["RecordID"];
                this.columnClientID = base.Columns["ClientID"];
                this.columnCOMPANIES_ID = base.Columns["COMPANIES_ID"];
                this.columnSubArea = base.Columns["SubArea"];
                this.columnStreet = base.Columns["Street"];
                this.columnUSMH = base.Columns["USMH"];
                this.columnDSMH = base.Columns["DSMH"];
                this.columnSize_ = base.Columns["Size_"];
                this.columnScaledLength = base.Columns["ScaledLength"];
                this.columnP1Date = base.Columns["P1Date"];
                this.columnActualLength = base.Columns["ActualLength"];
                this.columnLiveLats = base.Columns["LiveLats"];
                this.columnCXIsRemoved = base.Columns["CXIsRemoved"];
                this.columnM1Date = base.Columns["M1Date"];
                this.columnM2Date = base.Columns["M2Date"];
                this.columnInstallDate = base.Columns["InstallDate"];
                this.columnFinalVideo = base.Columns["FinalVideo"];
                this.columnComments = base.Columns["Comments"];
                this.columnIssueIdentified = base.Columns["IssueIdentified"];
                this.columnIssueResolved = base.Columns["IssueResolved"];
                this.columnFullLengthLining = base.Columns["FullLengthLining"];
                this.columnSubcontractorLining = base.Columns["SubcontractorLining"];
                this.columnOutOfScopeInArea = base.Columns["OutOfScopeInArea"];
                this.columnIssueGivenToBayCity = base.Columns["IssueGivenToBayCity"];
                this.columnConfirmedSize = base.Columns["ConfirmedSize"];
                this.columnInstallRate = base.Columns["InstallRate"];
                this.columnDeadlineDate = base.Columns["DeadlineDate"];
                this.columnProposedLiningDate = base.Columns["ProposedLiningDate"];
                this.columnSalesIssue = base.Columns["SalesIssue"];
                this.columnLFSIssue = base.Columns["LFSIssue"];
                this.columnClientIssue = base.Columns["ClientIssue"];
                this.columnInvestigationIssue = base.Columns["InvestigationIssue"];
                this.columnPointLining = base.Columns["PointLining"];
                this.columnGrouting = base.Columns["Grouting"];
                this.columnLateralLining = base.Columns["LateralLining"];
                this.columnVacExDate = base.Columns["VacExDate"];
                this.columnPusherDate = base.Columns["PusherDate"];
                this.columnLinerOrdered = base.Columns["LinerOrdered"];
                this.columnRestoration = base.Columns["Restoration"];
                this.columnGroutDate = base.Columns["GroutDate"];
                this.columnJLiner = base.Columns["JLiner"];
                this.columnRehabAssessment = base.Columns["RehabAssessment"];
                this.columnEstimatedJoints = base.Columns["EstimatedJoints"];
                this.columnJointsTestSealed = base.Columns["JointsTestSealed"];
                this.columnPreFlushDate = base.Columns["PreFlushDate"];
                this.columnPreVideoDate = base.Columns["PreVideoDate"];
                this.columnUSMHMN = base.Columns["USMHMN"];
                this.columnDSMHMN = base.Columns["DSMHMN"];
                this.columnUSMHDepth = base.Columns["USMHDepth"];
                this.columnDSMHDepth = base.Columns["DSMHDepth"];
                this.columnMeasurementsTakenBy = base.Columns["MeasurementsTakenBy"];
                this.columnSteelTapeThruPipe = base.Columns["SteelTapeThruPipe"];
                this.columnUSMHAtMouth1200 = base.Columns["USMHAtMouth1200"];
                this.columnUSMHAtMouth100 = base.Columns["USMHAtMouth100"];
                this.columnUSMHAtMouth200 = base.Columns["USMHAtMouth200"];
                this.columnUSMHAtMouth300 = base.Columns["USMHAtMouth300"];
                this.columnUSMHAtMouth400 = base.Columns["USMHAtMouth400"];
                this.columnUSMHAtMouth500 = base.Columns["USMHAtMouth500"];
                this.columnDSMHAtMouth1200 = base.Columns["DSMHAtMouth1200"];
                this.columnDSMHAtMouth100 = base.Columns["DSMHAtMouth100"];
                this.columnDSMHAtMouth200 = base.Columns["DSMHAtMouth200"];
                this.columnDSMHAtMouth300 = base.Columns["DSMHAtMouth300"];
                this.columnDSMHAtMouth400 = base.Columns["DSMHAtMouth400"];
                this.columnDSMHAtMouth500 = base.Columns["DSMHAtMouth500"];
                this.columnHydrantAddress = base.Columns["HydrantAddress"];
                this.columnDistanceToInversionMH = base.Columns["DistanceToInversionMH"];
                this.columnRampsRequired = base.Columns["RampsRequired"];
                this.columnDegreeOfTrafficControl = base.Columns["DegreeOfTrafficControl"];
                this.columnStandarBypass = base.Columns["StandarBypass"];
                this.columnHydroWireDetails = base.Columns["HydroWireDetails"];
                this.columnPipeMaterialType = base.Columns["PipeMaterialType"];
                this.columnCappedLaterals = base.Columns["CappedLaterals"];
                this.columnRoboticPrepRequired = base.Columns["RoboticPrepRequired"];
                this.columnPipeSizeChange = base.Columns["PipeSizeChange"];
                this.columnM1Comments = base.Columns["M1Comments"];
                this.columnVideoDoneFrom = base.Columns["VideoDoneFrom"];
                this.columnToManhole = base.Columns["ToManhole"];
                this.columnCutterDescriptionDuringMeasuring = base.Columns["CutterDescriptionDuringMeasuring"];
                this.columnFullLengthPointLiner = base.Columns["FullLengthPointLiner"];
                this.columnBypassRequired = base.Columns["BypassRequired"];
                this.columnRoboticDistances = base.Columns["RoboticDistances"];
                this.columnTrafficControlDetails = base.Columns["TrafficControlDetails"];
                this.columnLineWithID = base.Columns["LineWithID"];
                this.columnSchoolZone = base.Columns["SchoolZone"];
                this.columnRestaurantArea = base.Columns["RestaurantArea"];
                this.columnCarwashLaundromat = base.Columns["CarwashLaundromat"];
                this.columnHydroPulley = base.Columns["HydroPulley"];
                this.columnFridgeCart = base.Columns["FridgeCart"];
                this.columnTwoInchPump = base.Columns["TwoInchPump"];
                this.columnSixInchBypass = base.Columns["SixInchBypass"];
                this.columnScaffolding = base.Columns["Scaffolding"];
                this.columnWinchExtension = base.Columns["WinchExtension"];
                this.columnExtraGenerator = base.Columns["ExtraGenerator"];
                this.columnGreyCableExtension = base.Columns["GreyCableExtension"];
                this.columnEasementMats = base.Columns["EasementMats"];
                this.columnMeasurementType = base.Columns["MeasurementType"];
                this.columnDropPipe = base.Columns["DropPipe"];
                this.columnDropPipeInvertDepth = base.Columns["DropPipeInvertDepth"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnMeasuredFromManhole = base.Columns["MeasuredFromManhole"];
                this.columnMainLined = base.Columns["MainLined"];
                this.columnBenchingIssue = base.Columns["BenchingIssue"];
                this.columnArchived = base.Columns["Archived"];
                this.columnHistory = base.Columns["History"];
                this.columnNumLats = base.Columns["NumLats"];
                this.columnNotLinedYet = base.Columns["NotLinedYet"];
                this.columnAllMeasured = base.Columns["AllMeasured"];
                this.columnCity = base.Columns["City"];
                this.columnProvState = base.Columns["ProvState"];
                this.columnNAME = base.Columns["NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnRecordID = new global::System.Data.DataColumn("RecordID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordID);
                this.columnClientID = new global::System.Data.DataColumn("ClientID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnCOMPANIES_ID = new global::System.Data.DataColumn("COMPANIES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANIES_ID);
                this.columnSubArea = new global::System.Data.DataColumn("SubArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubArea);
                this.columnStreet = new global::System.Data.DataColumn("Street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnUSMH = new global::System.Data.DataColumn("USMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMH);
                this.columnDSMH = new global::System.Data.DataColumn("DSMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMH);
                this.columnSize_ = new global::System.Data.DataColumn("Size_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_);
                this.columnScaledLength = new global::System.Data.DataColumn("ScaledLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaledLength);
                this.columnP1Date = new global::System.Data.DataColumn("P1Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP1Date);
                this.columnActualLength = new global::System.Data.DataColumn("ActualLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualLength);
                this.columnLiveLats = new global::System.Data.DataColumn("LiveLats", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiveLats);
                this.columnCXIsRemoved = new global::System.Data.DataColumn("CXIsRemoved", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXIsRemoved);
                this.columnM1Date = new global::System.Data.DataColumn("M1Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM1Date);
                this.columnM2Date = new global::System.Data.DataColumn("M2Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM2Date);
                this.columnInstallDate = new global::System.Data.DataColumn("InstallDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallDate);
                this.columnFinalVideo = new global::System.Data.DataColumn("FinalVideo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalVideo);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnIssueIdentified = new global::System.Data.DataColumn("IssueIdentified", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueIdentified);
                this.columnIssueResolved = new global::System.Data.DataColumn("IssueResolved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueResolved);
                this.columnFullLengthLining = new global::System.Data.DataColumn("FullLengthLining", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullLengthLining);
                this.columnSubcontractorLining = new global::System.Data.DataColumn("SubcontractorLining", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubcontractorLining);
                this.columnOutOfScopeInArea = new global::System.Data.DataColumn("OutOfScopeInArea", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutOfScopeInArea);
                this.columnIssueGivenToBayCity = new global::System.Data.DataColumn("IssueGivenToBayCity", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueGivenToBayCity);
                this.columnConfirmedSize = new global::System.Data.DataColumn("ConfirmedSize", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmedSize);
                this.columnInstallRate = new global::System.Data.DataColumn("InstallRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallRate);
                this.columnDeadlineDate = new global::System.Data.DataColumn("DeadlineDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeadlineDate);
                this.columnProposedLiningDate = new global::System.Data.DataColumn("ProposedLiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProposedLiningDate);
                this.columnSalesIssue = new global::System.Data.DataColumn("SalesIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesIssue);
                this.columnLFSIssue = new global::System.Data.DataColumn("LFSIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLFSIssue);
                this.columnClientIssue = new global::System.Data.DataColumn("ClientIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientIssue);
                this.columnInvestigationIssue = new global::System.Data.DataColumn("InvestigationIssue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestigationIssue);
                this.columnPointLining = new global::System.Data.DataColumn("PointLining", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPointLining);
                this.columnGrouting = new global::System.Data.DataColumn("Grouting", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrouting);
                this.columnLateralLining = new global::System.Data.DataColumn("LateralLining", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralLining);
                this.columnVacExDate = new global::System.Data.DataColumn("VacExDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacExDate);
                this.columnPusherDate = new global::System.Data.DataColumn("PusherDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPusherDate);
                this.columnLinerOrdered = new global::System.Data.DataColumn("LinerOrdered", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerOrdered);
                this.columnRestoration = new global::System.Data.DataColumn("Restoration", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestoration);
                this.columnGroutDate = new global::System.Data.DataColumn("GroutDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroutDate);
                this.columnJLiner = new global::System.Data.DataColumn("JLiner", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJLiner);
                this.columnRehabAssessment = new global::System.Data.DataColumn("RehabAssessment", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRehabAssessment);
                this.columnEstimatedJoints = new global::System.Data.DataColumn("EstimatedJoints", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimatedJoints);
                this.columnJointsTestSealed = new global::System.Data.DataColumn("JointsTestSealed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJointsTestSealed);
                this.columnPreFlushDate = new global::System.Data.DataColumn("PreFlushDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreFlushDate);
                this.columnPreVideoDate = new global::System.Data.DataColumn("PreVideoDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreVideoDate);
                this.columnUSMHMN = new global::System.Data.DataColumn("USMHMN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHMN);
                this.columnDSMHMN = new global::System.Data.DataColumn("DSMHMN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHMN);
                this.columnUSMHDepth = new global::System.Data.DataColumn("USMHDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHDepth);
                this.columnDSMHDepth = new global::System.Data.DataColumn("DSMHDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHDepth);
                this.columnMeasurementsTakenBy = new global::System.Data.DataColumn("MeasurementsTakenBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementsTakenBy);
                this.columnSteelTapeThruPipe = new global::System.Data.DataColumn("SteelTapeThruPipe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSteelTapeThruPipe);
                this.columnUSMHAtMouth1200 = new global::System.Data.DataColumn("USMHAtMouth1200", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth1200);
                this.columnUSMHAtMouth100 = new global::System.Data.DataColumn("USMHAtMouth100", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth100);
                this.columnUSMHAtMouth200 = new global::System.Data.DataColumn("USMHAtMouth200", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth200);
                this.columnUSMHAtMouth300 = new global::System.Data.DataColumn("USMHAtMouth300", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth300);
                this.columnUSMHAtMouth400 = new global::System.Data.DataColumn("USMHAtMouth400", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth400);
                this.columnUSMHAtMouth500 = new global::System.Data.DataColumn("USMHAtMouth500", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHAtMouth500);
                this.columnDSMHAtMouth1200 = new global::System.Data.DataColumn("DSMHAtMouth1200", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth1200);
                this.columnDSMHAtMouth100 = new global::System.Data.DataColumn("DSMHAtMouth100", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth100);
                this.columnDSMHAtMouth200 = new global::System.Data.DataColumn("DSMHAtMouth200", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth200);
                this.columnDSMHAtMouth300 = new global::System.Data.DataColumn("DSMHAtMouth300", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth300);
                this.columnDSMHAtMouth400 = new global::System.Data.DataColumn("DSMHAtMouth400", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth400);
                this.columnDSMHAtMouth500 = new global::System.Data.DataColumn("DSMHAtMouth500", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHAtMouth500);
                this.columnHydrantAddress = new global::System.Data.DataColumn("HydrantAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydrantAddress);
                this.columnDistanceToInversionMH = new global::System.Data.DataColumn("DistanceToInversionMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceToInversionMH);
                this.columnRampsRequired = new global::System.Data.DataColumn("RampsRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRampsRequired);
                this.columnDegreeOfTrafficControl = new global::System.Data.DataColumn("DegreeOfTrafficControl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDegreeOfTrafficControl);
                this.columnStandarBypass = new global::System.Data.DataColumn("StandarBypass", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandarBypass);
                this.columnHydroWireDetails = new global::System.Data.DataColumn("HydroWireDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydroWireDetails);
                this.columnPipeMaterialType = new global::System.Data.DataColumn("PipeMaterialType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeMaterialType);
                this.columnCappedLaterals = new global::System.Data.DataColumn("CappedLaterals", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCappedLaterals);
                this.columnRoboticPrepRequired = new global::System.Data.DataColumn("RoboticPrepRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticPrepRequired);
                this.columnPipeSizeChange = new global::System.Data.DataColumn("PipeSizeChange", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPipeSizeChange);
                this.columnM1Comments = new global::System.Data.DataColumn("M1Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM1Comments);
                this.columnVideoDoneFrom = new global::System.Data.DataColumn("VideoDoneFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVideoDoneFrom);
                this.columnToManhole = new global::System.Data.DataColumn("ToManhole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToManhole);
                this.columnCutterDescriptionDuringMeasuring = new global::System.Data.DataColumn("CutterDescriptionDuringMeasuring", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCutterDescriptionDuringMeasuring);
                this.columnFullLengthPointLiner = new global::System.Data.DataColumn("FullLengthPointLiner", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullLengthPointLiner);
                this.columnBypassRequired = new global::System.Data.DataColumn("BypassRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBypassRequired);
                this.columnRoboticDistances = new global::System.Data.DataColumn("RoboticDistances", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoboticDistances);
                this.columnTrafficControlDetails = new global::System.Data.DataColumn("TrafficControlDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrafficControlDetails);
                this.columnLineWithID = new global::System.Data.DataColumn("LineWithID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineWithID);
                this.columnSchoolZone = new global::System.Data.DataColumn("SchoolZone", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchoolZone);
                this.columnRestaurantArea = new global::System.Data.DataColumn("RestaurantArea", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestaurantArea);
                this.columnCarwashLaundromat = new global::System.Data.DataColumn("CarwashLaundromat", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarwashLaundromat);
                this.columnHydroPulley = new global::System.Data.DataColumn("HydroPulley", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydroPulley);
                this.columnFridgeCart = new global::System.Data.DataColumn("FridgeCart", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFridgeCart);
                this.columnTwoInchPump = new global::System.Data.DataColumn("TwoInchPump", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTwoInchPump);
                this.columnSixInchBypass = new global::System.Data.DataColumn("SixInchBypass", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSixInchBypass);
                this.columnScaffolding = new global::System.Data.DataColumn("Scaffolding", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffolding);
                this.columnWinchExtension = new global::System.Data.DataColumn("WinchExtension", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWinchExtension);
                this.columnExtraGenerator = new global::System.Data.DataColumn("ExtraGenerator", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraGenerator);
                this.columnGreyCableExtension = new global::System.Data.DataColumn("GreyCableExtension", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGreyCableExtension);
                this.columnEasementMats = new global::System.Data.DataColumn("EasementMats", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEasementMats);
                this.columnMeasurementType = new global::System.Data.DataColumn("MeasurementType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementType);
                this.columnDropPipe = new global::System.Data.DataColumn("DropPipe", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropPipe);
                this.columnDropPipeInvertDepth = new global::System.Data.DataColumn("DropPipeInvertDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropPipeInvertDepth);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnMeasuredFromManhole = new global::System.Data.DataColumn("MeasuredFromManhole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasuredFromManhole);
                this.columnMainLined = new global::System.Data.DataColumn("MainLined", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainLined);
                this.columnBenchingIssue = new global::System.Data.DataColumn("BenchingIssue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenchingIssue);
                this.columnArchived = new global::System.Data.DataColumn("Archived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchived);
                this.columnHistory = new global::System.Data.DataColumn("History", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistory);
                this.columnNumLats = new global::System.Data.DataColumn("NumLats", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumLats);
                this.columnNotLinedYet = new global::System.Data.DataColumn("NotLinedYet", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotLinedYet);
                this.columnAllMeasured = new global::System.Data.DataColumn("AllMeasured", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllMeasured);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnProvState = new global::System.Data.DataColumn("ProvState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvState);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("TDSLFSRecordForRCTKey10", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnCOMPANY_ID}, true));
                this.columnID.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnRecordID.AllowDBNull = false;
                this.columnCity.MaxLength = 50;
                this.columnProvState.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA2Row NewLFS_MASTER_AREA2Row() {
                return ((LFS_MASTER_AREA2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_MASTER_AREA2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_MASTER_AREA2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_MASTER_AREA2RowChanged != null)) {
                    this.LFS_MASTER_AREA2RowChanged(this, new LFS_MASTER_AREA2RowChangeEvent(((LFS_MASTER_AREA2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_MASTER_AREA2RowChanging != null)) {
                    this.LFS_MASTER_AREA2RowChanging(this, new LFS_MASTER_AREA2RowChangeEvent(((LFS_MASTER_AREA2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_MASTER_AREA2RowDeleted != null)) {
                    this.LFS_MASTER_AREA2RowDeleted(this, new LFS_MASTER_AREA2RowChangeEvent(((LFS_MASTER_AREA2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_MASTER_AREA2RowDeleting != null)) {
                    this.LFS_MASTER_AREA2RowDeleting(this, new LFS_MASTER_AREA2RowChangeEvent(((LFS_MASTER_AREA2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_MASTER_AREA2Row(LFS_MASTER_AREA2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TDSLFSRecordForRCT ds = new TDSLFSRecordForRCT();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_MASTER_AREA2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_JUNCTION_LINERDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnDetailID;
            
            private global::System.Data.DataColumn columnMN;
            
            private global::System.Data.DataColumn columnDistanceFromUSMH;
            
            private global::System.Data.DataColumn columnConfirmedLatSize;
            
            private global::System.Data.DataColumn columnLateralMaterial;
            
            private global::System.Data.DataColumn columnSharedLateral;
            
            private global::System.Data.DataColumn columnCleanoutRequired;
            
            private global::System.Data.DataColumn columnPitRequired;
            
            private global::System.Data.DataColumn columnMHShot;
            
            private global::System.Data.DataColumn columnMainConnection;
            
            private global::System.Data.DataColumn columnTransition;
            
            private global::System.Data.DataColumn columnCleanoutInstalled;
            
            private global::System.Data.DataColumn columnPitInstalled;
            
            private global::System.Data.DataColumn columnCleanoutGrouted;
            
            private global::System.Data.DataColumn columnCleanoutCored;
            
            private global::System.Data.DataColumn columnPrepCompleted;
            
            private global::System.Data.DataColumn columnMeasuredLatLength;
            
            private global::System.Data.DataColumn columnMeasurementsTakenBy;
            
            private global::System.Data.DataColumn columnLinerInstalled;
            
            private global::System.Data.DataColumn columnFinalVideo;
            
            private global::System.Data.DataColumn columnRestorationComplete;
            
            private global::System.Data.DataColumn columnLinerOrdered;
            
            private global::System.Data.DataColumn columnLinerInStock;
            
            private global::System.Data.DataColumn columnLinerPrice;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnArchived;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINERDataTable() {
                this.TableName = "LFS_JUNCTION_LINER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_JUNCTION_LINERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_JUNCTION_LINERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailIDColumn {
                get {
                    return this.columnDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MNColumn {
                get {
                    return this.columnMN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceFromUSMHColumn {
                get {
                    return this.columnDistanceFromUSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConfirmedLatSizeColumn {
                get {
                    return this.columnConfirmedLatSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralMaterialColumn {
                get {
                    return this.columnLateralMaterial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SharedLateralColumn {
                get {
                    return this.columnSharedLateral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CleanoutRequiredColumn {
                get {
                    return this.columnCleanoutRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PitRequiredColumn {
                get {
                    return this.columnPitRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MHShotColumn {
                get {
                    return this.columnMHShot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MainConnectionColumn {
                get {
                    return this.columnMainConnection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransitionColumn {
                get {
                    return this.columnTransition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CleanoutInstalledColumn {
                get {
                    return this.columnCleanoutInstalled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PitInstalledColumn {
                get {
                    return this.columnPitInstalled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CleanoutGroutedColumn {
                get {
                    return this.columnCleanoutGrouted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CleanoutCoredColumn {
                get {
                    return this.columnCleanoutCored;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrepCompletedColumn {
                get {
                    return this.columnPrepCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasuredLatLengthColumn {
                get {
                    return this.columnMeasuredLatLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementsTakenByColumn {
                get {
                    return this.columnMeasurementsTakenBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerInstalledColumn {
                get {
                    return this.columnLinerInstalled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinalVideoColumn {
                get {
                    return this.columnFinalVideo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RestorationCompleteColumn {
                get {
                    return this.columnRestorationComplete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerOrderedColumn {
                get {
                    return this.columnLinerOrdered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerInStockColumn {
                get {
                    return this.columnLinerInStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerPriceColumn {
                get {
                    return this.columnLinerPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArchivedColumn {
                get {
                    return this.columnArchived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINERRow this[int index] {
                get {
                    return ((LFS_JUNCTION_LINERRow)(this.Rows[index]));
                }
            }
            
            public event LFS_JUNCTION_LINERRowChangeEventHandler LFS_JUNCTION_LINERRowChanging;
            
            public event LFS_JUNCTION_LINERRowChangeEventHandler LFS_JUNCTION_LINERRowChanged;
            
            public event LFS_JUNCTION_LINERRowChangeEventHandler LFS_JUNCTION_LINERRowDeleting;
            
            public event LFS_JUNCTION_LINERRowChangeEventHandler LFS_JUNCTION_LINERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_JUNCTION_LINERRow(LFS_JUNCTION_LINERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINERRow AddLFS_JUNCTION_LINERRow(
                        System.Guid ID, 
                        int RefID, 
                        int COMPANY_ID, 
                        string DetailID, 
                        string MN, 
                        double DistanceFromUSMH, 
                        string ConfirmedLatSize, 
                        string LateralMaterial, 
                        string SharedLateral, 
                        bool CleanoutRequired, 
                        bool PitRequired, 
                        bool MHShot, 
                        string MainConnection, 
                        string Transition, 
                        bool CleanoutInstalled, 
                        bool PitInstalled, 
                        bool CleanoutGrouted, 
                        bool CleanoutCored, 
                        System.DateTime PrepCompleted, 
                        string MeasuredLatLength, 
                        string MeasurementsTakenBy, 
                        System.DateTime LinerInstalled, 
                        System.DateTime FinalVideo, 
                        bool RestorationComplete, 
                        bool LinerOrdered, 
                        bool LinerInStock, 
                        decimal LinerPrice, 
                        string Comments, 
                        bool Deleted, 
                        bool Archived) {
                LFS_JUNCTION_LINERRow rowLFS_JUNCTION_LINERRow = ((LFS_JUNCTION_LINERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        RefID,
                        COMPANY_ID,
                        DetailID,
                        MN,
                        DistanceFromUSMH,
                        ConfirmedLatSize,
                        LateralMaterial,
                        SharedLateral,
                        CleanoutRequired,
                        PitRequired,
                        MHShot,
                        MainConnection,
                        Transition,
                        CleanoutInstalled,
                        PitInstalled,
                        CleanoutGrouted,
                        CleanoutCored,
                        PrepCompleted,
                        MeasuredLatLength,
                        MeasurementsTakenBy,
                        LinerInstalled,
                        FinalVideo,
                        RestorationComplete,
                        LinerOrdered,
                        LinerInStock,
                        LinerPrice,
                        Comments,
                        Deleted,
                        Archived};
                rowLFS_JUNCTION_LINERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_JUNCTION_LINERRow);
                return rowLFS_JUNCTION_LINERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINERRow FindByIDRefIDCOMPANY_ID(System.Guid ID, int RefID, int COMPANY_ID) {
                return ((LFS_JUNCTION_LINERRow)(this.Rows.Find(new object[] {
                            ID,
                            RefID,
                            COMPANY_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_JUNCTION_LINERDataTable cln = ((LFS_JUNCTION_LINERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_JUNCTION_LINERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnDetailID = base.Columns["DetailID"];
                this.columnMN = base.Columns["MN"];
                this.columnDistanceFromUSMH = base.Columns["DistanceFromUSMH"];
                this.columnConfirmedLatSize = base.Columns["ConfirmedLatSize"];
                this.columnLateralMaterial = base.Columns["LateralMaterial"];
                this.columnSharedLateral = base.Columns["SharedLateral"];
                this.columnCleanoutRequired = base.Columns["CleanoutRequired"];
                this.columnPitRequired = base.Columns["PitRequired"];
                this.columnMHShot = base.Columns["MHShot"];
                this.columnMainConnection = base.Columns["MainConnection"];
                this.columnTransition = base.Columns["Transition"];
                this.columnCleanoutInstalled = base.Columns["CleanoutInstalled"];
                this.columnPitInstalled = base.Columns["PitInstalled"];
                this.columnCleanoutGrouted = base.Columns["CleanoutGrouted"];
                this.columnCleanoutCored = base.Columns["CleanoutCored"];
                this.columnPrepCompleted = base.Columns["PrepCompleted"];
                this.columnMeasuredLatLength = base.Columns["MeasuredLatLength"];
                this.columnMeasurementsTakenBy = base.Columns["MeasurementsTakenBy"];
                this.columnLinerInstalled = base.Columns["LinerInstalled"];
                this.columnFinalVideo = base.Columns["FinalVideo"];
                this.columnRestorationComplete = base.Columns["RestorationComplete"];
                this.columnLinerOrdered = base.Columns["LinerOrdered"];
                this.columnLinerInStock = base.Columns["LinerInStock"];
                this.columnLinerPrice = base.Columns["LinerPrice"];
                this.columnComments = base.Columns["Comments"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnArchived = base.Columns["Archived"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnDetailID = new global::System.Data.DataColumn("DetailID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailID);
                this.columnMN = new global::System.Data.DataColumn("MN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMN);
                this.columnDistanceFromUSMH = new global::System.Data.DataColumn("DistanceFromUSMH", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceFromUSMH);
                this.columnConfirmedLatSize = new global::System.Data.DataColumn("ConfirmedLatSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmedLatSize);
                this.columnLateralMaterial = new global::System.Data.DataColumn("LateralMaterial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralMaterial);
                this.columnSharedLateral = new global::System.Data.DataColumn("SharedLateral", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSharedLateral);
                this.columnCleanoutRequired = new global::System.Data.DataColumn("CleanoutRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleanoutRequired);
                this.columnPitRequired = new global::System.Data.DataColumn("PitRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPitRequired);
                this.columnMHShot = new global::System.Data.DataColumn("MHShot", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMHShot);
                this.columnMainConnection = new global::System.Data.DataColumn("MainConnection", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainConnection);
                this.columnTransition = new global::System.Data.DataColumn("Transition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransition);
                this.columnCleanoutInstalled = new global::System.Data.DataColumn("CleanoutInstalled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleanoutInstalled);
                this.columnPitInstalled = new global::System.Data.DataColumn("PitInstalled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPitInstalled);
                this.columnCleanoutGrouted = new global::System.Data.DataColumn("CleanoutGrouted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleanoutGrouted);
                this.columnCleanoutCored = new global::System.Data.DataColumn("CleanoutCored", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleanoutCored);
                this.columnPrepCompleted = new global::System.Data.DataColumn("PrepCompleted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrepCompleted);
                this.columnMeasuredLatLength = new global::System.Data.DataColumn("MeasuredLatLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasuredLatLength);
                this.columnMeasurementsTakenBy = new global::System.Data.DataColumn("MeasurementsTakenBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementsTakenBy);
                this.columnLinerInstalled = new global::System.Data.DataColumn("LinerInstalled", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerInstalled);
                this.columnFinalVideo = new global::System.Data.DataColumn("FinalVideo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalVideo);
                this.columnRestorationComplete = new global::System.Data.DataColumn("RestorationComplete", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestorationComplete);
                this.columnLinerOrdered = new global::System.Data.DataColumn("LinerOrdered", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerOrdered);
                this.columnLinerInStock = new global::System.Data.DataColumn("LinerInStock", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerInStock);
                this.columnLinerPrice = new global::System.Data.DataColumn("LinerPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerPrice);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnArchived = new global::System.Data.DataColumn("Archived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchived);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("TDSLFSRecordForRCTKey11", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnRefID,
                                this.columnCOMPANY_ID}, true));
                this.columnID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnDetailID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINERRow NewLFS_JUNCTION_LINERRow() {
                return ((LFS_JUNCTION_LINERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_JUNCTION_LINERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_JUNCTION_LINERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_JUNCTION_LINERRowChanged != null)) {
                    this.LFS_JUNCTION_LINERRowChanged(this, new LFS_JUNCTION_LINERRowChangeEvent(((LFS_JUNCTION_LINERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_JUNCTION_LINERRowChanging != null)) {
                    this.LFS_JUNCTION_LINERRowChanging(this, new LFS_JUNCTION_LINERRowChangeEvent(((LFS_JUNCTION_LINERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_JUNCTION_LINERRowDeleted != null)) {
                    this.LFS_JUNCTION_LINERRowDeleted(this, new LFS_JUNCTION_LINERRowChangeEvent(((LFS_JUNCTION_LINERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_JUNCTION_LINERRowDeleting != null)) {
                    this.LFS_JUNCTION_LINERRowDeleting(this, new LFS_JUNCTION_LINERRowChangeEvent(((LFS_JUNCTION_LINERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_JUNCTION_LINERRow(LFS_JUNCTION_LINERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TDSLFSRecordForRCT ds = new TDSLFSRecordForRCT();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_JUNCTION_LINERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_JUNCTION_LINER_RCTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnRctID;
            
            private global::System.Data.DataColumn columnChanges;
            
            private global::System.Data.DataColumn columnOperation;
            
            private global::System.Data.DataColumn columnChangedBy;
            
            private global::System.Data.DataColumn columnChanged;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINER_RCTDataTable() {
                this.TableName = "LFS_JUNCTION_LINER_RCT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_JUNCTION_LINER_RCTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_JUNCTION_LINER_RCTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RctIDColumn {
                get {
                    return this.columnRctID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangesColumn {
                get {
                    return this.columnChanges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperationColumn {
                get {
                    return this.columnOperation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedColumn {
                get {
                    return this.columnChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINER_RCTRow this[int index] {
                get {
                    return ((LFS_JUNCTION_LINER_RCTRow)(this.Rows[index]));
                }
            }
            
            public event LFS_JUNCTION_LINER_RCTRowChangeEventHandler LFS_JUNCTION_LINER_RCTRowChanging;
            
            public event LFS_JUNCTION_LINER_RCTRowChangeEventHandler LFS_JUNCTION_LINER_RCTRowChanged;
            
            public event LFS_JUNCTION_LINER_RCTRowChangeEventHandler LFS_JUNCTION_LINER_RCTRowDeleting;
            
            public event LFS_JUNCTION_LINER_RCTRowChangeEventHandler LFS_JUNCTION_LINER_RCTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_JUNCTION_LINER_RCTRow(LFS_JUNCTION_LINER_RCTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINER_RCTRow AddLFS_JUNCTION_LINER_RCTRow(System.Guid ID, int RefID, int COMPANY_ID, string Changes, string Operation, int ChangedBy, System.DateTime Changed) {
                LFS_JUNCTION_LINER_RCTRow rowLFS_JUNCTION_LINER_RCTRow = ((LFS_JUNCTION_LINER_RCTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        RefID,
                        COMPANY_ID,
                        null,
                        Changes,
                        Operation,
                        ChangedBy,
                        Changed};
                rowLFS_JUNCTION_LINER_RCTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_JUNCTION_LINER_RCTRow);
                return rowLFS_JUNCTION_LINER_RCTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINER_RCTRow FindByIDRefIDCOMPANY_IDRctID(System.Guid ID, int RefID, int COMPANY_ID, int RctID) {
                return ((LFS_JUNCTION_LINER_RCTRow)(this.Rows.Find(new object[] {
                            ID,
                            RefID,
                            COMPANY_ID,
                            RctID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_JUNCTION_LINER_RCTDataTable cln = ((LFS_JUNCTION_LINER_RCTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_JUNCTION_LINER_RCTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnRctID = base.Columns["RctID"];
                this.columnChanges = base.Columns["Changes"];
                this.columnOperation = base.Columns["Operation"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnChanged = base.Columns["Changed"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnRctID = new global::System.Data.DataColumn("RctID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRctID);
                this.columnChanges = new global::System.Data.DataColumn("Changes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChanges);
                this.columnOperation = new global::System.Data.DataColumn("Operation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperation);
                this.columnChangedBy = new global::System.Data.DataColumn("ChangedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnChanged = new global::System.Data.DataColumn("Changed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChanged);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("TDSLFSRecordForRCTKey12", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnRefID,
                                this.columnCOMPANY_ID,
                                this.columnRctID}, true));
                this.columnID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnRctID.AutoIncrement = true;
                this.columnRctID.AllowDBNull = false;
                this.columnRctID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINER_RCTRow NewLFS_JUNCTION_LINER_RCTRow() {
                return ((LFS_JUNCTION_LINER_RCTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_JUNCTION_LINER_RCTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_JUNCTION_LINER_RCTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_JUNCTION_LINER_RCTRowChanged != null)) {
                    this.LFS_JUNCTION_LINER_RCTRowChanged(this, new LFS_JUNCTION_LINER_RCTRowChangeEvent(((LFS_JUNCTION_LINER_RCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_JUNCTION_LINER_RCTRowChanging != null)) {
                    this.LFS_JUNCTION_LINER_RCTRowChanging(this, new LFS_JUNCTION_LINER_RCTRowChangeEvent(((LFS_JUNCTION_LINER_RCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_JUNCTION_LINER_RCTRowDeleted != null)) {
                    this.LFS_JUNCTION_LINER_RCTRowDeleted(this, new LFS_JUNCTION_LINER_RCTRowChangeEvent(((LFS_JUNCTION_LINER_RCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_JUNCTION_LINER_RCTRowDeleting != null)) {
                    this.LFS_JUNCTION_LINER_RCTRowDeleting(this, new LFS_JUNCTION_LINER_RCTRowChangeEvent(((LFS_JUNCTION_LINER_RCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_JUNCTION_LINER_RCTRow(LFS_JUNCTION_LINER_RCTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TDSLFSRecordForRCT ds = new TDSLFSRecordForRCT();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_JUNCTION_LINER_RCTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LFS_JUNCTION_LINER_RCT_EXPANDEDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnRctID;
            
            private global::System.Data.DataColumn columnDetailID;
            
            private global::System.Data.DataColumn columnMN;
            
            private global::System.Data.DataColumn columnDistanceFromUSMH;
            
            private global::System.Data.DataColumn columnConfirmedLatSize;
            
            private global::System.Data.DataColumn columnLateralMaterial;
            
            private global::System.Data.DataColumn columnSharedLateral;
            
            private global::System.Data.DataColumn columnCleanoutRequired;
            
            private global::System.Data.DataColumn columnPitRequired;
            
            private global::System.Data.DataColumn columnMHShot;
            
            private global::System.Data.DataColumn columnMainConnection;
            
            private global::System.Data.DataColumn columnTransition;
            
            private global::System.Data.DataColumn columnCleanoutInstalled;
            
            private global::System.Data.DataColumn columnPitInstalled;
            
            private global::System.Data.DataColumn columnCleanoutGrouted;
            
            private global::System.Data.DataColumn columnCleanoutCored;
            
            private global::System.Data.DataColumn columnPrepCompleted;
            
            private global::System.Data.DataColumn columnMeasuredLatLength;
            
            private global::System.Data.DataColumn columnMeasurementsTakenBy;
            
            private global::System.Data.DataColumn columnLinerInstalled;
            
            private global::System.Data.DataColumn columnFinalVideo;
            
            private global::System.Data.DataColumn columnRestorationComplete;
            
            private global::System.Data.DataColumn columnLinerOrdered;
            
            private global::System.Data.DataColumn columnLinerInStock;
            
            private global::System.Data.DataColumn columnLinerPrice;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnArchived;
            
            private global::System.Data.DataColumn columnOperation;
            
            private global::System.Data.DataColumn columnChangedBy;
            
            private global::System.Data.DataColumn columnUSERNAME;
            
            private global::System.Data.DataColumn columnChanged;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINER_RCT_EXPANDEDDataTable() {
                this.TableName = "LFS_JUNCTION_LINER_RCT_EXPANDED";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_JUNCTION_LINER_RCT_EXPANDEDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LFS_JUNCTION_LINER_RCT_EXPANDEDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RctIDColumn {
                get {
                    return this.columnRctID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailIDColumn {
                get {
                    return this.columnDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MNColumn {
                get {
                    return this.columnMN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceFromUSMHColumn {
                get {
                    return this.columnDistanceFromUSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConfirmedLatSizeColumn {
                get {
                    return this.columnConfirmedLatSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralMaterialColumn {
                get {
                    return this.columnLateralMaterial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SharedLateralColumn {
                get {
                    return this.columnSharedLateral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CleanoutRequiredColumn {
                get {
                    return this.columnCleanoutRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PitRequiredColumn {
                get {
                    return this.columnPitRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MHShotColumn {
                get {
                    return this.columnMHShot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MainConnectionColumn {
                get {
                    return this.columnMainConnection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransitionColumn {
                get {
                    return this.columnTransition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CleanoutInstalledColumn {
                get {
                    return this.columnCleanoutInstalled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PitInstalledColumn {
                get {
                    return this.columnPitInstalled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CleanoutGroutedColumn {
                get {
                    return this.columnCleanoutGrouted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CleanoutCoredColumn {
                get {
                    return this.columnCleanoutCored;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrepCompletedColumn {
                get {
                    return this.columnPrepCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasuredLatLengthColumn {
                get {
                    return this.columnMeasuredLatLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementsTakenByColumn {
                get {
                    return this.columnMeasurementsTakenBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerInstalledColumn {
                get {
                    return this.columnLinerInstalled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinalVideoColumn {
                get {
                    return this.columnFinalVideo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RestorationCompleteColumn {
                get {
                    return this.columnRestorationComplete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerOrderedColumn {
                get {
                    return this.columnLinerOrdered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerInStockColumn {
                get {
                    return this.columnLinerInStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinerPriceColumn {
                get {
                    return this.columnLinerPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArchivedColumn {
                get {
                    return this.columnArchived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperationColumn {
                get {
                    return this.columnOperation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USERNAMEColumn {
                get {
                    return this.columnUSERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedColumn {
                get {
                    return this.columnChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINER_RCT_EXPANDEDRow this[int index] {
                get {
                    return ((LFS_JUNCTION_LINER_RCT_EXPANDEDRow)(this.Rows[index]));
                }
            }
            
            public event LFS_JUNCTION_LINER_RCT_EXPANDEDRowChangeEventHandler LFS_JUNCTION_LINER_RCT_EXPANDEDRowChanging;
            
            public event LFS_JUNCTION_LINER_RCT_EXPANDEDRowChangeEventHandler LFS_JUNCTION_LINER_RCT_EXPANDEDRowChanged;
            
            public event LFS_JUNCTION_LINER_RCT_EXPANDEDRowChangeEventHandler LFS_JUNCTION_LINER_RCT_EXPANDEDRowDeleting;
            
            public event LFS_JUNCTION_LINER_RCT_EXPANDEDRowChangeEventHandler LFS_JUNCTION_LINER_RCT_EXPANDEDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLFS_JUNCTION_LINER_RCT_EXPANDEDRow(LFS_JUNCTION_LINER_RCT_EXPANDEDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINER_RCT_EXPANDEDRow AddLFS_JUNCTION_LINER_RCT_EXPANDEDRow(
                        System.Guid ID, 
                        int RefID, 
                        int COMPANY_ID, 
                        string DetailID, 
                        string MN, 
                        double DistanceFromUSMH, 
                        string ConfirmedLatSize, 
                        string LateralMaterial, 
                        string SharedLateral, 
                        bool CleanoutRequired, 
                        bool PitRequired, 
                        bool MHShot, 
                        string MainConnection, 
                        string Transition, 
                        bool CleanoutInstalled, 
                        bool PitInstalled, 
                        bool CleanoutGrouted, 
                        bool CleanoutCored, 
                        System.DateTime PrepCompleted, 
                        string MeasuredLatLength, 
                        string MeasurementsTakenBy, 
                        System.DateTime LinerInstalled, 
                        System.DateTime FinalVideo, 
                        bool RestorationComplete, 
                        bool LinerOrdered, 
                        bool LinerInStock, 
                        decimal LinerPrice, 
                        string Comments, 
                        bool Deleted, 
                        bool Archived, 
                        string Operation, 
                        int ChangedBy, 
                        string USERNAME, 
                        System.DateTime Changed) {
                LFS_JUNCTION_LINER_RCT_EXPANDEDRow rowLFS_JUNCTION_LINER_RCT_EXPANDEDRow = ((LFS_JUNCTION_LINER_RCT_EXPANDEDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        RefID,
                        COMPANY_ID,
                        null,
                        DetailID,
                        MN,
                        DistanceFromUSMH,
                        ConfirmedLatSize,
                        LateralMaterial,
                        SharedLateral,
                        CleanoutRequired,
                        PitRequired,
                        MHShot,
                        MainConnection,
                        Transition,
                        CleanoutInstalled,
                        PitInstalled,
                        CleanoutGrouted,
                        CleanoutCored,
                        PrepCompleted,
                        MeasuredLatLength,
                        MeasurementsTakenBy,
                        LinerInstalled,
                        FinalVideo,
                        RestorationComplete,
                        LinerOrdered,
                        LinerInStock,
                        LinerPrice,
                        Comments,
                        Deleted,
                        Archived,
                        Operation,
                        ChangedBy,
                        USERNAME,
                        Changed};
                rowLFS_JUNCTION_LINER_RCT_EXPANDEDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLFS_JUNCTION_LINER_RCT_EXPANDEDRow);
                return rowLFS_JUNCTION_LINER_RCT_EXPANDEDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINER_RCT_EXPANDEDRow FindByIDRefIDCOMPANY_IDRctID(System.Guid ID, int RefID, int COMPANY_ID, int RctID) {
                return ((LFS_JUNCTION_LINER_RCT_EXPANDEDRow)(this.Rows.Find(new object[] {
                            ID,
                            RefID,
                            COMPANY_ID,
                            RctID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LFS_JUNCTION_LINER_RCT_EXPANDEDDataTable cln = ((LFS_JUNCTION_LINER_RCT_EXPANDEDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LFS_JUNCTION_LINER_RCT_EXPANDEDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnRctID = base.Columns["RctID"];
                this.columnDetailID = base.Columns["DetailID"];
                this.columnMN = base.Columns["MN"];
                this.columnDistanceFromUSMH = base.Columns["DistanceFromUSMH"];
                this.columnConfirmedLatSize = base.Columns["ConfirmedLatSize"];
                this.columnLateralMaterial = base.Columns["LateralMaterial"];
                this.columnSharedLateral = base.Columns["SharedLateral"];
                this.columnCleanoutRequired = base.Columns["CleanoutRequired"];
                this.columnPitRequired = base.Columns["PitRequired"];
                this.columnMHShot = base.Columns["MHShot"];
                this.columnMainConnection = base.Columns["MainConnection"];
                this.columnTransition = base.Columns["Transition"];
                this.columnCleanoutInstalled = base.Columns["CleanoutInstalled"];
                this.columnPitInstalled = base.Columns["PitInstalled"];
                this.columnCleanoutGrouted = base.Columns["CleanoutGrouted"];
                this.columnCleanoutCored = base.Columns["CleanoutCored"];
                this.columnPrepCompleted = base.Columns["PrepCompleted"];
                this.columnMeasuredLatLength = base.Columns["MeasuredLatLength"];
                this.columnMeasurementsTakenBy = base.Columns["MeasurementsTakenBy"];
                this.columnLinerInstalled = base.Columns["LinerInstalled"];
                this.columnFinalVideo = base.Columns["FinalVideo"];
                this.columnRestorationComplete = base.Columns["RestorationComplete"];
                this.columnLinerOrdered = base.Columns["LinerOrdered"];
                this.columnLinerInStock = base.Columns["LinerInStock"];
                this.columnLinerPrice = base.Columns["LinerPrice"];
                this.columnComments = base.Columns["Comments"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnArchived = base.Columns["Archived"];
                this.columnOperation = base.Columns["Operation"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnUSERNAME = base.Columns["USERNAME"];
                this.columnChanged = base.Columns["Changed"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnRctID = new global::System.Data.DataColumn("RctID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRctID);
                this.columnDetailID = new global::System.Data.DataColumn("DetailID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailID);
                this.columnMN = new global::System.Data.DataColumn("MN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMN);
                this.columnDistanceFromUSMH = new global::System.Data.DataColumn("DistanceFromUSMH", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceFromUSMH);
                this.columnConfirmedLatSize = new global::System.Data.DataColumn("ConfirmedLatSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmedLatSize);
                this.columnLateralMaterial = new global::System.Data.DataColumn("LateralMaterial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralMaterial);
                this.columnSharedLateral = new global::System.Data.DataColumn("SharedLateral", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSharedLateral);
                this.columnCleanoutRequired = new global::System.Data.DataColumn("CleanoutRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleanoutRequired);
                this.columnPitRequired = new global::System.Data.DataColumn("PitRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPitRequired);
                this.columnMHShot = new global::System.Data.DataColumn("MHShot", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMHShot);
                this.columnMainConnection = new global::System.Data.DataColumn("MainConnection", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainConnection);
                this.columnTransition = new global::System.Data.DataColumn("Transition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransition);
                this.columnCleanoutInstalled = new global::System.Data.DataColumn("CleanoutInstalled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleanoutInstalled);
                this.columnPitInstalled = new global::System.Data.DataColumn("PitInstalled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPitInstalled);
                this.columnCleanoutGrouted = new global::System.Data.DataColumn("CleanoutGrouted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleanoutGrouted);
                this.columnCleanoutCored = new global::System.Data.DataColumn("CleanoutCored", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleanoutCored);
                this.columnPrepCompleted = new global::System.Data.DataColumn("PrepCompleted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrepCompleted);
                this.columnMeasuredLatLength = new global::System.Data.DataColumn("MeasuredLatLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasuredLatLength);
                this.columnMeasurementsTakenBy = new global::System.Data.DataColumn("MeasurementsTakenBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementsTakenBy);
                this.columnLinerInstalled = new global::System.Data.DataColumn("LinerInstalled", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerInstalled);
                this.columnFinalVideo = new global::System.Data.DataColumn("FinalVideo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalVideo);
                this.columnRestorationComplete = new global::System.Data.DataColumn("RestorationComplete", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestorationComplete);
                this.columnLinerOrdered = new global::System.Data.DataColumn("LinerOrdered", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerOrdered);
                this.columnLinerInStock = new global::System.Data.DataColumn("LinerInStock", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerInStock);
                this.columnLinerPrice = new global::System.Data.DataColumn("LinerPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinerPrice);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnArchived = new global::System.Data.DataColumn("Archived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchived);
                this.columnOperation = new global::System.Data.DataColumn("Operation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperation);
                this.columnChangedBy = new global::System.Data.DataColumn("ChangedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnUSERNAME = new global::System.Data.DataColumn("USERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERNAME);
                this.columnChanged = new global::System.Data.DataColumn("Changed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChanged);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("TDSLFSRecordForRCTKey14", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnRefID,
                                this.columnCOMPANY_ID,
                                this.columnRctID}, true));
                this.columnID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnRctID.AutoIncrement = true;
                this.columnRctID.AllowDBNull = false;
                this.columnRctID.ReadOnly = true;
                this.columnDetailID.AllowDBNull = false;
                this.columnUSERNAME.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINER_RCT_EXPANDEDRow NewLFS_JUNCTION_LINER_RCT_EXPANDEDRow() {
                return ((LFS_JUNCTION_LINER_RCT_EXPANDEDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LFS_JUNCTION_LINER_RCT_EXPANDEDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LFS_JUNCTION_LINER_RCT_EXPANDEDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LFS_JUNCTION_LINER_RCT_EXPANDEDRowChanged != null)) {
                    this.LFS_JUNCTION_LINER_RCT_EXPANDEDRowChanged(this, new LFS_JUNCTION_LINER_RCT_EXPANDEDRowChangeEvent(((LFS_JUNCTION_LINER_RCT_EXPANDEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LFS_JUNCTION_LINER_RCT_EXPANDEDRowChanging != null)) {
                    this.LFS_JUNCTION_LINER_RCT_EXPANDEDRowChanging(this, new LFS_JUNCTION_LINER_RCT_EXPANDEDRowChangeEvent(((LFS_JUNCTION_LINER_RCT_EXPANDEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LFS_JUNCTION_LINER_RCT_EXPANDEDRowDeleted != null)) {
                    this.LFS_JUNCTION_LINER_RCT_EXPANDEDRowDeleted(this, new LFS_JUNCTION_LINER_RCT_EXPANDEDRowChangeEvent(((LFS_JUNCTION_LINER_RCT_EXPANDEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LFS_JUNCTION_LINER_RCT_EXPANDEDRowDeleting != null)) {
                    this.LFS_JUNCTION_LINER_RCT_EXPANDEDRowDeleting(this, new LFS_JUNCTION_LINER_RCT_EXPANDEDRowChangeEvent(((LFS_JUNCTION_LINER_RCT_EXPANDEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLFS_JUNCTION_LINER_RCT_EXPANDEDRow(LFS_JUNCTION_LINER_RCT_EXPANDEDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TDSLFSRecordForRCT ds = new TDSLFSRecordForRCT();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LFS_JUNCTION_LINER_RCT_EXPANDEDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_MASTER_AREARow : global::System.Data.DataRow {
            
            private LFS_MASTER_AREADataTable tableLFS_MASTER_AREA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_MASTER_AREARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_MASTER_AREA = ((LFS_MASTER_AREADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableLFS_MASTER_AREA.IDColumn]));
                }
                set {
                    this[this.tableLFS_MASTER_AREA.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_MASTER_AREA.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_MASTER_AREA.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordID {
                get {
                    return ((string)(this[this.tableLFS_MASTER_AREA.RecordIDColumn]));
                }
                set {
                    this[this.tableLFS_MASTER_AREA.RecordIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientID {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.ClientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientID\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.ClientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANIES_ID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA.COMPANIES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPANIES_ID\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.COMPANIES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubArea {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.SubAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubArea\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.SubAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Street {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.StreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Street\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.StreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.USMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMH\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.USMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.DSMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMH\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.DSMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size_ {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.Size_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size_\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.Size_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScaledLength {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.ScaledLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaledLength\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.ScaledLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime P1Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA.P1DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P1Date\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.P1DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ActualLength {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.ActualLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualLength\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.ActualLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LiveLats {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA.LiveLatsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LiveLats\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.LiveLatsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CXIsRemoved {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.CXIsRemovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CXIsRemoved\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.CXIsRemovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime M1Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA.M1DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M1Date\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.M1DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime M2Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA.M2DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M2Date\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.M2DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InstallDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA.InstallDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallDate\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.InstallDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FinalVideo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA.FinalVideoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalVideo\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.FinalVideoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueIdentified {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.IssueIdentifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueIdentified\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.IssueIdentifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueResolved {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.IssueResolvedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueResolved\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.IssueResolvedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FullLengthLining {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.FullLengthLiningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullLengthLining\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.FullLengthLiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SubcontractorLining {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.SubcontractorLiningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubcontractorLining\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.SubcontractorLiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool OutOfScopeInArea {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.OutOfScopeInAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutOfScopeInArea\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.OutOfScopeInAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueGivenToBayCity {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.IssueGivenToBayCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueGivenToBayCity\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.IssueGivenToBayCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConfirmedSize {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA.ConfirmedSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfirmedSize\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.ConfirmedSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal InstallRate {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_MASTER_AREA.InstallRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallRate\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.InstallRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeadlineDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA.DeadlineDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeadlineDate\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.DeadlineDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ProposedLiningDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA.ProposedLiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProposedLiningDate\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.ProposedLiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SalesIssue {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.SalesIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesIssue\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.SalesIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LFSIssue {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.LFSIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LFSIssue\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.LFSIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ClientIssue {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.ClientIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientIssue\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.ClientIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InvestigationIssue {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.InvestigationIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvestigationIssue\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.InvestigationIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PointLining {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.PointLiningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PointLining\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.PointLiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Grouting {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.GroutingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grouting\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.GroutingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LateralLining {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.LateralLiningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralLining\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.LateralLiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime VacExDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA.VacExDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VacExDate\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.VacExDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PusherDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA.PusherDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PusherDate\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.PusherDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LinerOrdered {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA.LinerOrderedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerOrdered\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.LinerOrderedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Restoration {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA.RestorationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Restoration\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.RestorationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime GroutDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA.GroutDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroutDate\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.GroutDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool JLiner {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.JLinerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JLiner\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.JLinerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RehabAssessment {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.RehabAssessmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RehabAssessment\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.RehabAssessmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EstimatedJoints {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA.EstimatedJointsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimatedJoints\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.EstimatedJointsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int JointsTestSealed {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA.JointsTestSealedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JointsTestSealed\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.JointsTestSealedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreFlushDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA.PreFlushDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreFlushDate\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.PreFlushDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreVideoDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA.PreVideoDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreVideoDate\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.PreVideoDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMN {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.USMHMNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMN\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.USMHMNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMN {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.DSMHMNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMN\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.DSMHMNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.USMHDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHDepth\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.USMHDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.DSMHDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHDepth\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.DSMHDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementsTakenBy {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.MeasurementsTakenByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementsTakenBy\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.MeasurementsTakenByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SteelTapeThruPipe {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.SteelTapeThruPipeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SteelTapeThruPipe\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.SteelTapeThruPipeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth1200 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA.USMHAtMouth1200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth1200\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.USMHAtMouth1200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth100 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA.USMHAtMouth100Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth100\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.USMHAtMouth100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth200 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA.USMHAtMouth200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth200\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.USMHAtMouth200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth300 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA.USMHAtMouth300Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth300\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.USMHAtMouth300Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth400 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA.USMHAtMouth400Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth400\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.USMHAtMouth400Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth500 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA.USMHAtMouth500Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth500\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.USMHAtMouth500Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth1200 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA.DSMHAtMouth1200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth1200\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.DSMHAtMouth1200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth100 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA.DSMHAtMouth100Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth100\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.DSMHAtMouth100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth200 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA.DSMHAtMouth200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth200\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.DSMHAtMouth200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth300 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA.DSMHAtMouth300Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth300\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.DSMHAtMouth300Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth400 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA.DSMHAtMouth400Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth400\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.DSMHAtMouth400Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth500 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA.DSMHAtMouth500Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth500\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.DSMHAtMouth500Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HydrantAddress {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.HydrantAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HydrantAddress\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.HydrantAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistanceToInversionMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.DistanceToInversionMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceToInversionMH\' in table \'LFS_MASTER_AREA\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.DistanceToInversionMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RampsRequired {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.RampsRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RampsRequired\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.RampsRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DegreeOfTrafficControl {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.DegreeOfTrafficControlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DegreeOfTrafficControl\' in table \'LFS_MASTER_AREA\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.DegreeOfTrafficControlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool StandarBypass {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.StandarBypassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandarBypass\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.StandarBypassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HydroWireDetails {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.HydroWireDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HydroWireDetails\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.HydroWireDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PipeMaterialType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.PipeMaterialTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PipeMaterialType\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.PipeMaterialTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CappedLaterals {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA.CappedLateralsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CappedLaterals\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.CappedLateralsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RoboticPrepRequired {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.RoboticPrepRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoboticPrepRequired\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.RoboticPrepRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PipeSizeChange {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.PipeSizeChangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PipeSizeChange\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.PipeSizeChangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string M1Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.M1CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M1Comments\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.M1CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoDoneFrom {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.VideoDoneFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoDoneFrom\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.VideoDoneFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToManhole {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.ToManholeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToManhole\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.ToManholeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CutterDescriptionDuringMeasuring {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.CutterDescriptionDuringMeasuringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CutterDescriptionDuringMeasuring\' in table \'LFS_MASTER_AREA" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.CutterDescriptionDuringMeasuringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FullLengthPointLiner {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.FullLengthPointLinerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullLengthPointLiner\' in table \'LFS_MASTER_AREA\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.FullLengthPointLinerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BypassRequired {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.BypassRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BypassRequired\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.BypassRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RoboticDistances {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.RoboticDistancesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoboticDistances\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.RoboticDistancesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrafficControlDetails {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.TrafficControlDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrafficControlDetails\' in table \'LFS_MASTER_AREA\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.TrafficControlDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LineWithID {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.LineWithIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineWithID\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.LineWithIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SchoolZone {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.SchoolZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchoolZone\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.SchoolZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RestaurantArea {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.RestaurantAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RestaurantArea\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.RestaurantAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CarwashLaundromat {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.CarwashLaundromatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarwashLaundromat\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.CarwashLaundromatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HydroPulley {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.HydroPulleyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HydroPulley\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.HydroPulleyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FridgeCart {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.FridgeCartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FridgeCart\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.FridgeCartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TwoInchPump {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.TwoInchPumpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TwoInchPump\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.TwoInchPumpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SixInchBypass {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.SixInchBypassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SixInchBypass\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.SixInchBypassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Scaffolding {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.ScaffoldingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Scaffolding\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.ScaffoldingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WinchExtension {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.WinchExtensionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WinchExtension\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.WinchExtensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ExtraGenerator {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.ExtraGeneratorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraGenerator\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.ExtraGeneratorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool GreyCableExtension {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.GreyCableExtensionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GreyCableExtension\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.GreyCableExtensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EasementMats {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.EasementMatsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EasementMats\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.EasementMatsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.MeasurementTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementType\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.MeasurementTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DropPipe {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.DropPipeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropPipe\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.DropPipeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DropPipeInvertDepth {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.DropPipeInvertDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropPipeInvertDepth\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.DropPipeInvertDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.DeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deleted\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasuredFromManhole {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.MeasuredFromManholeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasuredFromManhole\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.MeasuredFromManholeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MainLined {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.MainLinedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainLined\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.MainLinedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BenchingIssue {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.BenchingIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BenchingIssue\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.BenchingIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Archived {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.ArchivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Archived\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.ArchivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string History {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.HistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'History\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.HistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumLats {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA.NumLatsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumLats\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.NumLatsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NotLinedYet {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA.NotLinedYetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotLinedYet\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.NotLinedYetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AllMeasured {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA.AllMeasuredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AllMeasured\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.AllMeasuredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProvState {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA.ProvStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProvState\' in table \'LFS_MASTER_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA.ProvStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientIDNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.ClientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientIDNull() {
                this[this.tableLFS_MASTER_AREA.ClientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANIES_IDNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.COMPANIES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANIES_IDNull() {
                this[this.tableLFS_MASTER_AREA.COMPANIES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubAreaNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.SubAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubAreaNull() {
                this[this.tableLFS_MASTER_AREA.SubAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.StreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNull() {
                this[this.tableLFS_MASTER_AREA.StreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.USMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHNull() {
                this[this.tableLFS_MASTER_AREA.USMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.DSMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHNull() {
                this[this.tableLFS_MASTER_AREA.DSMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSize_Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA.Size_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSize_Null() {
                this[this.tableLFS_MASTER_AREA.Size_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScaledLengthNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.ScaledLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScaledLengthNull() {
                this[this.tableLFS_MASTER_AREA.ScaledLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP1DateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.P1DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP1DateNull() {
                this[this.tableLFS_MASTER_AREA.P1DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActualLengthNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.ActualLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActualLengthNull() {
                this[this.tableLFS_MASTER_AREA.ActualLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLiveLatsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.LiveLatsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLiveLatsNull() {
                this[this.tableLFS_MASTER_AREA.LiveLatsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCXIsRemovedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.CXIsRemovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCXIsRemovedNull() {
                this[this.tableLFS_MASTER_AREA.CXIsRemovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM1DateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.M1DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM1DateNull() {
                this[this.tableLFS_MASTER_AREA.M1DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM2DateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.M2DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM2DateNull() {
                this[this.tableLFS_MASTER_AREA.M2DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.InstallDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallDateNull() {
                this[this.tableLFS_MASTER_AREA.InstallDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalVideoNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.FinalVideoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalVideoNull() {
                this[this.tableLFS_MASTER_AREA.FinalVideoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_MASTER_AREA.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueIdentifiedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.IssueIdentifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueIdentifiedNull() {
                this[this.tableLFS_MASTER_AREA.IssueIdentifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueResolvedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.IssueResolvedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueResolvedNull() {
                this[this.tableLFS_MASTER_AREA.IssueResolvedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullLengthLiningNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.FullLengthLiningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullLengthLiningNull() {
                this[this.tableLFS_MASTER_AREA.FullLengthLiningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubcontractorLiningNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.SubcontractorLiningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubcontractorLiningNull() {
                this[this.tableLFS_MASTER_AREA.SubcontractorLiningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutOfScopeInAreaNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.OutOfScopeInAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutOfScopeInAreaNull() {
                this[this.tableLFS_MASTER_AREA.OutOfScopeInAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueGivenToBayCityNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.IssueGivenToBayCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueGivenToBayCityNull() {
                this[this.tableLFS_MASTER_AREA.IssueGivenToBayCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConfirmedSizeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.ConfirmedSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConfirmedSizeNull() {
                this[this.tableLFS_MASTER_AREA.ConfirmedSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallRateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.InstallRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallRateNull() {
                this[this.tableLFS_MASTER_AREA.InstallRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeadlineDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.DeadlineDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeadlineDateNull() {
                this[this.tableLFS_MASTER_AREA.DeadlineDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProposedLiningDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.ProposedLiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProposedLiningDateNull() {
                this[this.tableLFS_MASTER_AREA.ProposedLiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesIssueNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.SalesIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesIssueNull() {
                this[this.tableLFS_MASTER_AREA.SalesIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLFSIssueNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.LFSIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLFSIssueNull() {
                this[this.tableLFS_MASTER_AREA.LFSIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientIssueNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.ClientIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientIssueNull() {
                this[this.tableLFS_MASTER_AREA.ClientIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestigationIssueNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.InvestigationIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestigationIssueNull() {
                this[this.tableLFS_MASTER_AREA.InvestigationIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPointLiningNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.PointLiningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPointLiningNull() {
                this[this.tableLFS_MASTER_AREA.PointLiningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroutingNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.GroutingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroutingNull() {
                this[this.tableLFS_MASTER_AREA.GroutingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateralLiningNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.LateralLiningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateralLiningNull() {
                this[this.tableLFS_MASTER_AREA.LateralLiningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacExDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.VacExDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVacExDateNull() {
                this[this.tableLFS_MASTER_AREA.VacExDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPusherDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.PusherDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPusherDateNull() {
                this[this.tableLFS_MASTER_AREA.PusherDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerOrderedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.LinerOrderedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerOrderedNull() {
                this[this.tableLFS_MASTER_AREA.LinerOrderedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestorationNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.RestorationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestorationNull() {
                this[this.tableLFS_MASTER_AREA.RestorationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroutDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.GroutDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroutDateNull() {
                this[this.tableLFS_MASTER_AREA.GroutDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJLinerNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.JLinerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJLinerNull() {
                this[this.tableLFS_MASTER_AREA.JLinerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRehabAssessmentNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.RehabAssessmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRehabAssessmentNull() {
                this[this.tableLFS_MASTER_AREA.RehabAssessmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimatedJointsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.EstimatedJointsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimatedJointsNull() {
                this[this.tableLFS_MASTER_AREA.EstimatedJointsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJointsTestSealedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.JointsTestSealedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJointsTestSealedNull() {
                this[this.tableLFS_MASTER_AREA.JointsTestSealedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreFlushDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.PreFlushDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreFlushDateNull() {
                this[this.tableLFS_MASTER_AREA.PreFlushDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreVideoDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.PreVideoDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreVideoDateNull() {
                this[this.tableLFS_MASTER_AREA.PreVideoDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMNNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.USMHMNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMNNull() {
                this[this.tableLFS_MASTER_AREA.USMHMNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMNNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.DSMHMNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMNNull() {
                this[this.tableLFS_MASTER_AREA.DSMHMNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHDepthNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.USMHDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHDepthNull() {
                this[this.tableLFS_MASTER_AREA.USMHDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHDepthNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.DSMHDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHDepthNull() {
                this[this.tableLFS_MASTER_AREA.DSMHDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementsTakenByNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.MeasurementsTakenByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementsTakenByNull() {
                this[this.tableLFS_MASTER_AREA.MeasurementsTakenByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSteelTapeThruPipeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.SteelTapeThruPipeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSteelTapeThruPipeNull() {
                this[this.tableLFS_MASTER_AREA.SteelTapeThruPipeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth1200Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA.USMHAtMouth1200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth1200Null() {
                this[this.tableLFS_MASTER_AREA.USMHAtMouth1200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth100Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA.USMHAtMouth100Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth100Null() {
                this[this.tableLFS_MASTER_AREA.USMHAtMouth100Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth200Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA.USMHAtMouth200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth200Null() {
                this[this.tableLFS_MASTER_AREA.USMHAtMouth200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth300Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA.USMHAtMouth300Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth300Null() {
                this[this.tableLFS_MASTER_AREA.USMHAtMouth300Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth400Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA.USMHAtMouth400Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth400Null() {
                this[this.tableLFS_MASTER_AREA.USMHAtMouth400Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth500Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA.USMHAtMouth500Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth500Null() {
                this[this.tableLFS_MASTER_AREA.USMHAtMouth500Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth1200Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA.DSMHAtMouth1200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth1200Null() {
                this[this.tableLFS_MASTER_AREA.DSMHAtMouth1200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth100Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA.DSMHAtMouth100Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth100Null() {
                this[this.tableLFS_MASTER_AREA.DSMHAtMouth100Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth200Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA.DSMHAtMouth200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth200Null() {
                this[this.tableLFS_MASTER_AREA.DSMHAtMouth200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth300Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA.DSMHAtMouth300Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth300Null() {
                this[this.tableLFS_MASTER_AREA.DSMHAtMouth300Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth400Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA.DSMHAtMouth400Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth400Null() {
                this[this.tableLFS_MASTER_AREA.DSMHAtMouth400Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth500Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA.DSMHAtMouth500Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth500Null() {
                this[this.tableLFS_MASTER_AREA.DSMHAtMouth500Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydrantAddressNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.HydrantAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydrantAddressNull() {
                this[this.tableLFS_MASTER_AREA.HydrantAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceToInversionMHNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.DistanceToInversionMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceToInversionMHNull() {
                this[this.tableLFS_MASTER_AREA.DistanceToInversionMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRampsRequiredNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.RampsRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRampsRequiredNull() {
                this[this.tableLFS_MASTER_AREA.RampsRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDegreeOfTrafficControlNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.DegreeOfTrafficControlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDegreeOfTrafficControlNull() {
                this[this.tableLFS_MASTER_AREA.DegreeOfTrafficControlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandarBypassNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.StandarBypassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandarBypassNull() {
                this[this.tableLFS_MASTER_AREA.StandarBypassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydroWireDetailsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.HydroWireDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydroWireDetailsNull() {
                this[this.tableLFS_MASTER_AREA.HydroWireDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPipeMaterialTypeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.PipeMaterialTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPipeMaterialTypeNull() {
                this[this.tableLFS_MASTER_AREA.PipeMaterialTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCappedLateralsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.CappedLateralsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCappedLateralsNull() {
                this[this.tableLFS_MASTER_AREA.CappedLateralsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoboticPrepRequiredNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.RoboticPrepRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoboticPrepRequiredNull() {
                this[this.tableLFS_MASTER_AREA.RoboticPrepRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPipeSizeChangeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.PipeSizeChangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPipeSizeChangeNull() {
                this[this.tableLFS_MASTER_AREA.PipeSizeChangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM1CommentsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.M1CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM1CommentsNull() {
                this[this.tableLFS_MASTER_AREA.M1CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoDoneFromNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.VideoDoneFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoDoneFromNull() {
                this[this.tableLFS_MASTER_AREA.VideoDoneFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToManholeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.ToManholeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToManholeNull() {
                this[this.tableLFS_MASTER_AREA.ToManholeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCutterDescriptionDuringMeasuringNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.CutterDescriptionDuringMeasuringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCutterDescriptionDuringMeasuringNull() {
                this[this.tableLFS_MASTER_AREA.CutterDescriptionDuringMeasuringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullLengthPointLinerNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.FullLengthPointLinerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullLengthPointLinerNull() {
                this[this.tableLFS_MASTER_AREA.FullLengthPointLinerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBypassRequiredNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.BypassRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBypassRequiredNull() {
                this[this.tableLFS_MASTER_AREA.BypassRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoboticDistancesNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.RoboticDistancesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoboticDistancesNull() {
                this[this.tableLFS_MASTER_AREA.RoboticDistancesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrafficControlDetailsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.TrafficControlDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrafficControlDetailsNull() {
                this[this.tableLFS_MASTER_AREA.TrafficControlDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineWithIDNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.LineWithIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineWithIDNull() {
                this[this.tableLFS_MASTER_AREA.LineWithIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchoolZoneNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.SchoolZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchoolZoneNull() {
                this[this.tableLFS_MASTER_AREA.SchoolZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestaurantAreaNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.RestaurantAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestaurantAreaNull() {
                this[this.tableLFS_MASTER_AREA.RestaurantAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarwashLaundromatNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.CarwashLaundromatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarwashLaundromatNull() {
                this[this.tableLFS_MASTER_AREA.CarwashLaundromatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydroPulleyNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.HydroPulleyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydroPulleyNull() {
                this[this.tableLFS_MASTER_AREA.HydroPulleyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFridgeCartNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.FridgeCartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFridgeCartNull() {
                this[this.tableLFS_MASTER_AREA.FridgeCartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTwoInchPumpNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.TwoInchPumpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTwoInchPumpNull() {
                this[this.tableLFS_MASTER_AREA.TwoInchPumpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSixInchBypassNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.SixInchBypassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSixInchBypassNull() {
                this[this.tableLFS_MASTER_AREA.SixInchBypassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScaffoldingNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.ScaffoldingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScaffoldingNull() {
                this[this.tableLFS_MASTER_AREA.ScaffoldingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWinchExtensionNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.WinchExtensionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWinchExtensionNull() {
                this[this.tableLFS_MASTER_AREA.WinchExtensionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraGeneratorNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.ExtraGeneratorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraGeneratorNull() {
                this[this.tableLFS_MASTER_AREA.ExtraGeneratorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGreyCableExtensionNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.GreyCableExtensionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGreyCableExtensionNull() {
                this[this.tableLFS_MASTER_AREA.GreyCableExtensionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEasementMatsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.EasementMatsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEasementMatsNull() {
                this[this.tableLFS_MASTER_AREA.EasementMatsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementTypeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.MeasurementTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementTypeNull() {
                this[this.tableLFS_MASTER_AREA.MeasurementTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDropPipeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.DropPipeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDropPipeNull() {
                this[this.tableLFS_MASTER_AREA.DropPipeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDropPipeInvertDepthNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.DropPipeInvertDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDropPipeInvertDepthNull() {
                this[this.tableLFS_MASTER_AREA.DropPipeInvertDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedNull() {
                this[this.tableLFS_MASTER_AREA.DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasuredFromManholeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.MeasuredFromManholeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasuredFromManholeNull() {
                this[this.tableLFS_MASTER_AREA.MeasuredFromManholeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMainLinedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.MainLinedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMainLinedNull() {
                this[this.tableLFS_MASTER_AREA.MainLinedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBenchingIssueNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.BenchingIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBenchingIssueNull() {
                this[this.tableLFS_MASTER_AREA.BenchingIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArchivedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.ArchivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArchivedNull() {
                this[this.tableLFS_MASTER_AREA.ArchivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.HistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryNull() {
                this[this.tableLFS_MASTER_AREA.HistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumLatsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.NumLatsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumLatsNull() {
                this[this.tableLFS_MASTER_AREA.NumLatsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotLinedYetNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.NotLinedYetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotLinedYetNull() {
                this[this.tableLFS_MASTER_AREA.NotLinedYetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAllMeasuredNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.AllMeasuredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAllMeasuredNull() {
                this[this.tableLFS_MASTER_AREA.AllMeasuredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableLFS_MASTER_AREA.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProvStateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA.ProvStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProvStateNull() {
                this[this.tableLFS_MASTER_AREA.ProvStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINERRow[] GetLFS_JUNCTION_LINERRows() {
                if ((this.Table.ChildRelations["LFS_MASTER_AREALFS_JUNCTION_LINER"] == null)) {
                    return new LFS_JUNCTION_LINERRow[0];
                }
                else {
                    return ((LFS_JUNCTION_LINERRow[])(base.GetChildRows(this.Table.ChildRelations["LFS_MASTER_AREALFS_JUNCTION_LINER"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLESRow[] GetLFS_M2_TABLESRows() {
                if ((this.Table.ChildRelations["LFS_MASTER_AREALFS_M2_TABLES"] == null)) {
                    return new LFS_M2_TABLESRow[0];
                }
                else {
                    return ((LFS_M2_TABLESRow[])(base.GetChildRows(this.Table.ChildRelations["LFS_MASTER_AREALFS_M2_TABLES"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRSRow[] GetLFS_POINT_REPAIRSRows() {
                if ((this.Table.ChildRelations["LFS_MASTER_AREALFS_POINT_REPAIRS"] == null)) {
                    return new LFS_POINT_REPAIRSRow[0];
                }
                else {
                    return ((LFS_POINT_REPAIRSRow[])(base.GetChildRows(this.Table.ChildRelations["LFS_MASTER_AREALFS_POINT_REPAIRS"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_POINT_REPAIRSRow : global::System.Data.DataRow {
            
            private LFS_POINT_REPAIRSDataTable tableLFS_POINT_REPAIRS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_POINT_REPAIRSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_POINT_REPAIRS = ((LFS_POINT_REPAIRSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableLFS_POINT_REPAIRS.IDColumn]));
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_POINT_REPAIRS.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_POINT_REPAIRS.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DetailID {
                get {
                    return ((string)(this[this.tableLFS_POINT_REPAIRS.DetailIDColumn]));
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.DetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RepairSize {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS.RepairSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RepairSize\' in table \'LFS_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.RepairSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InstallDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_POINT_REPAIRS.InstallDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallDate\' in table \'LFS_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.InstallDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Distance {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS.DistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Distance\' in table \'LFS_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.DistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cost {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_POINT_REPAIRS.CostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cost\' in table \'LFS_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reinstates {
                get {
                    try {
                        return ((int)(this[this.tableLFS_POINT_REPAIRS.ReinstatesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reinstates\' in table \'LFS_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.ReinstatesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LTAtMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS.LTAtMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LTAtMH\' in table \'LFS_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.LTAtMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VTAtMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS.VTAtMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VTAtMH\' in table \'LFS_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.VTAtMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinerDistance {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS.LinerDistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerDistance\' in table \'LFS_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.LinerDistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direction {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS.DirectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Direction\' in table \'LFS_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.DirectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MHShot {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS.MHShotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MHShot\' in table \'LFS_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.MHShotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_POINT_REPAIRS.DeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deleted\' in table \'LFS_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ExtraRepair {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_POINT_REPAIRS.ExtraRepairColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraRepair\' in table \'LFS_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.ExtraRepairColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Cancelled {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_POINT_REPAIRS.CancelledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cancelled\' in table \'LFS_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.CancelledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Approved {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_POINT_REPAIRS.ApprovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Approved\' in table \'LFS_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.ApprovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool NotApproved {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_POINT_REPAIRS.NotApprovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotApproved\' in table \'LFS_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.NotApprovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Archived {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_POINT_REPAIRS.ArchivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Archived\' in table \'LFS_POINT_REPAIRS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS.ArchivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREARow LFS_MASTER_AREARowParent {
                get {
                    return ((LFS_MASTER_AREARow)(this.GetParentRow(this.Table.ParentRelations["LFS_MASTER_AREALFS_POINT_REPAIRS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_MASTER_AREALFS_POINT_REPAIRS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRepairSizeNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS.RepairSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRepairSizeNull() {
                this[this.tableLFS_POINT_REPAIRS.RepairSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallDateNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS.InstallDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallDateNull() {
                this[this.tableLFS_POINT_REPAIRS.InstallDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS.DistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceNull() {
                this[this.tableLFS_POINT_REPAIRS.DistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS.CostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostNull() {
                this[this.tableLFS_POINT_REPAIRS.CostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReinstatesNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS.ReinstatesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReinstatesNull() {
                this[this.tableLFS_POINT_REPAIRS.ReinstatesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLTAtMHNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS.LTAtMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLTAtMHNull() {
                this[this.tableLFS_POINT_REPAIRS.LTAtMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVTAtMHNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS.VTAtMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVTAtMHNull() {
                this[this.tableLFS_POINT_REPAIRS.VTAtMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerDistanceNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS.LinerDistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerDistanceNull() {
                this[this.tableLFS_POINT_REPAIRS.LinerDistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDirectionNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS.DirectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDirectionNull() {
                this[this.tableLFS_POINT_REPAIRS.DirectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMHShotNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS.MHShotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMHShotNull() {
                this[this.tableLFS_POINT_REPAIRS.MHShotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_POINT_REPAIRS.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS.DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedNull() {
                this[this.tableLFS_POINT_REPAIRS.DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraRepairNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS.ExtraRepairColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraRepairNull() {
                this[this.tableLFS_POINT_REPAIRS.ExtraRepairColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCancelledNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS.CancelledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCancelledNull() {
                this[this.tableLFS_POINT_REPAIRS.CancelledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovedNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS.ApprovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovedNull() {
                this[this.tableLFS_POINT_REPAIRS.ApprovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotApprovedNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS.NotApprovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotApprovedNull() {
                this[this.tableLFS_POINT_REPAIRS.NotApprovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArchivedNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS.ArchivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArchivedNull() {
                this[this.tableLFS_POINT_REPAIRS.ArchivedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_M2_TABLESRow : global::System.Data.DataRow {
            
            private LFS_M2_TABLESDataTable tableLFS_M2_TABLES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_M2_TABLESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_M2_TABLES = ((LFS_M2_TABLESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableLFS_M2_TABLES.IDColumn]));
                }
                set {
                    this[this.tableLFS_M2_TABLES.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_M2_TABLES.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_M2_TABLES.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_M2_TABLES.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_M2_TABLES.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float VideoDistance {
                get {
                    try {
                        return ((float)(this[this.tableLFS_M2_TABLES.VideoDistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoDistance\' in table \'LFS_M2_TABLES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES.VideoDistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClockPosition {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES.ClockPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClockPosition\' in table \'LFS_M2_TABLES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES.ClockPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LiveOrAbandoned {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES.LiveOrAbandonedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LiveOrAbandoned\' in table \'LFS_M2_TABLES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES.LiveOrAbandonedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistanceToCentreOfLateral {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES.DistanceToCentreOfLateralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceToCentreOfLateral\' in table \'LFS_M2_TABLES\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES.DistanceToCentreOfLateralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LateralDiameter {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES.LateralDiameterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralDiameter\' in table \'LFS_M2_TABLES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES.LateralDiameterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LateralType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES.LateralTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralType\' in table \'LFS_M2_TABLES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES.LateralTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTimeOpened {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES.DateTimeOpenedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeOpened\' in table \'LFS_M2_TABLES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES.DateTimeOpenedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_M2_TABLES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReverseSetup {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES.ReverseSetupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReverseSetup\' in table \'LFS_M2_TABLES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES.ReverseSetupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_M2_TABLES.DeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deleted\' in table \'LFS_M2_TABLES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Archived {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_M2_TABLES.ArchivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Archived\' in table \'LFS_M2_TABLES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES.ArchivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREARow LFS_MASTER_AREARowParent {
                get {
                    return ((LFS_MASTER_AREARow)(this.GetParentRow(this.Table.ParentRelations["LFS_MASTER_AREALFS_M2_TABLES"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_MASTER_AREALFS_M2_TABLES"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoDistanceNull() {
                return this.IsNull(this.tableLFS_M2_TABLES.VideoDistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoDistanceNull() {
                this[this.tableLFS_M2_TABLES.VideoDistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClockPositionNull() {
                return this.IsNull(this.tableLFS_M2_TABLES.ClockPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClockPositionNull() {
                this[this.tableLFS_M2_TABLES.ClockPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLiveOrAbandonedNull() {
                return this.IsNull(this.tableLFS_M2_TABLES.LiveOrAbandonedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLiveOrAbandonedNull() {
                this[this.tableLFS_M2_TABLES.LiveOrAbandonedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceToCentreOfLateralNull() {
                return this.IsNull(this.tableLFS_M2_TABLES.DistanceToCentreOfLateralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceToCentreOfLateralNull() {
                this[this.tableLFS_M2_TABLES.DistanceToCentreOfLateralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateralDiameterNull() {
                return this.IsNull(this.tableLFS_M2_TABLES.LateralDiameterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateralDiameterNull() {
                this[this.tableLFS_M2_TABLES.LateralDiameterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateralTypeNull() {
                return this.IsNull(this.tableLFS_M2_TABLES.LateralTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateralTypeNull() {
                this[this.tableLFS_M2_TABLES.LateralTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeOpenedNull() {
                return this.IsNull(this.tableLFS_M2_TABLES.DateTimeOpenedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeOpenedNull() {
                this[this.tableLFS_M2_TABLES.DateTimeOpenedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_M2_TABLES.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_M2_TABLES.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReverseSetupNull() {
                return this.IsNull(this.tableLFS_M2_TABLES.ReverseSetupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReverseSetupNull() {
                this[this.tableLFS_M2_TABLES.ReverseSetupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedNull() {
                return this.IsNull(this.tableLFS_M2_TABLES.DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedNull() {
                this[this.tableLFS_M2_TABLES.DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArchivedNull() {
                return this.IsNull(this.tableLFS_M2_TABLES.ArchivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArchivedNull() {
                this[this.tableLFS_M2_TABLES.ArchivedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_MASTER_AREA_RCT_EXPANDEDRow : global::System.Data.DataRow {
            
            private LFS_MASTER_AREA_RCT_EXPANDEDDataTable tableLFS_MASTER_AREA_RCT_EXPANDED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_MASTER_AREA_RCT_EXPANDEDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_MASTER_AREA_RCT_EXPANDED = ((LFS_MASTER_AREA_RCT_EXPANDEDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.IDColumn]));
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RctID {
                get {
                    return ((int)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RctIDColumn]));
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RctIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordID {
                get {
                    return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RecordIDColumn]));
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RecordIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientID {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ClientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientID\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ClientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANIES_ID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.COMPANIES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPANIES_ID\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.COMPANIES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubArea {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.SubAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubArea\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.SubAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Street {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.StreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Street\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.StreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMH\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMH\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size_ {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.Size_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size_\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.Size_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScaledLength {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ScaledLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaledLength\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ScaledLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime P1Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.P1DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P1Date\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.P1DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ActualLength {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ActualLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualLength\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ActualLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LiveLats {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.LiveLatsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LiveLats\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.LiveLatsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CXIsRemoved {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.CXIsRemovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CXIsRemoved\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.CXIsRemovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime M1Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.M1DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M1Date\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.M1DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime M2Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.M2DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M2Date\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.M2DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InstallDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.InstallDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallDate\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.InstallDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FinalVideo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.FinalVideoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalVideo\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.FinalVideoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueIdentified {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.IssueIdentifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueIdentified\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.IssueIdentifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueResolved {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.IssueResolvedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueResolved\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.IssueResolvedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FullLengthLining {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.FullLengthLiningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullLengthLining\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.FullLengthLiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SubcontractorLining {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.SubcontractorLiningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubcontractorLining\' in table \'LFS_MASTER_AREA_RCT_EXPANDED" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.SubcontractorLiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool OutOfScopeInArea {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.OutOfScopeInAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutOfScopeInArea\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.OutOfScopeInAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueGivenToBayCity {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.IssueGivenToBayCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueGivenToBayCity\' in table \'LFS_MASTER_AREA_RCT_EXPANDED" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.IssueGivenToBayCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConfirmedSize {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ConfirmedSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfirmedSize\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ConfirmedSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal InstallRate {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.InstallRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallRate\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.InstallRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeadlineDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DeadlineDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeadlineDate\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DeadlineDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ProposedLiningDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ProposedLiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProposedLiningDate\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ProposedLiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SalesIssue {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.SalesIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesIssue\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.SalesIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LFSIssue {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.LFSIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LFSIssue\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.LFSIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ClientIssue {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ClientIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientIssue\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ClientIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InvestigationIssue {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.InvestigationIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvestigationIssue\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.InvestigationIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PointLining {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.PointLiningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PointLining\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.PointLiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Grouting {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.GroutingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grouting\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.GroutingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LateralLining {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.LateralLiningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralLining\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.LateralLiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime VacExDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.VacExDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VacExDate\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.VacExDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PusherDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.PusherDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PusherDate\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.PusherDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LinerOrdered {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.LinerOrderedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerOrdered\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.LinerOrderedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Restoration {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RestorationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Restoration\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RestorationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime GroutDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.GroutDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroutDate\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.GroutDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool JLiner {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.JLinerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JLiner\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.JLinerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RehabAssessment {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RehabAssessmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RehabAssessment\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RehabAssessmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EstimatedJoints {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.EstimatedJointsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimatedJoints\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.EstimatedJointsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int JointsTestSealed {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.JointsTestSealedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JointsTestSealed\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.JointsTestSealedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreFlushDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.PreFlushDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreFlushDate\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.PreFlushDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreVideoDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.PreVideoDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreVideoDate\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.PreVideoDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMN {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHMNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMN\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHMNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMN {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHMNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMN\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHMNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHDepth\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHDepth\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementsTakenBy {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.MeasurementsTakenByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementsTakenBy\' in table \'LFS_MASTER_AREA_RCT_EXPANDED" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.MeasurementsTakenByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SteelTapeThruPipe {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.SteelTapeThruPipeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SteelTapeThruPipe\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.SteelTapeThruPipeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth1200 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth1200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth1200\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth1200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth100 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth100Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth100\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth200 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth200\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth300 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth300Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth300\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth300Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth400 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth400Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth400\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth400Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth500 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth500Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth500\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth500Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth1200 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth1200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth1200\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth1200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth100 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth100Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth100\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth200 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth200\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth300 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth300Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth300\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth300Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth400 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth400Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth400\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth400Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth500 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth500Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth500\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth500Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HydrantAddress {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.HydrantAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HydrantAddress\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.HydrantAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistanceToInversionMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DistanceToInversionMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceToInversionMH\' in table \'LFS_MASTER_AREA_RCT_EXPAND" +
                                "ED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DistanceToInversionMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RampsRequired {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RampsRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RampsRequired\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RampsRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DegreeOfTrafficControl {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DegreeOfTrafficControlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DegreeOfTrafficControl\' in table \'LFS_MASTER_AREA_RCT_EXPAN" +
                                "DED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DegreeOfTrafficControlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool StandarBypass {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.StandarBypassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandarBypass\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.StandarBypassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HydroWireDetails {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.HydroWireDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HydroWireDetails\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.HydroWireDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PipeMaterialType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.PipeMaterialTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PipeMaterialType\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.PipeMaterialTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CappedLaterals {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.CappedLateralsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CappedLaterals\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.CappedLateralsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RoboticPrepRequired {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RoboticPrepRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoboticPrepRequired\' in table \'LFS_MASTER_AREA_RCT_EXPANDED" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RoboticPrepRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PipeSizeChange {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.PipeSizeChangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PipeSizeChange\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.PipeSizeChangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string M1Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.M1CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M1Comments\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.M1CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoDoneFrom {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.VideoDoneFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoDoneFrom\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.VideoDoneFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToManhole {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ToManholeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToManhole\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ToManholeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CutterDescriptionDuringMeasuring {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.CutterDescriptionDuringMeasuringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CutterDescriptionDuringMeasuring\' in table \'LFS_MASTER_AREA" +
                                "_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.CutterDescriptionDuringMeasuringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FullLengthPointLiner {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.FullLengthPointLinerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullLengthPointLiner\' in table \'LFS_MASTER_AREA_RCT_EXPANDE" +
                                "D\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.FullLengthPointLinerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BypassRequired {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.BypassRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BypassRequired\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.BypassRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RoboticDistances {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RoboticDistancesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoboticDistances\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RoboticDistancesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrafficControlDetails {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.TrafficControlDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrafficControlDetails\' in table \'LFS_MASTER_AREA_RCT_EXPAND" +
                                "ED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.TrafficControlDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LineWithID {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.LineWithIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineWithID\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.LineWithIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SchoolZone {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.SchoolZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchoolZone\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.SchoolZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RestaurantArea {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RestaurantAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RestaurantArea\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RestaurantAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CarwashLaundromat {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.CarwashLaundromatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarwashLaundromat\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.CarwashLaundromatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HydroPulley {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.HydroPulleyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HydroPulley\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.HydroPulleyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FridgeCart {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.FridgeCartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FridgeCart\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.FridgeCartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TwoInchPump {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.TwoInchPumpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TwoInchPump\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.TwoInchPumpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SixInchBypass {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.SixInchBypassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SixInchBypass\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.SixInchBypassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Scaffolding {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ScaffoldingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Scaffolding\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ScaffoldingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WinchExtension {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.WinchExtensionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WinchExtension\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.WinchExtensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ExtraGenerator {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ExtraGeneratorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraGenerator\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ExtraGeneratorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool GreyCableExtension {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.GreyCableExtensionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GreyCableExtension\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.GreyCableExtensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EasementMats {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.EasementMatsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EasementMats\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.EasementMatsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.MeasurementTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementType\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.MeasurementTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DropPipe {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DropPipeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropPipe\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DropPipeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DropPipeInvertDepth {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DropPipeInvertDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropPipeInvertDepth\' in table \'LFS_MASTER_AREA_RCT_EXPANDED" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DropPipeInvertDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deleted\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasuredFromManhole {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.MeasuredFromManholeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasuredFromManhole\' in table \'LFS_MASTER_AREA_RCT_EXPANDED" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.MeasuredFromManholeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MainLined {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.MainLinedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainLined\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.MainLinedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BenchingIssue {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.BenchingIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BenchingIssue\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.BenchingIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Archived {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ArchivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Archived\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ArchivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string History {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.HistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'History\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.HistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumLats {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.NumLatsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumLats\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.NumLatsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NotLinedYet {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.NotLinedYetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotLinedYet\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.NotLinedYetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AllMeasured {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.AllMeasuredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AllMeasured\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.AllMeasuredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProvState {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ProvStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProvState\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ProvStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Operation {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.OperationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Operation\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.OperationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ChangedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ChangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USERNAME {
                get {
                    return ((string)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USERNAMEColumn]));
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Changed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Changed\' in table \'LFS_MASTER_AREA_RCT_EXPANDED\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientIDNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.ClientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientIDNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ClientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANIES_IDNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.COMPANIES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANIES_IDNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.COMPANIES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubAreaNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.SubAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubAreaNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.SubAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.StreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.StreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSize_Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.Size_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSize_Null() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.Size_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScaledLengthNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.ScaledLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScaledLengthNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ScaledLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP1DateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.P1DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP1DateNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.P1DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActualLengthNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.ActualLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActualLengthNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ActualLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLiveLatsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.LiveLatsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLiveLatsNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.LiveLatsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCXIsRemovedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.CXIsRemovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCXIsRemovedNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.CXIsRemovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM1DateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.M1DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM1DateNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.M1DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM2DateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.M2DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM2DateNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.M2DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.InstallDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallDateNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.InstallDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalVideoNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.FinalVideoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalVideoNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.FinalVideoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueIdentifiedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.IssueIdentifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueIdentifiedNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.IssueIdentifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueResolvedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.IssueResolvedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueResolvedNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.IssueResolvedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullLengthLiningNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.FullLengthLiningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullLengthLiningNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.FullLengthLiningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubcontractorLiningNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.SubcontractorLiningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubcontractorLiningNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.SubcontractorLiningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutOfScopeInAreaNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.OutOfScopeInAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutOfScopeInAreaNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.OutOfScopeInAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueGivenToBayCityNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.IssueGivenToBayCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueGivenToBayCityNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.IssueGivenToBayCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConfirmedSizeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.ConfirmedSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConfirmedSizeNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ConfirmedSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallRateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.InstallRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallRateNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.InstallRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeadlineDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.DeadlineDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeadlineDateNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DeadlineDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProposedLiningDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.ProposedLiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProposedLiningDateNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ProposedLiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesIssueNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.SalesIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesIssueNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.SalesIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLFSIssueNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.LFSIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLFSIssueNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.LFSIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientIssueNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.ClientIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientIssueNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ClientIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestigationIssueNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.InvestigationIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestigationIssueNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.InvestigationIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPointLiningNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.PointLiningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPointLiningNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.PointLiningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroutingNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.GroutingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroutingNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.GroutingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateralLiningNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.LateralLiningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateralLiningNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.LateralLiningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacExDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.VacExDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVacExDateNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.VacExDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPusherDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.PusherDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPusherDateNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.PusherDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerOrderedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.LinerOrderedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerOrderedNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.LinerOrderedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestorationNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.RestorationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestorationNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RestorationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroutDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.GroutDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroutDateNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.GroutDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJLinerNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.JLinerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJLinerNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.JLinerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRehabAssessmentNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.RehabAssessmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRehabAssessmentNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RehabAssessmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimatedJointsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.EstimatedJointsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimatedJointsNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.EstimatedJointsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJointsTestSealedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.JointsTestSealedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJointsTestSealedNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.JointsTestSealedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreFlushDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.PreFlushDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreFlushDateNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.PreFlushDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreVideoDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.PreVideoDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreVideoDateNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.PreVideoDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMNNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHMNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMNNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHMNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMNNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHMNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMNNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHMNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHDepthNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHDepthNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHDepthNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHDepthNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementsTakenByNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.MeasurementsTakenByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementsTakenByNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.MeasurementsTakenByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSteelTapeThruPipeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.SteelTapeThruPipeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSteelTapeThruPipeNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.SteelTapeThruPipeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth1200Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth1200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth1200Null() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth1200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth100Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth100Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth100Null() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth100Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth200Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth200Null() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth300Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth300Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth300Null() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth300Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth400Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth400Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth400Null() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth400Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth500Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth500Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth500Null() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.USMHAtMouth500Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth1200Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth1200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth1200Null() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth1200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth100Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth100Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth100Null() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth100Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth200Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth200Null() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth300Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth300Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth300Null() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth300Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth400Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth400Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth400Null() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth400Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth500Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth500Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth500Null() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DSMHAtMouth500Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydrantAddressNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.HydrantAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydrantAddressNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.HydrantAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceToInversionMHNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.DistanceToInversionMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceToInversionMHNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DistanceToInversionMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRampsRequiredNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.RampsRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRampsRequiredNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RampsRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDegreeOfTrafficControlNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.DegreeOfTrafficControlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDegreeOfTrafficControlNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DegreeOfTrafficControlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandarBypassNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.StandarBypassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandarBypassNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.StandarBypassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydroWireDetailsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.HydroWireDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydroWireDetailsNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.HydroWireDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPipeMaterialTypeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.PipeMaterialTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPipeMaterialTypeNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.PipeMaterialTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCappedLateralsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.CappedLateralsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCappedLateralsNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.CappedLateralsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoboticPrepRequiredNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.RoboticPrepRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoboticPrepRequiredNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RoboticPrepRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPipeSizeChangeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.PipeSizeChangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPipeSizeChangeNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.PipeSizeChangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM1CommentsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.M1CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM1CommentsNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.M1CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoDoneFromNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.VideoDoneFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoDoneFromNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.VideoDoneFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToManholeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.ToManholeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToManholeNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ToManholeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCutterDescriptionDuringMeasuringNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.CutterDescriptionDuringMeasuringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCutterDescriptionDuringMeasuringNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.CutterDescriptionDuringMeasuringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullLengthPointLinerNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.FullLengthPointLinerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullLengthPointLinerNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.FullLengthPointLinerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBypassRequiredNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.BypassRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBypassRequiredNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.BypassRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoboticDistancesNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.RoboticDistancesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoboticDistancesNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RoboticDistancesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrafficControlDetailsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.TrafficControlDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrafficControlDetailsNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.TrafficControlDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineWithIDNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.LineWithIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineWithIDNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.LineWithIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchoolZoneNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.SchoolZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchoolZoneNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.SchoolZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestaurantAreaNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.RestaurantAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestaurantAreaNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.RestaurantAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarwashLaundromatNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.CarwashLaundromatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarwashLaundromatNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.CarwashLaundromatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydroPulleyNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.HydroPulleyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydroPulleyNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.HydroPulleyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFridgeCartNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.FridgeCartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFridgeCartNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.FridgeCartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTwoInchPumpNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.TwoInchPumpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTwoInchPumpNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.TwoInchPumpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSixInchBypassNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.SixInchBypassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSixInchBypassNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.SixInchBypassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScaffoldingNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.ScaffoldingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScaffoldingNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ScaffoldingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWinchExtensionNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.WinchExtensionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWinchExtensionNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.WinchExtensionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraGeneratorNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.ExtraGeneratorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraGeneratorNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ExtraGeneratorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGreyCableExtensionNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.GreyCableExtensionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGreyCableExtensionNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.GreyCableExtensionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEasementMatsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.EasementMatsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEasementMatsNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.EasementMatsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementTypeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.MeasurementTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementTypeNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.MeasurementTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDropPipeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.DropPipeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDropPipeNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DropPipeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDropPipeInvertDepthNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.DropPipeInvertDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDropPipeInvertDepthNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DropPipeInvertDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasuredFromManholeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.MeasuredFromManholeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasuredFromManholeNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.MeasuredFromManholeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMainLinedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.MainLinedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMainLinedNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.MainLinedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBenchingIssueNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.BenchingIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBenchingIssueNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.BenchingIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArchivedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.ArchivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArchivedNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ArchivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.HistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.HistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumLatsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.NumLatsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumLatsNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.NumLatsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotLinedYetNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.NotLinedYetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotLinedYetNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.NotLinedYetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAllMeasuredNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.AllMeasuredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAllMeasuredNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.AllMeasuredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProvStateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.ProvStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProvStateNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ProvStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperationNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.OperationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperationNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.OperationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.ChangedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ChangedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT_EXPANDED.ChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedNull() {
                this[this.tableLFS_MASTER_AREA_RCT_EXPANDED.ChangedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_M2_TABLES_RCT_EXPANDEDRow : global::System.Data.DataRow {
            
            private LFS_M2_TABLES_RCT_EXPANDEDDataTable tableLFS_M2_TABLES_RCT_EXPANDED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_M2_TABLES_RCT_EXPANDEDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_M2_TABLES_RCT_EXPANDED = ((LFS_M2_TABLES_RCT_EXPANDEDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.IDColumn]));
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RctID {
                get {
                    return ((int)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.RctIDColumn]));
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.RctIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float VideoDistance {
                get {
                    try {
                        return ((float)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.VideoDistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoDistance\' in table \'LFS_M2_TABLES_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.VideoDistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClockPosition {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.ClockPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClockPosition\' in table \'LFS_M2_TABLES_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.ClockPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LiveOrAbandoned {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.LiveOrAbandonedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LiveOrAbandoned\' in table \'LFS_M2_TABLES_RCT_EXPANDED\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.LiveOrAbandonedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistanceToCentreOfLateral {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.DistanceToCentreOfLateralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceToCentreOfLateral\' in table \'LFS_M2_TABLES_RCT_EXPA" +
                                "NDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.DistanceToCentreOfLateralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LateralDiameter {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.LateralDiameterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralDiameter\' in table \'LFS_M2_TABLES_RCT_EXPANDED\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.LateralDiameterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LateralType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.LateralTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralType\' in table \'LFS_M2_TABLES_RCT_EXPANDED\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.LateralTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateTimeOpened {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.DateTimeOpenedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeOpened\' in table \'LFS_M2_TABLES_RCT_EXPANDED\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.DateTimeOpenedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_M2_TABLES_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReverseSetup {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.ReverseSetupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReverseSetup\' in table \'LFS_M2_TABLES_RCT_EXPANDED\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.ReverseSetupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.DeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deleted\' in table \'LFS_M2_TABLES_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Archived {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.ArchivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Archived\' in table \'LFS_M2_TABLES_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.ArchivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Operation {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.OperationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Operation\' in table \'LFS_M2_TABLES_RCT_EXPANDED\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.OperationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.ChangedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'LFS_M2_TABLES_RCT_EXPANDED\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.ChangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USERNAME {
                get {
                    return ((string)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.USERNAMEColumn]));
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.USERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Changed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_M2_TABLES_RCT_EXPANDED.ChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Changed\' in table \'LFS_M2_TABLES_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT_EXPANDED.ChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoDistanceNull() {
                return this.IsNull(this.tableLFS_M2_TABLES_RCT_EXPANDED.VideoDistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoDistanceNull() {
                this[this.tableLFS_M2_TABLES_RCT_EXPANDED.VideoDistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClockPositionNull() {
                return this.IsNull(this.tableLFS_M2_TABLES_RCT_EXPANDED.ClockPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClockPositionNull() {
                this[this.tableLFS_M2_TABLES_RCT_EXPANDED.ClockPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLiveOrAbandonedNull() {
                return this.IsNull(this.tableLFS_M2_TABLES_RCT_EXPANDED.LiveOrAbandonedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLiveOrAbandonedNull() {
                this[this.tableLFS_M2_TABLES_RCT_EXPANDED.LiveOrAbandonedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceToCentreOfLateralNull() {
                return this.IsNull(this.tableLFS_M2_TABLES_RCT_EXPANDED.DistanceToCentreOfLateralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceToCentreOfLateralNull() {
                this[this.tableLFS_M2_TABLES_RCT_EXPANDED.DistanceToCentreOfLateralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateralDiameterNull() {
                return this.IsNull(this.tableLFS_M2_TABLES_RCT_EXPANDED.LateralDiameterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateralDiameterNull() {
                this[this.tableLFS_M2_TABLES_RCT_EXPANDED.LateralDiameterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateralTypeNull() {
                return this.IsNull(this.tableLFS_M2_TABLES_RCT_EXPANDED.LateralTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateralTypeNull() {
                this[this.tableLFS_M2_TABLES_RCT_EXPANDED.LateralTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeOpenedNull() {
                return this.IsNull(this.tableLFS_M2_TABLES_RCT_EXPANDED.DateTimeOpenedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeOpenedNull() {
                this[this.tableLFS_M2_TABLES_RCT_EXPANDED.DateTimeOpenedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_M2_TABLES_RCT_EXPANDED.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_M2_TABLES_RCT_EXPANDED.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReverseSetupNull() {
                return this.IsNull(this.tableLFS_M2_TABLES_RCT_EXPANDED.ReverseSetupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReverseSetupNull() {
                this[this.tableLFS_M2_TABLES_RCT_EXPANDED.ReverseSetupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedNull() {
                return this.IsNull(this.tableLFS_M2_TABLES_RCT_EXPANDED.DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedNull() {
                this[this.tableLFS_M2_TABLES_RCT_EXPANDED.DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArchivedNull() {
                return this.IsNull(this.tableLFS_M2_TABLES_RCT_EXPANDED.ArchivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArchivedNull() {
                this[this.tableLFS_M2_TABLES_RCT_EXPANDED.ArchivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperationNull() {
                return this.IsNull(this.tableLFS_M2_TABLES_RCT_EXPANDED.OperationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperationNull() {
                this[this.tableLFS_M2_TABLES_RCT_EXPANDED.OperationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableLFS_M2_TABLES_RCT_EXPANDED.ChangedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableLFS_M2_TABLES_RCT_EXPANDED.ChangedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedNull() {
                return this.IsNull(this.tableLFS_M2_TABLES_RCT_EXPANDED.ChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedNull() {
                this[this.tableLFS_M2_TABLES_RCT_EXPANDED.ChangedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_POINT_REPAIRS_RCT_EXPANDEDRow : global::System.Data.DataRow {
            
            private LFS_POINT_REPAIRS_RCT_EXPANDEDDataTable tableLFS_POINT_REPAIRS_RCT_EXPANDED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_POINT_REPAIRS_RCT_EXPANDEDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_POINT_REPAIRS_RCT_EXPANDED = ((LFS_POINT_REPAIRS_RCT_EXPANDEDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.IDColumn]));
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RctID {
                get {
                    return ((int)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.RctIDColumn]));
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.RctIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DetailID {
                get {
                    return ((string)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.DetailIDColumn]));
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.DetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RepairSize {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.RepairSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RepairSize\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.RepairSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InstallDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.InstallDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallDate\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.InstallDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Distance {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.DistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Distance\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.DistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cost {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.CostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cost\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reinstates {
                get {
                    try {
                        return ((int)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ReinstatesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reinstates\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ReinstatesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LTAtMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.LTAtMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LTAtMH\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.LTAtMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VTAtMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.VTAtMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VTAtMH\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.VTAtMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinerDistance {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.LinerDistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerDistance\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.LinerDistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direction {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.DirectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Direction\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.DirectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MHShot {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.MHShotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MHShot\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.MHShotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.DeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deleted\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ExtraRepair {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ExtraRepairColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraRepair\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ExtraRepairColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Cancelled {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.CancelledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cancelled\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.CancelledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Approved {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ApprovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Approved\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ApprovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool NotApproved {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.NotApprovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotApproved\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.NotApprovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Archived {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ArchivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Archived\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ArchivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Operation {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.OperationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Operation\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.OperationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ChangedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ChangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USERNAME {
                get {
                    return ((string)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.USERNAMEColumn]));
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.USERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Changed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Changed\' in table \'LFS_POINT_REPAIRS_RCT_EXPANDED\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRepairSizeNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.RepairSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRepairSizeNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.RepairSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallDateNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.InstallDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallDateNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.InstallDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.DistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.DistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.CostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.CostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReinstatesNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ReinstatesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReinstatesNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ReinstatesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLTAtMHNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.LTAtMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLTAtMHNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.LTAtMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVTAtMHNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.VTAtMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVTAtMHNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.VTAtMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerDistanceNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.LinerDistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerDistanceNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.LinerDistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDirectionNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.DirectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDirectionNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.DirectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMHShotNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.MHShotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMHShotNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.MHShotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraRepairNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ExtraRepairColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraRepairNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ExtraRepairColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCancelledNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.CancelledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCancelledNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.CancelledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovedNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ApprovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovedNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ApprovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotApprovedNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.NotApprovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotApprovedNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.NotApprovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArchivedNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ArchivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArchivedNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ArchivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperationNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.OperationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperationNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.OperationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ChangedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ChangedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT_EXPANDED.ChangedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_MASTER_AREA_RCTRow : global::System.Data.DataRow {
            
            private LFS_MASTER_AREA_RCTDataTable tableLFS_MASTER_AREA_RCT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_MASTER_AREA_RCTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_MASTER_AREA_RCT = ((LFS_MASTER_AREA_RCTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableLFS_MASTER_AREA_RCT.IDColumn]));
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_MASTER_AREA_RCT.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RctID {
                get {
                    return ((int)(this[this.tableLFS_MASTER_AREA_RCT.RctIDColumn]));
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT.RctIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Changes {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT.ChangesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Changes\' in table \'LFS_MASTER_AREA_RCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT.ChangesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Operation {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA_RCT.OperationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Operation\' in table \'LFS_MASTER_AREA_RCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT.OperationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA_RCT.ChangedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'LFS_MASTER_AREA_RCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT.ChangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Changed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA_RCT.ChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Changed\' in table \'LFS_MASTER_AREA_RCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA_RCT.ChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangesNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT.ChangesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangesNull() {
                this[this.tableLFS_MASTER_AREA_RCT.ChangesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperationNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT.OperationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperationNull() {
                this[this.tableLFS_MASTER_AREA_RCT.OperationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT.ChangedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableLFS_MASTER_AREA_RCT.ChangedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA_RCT.ChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedNull() {
                this[this.tableLFS_MASTER_AREA_RCT.ChangedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_POINT_REPAIRS_RCTRow : global::System.Data.DataRow {
            
            private LFS_POINT_REPAIRS_RCTDataTable tableLFS_POINT_REPAIRS_RCT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_POINT_REPAIRS_RCTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_POINT_REPAIRS_RCT = ((LFS_POINT_REPAIRS_RCTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableLFS_POINT_REPAIRS_RCT.IDColumn]));
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_POINT_REPAIRS_RCT.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_POINT_REPAIRS_RCT.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RctID {
                get {
                    return ((int)(this[this.tableLFS_POINT_REPAIRS_RCT.RctIDColumn]));
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT.RctIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Changes {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS_RCT.ChangesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Changes\' in table \'LFS_POINT_REPAIRS_RCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT.ChangesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Operation {
                get {
                    try {
                        return ((string)(this[this.tableLFS_POINT_REPAIRS_RCT.OperationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Operation\' in table \'LFS_POINT_REPAIRS_RCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT.OperationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableLFS_POINT_REPAIRS_RCT.ChangedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'LFS_POINT_REPAIRS_RCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT.ChangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Changed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_POINT_REPAIRS_RCT.ChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Changed\' in table \'LFS_POINT_REPAIRS_RCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_POINT_REPAIRS_RCT.ChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangesNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT.ChangesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangesNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT.ChangesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperationNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT.OperationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperationNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT.OperationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT.ChangedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT.ChangedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedNull() {
                return this.IsNull(this.tableLFS_POINT_REPAIRS_RCT.ChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedNull() {
                this[this.tableLFS_POINT_REPAIRS_RCT.ChangedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_M2_TABLES_RCTRow : global::System.Data.DataRow {
            
            private LFS_M2_TABLES_RCTDataTable tableLFS_M2_TABLES_RCT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_M2_TABLES_RCTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_M2_TABLES_RCT = ((LFS_M2_TABLES_RCTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableLFS_M2_TABLES_RCT.IDColumn]));
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_M2_TABLES_RCT.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_M2_TABLES_RCT.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RctID {
                get {
                    return ((int)(this[this.tableLFS_M2_TABLES_RCT.RctIDColumn]));
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT.RctIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Changes {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES_RCT.ChangesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Changes\' in table \'LFS_M2_TABLES_RCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT.ChangesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Operation {
                get {
                    try {
                        return ((string)(this[this.tableLFS_M2_TABLES_RCT.OperationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Operation\' in table \'LFS_M2_TABLES_RCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT.OperationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableLFS_M2_TABLES_RCT.ChangedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'LFS_M2_TABLES_RCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT.ChangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Changed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_M2_TABLES_RCT.ChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Changed\' in table \'LFS_M2_TABLES_RCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_M2_TABLES_RCT.ChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangesNull() {
                return this.IsNull(this.tableLFS_M2_TABLES_RCT.ChangesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangesNull() {
                this[this.tableLFS_M2_TABLES_RCT.ChangesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperationNull() {
                return this.IsNull(this.tableLFS_M2_TABLES_RCT.OperationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperationNull() {
                this[this.tableLFS_M2_TABLES_RCT.OperationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableLFS_M2_TABLES_RCT.ChangedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableLFS_M2_TABLES_RCT.ChangedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedNull() {
                return this.IsNull(this.tableLFS_M2_TABLES_RCT.ChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedNull() {
                this[this.tableLFS_M2_TABLES_RCT.ChangedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_MASTER_AREA2Row : global::System.Data.DataRow {
            
            private LFS_MASTER_AREA2DataTable tableLFS_MASTER_AREA2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_MASTER_AREA2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_MASTER_AREA2 = ((LFS_MASTER_AREA2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableLFS_MASTER_AREA2.IDColumn]));
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_MASTER_AREA2.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordID {
                get {
                    return ((string)(this[this.tableLFS_MASTER_AREA2.RecordIDColumn]));
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.RecordIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientID {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.ClientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientID\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.ClientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANIES_ID {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA2.COMPANIES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPANIES_ID\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.COMPANIES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubArea {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.SubAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubArea\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.SubAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Street {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.StreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Street\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.StreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.USMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMH\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.USMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.DSMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMH\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.DSMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size_ {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.Size_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size_\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.Size_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScaledLength {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.ScaledLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaledLength\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.ScaledLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime P1Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA2.P1DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P1Date\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.P1DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ActualLength {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.ActualLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualLength\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.ActualLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LiveLats {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA2.LiveLatsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LiveLats\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.LiveLatsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CXIsRemoved {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.CXIsRemovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CXIsRemoved\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.CXIsRemovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime M1Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA2.M1DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M1Date\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.M1DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime M2Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA2.M2DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M2Date\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.M2DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InstallDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA2.InstallDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallDate\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.InstallDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FinalVideo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA2.FinalVideoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalVideo\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.FinalVideoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueIdentified {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.IssueIdentifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueIdentified\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.IssueIdentifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueResolved {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.IssueResolvedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueResolved\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.IssueResolvedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FullLengthLining {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.FullLengthLiningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullLengthLining\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.FullLengthLiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SubcontractorLining {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.SubcontractorLiningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubcontractorLining\' in table \'LFS_MASTER_AREA2\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.SubcontractorLiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool OutOfScopeInArea {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.OutOfScopeInAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutOfScopeInArea\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.OutOfScopeInAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssueGivenToBayCity {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.IssueGivenToBayCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueGivenToBayCity\' in table \'LFS_MASTER_AREA2\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.IssueGivenToBayCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConfirmedSize {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA2.ConfirmedSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfirmedSize\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.ConfirmedSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal InstallRate {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_MASTER_AREA2.InstallRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstallRate\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.InstallRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeadlineDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA2.DeadlineDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeadlineDate\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.DeadlineDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ProposedLiningDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA2.ProposedLiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProposedLiningDate\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.ProposedLiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SalesIssue {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.SalesIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesIssue\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.SalesIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LFSIssue {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.LFSIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LFSIssue\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.LFSIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ClientIssue {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.ClientIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientIssue\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.ClientIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InvestigationIssue {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.InvestigationIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvestigationIssue\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.InvestigationIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PointLining {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.PointLiningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PointLining\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.PointLiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Grouting {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.GroutingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grouting\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.GroutingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LateralLining {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.LateralLiningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralLining\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.LateralLiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime VacExDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA2.VacExDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VacExDate\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.VacExDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PusherDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA2.PusherDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PusherDate\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.PusherDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LinerOrdered {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA2.LinerOrderedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerOrdered\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.LinerOrderedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Restoration {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA2.RestorationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Restoration\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.RestorationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime GroutDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA2.GroutDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroutDate\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.GroutDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool JLiner {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.JLinerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JLiner\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.JLinerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RehabAssessment {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.RehabAssessmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RehabAssessment\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.RehabAssessmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EstimatedJoints {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA2.EstimatedJointsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimatedJoints\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.EstimatedJointsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int JointsTestSealed {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA2.JointsTestSealedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JointsTestSealed\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.JointsTestSealedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreFlushDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA2.PreFlushDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreFlushDate\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.PreFlushDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreVideoDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_MASTER_AREA2.PreVideoDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreVideoDate\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.PreVideoDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHMN {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.USMHMNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHMN\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.USMHMNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHMN {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.DSMHMNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHMN\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.DSMHMNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.USMHDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHDepth\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.USMHDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.DSMHDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHDepth\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.DSMHDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementsTakenBy {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.MeasurementsTakenByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementsTakenBy\' in table \'LFS_MASTER_AREA2\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.MeasurementsTakenByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SteelTapeThruPipe {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.SteelTapeThruPipeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SteelTapeThruPipe\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.SteelTapeThruPipeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth1200 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA2.USMHAtMouth1200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth1200\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.USMHAtMouth1200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth100 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA2.USMHAtMouth100Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth100\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.USMHAtMouth100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth200 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA2.USMHAtMouth200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth200\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.USMHAtMouth200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth300 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA2.USMHAtMouth300Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth300\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.USMHAtMouth300Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth400 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA2.USMHAtMouth400Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth400\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.USMHAtMouth400Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USMHAtMouth500 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA2.USMHAtMouth500Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHAtMouth500\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.USMHAtMouth500Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth1200 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA2.DSMHAtMouth1200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth1200\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.DSMHAtMouth1200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth100 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA2.DSMHAtMouth100Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth100\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.DSMHAtMouth100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth200 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA2.DSMHAtMouth200Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth200\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.DSMHAtMouth200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth300 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA2.DSMHAtMouth300Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth300\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.DSMHAtMouth300Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth400 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA2.DSMHAtMouth400Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth400\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.DSMHAtMouth400Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DSMHAtMouth500 {
                get {
                    try {
                        return ((double)(this[this.tableLFS_MASTER_AREA2.DSMHAtMouth500Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHAtMouth500\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.DSMHAtMouth500Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HydrantAddress {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.HydrantAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HydrantAddress\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.HydrantAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistanceToInversionMH {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.DistanceToInversionMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceToInversionMH\' in table \'LFS_MASTER_AREA2\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.DistanceToInversionMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RampsRequired {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.RampsRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RampsRequired\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.RampsRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DegreeOfTrafficControl {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.DegreeOfTrafficControlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DegreeOfTrafficControl\' in table \'LFS_MASTER_AREA2\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.DegreeOfTrafficControlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool StandarBypass {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.StandarBypassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandarBypass\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.StandarBypassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HydroWireDetails {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.HydroWireDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HydroWireDetails\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.HydroWireDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PipeMaterialType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.PipeMaterialTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PipeMaterialType\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.PipeMaterialTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CappedLaterals {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA2.CappedLateralsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CappedLaterals\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.CappedLateralsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RoboticPrepRequired {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.RoboticPrepRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoboticPrepRequired\' in table \'LFS_MASTER_AREA2\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.RoboticPrepRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PipeSizeChange {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.PipeSizeChangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PipeSizeChange\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.PipeSizeChangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string M1Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.M1CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M1Comments\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.M1CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VideoDoneFrom {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.VideoDoneFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VideoDoneFrom\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.VideoDoneFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToManhole {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.ToManholeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToManhole\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.ToManholeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CutterDescriptionDuringMeasuring {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.CutterDescriptionDuringMeasuringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CutterDescriptionDuringMeasuring\' in table \'LFS_MASTER_AREA" +
                                "2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.CutterDescriptionDuringMeasuringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FullLengthPointLiner {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.FullLengthPointLinerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullLengthPointLiner\' in table \'LFS_MASTER_AREA2\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.FullLengthPointLinerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BypassRequired {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.BypassRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BypassRequired\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.BypassRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RoboticDistances {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.RoboticDistancesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoboticDistances\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.RoboticDistancesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrafficControlDetails {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.TrafficControlDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrafficControlDetails\' in table \'LFS_MASTER_AREA2\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.TrafficControlDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LineWithID {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.LineWithIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineWithID\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.LineWithIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SchoolZone {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.SchoolZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchoolZone\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.SchoolZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RestaurantArea {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.RestaurantAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RestaurantArea\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.RestaurantAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CarwashLaundromat {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.CarwashLaundromatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarwashLaundromat\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.CarwashLaundromatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HydroPulley {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.HydroPulleyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HydroPulley\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.HydroPulleyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FridgeCart {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.FridgeCartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FridgeCart\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.FridgeCartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TwoInchPump {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.TwoInchPumpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TwoInchPump\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.TwoInchPumpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SixInchBypass {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.SixInchBypassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SixInchBypass\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.SixInchBypassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Scaffolding {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.ScaffoldingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Scaffolding\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.ScaffoldingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WinchExtension {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.WinchExtensionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WinchExtension\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.WinchExtensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ExtraGenerator {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.ExtraGeneratorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraGenerator\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.ExtraGeneratorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool GreyCableExtension {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.GreyCableExtensionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GreyCableExtension\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.GreyCableExtensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EasementMats {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.EasementMatsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EasementMats\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.EasementMatsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementType {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.MeasurementTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementType\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.MeasurementTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DropPipe {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.DropPipeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropPipe\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.DropPipeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DropPipeInvertDepth {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.DropPipeInvertDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropPipeInvertDepth\' in table \'LFS_MASTER_AREA2\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.DropPipeInvertDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.DeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deleted\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasuredFromManhole {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.MeasuredFromManholeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasuredFromManhole\' in table \'LFS_MASTER_AREA2\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.MeasuredFromManholeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MainLined {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.MainLinedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainLined\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.MainLinedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BenchingIssue {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.BenchingIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BenchingIssue\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.BenchingIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Archived {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.ArchivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Archived\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.ArchivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string History {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.HistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'History\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.HistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumLats {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA2.NumLatsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumLats\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.NumLatsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NotLinedYet {
                get {
                    try {
                        return ((int)(this[this.tableLFS_MASTER_AREA2.NotLinedYetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotLinedYet\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.NotLinedYetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AllMeasured {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_MASTER_AREA2.AllMeasuredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AllMeasured\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.AllMeasuredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProvState {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.ProvStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProvState\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.ProvStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tableLFS_MASTER_AREA2.NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME\' in table \'LFS_MASTER_AREA2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_MASTER_AREA2.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientIDNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.ClientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientIDNull() {
                this[this.tableLFS_MASTER_AREA2.ClientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANIES_IDNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.COMPANIES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANIES_IDNull() {
                this[this.tableLFS_MASTER_AREA2.COMPANIES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubAreaNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.SubAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubAreaNull() {
                this[this.tableLFS_MASTER_AREA2.SubAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.StreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNull() {
                this[this.tableLFS_MASTER_AREA2.StreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.USMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHNull() {
                this[this.tableLFS_MASTER_AREA2.USMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.DSMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHNull() {
                this[this.tableLFS_MASTER_AREA2.DSMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSize_Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.Size_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSize_Null() {
                this[this.tableLFS_MASTER_AREA2.Size_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScaledLengthNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.ScaledLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScaledLengthNull() {
                this[this.tableLFS_MASTER_AREA2.ScaledLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP1DateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.P1DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP1DateNull() {
                this[this.tableLFS_MASTER_AREA2.P1DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActualLengthNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.ActualLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActualLengthNull() {
                this[this.tableLFS_MASTER_AREA2.ActualLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLiveLatsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.LiveLatsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLiveLatsNull() {
                this[this.tableLFS_MASTER_AREA2.LiveLatsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCXIsRemovedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.CXIsRemovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCXIsRemovedNull() {
                this[this.tableLFS_MASTER_AREA2.CXIsRemovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM1DateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.M1DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM1DateNull() {
                this[this.tableLFS_MASTER_AREA2.M1DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM2DateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.M2DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM2DateNull() {
                this[this.tableLFS_MASTER_AREA2.M2DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.InstallDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallDateNull() {
                this[this.tableLFS_MASTER_AREA2.InstallDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalVideoNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.FinalVideoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalVideoNull() {
                this[this.tableLFS_MASTER_AREA2.FinalVideoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_MASTER_AREA2.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueIdentifiedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.IssueIdentifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueIdentifiedNull() {
                this[this.tableLFS_MASTER_AREA2.IssueIdentifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueResolvedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.IssueResolvedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueResolvedNull() {
                this[this.tableLFS_MASTER_AREA2.IssueResolvedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullLengthLiningNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.FullLengthLiningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullLengthLiningNull() {
                this[this.tableLFS_MASTER_AREA2.FullLengthLiningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubcontractorLiningNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.SubcontractorLiningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubcontractorLiningNull() {
                this[this.tableLFS_MASTER_AREA2.SubcontractorLiningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutOfScopeInAreaNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.OutOfScopeInAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutOfScopeInAreaNull() {
                this[this.tableLFS_MASTER_AREA2.OutOfScopeInAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueGivenToBayCityNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.IssueGivenToBayCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueGivenToBayCityNull() {
                this[this.tableLFS_MASTER_AREA2.IssueGivenToBayCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConfirmedSizeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.ConfirmedSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConfirmedSizeNull() {
                this[this.tableLFS_MASTER_AREA2.ConfirmedSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstallRateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.InstallRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstallRateNull() {
                this[this.tableLFS_MASTER_AREA2.InstallRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeadlineDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.DeadlineDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeadlineDateNull() {
                this[this.tableLFS_MASTER_AREA2.DeadlineDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProposedLiningDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.ProposedLiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProposedLiningDateNull() {
                this[this.tableLFS_MASTER_AREA2.ProposedLiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesIssueNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.SalesIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesIssueNull() {
                this[this.tableLFS_MASTER_AREA2.SalesIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLFSIssueNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.LFSIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLFSIssueNull() {
                this[this.tableLFS_MASTER_AREA2.LFSIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientIssueNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.ClientIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientIssueNull() {
                this[this.tableLFS_MASTER_AREA2.ClientIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestigationIssueNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.InvestigationIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestigationIssueNull() {
                this[this.tableLFS_MASTER_AREA2.InvestigationIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPointLiningNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.PointLiningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPointLiningNull() {
                this[this.tableLFS_MASTER_AREA2.PointLiningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroutingNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.GroutingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroutingNull() {
                this[this.tableLFS_MASTER_AREA2.GroutingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateralLiningNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.LateralLiningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateralLiningNull() {
                this[this.tableLFS_MASTER_AREA2.LateralLiningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacExDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.VacExDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVacExDateNull() {
                this[this.tableLFS_MASTER_AREA2.VacExDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPusherDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.PusherDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPusherDateNull() {
                this[this.tableLFS_MASTER_AREA2.PusherDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerOrderedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.LinerOrderedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerOrderedNull() {
                this[this.tableLFS_MASTER_AREA2.LinerOrderedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestorationNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.RestorationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestorationNull() {
                this[this.tableLFS_MASTER_AREA2.RestorationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroutDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.GroutDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroutDateNull() {
                this[this.tableLFS_MASTER_AREA2.GroutDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJLinerNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.JLinerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJLinerNull() {
                this[this.tableLFS_MASTER_AREA2.JLinerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRehabAssessmentNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.RehabAssessmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRehabAssessmentNull() {
                this[this.tableLFS_MASTER_AREA2.RehabAssessmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimatedJointsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.EstimatedJointsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimatedJointsNull() {
                this[this.tableLFS_MASTER_AREA2.EstimatedJointsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJointsTestSealedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.JointsTestSealedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJointsTestSealedNull() {
                this[this.tableLFS_MASTER_AREA2.JointsTestSealedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreFlushDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.PreFlushDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreFlushDateNull() {
                this[this.tableLFS_MASTER_AREA2.PreFlushDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreVideoDateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.PreVideoDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreVideoDateNull() {
                this[this.tableLFS_MASTER_AREA2.PreVideoDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHMNNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.USMHMNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHMNNull() {
                this[this.tableLFS_MASTER_AREA2.USMHMNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHMNNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.DSMHMNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHMNNull() {
                this[this.tableLFS_MASTER_AREA2.DSMHMNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHDepthNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.USMHDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHDepthNull() {
                this[this.tableLFS_MASTER_AREA2.USMHDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHDepthNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.DSMHDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHDepthNull() {
                this[this.tableLFS_MASTER_AREA2.DSMHDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementsTakenByNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.MeasurementsTakenByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementsTakenByNull() {
                this[this.tableLFS_MASTER_AREA2.MeasurementsTakenByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSteelTapeThruPipeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.SteelTapeThruPipeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSteelTapeThruPipeNull() {
                this[this.tableLFS_MASTER_AREA2.SteelTapeThruPipeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth1200Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.USMHAtMouth1200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth1200Null() {
                this[this.tableLFS_MASTER_AREA2.USMHAtMouth1200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth100Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.USMHAtMouth100Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth100Null() {
                this[this.tableLFS_MASTER_AREA2.USMHAtMouth100Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth200Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.USMHAtMouth200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth200Null() {
                this[this.tableLFS_MASTER_AREA2.USMHAtMouth200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth300Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.USMHAtMouth300Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth300Null() {
                this[this.tableLFS_MASTER_AREA2.USMHAtMouth300Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth400Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.USMHAtMouth400Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth400Null() {
                this[this.tableLFS_MASTER_AREA2.USMHAtMouth400Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHAtMouth500Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.USMHAtMouth500Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHAtMouth500Null() {
                this[this.tableLFS_MASTER_AREA2.USMHAtMouth500Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth1200Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.DSMHAtMouth1200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth1200Null() {
                this[this.tableLFS_MASTER_AREA2.DSMHAtMouth1200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth100Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.DSMHAtMouth100Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth100Null() {
                this[this.tableLFS_MASTER_AREA2.DSMHAtMouth100Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth200Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.DSMHAtMouth200Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth200Null() {
                this[this.tableLFS_MASTER_AREA2.DSMHAtMouth200Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth300Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.DSMHAtMouth300Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth300Null() {
                this[this.tableLFS_MASTER_AREA2.DSMHAtMouth300Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth400Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.DSMHAtMouth400Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth400Null() {
                this[this.tableLFS_MASTER_AREA2.DSMHAtMouth400Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHAtMouth500Null() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.DSMHAtMouth500Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHAtMouth500Null() {
                this[this.tableLFS_MASTER_AREA2.DSMHAtMouth500Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydrantAddressNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.HydrantAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydrantAddressNull() {
                this[this.tableLFS_MASTER_AREA2.HydrantAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceToInversionMHNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.DistanceToInversionMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceToInversionMHNull() {
                this[this.tableLFS_MASTER_AREA2.DistanceToInversionMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRampsRequiredNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.RampsRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRampsRequiredNull() {
                this[this.tableLFS_MASTER_AREA2.RampsRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDegreeOfTrafficControlNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.DegreeOfTrafficControlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDegreeOfTrafficControlNull() {
                this[this.tableLFS_MASTER_AREA2.DegreeOfTrafficControlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandarBypassNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.StandarBypassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandarBypassNull() {
                this[this.tableLFS_MASTER_AREA2.StandarBypassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydroWireDetailsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.HydroWireDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydroWireDetailsNull() {
                this[this.tableLFS_MASTER_AREA2.HydroWireDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPipeMaterialTypeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.PipeMaterialTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPipeMaterialTypeNull() {
                this[this.tableLFS_MASTER_AREA2.PipeMaterialTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCappedLateralsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.CappedLateralsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCappedLateralsNull() {
                this[this.tableLFS_MASTER_AREA2.CappedLateralsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoboticPrepRequiredNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.RoboticPrepRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoboticPrepRequiredNull() {
                this[this.tableLFS_MASTER_AREA2.RoboticPrepRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPipeSizeChangeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.PipeSizeChangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPipeSizeChangeNull() {
                this[this.tableLFS_MASTER_AREA2.PipeSizeChangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM1CommentsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.M1CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM1CommentsNull() {
                this[this.tableLFS_MASTER_AREA2.M1CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVideoDoneFromNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.VideoDoneFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVideoDoneFromNull() {
                this[this.tableLFS_MASTER_AREA2.VideoDoneFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToManholeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.ToManholeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToManholeNull() {
                this[this.tableLFS_MASTER_AREA2.ToManholeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCutterDescriptionDuringMeasuringNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.CutterDescriptionDuringMeasuringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCutterDescriptionDuringMeasuringNull() {
                this[this.tableLFS_MASTER_AREA2.CutterDescriptionDuringMeasuringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullLengthPointLinerNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.FullLengthPointLinerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullLengthPointLinerNull() {
                this[this.tableLFS_MASTER_AREA2.FullLengthPointLinerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBypassRequiredNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.BypassRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBypassRequiredNull() {
                this[this.tableLFS_MASTER_AREA2.BypassRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoboticDistancesNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.RoboticDistancesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoboticDistancesNull() {
                this[this.tableLFS_MASTER_AREA2.RoboticDistancesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrafficControlDetailsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.TrafficControlDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrafficControlDetailsNull() {
                this[this.tableLFS_MASTER_AREA2.TrafficControlDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineWithIDNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.LineWithIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineWithIDNull() {
                this[this.tableLFS_MASTER_AREA2.LineWithIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchoolZoneNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.SchoolZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchoolZoneNull() {
                this[this.tableLFS_MASTER_AREA2.SchoolZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestaurantAreaNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.RestaurantAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestaurantAreaNull() {
                this[this.tableLFS_MASTER_AREA2.RestaurantAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarwashLaundromatNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.CarwashLaundromatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarwashLaundromatNull() {
                this[this.tableLFS_MASTER_AREA2.CarwashLaundromatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHydroPulleyNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.HydroPulleyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHydroPulleyNull() {
                this[this.tableLFS_MASTER_AREA2.HydroPulleyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFridgeCartNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.FridgeCartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFridgeCartNull() {
                this[this.tableLFS_MASTER_AREA2.FridgeCartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTwoInchPumpNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.TwoInchPumpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTwoInchPumpNull() {
                this[this.tableLFS_MASTER_AREA2.TwoInchPumpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSixInchBypassNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.SixInchBypassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSixInchBypassNull() {
                this[this.tableLFS_MASTER_AREA2.SixInchBypassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScaffoldingNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.ScaffoldingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScaffoldingNull() {
                this[this.tableLFS_MASTER_AREA2.ScaffoldingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWinchExtensionNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.WinchExtensionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWinchExtensionNull() {
                this[this.tableLFS_MASTER_AREA2.WinchExtensionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraGeneratorNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.ExtraGeneratorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraGeneratorNull() {
                this[this.tableLFS_MASTER_AREA2.ExtraGeneratorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGreyCableExtensionNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.GreyCableExtensionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGreyCableExtensionNull() {
                this[this.tableLFS_MASTER_AREA2.GreyCableExtensionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEasementMatsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.EasementMatsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEasementMatsNull() {
                this[this.tableLFS_MASTER_AREA2.EasementMatsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementTypeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.MeasurementTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementTypeNull() {
                this[this.tableLFS_MASTER_AREA2.MeasurementTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDropPipeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.DropPipeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDropPipeNull() {
                this[this.tableLFS_MASTER_AREA2.DropPipeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDropPipeInvertDepthNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.DropPipeInvertDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDropPipeInvertDepthNull() {
                this[this.tableLFS_MASTER_AREA2.DropPipeInvertDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedNull() {
                this[this.tableLFS_MASTER_AREA2.DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasuredFromManholeNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.MeasuredFromManholeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasuredFromManholeNull() {
                this[this.tableLFS_MASTER_AREA2.MeasuredFromManholeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMainLinedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.MainLinedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMainLinedNull() {
                this[this.tableLFS_MASTER_AREA2.MainLinedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBenchingIssueNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.BenchingIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBenchingIssueNull() {
                this[this.tableLFS_MASTER_AREA2.BenchingIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArchivedNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.ArchivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArchivedNull() {
                this[this.tableLFS_MASTER_AREA2.ArchivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.HistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryNull() {
                this[this.tableLFS_MASTER_AREA2.HistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumLatsNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.NumLatsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumLatsNull() {
                this[this.tableLFS_MASTER_AREA2.NumLatsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotLinedYetNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.NotLinedYetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotLinedYetNull() {
                this[this.tableLFS_MASTER_AREA2.NotLinedYetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAllMeasuredNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.AllMeasuredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAllMeasuredNull() {
                this[this.tableLFS_MASTER_AREA2.AllMeasuredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableLFS_MASTER_AREA2.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProvStateNull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.ProvStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProvStateNull() {
                this[this.tableLFS_MASTER_AREA2.ProvStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.tableLFS_MASTER_AREA2.NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.tableLFS_MASTER_AREA2.NAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_JUNCTION_LINERRow : global::System.Data.DataRow {
            
            private LFS_JUNCTION_LINERDataTable tableLFS_JUNCTION_LINER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_JUNCTION_LINERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_JUNCTION_LINER = ((LFS_JUNCTION_LINERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableLFS_JUNCTION_LINER.IDColumn]));
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_JUNCTION_LINER.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_JUNCTION_LINER.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DetailID {
                get {
                    return ((string)(this[this.tableLFS_JUNCTION_LINER.DetailIDColumn]));
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.DetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MN {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER.MNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MN\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.MNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DistanceFromUSMH {
                get {
                    try {
                        return ((double)(this[this.tableLFS_JUNCTION_LINER.DistanceFromUSMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceFromUSMH\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.DistanceFromUSMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConfirmedLatSize {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER.ConfirmedLatSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfirmedLatSize\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.ConfirmedLatSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LateralMaterial {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER.LateralMaterialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralMaterial\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.LateralMaterialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SharedLateral {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER.SharedLateralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SharedLateral\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.SharedLateralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CleanoutRequired {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER.CleanoutRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleanoutRequired\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.CleanoutRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PitRequired {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER.PitRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PitRequired\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.PitRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool MHShot {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER.MHShotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MHShot\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.MHShotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MainConnection {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER.MainConnectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainConnection\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.MainConnectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transition {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER.TransitionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transition\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.TransitionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CleanoutInstalled {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER.CleanoutInstalledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleanoutInstalled\' in table \'LFS_JUNCTION_LINER\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.CleanoutInstalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PitInstalled {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER.PitInstalledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PitInstalled\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.PitInstalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CleanoutGrouted {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER.CleanoutGroutedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleanoutGrouted\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.CleanoutGroutedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CleanoutCored {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER.CleanoutCoredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleanoutCored\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.CleanoutCoredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PrepCompleted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_JUNCTION_LINER.PrepCompletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrepCompleted\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.PrepCompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasuredLatLength {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER.MeasuredLatLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasuredLatLength\' in table \'LFS_JUNCTION_LINER\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.MeasuredLatLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementsTakenBy {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER.MeasurementsTakenByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementsTakenBy\' in table \'LFS_JUNCTION_LINER\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.MeasurementsTakenByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LinerInstalled {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_JUNCTION_LINER.LinerInstalledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerInstalled\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.LinerInstalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FinalVideo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_JUNCTION_LINER.FinalVideoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalVideo\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.FinalVideoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RestorationComplete {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER.RestorationCompleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RestorationComplete\' in table \'LFS_JUNCTION_LINER\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.RestorationCompleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LinerOrdered {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER.LinerOrderedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerOrdered\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.LinerOrderedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LinerInStock {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER.LinerInStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerInStock\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.LinerInStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LinerPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_JUNCTION_LINER.LinerPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerPrice\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.LinerPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER.DeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deleted\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Archived {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER.ArchivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Archived\' in table \'LFS_JUNCTION_LINER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER.ArchivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREARow LFS_MASTER_AREARowParent {
                get {
                    return ((LFS_MASTER_AREARow)(this.GetParentRow(this.Table.ParentRelations["LFS_MASTER_AREALFS_JUNCTION_LINER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LFS_MASTER_AREALFS_JUNCTION_LINER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMNNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.MNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMNNull() {
                this[this.tableLFS_JUNCTION_LINER.MNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceFromUSMHNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.DistanceFromUSMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceFromUSMHNull() {
                this[this.tableLFS_JUNCTION_LINER.DistanceFromUSMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConfirmedLatSizeNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.ConfirmedLatSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConfirmedLatSizeNull() {
                this[this.tableLFS_JUNCTION_LINER.ConfirmedLatSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateralMaterialNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.LateralMaterialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateralMaterialNull() {
                this[this.tableLFS_JUNCTION_LINER.LateralMaterialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSharedLateralNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.SharedLateralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSharedLateralNull() {
                this[this.tableLFS_JUNCTION_LINER.SharedLateralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCleanoutRequiredNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.CleanoutRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCleanoutRequiredNull() {
                this[this.tableLFS_JUNCTION_LINER.CleanoutRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPitRequiredNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.PitRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPitRequiredNull() {
                this[this.tableLFS_JUNCTION_LINER.PitRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMHShotNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.MHShotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMHShotNull() {
                this[this.tableLFS_JUNCTION_LINER.MHShotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMainConnectionNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.MainConnectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMainConnectionNull() {
                this[this.tableLFS_JUNCTION_LINER.MainConnectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransitionNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.TransitionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransitionNull() {
                this[this.tableLFS_JUNCTION_LINER.TransitionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCleanoutInstalledNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.CleanoutInstalledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCleanoutInstalledNull() {
                this[this.tableLFS_JUNCTION_LINER.CleanoutInstalledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPitInstalledNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.PitInstalledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPitInstalledNull() {
                this[this.tableLFS_JUNCTION_LINER.PitInstalledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCleanoutGroutedNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.CleanoutGroutedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCleanoutGroutedNull() {
                this[this.tableLFS_JUNCTION_LINER.CleanoutGroutedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCleanoutCoredNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.CleanoutCoredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCleanoutCoredNull() {
                this[this.tableLFS_JUNCTION_LINER.CleanoutCoredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrepCompletedNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.PrepCompletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrepCompletedNull() {
                this[this.tableLFS_JUNCTION_LINER.PrepCompletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasuredLatLengthNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.MeasuredLatLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasuredLatLengthNull() {
                this[this.tableLFS_JUNCTION_LINER.MeasuredLatLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementsTakenByNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.MeasurementsTakenByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementsTakenByNull() {
                this[this.tableLFS_JUNCTION_LINER.MeasurementsTakenByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerInstalledNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.LinerInstalledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerInstalledNull() {
                this[this.tableLFS_JUNCTION_LINER.LinerInstalledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalVideoNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.FinalVideoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalVideoNull() {
                this[this.tableLFS_JUNCTION_LINER.FinalVideoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestorationCompleteNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.RestorationCompleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestorationCompleteNull() {
                this[this.tableLFS_JUNCTION_LINER.RestorationCompleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerOrderedNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.LinerOrderedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerOrderedNull() {
                this[this.tableLFS_JUNCTION_LINER.LinerOrderedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerInStockNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.LinerInStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerInStockNull() {
                this[this.tableLFS_JUNCTION_LINER.LinerInStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerPriceNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.LinerPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerPriceNull() {
                this[this.tableLFS_JUNCTION_LINER.LinerPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_JUNCTION_LINER.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedNull() {
                this[this.tableLFS_JUNCTION_LINER.DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArchivedNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER.ArchivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArchivedNull() {
                this[this.tableLFS_JUNCTION_LINER.ArchivedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_JUNCTION_LINER_RCTRow : global::System.Data.DataRow {
            
            private LFS_JUNCTION_LINER_RCTDataTable tableLFS_JUNCTION_LINER_RCT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_JUNCTION_LINER_RCTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_JUNCTION_LINER_RCT = ((LFS_JUNCTION_LINER_RCTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableLFS_JUNCTION_LINER_RCT.IDColumn]));
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_JUNCTION_LINER_RCT.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_JUNCTION_LINER_RCT.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RctID {
                get {
                    return ((int)(this[this.tableLFS_JUNCTION_LINER_RCT.RctIDColumn]));
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT.RctIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Changes {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER_RCT.ChangesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Changes\' in table \'LFS_JUNCTION_LINER_RCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT.ChangesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Operation {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER_RCT.OperationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Operation\' in table \'LFS_JUNCTION_LINER_RCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT.OperationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableLFS_JUNCTION_LINER_RCT.ChangedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'LFS_JUNCTION_LINER_RCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT.ChangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Changed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_JUNCTION_LINER_RCT.ChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Changed\' in table \'LFS_JUNCTION_LINER_RCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT.ChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangesNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT.ChangesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangesNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT.ChangesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperationNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT.OperationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperationNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT.OperationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT.ChangedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT.ChangedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT.ChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT.ChangedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LFS_JUNCTION_LINER_RCT_EXPANDEDRow : global::System.Data.DataRow {
            
            private LFS_JUNCTION_LINER_RCT_EXPANDEDDataTable tableLFS_JUNCTION_LINER_RCT_EXPANDED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LFS_JUNCTION_LINER_RCT_EXPANDEDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLFS_JUNCTION_LINER_RCT_EXPANDED = ((LFS_JUNCTION_LINER_RCT_EXPANDEDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.IDColumn]));
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.RefIDColumn]));
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RctID {
                get {
                    return ((int)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.RctIDColumn]));
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.RctIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DetailID {
                get {
                    return ((string)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.DetailIDColumn]));
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.DetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MN {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MN\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DistanceFromUSMH {
                get {
                    try {
                        return ((double)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.DistanceFromUSMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceFromUSMH\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.DistanceFromUSMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConfirmedLatSize {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.ConfirmedLatSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfirmedLatSize\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.ConfirmedLatSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LateralMaterial {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LateralMaterialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralMaterial\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LateralMaterialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SharedLateral {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.SharedLateralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SharedLateral\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.SharedLateralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CleanoutRequired {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CleanoutRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleanoutRequired\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CleanoutRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PitRequired {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.PitRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PitRequired\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.PitRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool MHShot {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MHShotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MHShot\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MHShotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MainConnection {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MainConnectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainConnection\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MainConnectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transition {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.TransitionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transition\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.TransitionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CleanoutInstalled {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CleanoutInstalledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleanoutInstalled\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDE" +
                                "D\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CleanoutInstalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PitInstalled {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.PitInstalledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PitInstalled\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.PitInstalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CleanoutGrouted {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CleanoutGroutedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleanoutGrouted\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CleanoutGroutedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CleanoutCored {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CleanoutCoredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleanoutCored\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CleanoutCoredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PrepCompleted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.PrepCompletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrepCompleted\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.PrepCompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasuredLatLength {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MeasuredLatLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasuredLatLength\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDE" +
                                "D\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MeasuredLatLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementsTakenBy {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MeasurementsTakenByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementsTakenBy\' in table \'LFS_JUNCTION_LINER_RCT_EXPAN" +
                                "DED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MeasurementsTakenByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LinerInstalled {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LinerInstalledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerInstalled\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LinerInstalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FinalVideo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.FinalVideoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalVideo\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.FinalVideoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RestorationComplete {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.RestorationCompleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RestorationComplete\' in table \'LFS_JUNCTION_LINER_RCT_EXPAN" +
                                "DED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.RestorationCompleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LinerOrdered {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LinerOrderedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerOrdered\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LinerOrderedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LinerInStock {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LinerInStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerInStock\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LinerInStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LinerPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LinerPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinerPrice\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LinerPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.DeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deleted\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Archived {
                get {
                    try {
                        return ((bool)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.ArchivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Archived\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.ArchivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Operation {
                get {
                    try {
                        return ((string)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.OperationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Operation\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.OperationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.ChangedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.ChangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USERNAME {
                get {
                    return ((string)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.USERNAMEColumn]));
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.USERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Changed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.ChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Changed\' in table \'LFS_JUNCTION_LINER_RCT_EXPANDED\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.ChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMNNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMNNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceFromUSMHNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.DistanceFromUSMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceFromUSMHNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.DistanceFromUSMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConfirmedLatSizeNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.ConfirmedLatSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConfirmedLatSizeNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.ConfirmedLatSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateralMaterialNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LateralMaterialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateralMaterialNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LateralMaterialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSharedLateralNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.SharedLateralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSharedLateralNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.SharedLateralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCleanoutRequiredNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CleanoutRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCleanoutRequiredNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CleanoutRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPitRequiredNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.PitRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPitRequiredNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.PitRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMHShotNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MHShotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMHShotNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MHShotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMainConnectionNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MainConnectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMainConnectionNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MainConnectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransitionNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.TransitionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransitionNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.TransitionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCleanoutInstalledNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CleanoutInstalledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCleanoutInstalledNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CleanoutInstalledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPitInstalledNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.PitInstalledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPitInstalledNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.PitInstalledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCleanoutGroutedNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CleanoutGroutedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCleanoutGroutedNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CleanoutGroutedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCleanoutCoredNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CleanoutCoredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCleanoutCoredNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CleanoutCoredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrepCompletedNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.PrepCompletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrepCompletedNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.PrepCompletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasuredLatLengthNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MeasuredLatLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasuredLatLengthNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MeasuredLatLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementsTakenByNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MeasurementsTakenByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementsTakenByNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.MeasurementsTakenByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerInstalledNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LinerInstalledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerInstalledNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LinerInstalledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalVideoNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.FinalVideoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalVideoNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.FinalVideoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestorationCompleteNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.RestorationCompleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestorationCompleteNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.RestorationCompleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerOrderedNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LinerOrderedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerOrderedNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LinerOrderedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerInStockNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LinerInStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerInStockNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LinerInStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinerPriceNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LinerPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinerPriceNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.LinerPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArchivedNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.ArchivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArchivedNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.ArchivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperationNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.OperationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperationNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.OperationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.ChangedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.ChangedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedNull() {
                return this.IsNull(this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.ChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedNull() {
                this[this.tableLFS_JUNCTION_LINER_RCT_EXPANDED.ChangedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_MASTER_AREARowChangeEvent : global::System.EventArgs {
            
            private LFS_MASTER_AREARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREARowChangeEvent(LFS_MASTER_AREARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_POINT_REPAIRSRowChangeEvent : global::System.EventArgs {
            
            private LFS_POINT_REPAIRSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRSRowChangeEvent(LFS_POINT_REPAIRSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_M2_TABLESRowChangeEvent : global::System.EventArgs {
            
            private LFS_M2_TABLESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLESRowChangeEvent(LFS_M2_TABLESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_MASTER_AREA_RCT_EXPANDEDRowChangeEvent : global::System.EventArgs {
            
            private LFS_MASTER_AREA_RCT_EXPANDEDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA_RCT_EXPANDEDRowChangeEvent(LFS_MASTER_AREA_RCT_EXPANDEDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA_RCT_EXPANDEDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_M2_TABLES_RCT_EXPANDEDRowChangeEvent : global::System.EventArgs {
            
            private LFS_M2_TABLES_RCT_EXPANDEDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLES_RCT_EXPANDEDRowChangeEvent(LFS_M2_TABLES_RCT_EXPANDEDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLES_RCT_EXPANDEDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_POINT_REPAIRS_RCT_EXPANDEDRowChangeEvent : global::System.EventArgs {
            
            private LFS_POINT_REPAIRS_RCT_EXPANDEDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRS_RCT_EXPANDEDRowChangeEvent(LFS_POINT_REPAIRS_RCT_EXPANDEDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRS_RCT_EXPANDEDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_MASTER_AREA_RCTRowChangeEvent : global::System.EventArgs {
            
            private LFS_MASTER_AREA_RCTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA_RCTRowChangeEvent(LFS_MASTER_AREA_RCTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA_RCTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_POINT_REPAIRS_RCTRowChangeEvent : global::System.EventArgs {
            
            private LFS_POINT_REPAIRS_RCTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRS_RCTRowChangeEvent(LFS_POINT_REPAIRS_RCTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_POINT_REPAIRS_RCTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_M2_TABLES_RCTRowChangeEvent : global::System.EventArgs {
            
            private LFS_M2_TABLES_RCTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLES_RCTRowChangeEvent(LFS_M2_TABLES_RCTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_M2_TABLES_RCTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_MASTER_AREA2RowChangeEvent : global::System.EventArgs {
            
            private LFS_MASTER_AREA2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA2RowChangeEvent(LFS_MASTER_AREA2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_MASTER_AREA2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_JUNCTION_LINERRowChangeEvent : global::System.EventArgs {
            
            private LFS_JUNCTION_LINERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINERRowChangeEvent(LFS_JUNCTION_LINERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_JUNCTION_LINER_RCTRowChangeEvent : global::System.EventArgs {
            
            private LFS_JUNCTION_LINER_RCTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINER_RCTRowChangeEvent(LFS_JUNCTION_LINER_RCTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINER_RCTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LFS_JUNCTION_LINER_RCT_EXPANDEDRowChangeEvent : global::System.EventArgs {
            
            private LFS_JUNCTION_LINER_RCT_EXPANDEDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINER_RCT_EXPANDEDRowChangeEvent(LFS_JUNCTION_LINER_RCT_EXPANDEDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LFS_JUNCTION_LINER_RCT_EXPANDEDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591