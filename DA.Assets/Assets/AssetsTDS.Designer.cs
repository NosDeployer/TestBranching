//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3625
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LiquiForce.LFSLive.DA.Assets.Assets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("AssetsTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class AssetsTDS : global::System.Data.DataSet {
        
        private AM_ASSET_SEWERDataTable tableAM_ASSET_SEWER;
        
        private AM_ASSET_SEWER_MATERIALDataTable tableAM_ASSET_SEWER_MATERIAL;
        
        private AM_ASSETDataTable tableAM_ASSET;
        
        private AM_ASSET_SEWER_SECTIONDataTable tableAM_ASSET_SEWER_SECTION;
        
        private AM_ASSET_SEWER_LATERALDataTable tableAM_ASSET_SEWER_LATERAL;
        
        private AM_ASSET_SEWER_MHDataTable tableAM_ASSET_SEWER_MH;
        
        private AM_ASSET_SEWER_MH_MATERIAL_TYPEDataTable tableAM_ASSET_SEWER_MH_MATERIAL_TYPE;
        
        private global::System.Data.DataRelation relationFK_AM_ASSET_SEWER_AM_ASSET_SEWER_MATERIAL;
        
        private global::System.Data.DataRelation relationAM_ASSET_SEWER_AM_ASSET;
        
        private global::System.Data.DataRelation relationFK_AM_ASSET_SEWER_AM_ASSET_SEWER_SECTION;
        
        private global::System.Data.DataRelation relationAM_ASSET_SEWER_AM_ASSET_SEWER_LATERAL;
        
        private global::System.Data.DataRelation relationAM_ASSET_SEWER_SECTION_AM_ASSET_SEWER_LATERAL;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AssetsTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected AssetsTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["AM_ASSET_SEWER"] != null)) {
                    base.Tables.Add(new AM_ASSET_SEWERDataTable(ds.Tables["AM_ASSET_SEWER"]));
                }
                if ((ds.Tables["AM_ASSET_SEWER_MATERIAL"] != null)) {
                    base.Tables.Add(new AM_ASSET_SEWER_MATERIALDataTable(ds.Tables["AM_ASSET_SEWER_MATERIAL"]));
                }
                if ((ds.Tables["AM_ASSET"] != null)) {
                    base.Tables.Add(new AM_ASSETDataTable(ds.Tables["AM_ASSET"]));
                }
                if ((ds.Tables["AM_ASSET_SEWER_SECTION"] != null)) {
                    base.Tables.Add(new AM_ASSET_SEWER_SECTIONDataTable(ds.Tables["AM_ASSET_SEWER_SECTION"]));
                }
                if ((ds.Tables["AM_ASSET_SEWER_LATERAL"] != null)) {
                    base.Tables.Add(new AM_ASSET_SEWER_LATERALDataTable(ds.Tables["AM_ASSET_SEWER_LATERAL"]));
                }
                if ((ds.Tables["AM_ASSET_SEWER_MH"] != null)) {
                    base.Tables.Add(new AM_ASSET_SEWER_MHDataTable(ds.Tables["AM_ASSET_SEWER_MH"]));
                }
                if ((ds.Tables["AM_ASSET_SEWER_MH_MATERIAL_TYPE"] != null)) {
                    base.Tables.Add(new AM_ASSET_SEWER_MH_MATERIAL_TYPEDataTable(ds.Tables["AM_ASSET_SEWER_MH_MATERIAL_TYPE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AM_ASSET_SEWERDataTable AM_ASSET_SEWER {
            get {
                return this.tableAM_ASSET_SEWER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AM_ASSET_SEWER_MATERIALDataTable AM_ASSET_SEWER_MATERIAL {
            get {
                return this.tableAM_ASSET_SEWER_MATERIAL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AM_ASSETDataTable AM_ASSET {
            get {
                return this.tableAM_ASSET;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AM_ASSET_SEWER_SECTIONDataTable AM_ASSET_SEWER_SECTION {
            get {
                return this.tableAM_ASSET_SEWER_SECTION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AM_ASSET_SEWER_LATERALDataTable AM_ASSET_SEWER_LATERAL {
            get {
                return this.tableAM_ASSET_SEWER_LATERAL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AM_ASSET_SEWER_MHDataTable AM_ASSET_SEWER_MH {
            get {
                return this.tableAM_ASSET_SEWER_MH;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AM_ASSET_SEWER_MH_MATERIAL_TYPEDataTable AM_ASSET_SEWER_MH_MATERIAL_TYPE {
            get {
                return this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            AssetsTDS cln = ((AssetsTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["AM_ASSET_SEWER"] != null)) {
                    base.Tables.Add(new AM_ASSET_SEWERDataTable(ds.Tables["AM_ASSET_SEWER"]));
                }
                if ((ds.Tables["AM_ASSET_SEWER_MATERIAL"] != null)) {
                    base.Tables.Add(new AM_ASSET_SEWER_MATERIALDataTable(ds.Tables["AM_ASSET_SEWER_MATERIAL"]));
                }
                if ((ds.Tables["AM_ASSET"] != null)) {
                    base.Tables.Add(new AM_ASSETDataTable(ds.Tables["AM_ASSET"]));
                }
                if ((ds.Tables["AM_ASSET_SEWER_SECTION"] != null)) {
                    base.Tables.Add(new AM_ASSET_SEWER_SECTIONDataTable(ds.Tables["AM_ASSET_SEWER_SECTION"]));
                }
                if ((ds.Tables["AM_ASSET_SEWER_LATERAL"] != null)) {
                    base.Tables.Add(new AM_ASSET_SEWER_LATERALDataTable(ds.Tables["AM_ASSET_SEWER_LATERAL"]));
                }
                if ((ds.Tables["AM_ASSET_SEWER_MH"] != null)) {
                    base.Tables.Add(new AM_ASSET_SEWER_MHDataTable(ds.Tables["AM_ASSET_SEWER_MH"]));
                }
                if ((ds.Tables["AM_ASSET_SEWER_MH_MATERIAL_TYPE"] != null)) {
                    base.Tables.Add(new AM_ASSET_SEWER_MH_MATERIAL_TYPEDataTable(ds.Tables["AM_ASSET_SEWER_MH_MATERIAL_TYPE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableAM_ASSET_SEWER = ((AM_ASSET_SEWERDataTable)(base.Tables["AM_ASSET_SEWER"]));
            if ((initTable == true)) {
                if ((this.tableAM_ASSET_SEWER != null)) {
                    this.tableAM_ASSET_SEWER.InitVars();
                }
            }
            this.tableAM_ASSET_SEWER_MATERIAL = ((AM_ASSET_SEWER_MATERIALDataTable)(base.Tables["AM_ASSET_SEWER_MATERIAL"]));
            if ((initTable == true)) {
                if ((this.tableAM_ASSET_SEWER_MATERIAL != null)) {
                    this.tableAM_ASSET_SEWER_MATERIAL.InitVars();
                }
            }
            this.tableAM_ASSET = ((AM_ASSETDataTable)(base.Tables["AM_ASSET"]));
            if ((initTable == true)) {
                if ((this.tableAM_ASSET != null)) {
                    this.tableAM_ASSET.InitVars();
                }
            }
            this.tableAM_ASSET_SEWER_SECTION = ((AM_ASSET_SEWER_SECTIONDataTable)(base.Tables["AM_ASSET_SEWER_SECTION"]));
            if ((initTable == true)) {
                if ((this.tableAM_ASSET_SEWER_SECTION != null)) {
                    this.tableAM_ASSET_SEWER_SECTION.InitVars();
                }
            }
            this.tableAM_ASSET_SEWER_LATERAL = ((AM_ASSET_SEWER_LATERALDataTable)(base.Tables["AM_ASSET_SEWER_LATERAL"]));
            if ((initTable == true)) {
                if ((this.tableAM_ASSET_SEWER_LATERAL != null)) {
                    this.tableAM_ASSET_SEWER_LATERAL.InitVars();
                }
            }
            this.tableAM_ASSET_SEWER_MH = ((AM_ASSET_SEWER_MHDataTable)(base.Tables["AM_ASSET_SEWER_MH"]));
            if ((initTable == true)) {
                if ((this.tableAM_ASSET_SEWER_MH != null)) {
                    this.tableAM_ASSET_SEWER_MH.InitVars();
                }
            }
            this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE = ((AM_ASSET_SEWER_MH_MATERIAL_TYPEDataTable)(base.Tables["AM_ASSET_SEWER_MH_MATERIAL_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE != null)) {
                    this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE.InitVars();
                }
            }
            this.relationFK_AM_ASSET_SEWER_AM_ASSET_SEWER_MATERIAL = this.Relations["FK_AM_ASSET_SEWER_AM_ASSET_SEWER_MATERIAL"];
            this.relationAM_ASSET_SEWER_AM_ASSET = this.Relations["AM_ASSET_SEWER_AM_ASSET"];
            this.relationFK_AM_ASSET_SEWER_AM_ASSET_SEWER_SECTION = this.Relations["FK_AM_ASSET_SEWER_AM_ASSET_SEWER_SECTION"];
            this.relationAM_ASSET_SEWER_AM_ASSET_SEWER_LATERAL = this.Relations["AM_ASSET_SEWER_AM_ASSET_SEWER_LATERAL"];
            this.relationAM_ASSET_SEWER_SECTION_AM_ASSET_SEWER_LATERAL = this.Relations["AM_ASSET_SEWER_SECTION_AM_ASSET_SEWER_LATERAL"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "AssetsTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AssetsTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAM_ASSET_SEWER = new AM_ASSET_SEWERDataTable();
            base.Tables.Add(this.tableAM_ASSET_SEWER);
            this.tableAM_ASSET_SEWER_MATERIAL = new AM_ASSET_SEWER_MATERIALDataTable();
            base.Tables.Add(this.tableAM_ASSET_SEWER_MATERIAL);
            this.tableAM_ASSET = new AM_ASSETDataTable();
            base.Tables.Add(this.tableAM_ASSET);
            this.tableAM_ASSET_SEWER_SECTION = new AM_ASSET_SEWER_SECTIONDataTable();
            base.Tables.Add(this.tableAM_ASSET_SEWER_SECTION);
            this.tableAM_ASSET_SEWER_LATERAL = new AM_ASSET_SEWER_LATERALDataTable();
            base.Tables.Add(this.tableAM_ASSET_SEWER_LATERAL);
            this.tableAM_ASSET_SEWER_MH = new AM_ASSET_SEWER_MHDataTable();
            base.Tables.Add(this.tableAM_ASSET_SEWER_MH);
            this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE = new AM_ASSET_SEWER_MH_MATERIAL_TYPEDataTable();
            base.Tables.Add(this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE);
            this.relationFK_AM_ASSET_SEWER_AM_ASSET_SEWER_MATERIAL = new global::System.Data.DataRelation("FK_AM_ASSET_SEWER_AM_ASSET_SEWER_MATERIAL", new global::System.Data.DataColumn[] {
                        this.tableAM_ASSET_SEWER.AssetIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableAM_ASSET_SEWER_MATERIAL.AssetIDColumn}, false);
            this.Relations.Add(this.relationFK_AM_ASSET_SEWER_AM_ASSET_SEWER_MATERIAL);
            this.relationAM_ASSET_SEWER_AM_ASSET = new global::System.Data.DataRelation("AM_ASSET_SEWER_AM_ASSET", new global::System.Data.DataColumn[] {
                        this.tableAM_ASSET_SEWER.AssetIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableAM_ASSET.AssetIDColumn}, false);
            this.Relations.Add(this.relationAM_ASSET_SEWER_AM_ASSET);
            this.relationFK_AM_ASSET_SEWER_AM_ASSET_SEWER_SECTION = new global::System.Data.DataRelation("FK_AM_ASSET_SEWER_AM_ASSET_SEWER_SECTION", new global::System.Data.DataColumn[] {
                        this.tableAM_ASSET_SEWER.AssetIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableAM_ASSET_SEWER_SECTION.AssetIDColumn}, false);
            this.Relations.Add(this.relationFK_AM_ASSET_SEWER_AM_ASSET_SEWER_SECTION);
            this.relationAM_ASSET_SEWER_AM_ASSET_SEWER_LATERAL = new global::System.Data.DataRelation("AM_ASSET_SEWER_AM_ASSET_SEWER_LATERAL", new global::System.Data.DataColumn[] {
                        this.tableAM_ASSET_SEWER.AssetIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableAM_ASSET_SEWER_LATERAL.AssetIDColumn}, false);
            this.Relations.Add(this.relationAM_ASSET_SEWER_AM_ASSET_SEWER_LATERAL);
            this.relationAM_ASSET_SEWER_SECTION_AM_ASSET_SEWER_LATERAL = new global::System.Data.DataRelation("AM_ASSET_SEWER_SECTION_AM_ASSET_SEWER_LATERAL", new global::System.Data.DataColumn[] {
                        this.tableAM_ASSET_SEWER_SECTION.AssetIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableAM_ASSET_SEWER_LATERAL.Section_Column}, false);
            this.Relations.Add(this.relationAM_ASSET_SEWER_SECTION_AM_ASSET_SEWER_LATERAL);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAM_ASSET_SEWER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAM_ASSET_SEWER_MATERIAL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAM_ASSET() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAM_ASSET_SEWER_SECTION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAM_ASSET_SEWER_LATERAL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAM_ASSET_SEWER_MH() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAM_ASSET_SEWER_MH_MATERIAL_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            AssetsTDS ds = new AssetsTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void AM_ASSET_SEWERRowChangeEventHandler(object sender, AM_ASSET_SEWERRowChangeEvent e);
        
        public delegate void AM_ASSET_SEWER_MATERIALRowChangeEventHandler(object sender, AM_ASSET_SEWER_MATERIALRowChangeEvent e);
        
        public delegate void AM_ASSETRowChangeEventHandler(object sender, AM_ASSETRowChangeEvent e);
        
        public delegate void AM_ASSET_SEWER_SECTIONRowChangeEventHandler(object sender, AM_ASSET_SEWER_SECTIONRowChangeEvent e);
        
        public delegate void AM_ASSET_SEWER_LATERALRowChangeEventHandler(object sender, AM_ASSET_SEWER_LATERALRowChangeEvent e);
        
        public delegate void AM_ASSET_SEWER_MHRowChangeEventHandler(object sender, AM_ASSET_SEWER_MHRowChangeEvent e);
        
        public delegate void AM_ASSET_SEWER_MH_MATERIAL_TYPERowChangeEventHandler(object sender, AM_ASSET_SEWER_MH_MATERIAL_TYPERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AM_ASSET_SEWERDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAssetID;
            
            private global::System.Data.DataColumn columnAssetSewerType;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWERDataTable() {
                this.TableName = "AM_ASSET_SEWER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AM_ASSET_SEWERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AM_ASSET_SEWERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetIDColumn {
                get {
                    return this.columnAssetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetSewerTypeColumn {
                get {
                    return this.columnAssetSewerType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWERRow this[int index] {
                get {
                    return ((AM_ASSET_SEWERRow)(this.Rows[index]));
                }
            }
            
            public event AM_ASSET_SEWERRowChangeEventHandler AM_ASSET_SEWERRowChanging;
            
            public event AM_ASSET_SEWERRowChangeEventHandler AM_ASSET_SEWERRowChanged;
            
            public event AM_ASSET_SEWERRowChangeEventHandler AM_ASSET_SEWERRowDeleting;
            
            public event AM_ASSET_SEWERRowChangeEventHandler AM_ASSET_SEWERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAM_ASSET_SEWERRow(AM_ASSET_SEWERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWERRow AddAM_ASSET_SEWERRow(int AssetID, string AssetSewerType, bool Deleted, int COMPANY_ID) {
                AM_ASSET_SEWERRow rowAM_ASSET_SEWERRow = ((AM_ASSET_SEWERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AssetID,
                        AssetSewerType,
                        Deleted,
                        COMPANY_ID};
                rowAM_ASSET_SEWERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAM_ASSET_SEWERRow);
                return rowAM_ASSET_SEWERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWERRow FindByAssetID(int AssetID) {
                return ((AM_ASSET_SEWERRow)(this.Rows.Find(new object[] {
                            AssetID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AM_ASSET_SEWERDataTable cln = ((AM_ASSET_SEWERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AM_ASSET_SEWERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAssetID = base.Columns["AssetID"];
                this.columnAssetSewerType = base.Columns["AssetSewerType"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAssetID = new global::System.Data.DataColumn("AssetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetID);
                this.columnAssetSewerType = new global::System.Data.DataColumn("AssetSewerType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetSewerType);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAssetID}, true));
                this.columnAssetID.AllowDBNull = false;
                this.columnAssetID.Unique = true;
                this.columnAssetSewerType.AllowDBNull = false;
                this.columnAssetSewerType.MaxLength = 50;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWERRow NewAM_ASSET_SEWERRow() {
                return ((AM_ASSET_SEWERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AM_ASSET_SEWERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AM_ASSET_SEWERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AM_ASSET_SEWERRowChanged != null)) {
                    this.AM_ASSET_SEWERRowChanged(this, new AM_ASSET_SEWERRowChangeEvent(((AM_ASSET_SEWERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AM_ASSET_SEWERRowChanging != null)) {
                    this.AM_ASSET_SEWERRowChanging(this, new AM_ASSET_SEWERRowChangeEvent(((AM_ASSET_SEWERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AM_ASSET_SEWERRowDeleted != null)) {
                    this.AM_ASSET_SEWERRowDeleted(this, new AM_ASSET_SEWERRowChangeEvent(((AM_ASSET_SEWERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AM_ASSET_SEWERRowDeleting != null)) {
                    this.AM_ASSET_SEWERRowDeleting(this, new AM_ASSET_SEWERRowChangeEvent(((AM_ASSET_SEWERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAM_ASSET_SEWERRow(AM_ASSET_SEWERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AssetsTDS ds = new AssetsTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AM_ASSET_SEWERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AM_ASSET_SEWER_MATERIALDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAssetID;
            
            private global::System.Data.DataColumn columnRefID;
            
            private global::System.Data.DataColumn columnMaterialType;
            
            private global::System.Data.DataColumn columnDate_;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MATERIALDataTable() {
                this.TableName = "AM_ASSET_SEWER_MATERIAL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AM_ASSET_SEWER_MATERIALDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AM_ASSET_SEWER_MATERIALDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetIDColumn {
                get {
                    return this.columnAssetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIDColumn {
                get {
                    return this.columnRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialTypeColumn {
                get {
                    return this.columnMaterialType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Date_Column {
                get {
                    return this.columnDate_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MATERIALRow this[int index] {
                get {
                    return ((AM_ASSET_SEWER_MATERIALRow)(this.Rows[index]));
                }
            }
            
            public event AM_ASSET_SEWER_MATERIALRowChangeEventHandler AM_ASSET_SEWER_MATERIALRowChanging;
            
            public event AM_ASSET_SEWER_MATERIALRowChangeEventHandler AM_ASSET_SEWER_MATERIALRowChanged;
            
            public event AM_ASSET_SEWER_MATERIALRowChangeEventHandler AM_ASSET_SEWER_MATERIALRowDeleting;
            
            public event AM_ASSET_SEWER_MATERIALRowChangeEventHandler AM_ASSET_SEWER_MATERIALRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAM_ASSET_SEWER_MATERIALRow(AM_ASSET_SEWER_MATERIALRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MATERIALRow AddAM_ASSET_SEWER_MATERIALRow(AM_ASSET_SEWERRow parentAM_ASSET_SEWERRowByFK_AM_ASSET_SEWER_AM_ASSET_SEWER_MATERIAL, int RefID, string MaterialType, System.DateTime Date_, int COMPANY_ID, bool Deleted) {
                AM_ASSET_SEWER_MATERIALRow rowAM_ASSET_SEWER_MATERIALRow = ((AM_ASSET_SEWER_MATERIALRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RefID,
                        MaterialType,
                        Date_,
                        COMPANY_ID,
                        Deleted};
                if ((parentAM_ASSET_SEWERRowByFK_AM_ASSET_SEWER_AM_ASSET_SEWER_MATERIAL != null)) {
                    columnValuesArray[0] = parentAM_ASSET_SEWERRowByFK_AM_ASSET_SEWER_AM_ASSET_SEWER_MATERIAL[0];
                }
                rowAM_ASSET_SEWER_MATERIALRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAM_ASSET_SEWER_MATERIALRow);
                return rowAM_ASSET_SEWER_MATERIALRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MATERIALRow FindByAssetIDRefID(int AssetID, int RefID) {
                return ((AM_ASSET_SEWER_MATERIALRow)(this.Rows.Find(new object[] {
                            AssetID,
                            RefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AM_ASSET_SEWER_MATERIALDataTable cln = ((AM_ASSET_SEWER_MATERIALDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AM_ASSET_SEWER_MATERIALDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAssetID = base.Columns["AssetID"];
                this.columnRefID = base.Columns["RefID"];
                this.columnMaterialType = base.Columns["MaterialType"];
                this.columnDate_ = base.Columns["Date_"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnDeleted = base.Columns["Deleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAssetID = new global::System.Data.DataColumn("AssetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetID);
                this.columnRefID = new global::System.Data.DataColumn("RefID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefID);
                this.columnMaterialType = new global::System.Data.DataColumn("MaterialType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialType);
                this.columnDate_ = new global::System.Data.DataColumn("Date_", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate_);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAssetID,
                                this.columnRefID}, true));
                this.columnAssetID.AllowDBNull = false;
                this.columnRefID.AllowDBNull = false;
                this.columnMaterialType.AllowDBNull = false;
                this.columnMaterialType.MaxLength = 50;
                this.columnDate_.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MATERIALRow NewAM_ASSET_SEWER_MATERIALRow() {
                return ((AM_ASSET_SEWER_MATERIALRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AM_ASSET_SEWER_MATERIALRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AM_ASSET_SEWER_MATERIALRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AM_ASSET_SEWER_MATERIALRowChanged != null)) {
                    this.AM_ASSET_SEWER_MATERIALRowChanged(this, new AM_ASSET_SEWER_MATERIALRowChangeEvent(((AM_ASSET_SEWER_MATERIALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AM_ASSET_SEWER_MATERIALRowChanging != null)) {
                    this.AM_ASSET_SEWER_MATERIALRowChanging(this, new AM_ASSET_SEWER_MATERIALRowChangeEvent(((AM_ASSET_SEWER_MATERIALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AM_ASSET_SEWER_MATERIALRowDeleted != null)) {
                    this.AM_ASSET_SEWER_MATERIALRowDeleted(this, new AM_ASSET_SEWER_MATERIALRowChangeEvent(((AM_ASSET_SEWER_MATERIALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AM_ASSET_SEWER_MATERIALRowDeleting != null)) {
                    this.AM_ASSET_SEWER_MATERIALRowDeleting(this, new AM_ASSET_SEWER_MATERIALRowChangeEvent(((AM_ASSET_SEWER_MATERIALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAM_ASSET_SEWER_MATERIALRow(AM_ASSET_SEWER_MATERIALRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AssetsTDS ds = new AssetsTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AM_ASSET_SEWER_MATERIALDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AM_ASSETDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAssetID;
            
            private global::System.Data.DataColumn columnAssetType;
            
            private global::System.Data.DataColumn columnCountryID;
            
            private global::System.Data.DataColumn columnProvinceID;
            
            private global::System.Data.DataColumn columnCountyID;
            
            private global::System.Data.DataColumn columnCityID;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSETDataTable() {
                this.TableName = "AM_ASSET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AM_ASSETDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AM_ASSETDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetIDColumn {
                get {
                    return this.columnAssetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetTypeColumn {
                get {
                    return this.columnAssetType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryIDColumn {
                get {
                    return this.columnCountryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProvinceIDColumn {
                get {
                    return this.columnProvinceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountyIDColumn {
                get {
                    return this.columnCountyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityIDColumn {
                get {
                    return this.columnCityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSETRow this[int index] {
                get {
                    return ((AM_ASSETRow)(this.Rows[index]));
                }
            }
            
            public event AM_ASSETRowChangeEventHandler AM_ASSETRowChanging;
            
            public event AM_ASSETRowChangeEventHandler AM_ASSETRowChanged;
            
            public event AM_ASSETRowChangeEventHandler AM_ASSETRowDeleting;
            
            public event AM_ASSETRowChangeEventHandler AM_ASSETRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAM_ASSETRow(AM_ASSETRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSETRow AddAM_ASSETRow(string AssetType, long CountryID, long ProvinceID, long CountyID, long CityID, bool Deleted, int COMPANY_ID) {
                AM_ASSETRow rowAM_ASSETRow = ((AM_ASSETRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        AssetType,
                        CountryID,
                        ProvinceID,
                        CountyID,
                        CityID,
                        Deleted,
                        COMPANY_ID};
                rowAM_ASSETRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAM_ASSETRow);
                return rowAM_ASSETRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSETRow FindByAssetID(int AssetID) {
                return ((AM_ASSETRow)(this.Rows.Find(new object[] {
                            AssetID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AM_ASSETDataTable cln = ((AM_ASSETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AM_ASSETDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAssetID = base.Columns["AssetID"];
                this.columnAssetType = base.Columns["AssetType"];
                this.columnCountryID = base.Columns["CountryID"];
                this.columnProvinceID = base.Columns["ProvinceID"];
                this.columnCountyID = base.Columns["CountyID"];
                this.columnCityID = base.Columns["CityID"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAssetID = new global::System.Data.DataColumn("AssetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetID);
                this.columnAssetType = new global::System.Data.DataColumn("AssetType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetType);
                this.columnCountryID = new global::System.Data.DataColumn("CountryID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryID);
                this.columnProvinceID = new global::System.Data.DataColumn("ProvinceID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvinceID);
                this.columnCountyID = new global::System.Data.DataColumn("CountyID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountyID);
                this.columnCityID = new global::System.Data.DataColumn("CityID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityID);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAssetID}, true));
                this.columnAssetID.AutoIncrement = true;
                this.columnAssetID.AllowDBNull = false;
                this.columnAssetID.ReadOnly = true;
                this.columnAssetID.Unique = true;
                this.columnAssetType.AllowDBNull = false;
                this.columnAssetType.MaxLength = 50;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSETRow NewAM_ASSETRow() {
                return ((AM_ASSETRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AM_ASSETRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AM_ASSETRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AM_ASSETRowChanged != null)) {
                    this.AM_ASSETRowChanged(this, new AM_ASSETRowChangeEvent(((AM_ASSETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AM_ASSETRowChanging != null)) {
                    this.AM_ASSETRowChanging(this, new AM_ASSETRowChangeEvent(((AM_ASSETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AM_ASSETRowDeleted != null)) {
                    this.AM_ASSETRowDeleted(this, new AM_ASSETRowChangeEvent(((AM_ASSETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AM_ASSETRowDeleting != null)) {
                    this.AM_ASSETRowDeleting(this, new AM_ASSETRowChangeEvent(((AM_ASSETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAM_ASSETRow(AM_ASSETRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AssetsTDS ds = new AssetsTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AM_ASSETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AM_ASSET_SEWER_SECTIONDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAssetID;
            
            private global::System.Data.DataColumn columnSectionID;
            
            private global::System.Data.DataColumn columnStreet;
            
            private global::System.Data.DataColumn columnUSMH;
            
            private global::System.Data.DataColumn columnDSMH;
            
            private global::System.Data.DataColumn columnMapSize;
            
            private global::System.Data.DataColumn columnSize_;
            
            private global::System.Data.DataColumn columnMapLength;
            
            private global::System.Data.DataColumn columnLength;
            
            private global::System.Data.DataColumn columnLaterals;
            
            private global::System.Data.DataColumn columnLiveLaterals;
            
            private global::System.Data.DataColumn columnFlowDirection;
            
            private global::System.Data.DataColumn columnUSMHDepth;
            
            private global::System.Data.DataColumn columnDSMHDepth;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnFlowOrderID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_SECTIONDataTable() {
                this.TableName = "AM_ASSET_SEWER_SECTION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AM_ASSET_SEWER_SECTIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AM_ASSET_SEWER_SECTIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetIDColumn {
                get {
                    return this.columnAssetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionIDColumn {
                get {
                    return this.columnSectionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHColumn {
                get {
                    return this.columnUSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHColumn {
                get {
                    return this.columnDSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MapSizeColumn {
                get {
                    return this.columnMapSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Size_Column {
                get {
                    return this.columnSize_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MapLengthColumn {
                get {
                    return this.columnMapLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralsColumn {
                get {
                    return this.columnLaterals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LiveLateralsColumn {
                get {
                    return this.columnLiveLaterals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlowDirectionColumn {
                get {
                    return this.columnFlowDirection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USMHDepthColumn {
                get {
                    return this.columnUSMHDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMHDepthColumn {
                get {
                    return this.columnDSMHDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlowOrderIDColumn {
                get {
                    return this.columnFlowOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_SECTIONRow this[int index] {
                get {
                    return ((AM_ASSET_SEWER_SECTIONRow)(this.Rows[index]));
                }
            }
            
            public event AM_ASSET_SEWER_SECTIONRowChangeEventHandler AM_ASSET_SEWER_SECTIONRowChanging;
            
            public event AM_ASSET_SEWER_SECTIONRowChangeEventHandler AM_ASSET_SEWER_SECTIONRowChanged;
            
            public event AM_ASSET_SEWER_SECTIONRowChangeEventHandler AM_ASSET_SEWER_SECTIONRowDeleting;
            
            public event AM_ASSET_SEWER_SECTIONRowChangeEventHandler AM_ASSET_SEWER_SECTIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAM_ASSET_SEWER_SECTIONRow(AM_ASSET_SEWER_SECTIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_SECTIONRow AddAM_ASSET_SEWER_SECTIONRow(
                        AM_ASSET_SEWERRow parentAM_ASSET_SEWERRowByFK_AM_ASSET_SEWER_AM_ASSET_SEWER_SECTION, 
                        string SectionID, 
                        string Street, 
                        int USMH, 
                        int DSMH, 
                        string MapSize, 
                        string Size_, 
                        string MapLength, 
                        string Length, 
                        int Laterals, 
                        int LiveLaterals, 
                        string FlowDirection, 
                        string USMHDepth, 
                        string DSMHDepth, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        string FlowOrderID) {
                AM_ASSET_SEWER_SECTIONRow rowAM_ASSET_SEWER_SECTIONRow = ((AM_ASSET_SEWER_SECTIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SectionID,
                        Street,
                        USMH,
                        DSMH,
                        MapSize,
                        Size_,
                        MapLength,
                        Length,
                        Laterals,
                        LiveLaterals,
                        FlowDirection,
                        USMHDepth,
                        DSMHDepth,
                        Deleted,
                        COMPANY_ID,
                        FlowOrderID};
                if ((parentAM_ASSET_SEWERRowByFK_AM_ASSET_SEWER_AM_ASSET_SEWER_SECTION != null)) {
                    columnValuesArray[0] = parentAM_ASSET_SEWERRowByFK_AM_ASSET_SEWER_AM_ASSET_SEWER_SECTION[0];
                }
                rowAM_ASSET_SEWER_SECTIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAM_ASSET_SEWER_SECTIONRow);
                return rowAM_ASSET_SEWER_SECTIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_SECTIONRow FindByAssetID(int AssetID) {
                return ((AM_ASSET_SEWER_SECTIONRow)(this.Rows.Find(new object[] {
                            AssetID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AM_ASSET_SEWER_SECTIONDataTable cln = ((AM_ASSET_SEWER_SECTIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AM_ASSET_SEWER_SECTIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAssetID = base.Columns["AssetID"];
                this.columnSectionID = base.Columns["SectionID"];
                this.columnStreet = base.Columns["Street"];
                this.columnUSMH = base.Columns["USMH"];
                this.columnDSMH = base.Columns["DSMH"];
                this.columnMapSize = base.Columns["MapSize"];
                this.columnSize_ = base.Columns["Size_"];
                this.columnMapLength = base.Columns["MapLength"];
                this.columnLength = base.Columns["Length"];
                this.columnLaterals = base.Columns["Laterals"];
                this.columnLiveLaterals = base.Columns["LiveLaterals"];
                this.columnFlowDirection = base.Columns["FlowDirection"];
                this.columnUSMHDepth = base.Columns["USMHDepth"];
                this.columnDSMHDepth = base.Columns["DSMHDepth"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnFlowOrderID = base.Columns["FlowOrderID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAssetID = new global::System.Data.DataColumn("AssetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetID);
                this.columnSectionID = new global::System.Data.DataColumn("SectionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionID);
                this.columnStreet = new global::System.Data.DataColumn("Street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnUSMH = new global::System.Data.DataColumn("USMH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMH);
                this.columnDSMH = new global::System.Data.DataColumn("DSMH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMH);
                this.columnMapSize = new global::System.Data.DataColumn("MapSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMapSize);
                this.columnSize_ = new global::System.Data.DataColumn("Size_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_);
                this.columnMapLength = new global::System.Data.DataColumn("MapLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMapLength);
                this.columnLength = new global::System.Data.DataColumn("Length", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLength);
                this.columnLaterals = new global::System.Data.DataColumn("Laterals", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaterals);
                this.columnLiveLaterals = new global::System.Data.DataColumn("LiveLaterals", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiveLaterals);
                this.columnFlowDirection = new global::System.Data.DataColumn("FlowDirection", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlowDirection);
                this.columnUSMHDepth = new global::System.Data.DataColumn("USMHDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSMHDepth);
                this.columnDSMHDepth = new global::System.Data.DataColumn("DSMHDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMHDepth);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnFlowOrderID = new global::System.Data.DataColumn("FlowOrderID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlowOrderID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAssetID}, true));
                this.columnAssetID.AllowDBNull = false;
                this.columnAssetID.Unique = true;
                this.columnSectionID.AllowDBNull = false;
                this.columnSectionID.MaxLength = 75;
                this.columnStreet.MaxLength = 255;
                this.columnMapSize.MaxLength = 25;
                this.columnSize_.MaxLength = 25;
                this.columnMapLength.MaxLength = 25;
                this.columnLength.MaxLength = 25;
                this.columnFlowDirection.MaxLength = 100;
                this.columnUSMHDepth.MaxLength = 25;
                this.columnDSMHDepth.MaxLength = 25;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnFlowOrderID.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_SECTIONRow NewAM_ASSET_SEWER_SECTIONRow() {
                return ((AM_ASSET_SEWER_SECTIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AM_ASSET_SEWER_SECTIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AM_ASSET_SEWER_SECTIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AM_ASSET_SEWER_SECTIONRowChanged != null)) {
                    this.AM_ASSET_SEWER_SECTIONRowChanged(this, new AM_ASSET_SEWER_SECTIONRowChangeEvent(((AM_ASSET_SEWER_SECTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AM_ASSET_SEWER_SECTIONRowChanging != null)) {
                    this.AM_ASSET_SEWER_SECTIONRowChanging(this, new AM_ASSET_SEWER_SECTIONRowChangeEvent(((AM_ASSET_SEWER_SECTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AM_ASSET_SEWER_SECTIONRowDeleted != null)) {
                    this.AM_ASSET_SEWER_SECTIONRowDeleted(this, new AM_ASSET_SEWER_SECTIONRowChangeEvent(((AM_ASSET_SEWER_SECTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AM_ASSET_SEWER_SECTIONRowDeleting != null)) {
                    this.AM_ASSET_SEWER_SECTIONRowDeleting(this, new AM_ASSET_SEWER_SECTIONRowChangeEvent(((AM_ASSET_SEWER_SECTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAM_ASSET_SEWER_SECTIONRow(AM_ASSET_SEWER_SECTIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AssetsTDS ds = new AssetsTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AM_ASSET_SEWER_SECTIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AM_ASSET_SEWER_LATERALDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAssetID;
            
            private global::System.Data.DataColumn columnSection_;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnLateralID;
            
            private global::System.Data.DataColumn columnLatitudeAtSection;
            
            private global::System.Data.DataColumn columnLongitudeAtSection;
            
            private global::System.Data.DataColumn columnLatitudeAtPropertyLine;
            
            private global::System.Data.DataColumn columnLongitudeAtPropertyLine;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnSize_;
            
            private global::System.Data.DataColumn columnDistanceFromUSMH;
            
            private global::System.Data.DataColumn columnDistanceFromDSMH;
            
            private global::System.Data.DataColumn columnMapSize;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnConnectionType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_LATERALDataTable() {
                this.TableName = "AM_ASSET_SEWER_LATERAL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AM_ASSET_SEWER_LATERALDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AM_ASSET_SEWER_LATERALDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetIDColumn {
                get {
                    return this.columnAssetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Section_Column {
                get {
                    return this.columnSection_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateralIDColumn {
                get {
                    return this.columnLateralID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LatitudeAtSectionColumn {
                get {
                    return this.columnLatitudeAtSection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LongitudeAtSectionColumn {
                get {
                    return this.columnLongitudeAtSection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LatitudeAtPropertyLineColumn {
                get {
                    return this.columnLatitudeAtPropertyLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LongitudeAtPropertyLineColumn {
                get {
                    return this.columnLongitudeAtPropertyLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Size_Column {
                get {
                    return this.columnSize_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceFromUSMHColumn {
                get {
                    return this.columnDistanceFromUSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceFromDSMHColumn {
                get {
                    return this.columnDistanceFromDSMH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MapSizeColumn {
                get {
                    return this.columnMapSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConnectionTypeColumn {
                get {
                    return this.columnConnectionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_LATERALRow this[int index] {
                get {
                    return ((AM_ASSET_SEWER_LATERALRow)(this.Rows[index]));
                }
            }
            
            public event AM_ASSET_SEWER_LATERALRowChangeEventHandler AM_ASSET_SEWER_LATERALRowChanging;
            
            public event AM_ASSET_SEWER_LATERALRowChangeEventHandler AM_ASSET_SEWER_LATERALRowChanged;
            
            public event AM_ASSET_SEWER_LATERALRowChangeEventHandler AM_ASSET_SEWER_LATERALRowDeleting;
            
            public event AM_ASSET_SEWER_LATERALRowChangeEventHandler AM_ASSET_SEWER_LATERALRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAM_ASSET_SEWER_LATERALRow(AM_ASSET_SEWER_LATERALRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_LATERALRow AddAM_ASSET_SEWER_LATERALRow(
                        AM_ASSET_SEWERRow parentAM_ASSET_SEWERRowByAM_ASSET_SEWER_AM_ASSET_SEWER_LATERAL, 
                        AM_ASSET_SEWER_SECTIONRow parentAM_ASSET_SEWER_SECTIONRowByAM_ASSET_SEWER_SECTION_AM_ASSET_SEWER_LATERAL, 
                        string Address, 
                        string LateralID, 
                        string LatitudeAtSection, 
                        string LongitudeAtSection, 
                        string LatitudeAtPropertyLine, 
                        string LongitudeAtPropertyLine, 
                        string State, 
                        string Size_, 
                        string DistanceFromUSMH, 
                        string DistanceFromDSMH, 
                        string MapSize, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        string ConnectionType) {
                AM_ASSET_SEWER_LATERALRow rowAM_ASSET_SEWER_LATERALRow = ((AM_ASSET_SEWER_LATERALRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Address,
                        LateralID,
                        LatitudeAtSection,
                        LongitudeAtSection,
                        LatitudeAtPropertyLine,
                        LongitudeAtPropertyLine,
                        State,
                        Size_,
                        DistanceFromUSMH,
                        DistanceFromDSMH,
                        MapSize,
                        Deleted,
                        COMPANY_ID,
                        ConnectionType};
                if ((parentAM_ASSET_SEWERRowByAM_ASSET_SEWER_AM_ASSET_SEWER_LATERAL != null)) {
                    columnValuesArray[0] = parentAM_ASSET_SEWERRowByAM_ASSET_SEWER_AM_ASSET_SEWER_LATERAL[0];
                }
                if ((parentAM_ASSET_SEWER_SECTIONRowByAM_ASSET_SEWER_SECTION_AM_ASSET_SEWER_LATERAL != null)) {
                    columnValuesArray[1] = parentAM_ASSET_SEWER_SECTIONRowByAM_ASSET_SEWER_SECTION_AM_ASSET_SEWER_LATERAL[0];
                }
                rowAM_ASSET_SEWER_LATERALRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAM_ASSET_SEWER_LATERALRow);
                return rowAM_ASSET_SEWER_LATERALRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_LATERALRow FindByAssetID(int AssetID) {
                return ((AM_ASSET_SEWER_LATERALRow)(this.Rows.Find(new object[] {
                            AssetID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AM_ASSET_SEWER_LATERALDataTable cln = ((AM_ASSET_SEWER_LATERALDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AM_ASSET_SEWER_LATERALDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAssetID = base.Columns["AssetID"];
                this.columnSection_ = base.Columns["Section_"];
                this.columnAddress = base.Columns["Address"];
                this.columnLateralID = base.Columns["LateralID"];
                this.columnLatitudeAtSection = base.Columns["LatitudeAtSection"];
                this.columnLongitudeAtSection = base.Columns["LongitudeAtSection"];
                this.columnLatitudeAtPropertyLine = base.Columns["LatitudeAtPropertyLine"];
                this.columnLongitudeAtPropertyLine = base.Columns["LongitudeAtPropertyLine"];
                this.columnState = base.Columns["State"];
                this.columnSize_ = base.Columns["Size_"];
                this.columnDistanceFromUSMH = base.Columns["DistanceFromUSMH"];
                this.columnDistanceFromDSMH = base.Columns["DistanceFromDSMH"];
                this.columnMapSize = base.Columns["MapSize"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnConnectionType = base.Columns["ConnectionType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAssetID = new global::System.Data.DataColumn("AssetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetID);
                this.columnSection_ = new global::System.Data.DataColumn("Section_", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSection_);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnLateralID = new global::System.Data.DataColumn("LateralID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralID);
                this.columnLatitudeAtSection = new global::System.Data.DataColumn("LatitudeAtSection", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLatitudeAtSection);
                this.columnLongitudeAtSection = new global::System.Data.DataColumn("LongitudeAtSection", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongitudeAtSection);
                this.columnLatitudeAtPropertyLine = new global::System.Data.DataColumn("LatitudeAtPropertyLine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLatitudeAtPropertyLine);
                this.columnLongitudeAtPropertyLine = new global::System.Data.DataColumn("LongitudeAtPropertyLine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongitudeAtPropertyLine);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnSize_ = new global::System.Data.DataColumn("Size_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_);
                this.columnDistanceFromUSMH = new global::System.Data.DataColumn("DistanceFromUSMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceFromUSMH);
                this.columnDistanceFromDSMH = new global::System.Data.DataColumn("DistanceFromDSMH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceFromDSMH);
                this.columnMapSize = new global::System.Data.DataColumn("MapSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMapSize);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnConnectionType = new global::System.Data.DataColumn("ConnectionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConnectionType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAssetID}, true));
                this.columnAssetID.AllowDBNull = false;
                this.columnAssetID.Unique = true;
                this.columnSection_.AllowDBNull = false;
                this.columnAddress.MaxLength = 50;
                this.columnLateralID.AllowDBNull = false;
                this.columnLateralID.MaxLength = 50;
                this.columnLatitudeAtSection.MaxLength = 25;
                this.columnLongitudeAtSection.MaxLength = 25;
                this.columnLatitudeAtPropertyLine.MaxLength = 25;
                this.columnLongitudeAtPropertyLine.MaxLength = 25;
                this.columnState.AllowDBNull = false;
                this.columnState.MaxLength = 50;
                this.columnSize_.MaxLength = 25;
                this.columnDistanceFromUSMH.MaxLength = 25;
                this.columnDistanceFromDSMH.MaxLength = 25;
                this.columnMapSize.MaxLength = 50;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnConnectionType.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_LATERALRow NewAM_ASSET_SEWER_LATERALRow() {
                return ((AM_ASSET_SEWER_LATERALRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AM_ASSET_SEWER_LATERALRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AM_ASSET_SEWER_LATERALRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AM_ASSET_SEWER_LATERALRowChanged != null)) {
                    this.AM_ASSET_SEWER_LATERALRowChanged(this, new AM_ASSET_SEWER_LATERALRowChangeEvent(((AM_ASSET_SEWER_LATERALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AM_ASSET_SEWER_LATERALRowChanging != null)) {
                    this.AM_ASSET_SEWER_LATERALRowChanging(this, new AM_ASSET_SEWER_LATERALRowChangeEvent(((AM_ASSET_SEWER_LATERALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AM_ASSET_SEWER_LATERALRowDeleted != null)) {
                    this.AM_ASSET_SEWER_LATERALRowDeleted(this, new AM_ASSET_SEWER_LATERALRowChangeEvent(((AM_ASSET_SEWER_LATERALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AM_ASSET_SEWER_LATERALRowDeleting != null)) {
                    this.AM_ASSET_SEWER_LATERALRowDeleting(this, new AM_ASSET_SEWER_LATERALRowChangeEvent(((AM_ASSET_SEWER_LATERALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAM_ASSET_SEWER_LATERALRow(AM_ASSET_SEWER_LATERALRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AssetsTDS ds = new AssetsTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AM_ASSET_SEWER_LATERALDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AM_ASSET_SEWER_MHDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAssetID;
            
            private global::System.Data.DataColumn columnMHID;
            
            private global::System.Data.DataColumn columnLatitud;
            
            private global::System.Data.DataColumn columnLongitude;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnManholeShape;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnMaterialID;
            
            private global::System.Data.DataColumn columnTopDiameter;
            
            private global::System.Data.DataColumn columnTopDepth;
            
            private global::System.Data.DataColumn columnTopFloor;
            
            private global::System.Data.DataColumn columnTopCeiling;
            
            private global::System.Data.DataColumn columnTopBenching;
            
            private global::System.Data.DataColumn columnDownDiameter;
            
            private global::System.Data.DataColumn columnDownDepth;
            
            private global::System.Data.DataColumn columnDownFloor;
            
            private global::System.Data.DataColumn columnDownCeiling;
            
            private global::System.Data.DataColumn columnDownBenching;
            
            private global::System.Data.DataColumn columnRectangle1LongSide;
            
            private global::System.Data.DataColumn columnRectangle1ShortSide;
            
            private global::System.Data.DataColumn columnRectangle2LongSide;
            
            private global::System.Data.DataColumn columnRectangle2ShortSide;
            
            private global::System.Data.DataColumn columnTopSurfaceArea;
            
            private global::System.Data.DataColumn columnDownSurfaceArea;
            
            private global::System.Data.DataColumn columnManholeRugs;
            
            private global::System.Data.DataColumn columnTotalDepth;
            
            private global::System.Data.DataColumn columnTotalSurfaceArea;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MHDataTable() {
                this.TableName = "AM_ASSET_SEWER_MH";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AM_ASSET_SEWER_MHDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AM_ASSET_SEWER_MHDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetIDColumn {
                get {
                    return this.columnAssetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MHIDColumn {
                get {
                    return this.columnMHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LatitudColumn {
                get {
                    return this.columnLatitud;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LongitudeColumn {
                get {
                    return this.columnLongitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManholeShapeColumn {
                get {
                    return this.columnManholeShape;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialIDColumn {
                get {
                    return this.columnMaterialID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TopDiameterColumn {
                get {
                    return this.columnTopDiameter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TopDepthColumn {
                get {
                    return this.columnTopDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TopFloorColumn {
                get {
                    return this.columnTopFloor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TopCeilingColumn {
                get {
                    return this.columnTopCeiling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TopBenchingColumn {
                get {
                    return this.columnTopBenching;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DownDiameterColumn {
                get {
                    return this.columnDownDiameter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DownDepthColumn {
                get {
                    return this.columnDownDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DownFloorColumn {
                get {
                    return this.columnDownFloor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DownCeilingColumn {
                get {
                    return this.columnDownCeiling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DownBenchingColumn {
                get {
                    return this.columnDownBenching;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rectangle1LongSideColumn {
                get {
                    return this.columnRectangle1LongSide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rectangle1ShortSideColumn {
                get {
                    return this.columnRectangle1ShortSide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rectangle2LongSideColumn {
                get {
                    return this.columnRectangle2LongSide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rectangle2ShortSideColumn {
                get {
                    return this.columnRectangle2ShortSide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TopSurfaceAreaColumn {
                get {
                    return this.columnTopSurfaceArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DownSurfaceAreaColumn {
                get {
                    return this.columnDownSurfaceArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManholeRugsColumn {
                get {
                    return this.columnManholeRugs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalDepthColumn {
                get {
                    return this.columnTotalDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalSurfaceAreaColumn {
                get {
                    return this.columnTotalSurfaceArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MHRow this[int index] {
                get {
                    return ((AM_ASSET_SEWER_MHRow)(this.Rows[index]));
                }
            }
            
            public event AM_ASSET_SEWER_MHRowChangeEventHandler AM_ASSET_SEWER_MHRowChanging;
            
            public event AM_ASSET_SEWER_MHRowChangeEventHandler AM_ASSET_SEWER_MHRowChanged;
            
            public event AM_ASSET_SEWER_MHRowChangeEventHandler AM_ASSET_SEWER_MHRowDeleting;
            
            public event AM_ASSET_SEWER_MHRowChangeEventHandler AM_ASSET_SEWER_MHRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAM_ASSET_SEWER_MHRow(AM_ASSET_SEWER_MHRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MHRow AddAM_ASSET_SEWER_MHRow(
                        int AssetID, 
                        string MHID, 
                        string Latitud, 
                        string Longitude, 
                        string Address, 
                        bool Deleted, 
                        int COMPANY_ID, 
                        string ManholeShape, 
                        string Location, 
                        int MaterialID, 
                        string TopDiameter, 
                        string TopDepth, 
                        string TopFloor, 
                        string TopCeiling, 
                        string TopBenching, 
                        string DownDiameter, 
                        string DownDepth, 
                        string DownFloor, 
                        string DownCeiling, 
                        string DownBenching, 
                        string Rectangle1LongSide, 
                        string Rectangle1ShortSide, 
                        string Rectangle2LongSide, 
                        string Rectangle2ShortSide, 
                        string TopSurfaceArea, 
                        string DownSurfaceArea, 
                        int ManholeRugs, 
                        string TotalDepth, 
                        string TotalSurfaceArea) {
                AM_ASSET_SEWER_MHRow rowAM_ASSET_SEWER_MHRow = ((AM_ASSET_SEWER_MHRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AssetID,
                        MHID,
                        Latitud,
                        Longitude,
                        Address,
                        Deleted,
                        COMPANY_ID,
                        ManholeShape,
                        Location,
                        MaterialID,
                        TopDiameter,
                        TopDepth,
                        TopFloor,
                        TopCeiling,
                        TopBenching,
                        DownDiameter,
                        DownDepth,
                        DownFloor,
                        DownCeiling,
                        DownBenching,
                        Rectangle1LongSide,
                        Rectangle1ShortSide,
                        Rectangle2LongSide,
                        Rectangle2ShortSide,
                        TopSurfaceArea,
                        DownSurfaceArea,
                        ManholeRugs,
                        TotalDepth,
                        TotalSurfaceArea};
                rowAM_ASSET_SEWER_MHRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAM_ASSET_SEWER_MHRow);
                return rowAM_ASSET_SEWER_MHRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MHRow FindByAssetID(int AssetID) {
                return ((AM_ASSET_SEWER_MHRow)(this.Rows.Find(new object[] {
                            AssetID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AM_ASSET_SEWER_MHDataTable cln = ((AM_ASSET_SEWER_MHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AM_ASSET_SEWER_MHDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAssetID = base.Columns["AssetID"];
                this.columnMHID = base.Columns["MHID"];
                this.columnLatitud = base.Columns["Latitud"];
                this.columnLongitude = base.Columns["Longitude"];
                this.columnAddress = base.Columns["Address"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnManholeShape = base.Columns["ManholeShape"];
                this.columnLocation = base.Columns["Location"];
                this.columnMaterialID = base.Columns["MaterialID"];
                this.columnTopDiameter = base.Columns["TopDiameter"];
                this.columnTopDepth = base.Columns["TopDepth"];
                this.columnTopFloor = base.Columns["TopFloor"];
                this.columnTopCeiling = base.Columns["TopCeiling"];
                this.columnTopBenching = base.Columns["TopBenching"];
                this.columnDownDiameter = base.Columns["DownDiameter"];
                this.columnDownDepth = base.Columns["DownDepth"];
                this.columnDownFloor = base.Columns["DownFloor"];
                this.columnDownCeiling = base.Columns["DownCeiling"];
                this.columnDownBenching = base.Columns["DownBenching"];
                this.columnRectangle1LongSide = base.Columns["Rectangle1LongSide"];
                this.columnRectangle1ShortSide = base.Columns["Rectangle1ShortSide"];
                this.columnRectangle2LongSide = base.Columns["Rectangle2LongSide"];
                this.columnRectangle2ShortSide = base.Columns["Rectangle2ShortSide"];
                this.columnTopSurfaceArea = base.Columns["TopSurfaceArea"];
                this.columnDownSurfaceArea = base.Columns["DownSurfaceArea"];
                this.columnManholeRugs = base.Columns["ManholeRugs"];
                this.columnTotalDepth = base.Columns["TotalDepth"];
                this.columnTotalSurfaceArea = base.Columns["TotalSurfaceArea"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAssetID = new global::System.Data.DataColumn("AssetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetID);
                this.columnMHID = new global::System.Data.DataColumn("MHID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMHID);
                this.columnLatitud = new global::System.Data.DataColumn("Latitud", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLatitud);
                this.columnLongitude = new global::System.Data.DataColumn("Longitude", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongitude);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnManholeShape = new global::System.Data.DataColumn("ManholeShape", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManholeShape);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnMaterialID = new global::System.Data.DataColumn("MaterialID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialID);
                this.columnTopDiameter = new global::System.Data.DataColumn("TopDiameter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopDiameter);
                this.columnTopDepth = new global::System.Data.DataColumn("TopDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopDepth);
                this.columnTopFloor = new global::System.Data.DataColumn("TopFloor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopFloor);
                this.columnTopCeiling = new global::System.Data.DataColumn("TopCeiling", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopCeiling);
                this.columnTopBenching = new global::System.Data.DataColumn("TopBenching", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopBenching);
                this.columnDownDiameter = new global::System.Data.DataColumn("DownDiameter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDownDiameter);
                this.columnDownDepth = new global::System.Data.DataColumn("DownDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDownDepth);
                this.columnDownFloor = new global::System.Data.DataColumn("DownFloor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDownFloor);
                this.columnDownCeiling = new global::System.Data.DataColumn("DownCeiling", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDownCeiling);
                this.columnDownBenching = new global::System.Data.DataColumn("DownBenching", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDownBenching);
                this.columnRectangle1LongSide = new global::System.Data.DataColumn("Rectangle1LongSide", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRectangle1LongSide);
                this.columnRectangle1ShortSide = new global::System.Data.DataColumn("Rectangle1ShortSide", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRectangle1ShortSide);
                this.columnRectangle2LongSide = new global::System.Data.DataColumn("Rectangle2LongSide", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRectangle2LongSide);
                this.columnRectangle2ShortSide = new global::System.Data.DataColumn("Rectangle2ShortSide", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRectangle2ShortSide);
                this.columnTopSurfaceArea = new global::System.Data.DataColumn("TopSurfaceArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopSurfaceArea);
                this.columnDownSurfaceArea = new global::System.Data.DataColumn("DownSurfaceArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDownSurfaceArea);
                this.columnManholeRugs = new global::System.Data.DataColumn("ManholeRugs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManholeRugs);
                this.columnTotalDepth = new global::System.Data.DataColumn("TotalDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDepth);
                this.columnTotalSurfaceArea = new global::System.Data.DataColumn("TotalSurfaceArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalSurfaceArea);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAssetID}, true));
                this.columnAssetID.AllowDBNull = false;
                this.columnAssetID.Unique = true;
                this.columnMHID.AllowDBNull = false;
                this.columnMHID.MaxLength = 50;
                this.columnLatitud.MaxLength = 25;
                this.columnLongitude.MaxLength = 25;
                this.columnAddress.MaxLength = 100;
                this.columnDeleted.AllowDBNull = false;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnManholeShape.MaxLength = 50;
                this.columnLocation.MaxLength = 25;
                this.columnTopDiameter.MaxLength = 25;
                this.columnTopDepth.MaxLength = 25;
                this.columnTopFloor.MaxLength = 25;
                this.columnTopCeiling.MaxLength = 25;
                this.columnTopBenching.MaxLength = 25;
                this.columnDownDiameter.MaxLength = 25;
                this.columnDownDepth.MaxLength = 25;
                this.columnDownFloor.MaxLength = 25;
                this.columnDownCeiling.MaxLength = 25;
                this.columnDownBenching.MaxLength = 25;
                this.columnRectangle1LongSide.MaxLength = 25;
                this.columnRectangle1ShortSide.MaxLength = 25;
                this.columnRectangle2LongSide.MaxLength = 25;
                this.columnRectangle2ShortSide.MaxLength = 25;
                this.columnTopSurfaceArea.MaxLength = 25;
                this.columnDownSurfaceArea.MaxLength = 25;
                this.columnTotalDepth.MaxLength = 25;
                this.columnTotalSurfaceArea.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MHRow NewAM_ASSET_SEWER_MHRow() {
                return ((AM_ASSET_SEWER_MHRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AM_ASSET_SEWER_MHRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AM_ASSET_SEWER_MHRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AM_ASSET_SEWER_MHRowChanged != null)) {
                    this.AM_ASSET_SEWER_MHRowChanged(this, new AM_ASSET_SEWER_MHRowChangeEvent(((AM_ASSET_SEWER_MHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AM_ASSET_SEWER_MHRowChanging != null)) {
                    this.AM_ASSET_SEWER_MHRowChanging(this, new AM_ASSET_SEWER_MHRowChangeEvent(((AM_ASSET_SEWER_MHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AM_ASSET_SEWER_MHRowDeleted != null)) {
                    this.AM_ASSET_SEWER_MHRowDeleted(this, new AM_ASSET_SEWER_MHRowChangeEvent(((AM_ASSET_SEWER_MHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AM_ASSET_SEWER_MHRowDeleting != null)) {
                    this.AM_ASSET_SEWER_MHRowDeleting(this, new AM_ASSET_SEWER_MHRowChangeEvent(((AM_ASSET_SEWER_MHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAM_ASSET_SEWER_MHRow(AM_ASSET_SEWER_MHRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AssetsTDS ds = new AssetsTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AM_ASSET_SEWER_MHDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AM_ASSET_SEWER_MH_MATERIAL_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMaterialID;
            
            private global::System.Data.DataColumn columnMaterialType;
            
            private global::System.Data.DataColumn columnCOMPANY_ID;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnDisplayID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MH_MATERIAL_TYPEDataTable() {
                this.TableName = "AM_ASSET_SEWER_MH_MATERIAL_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AM_ASSET_SEWER_MH_MATERIAL_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AM_ASSET_SEWER_MH_MATERIAL_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialIDColumn {
                get {
                    return this.columnMaterialID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialTypeColumn {
                get {
                    return this.columnMaterialType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_IDColumn {
                get {
                    return this.columnCOMPANY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisplayIDColumn {
                get {
                    return this.columnDisplayID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MH_MATERIAL_TYPERow this[int index] {
                get {
                    return ((AM_ASSET_SEWER_MH_MATERIAL_TYPERow)(this.Rows[index]));
                }
            }
            
            public event AM_ASSET_SEWER_MH_MATERIAL_TYPERowChangeEventHandler AM_ASSET_SEWER_MH_MATERIAL_TYPERowChanging;
            
            public event AM_ASSET_SEWER_MH_MATERIAL_TYPERowChangeEventHandler AM_ASSET_SEWER_MH_MATERIAL_TYPERowChanged;
            
            public event AM_ASSET_SEWER_MH_MATERIAL_TYPERowChangeEventHandler AM_ASSET_SEWER_MH_MATERIAL_TYPERowDeleting;
            
            public event AM_ASSET_SEWER_MH_MATERIAL_TYPERowChangeEventHandler AM_ASSET_SEWER_MH_MATERIAL_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAM_ASSET_SEWER_MH_MATERIAL_TYPERow(AM_ASSET_SEWER_MH_MATERIAL_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MH_MATERIAL_TYPERow AddAM_ASSET_SEWER_MH_MATERIAL_TYPERow(int MaterialID, string MaterialType, int COMPANY_ID, string Code, int DisplayID) {
                AM_ASSET_SEWER_MH_MATERIAL_TYPERow rowAM_ASSET_SEWER_MH_MATERIAL_TYPERow = ((AM_ASSET_SEWER_MH_MATERIAL_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MaterialID,
                        MaterialType,
                        COMPANY_ID,
                        Code,
                        DisplayID};
                rowAM_ASSET_SEWER_MH_MATERIAL_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAM_ASSET_SEWER_MH_MATERIAL_TYPERow);
                return rowAM_ASSET_SEWER_MH_MATERIAL_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MH_MATERIAL_TYPERow FindByMaterialID(int MaterialID) {
                return ((AM_ASSET_SEWER_MH_MATERIAL_TYPERow)(this.Rows.Find(new object[] {
                            MaterialID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AM_ASSET_SEWER_MH_MATERIAL_TYPEDataTable cln = ((AM_ASSET_SEWER_MH_MATERIAL_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AM_ASSET_SEWER_MH_MATERIAL_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaterialID = base.Columns["MaterialID"];
                this.columnMaterialType = base.Columns["MaterialType"];
                this.columnCOMPANY_ID = base.Columns["COMPANY_ID"];
                this.columnCode = base.Columns["Code"];
                this.columnDisplayID = base.Columns["DisplayID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaterialID = new global::System.Data.DataColumn("MaterialID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialID);
                this.columnMaterialType = new global::System.Data.DataColumn("MaterialType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialType);
                this.columnCOMPANY_ID = new global::System.Data.DataColumn("COMPANY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ID);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnDisplayID = new global::System.Data.DataColumn("DisplayID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMaterialID}, true));
                this.columnMaterialID.AllowDBNull = false;
                this.columnMaterialID.Unique = true;
                this.columnMaterialType.AllowDBNull = false;
                this.columnMaterialType.MaxLength = 50;
                this.columnCOMPANY_ID.AllowDBNull = false;
                this.columnCode.MaxLength = 5;
                this.columnDisplayID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MH_MATERIAL_TYPERow NewAM_ASSET_SEWER_MH_MATERIAL_TYPERow() {
                return ((AM_ASSET_SEWER_MH_MATERIAL_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AM_ASSET_SEWER_MH_MATERIAL_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AM_ASSET_SEWER_MH_MATERIAL_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AM_ASSET_SEWER_MH_MATERIAL_TYPERowChanged != null)) {
                    this.AM_ASSET_SEWER_MH_MATERIAL_TYPERowChanged(this, new AM_ASSET_SEWER_MH_MATERIAL_TYPERowChangeEvent(((AM_ASSET_SEWER_MH_MATERIAL_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AM_ASSET_SEWER_MH_MATERIAL_TYPERowChanging != null)) {
                    this.AM_ASSET_SEWER_MH_MATERIAL_TYPERowChanging(this, new AM_ASSET_SEWER_MH_MATERIAL_TYPERowChangeEvent(((AM_ASSET_SEWER_MH_MATERIAL_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AM_ASSET_SEWER_MH_MATERIAL_TYPERowDeleted != null)) {
                    this.AM_ASSET_SEWER_MH_MATERIAL_TYPERowDeleted(this, new AM_ASSET_SEWER_MH_MATERIAL_TYPERowChangeEvent(((AM_ASSET_SEWER_MH_MATERIAL_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AM_ASSET_SEWER_MH_MATERIAL_TYPERowDeleting != null)) {
                    this.AM_ASSET_SEWER_MH_MATERIAL_TYPERowDeleting(this, new AM_ASSET_SEWER_MH_MATERIAL_TYPERowChangeEvent(((AM_ASSET_SEWER_MH_MATERIAL_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAM_ASSET_SEWER_MH_MATERIAL_TYPERow(AM_ASSET_SEWER_MH_MATERIAL_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AssetsTDS ds = new AssetsTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AM_ASSET_SEWER_MH_MATERIAL_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AM_ASSET_SEWERRow : global::System.Data.DataRow {
            
            private AM_ASSET_SEWERDataTable tableAM_ASSET_SEWER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AM_ASSET_SEWERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAM_ASSET_SEWER = ((AM_ASSET_SEWERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssetID {
                get {
                    return ((int)(this[this.tableAM_ASSET_SEWER.AssetIDColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER.AssetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssetSewerType {
                get {
                    return ((string)(this[this.tableAM_ASSET_SEWER.AssetSewerTypeColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER.AssetSewerTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableAM_ASSET_SEWER.DeletedColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableAM_ASSET_SEWER.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MATERIALRow[] GetAM_ASSET_SEWER_MATERIALRows() {
                if ((this.Table.ChildRelations["FK_AM_ASSET_SEWER_AM_ASSET_SEWER_MATERIAL"] == null)) {
                    return new AM_ASSET_SEWER_MATERIALRow[0];
                }
                else {
                    return ((AM_ASSET_SEWER_MATERIALRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AM_ASSET_SEWER_AM_ASSET_SEWER_MATERIAL"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSETRow[] GetAM_ASSETRows() {
                if ((this.Table.ChildRelations["AM_ASSET_SEWER_AM_ASSET"] == null)) {
                    return new AM_ASSETRow[0];
                }
                else {
                    return ((AM_ASSETRow[])(base.GetChildRows(this.Table.ChildRelations["AM_ASSET_SEWER_AM_ASSET"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_SECTIONRow[] GetAM_ASSET_SEWER_SECTIONRows() {
                if ((this.Table.ChildRelations["FK_AM_ASSET_SEWER_AM_ASSET_SEWER_SECTION"] == null)) {
                    return new AM_ASSET_SEWER_SECTIONRow[0];
                }
                else {
                    return ((AM_ASSET_SEWER_SECTIONRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AM_ASSET_SEWER_AM_ASSET_SEWER_SECTION"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_LATERALRow[] GetAM_ASSET_SEWER_LATERALRows() {
                if ((this.Table.ChildRelations["AM_ASSET_SEWER_AM_ASSET_SEWER_LATERAL"] == null)) {
                    return new AM_ASSET_SEWER_LATERALRow[0];
                }
                else {
                    return ((AM_ASSET_SEWER_LATERALRow[])(base.GetChildRows(this.Table.ChildRelations["AM_ASSET_SEWER_AM_ASSET_SEWER_LATERAL"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AM_ASSET_SEWER_MATERIALRow : global::System.Data.DataRow {
            
            private AM_ASSET_SEWER_MATERIALDataTable tableAM_ASSET_SEWER_MATERIAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AM_ASSET_SEWER_MATERIALRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAM_ASSET_SEWER_MATERIAL = ((AM_ASSET_SEWER_MATERIALDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssetID {
                get {
                    return ((int)(this[this.tableAM_ASSET_SEWER_MATERIAL.AssetIDColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MATERIAL.AssetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefID {
                get {
                    return ((int)(this[this.tableAM_ASSET_SEWER_MATERIAL.RefIDColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MATERIAL.RefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaterialType {
                get {
                    return ((string)(this[this.tableAM_ASSET_SEWER_MATERIAL.MaterialTypeColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MATERIAL.MaterialTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date_ {
                get {
                    return ((global::System.DateTime)(this[this.tableAM_ASSET_SEWER_MATERIAL.Date_Column]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MATERIAL.Date_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableAM_ASSET_SEWER_MATERIAL.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MATERIAL.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableAM_ASSET_SEWER_MATERIAL.DeletedColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MATERIAL.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWERRow AM_ASSET_SEWERRow {
                get {
                    return ((AM_ASSET_SEWERRow)(this.GetParentRow(this.Table.ParentRelations["FK_AM_ASSET_SEWER_AM_ASSET_SEWER_MATERIAL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AM_ASSET_SEWER_AM_ASSET_SEWER_MATERIAL"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AM_ASSETRow : global::System.Data.DataRow {
            
            private AM_ASSETDataTable tableAM_ASSET;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AM_ASSETRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAM_ASSET = ((AM_ASSETDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssetID {
                get {
                    return ((int)(this[this.tableAM_ASSET.AssetIDColumn]));
                }
                set {
                    this[this.tableAM_ASSET.AssetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssetType {
                get {
                    return ((string)(this[this.tableAM_ASSET.AssetTypeColumn]));
                }
                set {
                    this[this.tableAM_ASSET.AssetTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CountryID {
                get {
                    try {
                        return ((long)(this[this.tableAM_ASSET.CountryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryID\' in table \'AM_ASSET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET.CountryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ProvinceID {
                get {
                    try {
                        return ((long)(this[this.tableAM_ASSET.ProvinceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProvinceID\' in table \'AM_ASSET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET.ProvinceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CountyID {
                get {
                    try {
                        return ((long)(this[this.tableAM_ASSET.CountyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountyID\' in table \'AM_ASSET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET.CountyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CityID {
                get {
                    try {
                        return ((long)(this[this.tableAM_ASSET.CityIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityID\' in table \'AM_ASSET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET.CityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableAM_ASSET.DeletedColumn]));
                }
                set {
                    this[this.tableAM_ASSET.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableAM_ASSET.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableAM_ASSET.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWERRow AM_ASSET_SEWERRow {
                get {
                    return ((AM_ASSET_SEWERRow)(this.GetParentRow(this.Table.ParentRelations["AM_ASSET_SEWER_AM_ASSET"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["AM_ASSET_SEWER_AM_ASSET"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryIDNull() {
                return this.IsNull(this.tableAM_ASSET.CountryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryIDNull() {
                this[this.tableAM_ASSET.CountryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProvinceIDNull() {
                return this.IsNull(this.tableAM_ASSET.ProvinceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProvinceIDNull() {
                this[this.tableAM_ASSET.ProvinceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountyIDNull() {
                return this.IsNull(this.tableAM_ASSET.CountyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountyIDNull() {
                this[this.tableAM_ASSET.CountyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityIDNull() {
                return this.IsNull(this.tableAM_ASSET.CityIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityIDNull() {
                this[this.tableAM_ASSET.CityIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AM_ASSET_SEWER_SECTIONRow : global::System.Data.DataRow {
            
            private AM_ASSET_SEWER_SECTIONDataTable tableAM_ASSET_SEWER_SECTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AM_ASSET_SEWER_SECTIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAM_ASSET_SEWER_SECTION = ((AM_ASSET_SEWER_SECTIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssetID {
                get {
                    return ((int)(this[this.tableAM_ASSET_SEWER_SECTION.AssetIDColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_SECTION.AssetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionID {
                get {
                    return ((string)(this[this.tableAM_ASSET_SEWER_SECTION.SectionIDColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_SECTION.SectionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Street {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_SECTION.StreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Street\' in table \'AM_ASSET_SEWER_SECTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_SECTION.StreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USMH {
                get {
                    try {
                        return ((int)(this[this.tableAM_ASSET_SEWER_SECTION.USMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMH\' in table \'AM_ASSET_SEWER_SECTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_SECTION.USMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DSMH {
                get {
                    try {
                        return ((int)(this[this.tableAM_ASSET_SEWER_SECTION.DSMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMH\' in table \'AM_ASSET_SEWER_SECTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_SECTION.DSMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MapSize {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_SECTION.MapSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MapSize\' in table \'AM_ASSET_SEWER_SECTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_SECTION.MapSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size_ {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_SECTION.Size_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size_\' in table \'AM_ASSET_SEWER_SECTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_SECTION.Size_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MapLength {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_SECTION.MapLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MapLength\' in table \'AM_ASSET_SEWER_SECTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_SECTION.MapLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Length {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_SECTION.LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Length\' in table \'AM_ASSET_SEWER_SECTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_SECTION.LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Laterals {
                get {
                    try {
                        return ((int)(this[this.tableAM_ASSET_SEWER_SECTION.LateralsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Laterals\' in table \'AM_ASSET_SEWER_SECTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_SECTION.LateralsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LiveLaterals {
                get {
                    try {
                        return ((int)(this[this.tableAM_ASSET_SEWER_SECTION.LiveLateralsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LiveLaterals\' in table \'AM_ASSET_SEWER_SECTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_SECTION.LiveLateralsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FlowDirection {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_SECTION.FlowDirectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FlowDirection\' in table \'AM_ASSET_SEWER_SECTION\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_SECTION.FlowDirectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_SECTION.USMHDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USMHDepth\' in table \'AM_ASSET_SEWER_SECTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_SECTION.USMHDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMHDepth {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_SECTION.DSMHDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMHDepth\' in table \'AM_ASSET_SEWER_SECTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_SECTION.DSMHDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableAM_ASSET_SEWER_SECTION.DeletedColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_SECTION.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableAM_ASSET_SEWER_SECTION.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_SECTION.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FlowOrderID {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_SECTION.FlowOrderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FlowOrderID\' in table \'AM_ASSET_SEWER_SECTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_SECTION.FlowOrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWERRow AM_ASSET_SEWERRow {
                get {
                    return ((AM_ASSET_SEWERRow)(this.GetParentRow(this.Table.ParentRelations["FK_AM_ASSET_SEWER_AM_ASSET_SEWER_SECTION"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AM_ASSET_SEWER_AM_ASSET_SEWER_SECTION"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_SECTION.StreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNull() {
                this[this.tableAM_ASSET_SEWER_SECTION.StreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_SECTION.USMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHNull() {
                this[this.tableAM_ASSET_SEWER_SECTION.USMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_SECTION.DSMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHNull() {
                this[this.tableAM_ASSET_SEWER_SECTION.DSMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMapSizeNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_SECTION.MapSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMapSizeNull() {
                this[this.tableAM_ASSET_SEWER_SECTION.MapSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSize_Null() {
                return this.IsNull(this.tableAM_ASSET_SEWER_SECTION.Size_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSize_Null() {
                this[this.tableAM_ASSET_SEWER_SECTION.Size_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMapLengthNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_SECTION.MapLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMapLengthNull() {
                this[this.tableAM_ASSET_SEWER_SECTION.MapLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLengthNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_SECTION.LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLengthNull() {
                this[this.tableAM_ASSET_SEWER_SECTION.LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateralsNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_SECTION.LateralsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateralsNull() {
                this[this.tableAM_ASSET_SEWER_SECTION.LateralsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLiveLateralsNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_SECTION.LiveLateralsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLiveLateralsNull() {
                this[this.tableAM_ASSET_SEWER_SECTION.LiveLateralsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFlowDirectionNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_SECTION.FlowDirectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFlowDirectionNull() {
                this[this.tableAM_ASSET_SEWER_SECTION.FlowDirectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSMHDepthNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_SECTION.USMHDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSMHDepthNull() {
                this[this.tableAM_ASSET_SEWER_SECTION.USMHDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMHDepthNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_SECTION.DSMHDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMHDepthNull() {
                this[this.tableAM_ASSET_SEWER_SECTION.DSMHDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFlowOrderIDNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_SECTION.FlowOrderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFlowOrderIDNull() {
                this[this.tableAM_ASSET_SEWER_SECTION.FlowOrderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_LATERALRow[] GetAM_ASSET_SEWER_LATERALRows() {
                if ((this.Table.ChildRelations["AM_ASSET_SEWER_SECTION_AM_ASSET_SEWER_LATERAL"] == null)) {
                    return new AM_ASSET_SEWER_LATERALRow[0];
                }
                else {
                    return ((AM_ASSET_SEWER_LATERALRow[])(base.GetChildRows(this.Table.ChildRelations["AM_ASSET_SEWER_SECTION_AM_ASSET_SEWER_LATERAL"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AM_ASSET_SEWER_LATERALRow : global::System.Data.DataRow {
            
            private AM_ASSET_SEWER_LATERALDataTable tableAM_ASSET_SEWER_LATERAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AM_ASSET_SEWER_LATERALRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAM_ASSET_SEWER_LATERAL = ((AM_ASSET_SEWER_LATERALDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssetID {
                get {
                    return ((int)(this[this.tableAM_ASSET_SEWER_LATERAL.AssetIDColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_LATERAL.AssetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Section_ {
                get {
                    return ((int)(this[this.tableAM_ASSET_SEWER_LATERAL.Section_Column]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_LATERAL.Section_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_LATERAL.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'AM_ASSET_SEWER_LATERAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_LATERAL.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LateralID {
                get {
                    return ((string)(this[this.tableAM_ASSET_SEWER_LATERAL.LateralIDColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_LATERAL.LateralIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LatitudeAtSection {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_LATERAL.LatitudeAtSectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LatitudeAtSection\' in table \'AM_ASSET_SEWER_LATERAL\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_LATERAL.LatitudeAtSectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LongitudeAtSection {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_LATERAL.LongitudeAtSectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LongitudeAtSection\' in table \'AM_ASSET_SEWER_LATERAL\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_LATERAL.LongitudeAtSectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LatitudeAtPropertyLine {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_LATERAL.LatitudeAtPropertyLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LatitudeAtPropertyLine\' in table \'AM_ASSET_SEWER_LATERAL\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_LATERAL.LatitudeAtPropertyLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LongitudeAtPropertyLine {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_LATERAL.LongitudeAtPropertyLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LongitudeAtPropertyLine\' in table \'AM_ASSET_SEWER_LATERAL\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_LATERAL.LongitudeAtPropertyLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    return ((string)(this[this.tableAM_ASSET_SEWER_LATERAL.StateColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_LATERAL.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size_ {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_LATERAL.Size_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size_\' in table \'AM_ASSET_SEWER_LATERAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_LATERAL.Size_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistanceFromUSMH {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_LATERAL.DistanceFromUSMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceFromUSMH\' in table \'AM_ASSET_SEWER_LATERAL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_LATERAL.DistanceFromUSMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistanceFromDSMH {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_LATERAL.DistanceFromDSMHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistanceFromDSMH\' in table \'AM_ASSET_SEWER_LATERAL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_LATERAL.DistanceFromDSMHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MapSize {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_LATERAL.MapSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MapSize\' in table \'AM_ASSET_SEWER_LATERAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_LATERAL.MapSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableAM_ASSET_SEWER_LATERAL.DeletedColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_LATERAL.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableAM_ASSET_SEWER_LATERAL.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_LATERAL.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConnectionType {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_LATERAL.ConnectionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConnectionType\' in table \'AM_ASSET_SEWER_LATERAL\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_LATERAL.ConnectionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWERRow AM_ASSET_SEWERRow {
                get {
                    return ((AM_ASSET_SEWERRow)(this.GetParentRow(this.Table.ParentRelations["AM_ASSET_SEWER_AM_ASSET_SEWER_LATERAL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["AM_ASSET_SEWER_AM_ASSET_SEWER_LATERAL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_SECTIONRow AM_ASSET_SEWER_SECTIONRow {
                get {
                    return ((AM_ASSET_SEWER_SECTIONRow)(this.GetParentRow(this.Table.ParentRelations["AM_ASSET_SEWER_SECTION_AM_ASSET_SEWER_LATERAL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["AM_ASSET_SEWER_SECTION_AM_ASSET_SEWER_LATERAL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_LATERAL.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableAM_ASSET_SEWER_LATERAL.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLatitudeAtSectionNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_LATERAL.LatitudeAtSectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLatitudeAtSectionNull() {
                this[this.tableAM_ASSET_SEWER_LATERAL.LatitudeAtSectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLongitudeAtSectionNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_LATERAL.LongitudeAtSectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLongitudeAtSectionNull() {
                this[this.tableAM_ASSET_SEWER_LATERAL.LongitudeAtSectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLatitudeAtPropertyLineNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_LATERAL.LatitudeAtPropertyLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLatitudeAtPropertyLineNull() {
                this[this.tableAM_ASSET_SEWER_LATERAL.LatitudeAtPropertyLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLongitudeAtPropertyLineNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_LATERAL.LongitudeAtPropertyLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLongitudeAtPropertyLineNull() {
                this[this.tableAM_ASSET_SEWER_LATERAL.LongitudeAtPropertyLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSize_Null() {
                return this.IsNull(this.tableAM_ASSET_SEWER_LATERAL.Size_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSize_Null() {
                this[this.tableAM_ASSET_SEWER_LATERAL.Size_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceFromUSMHNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_LATERAL.DistanceFromUSMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceFromUSMHNull() {
                this[this.tableAM_ASSET_SEWER_LATERAL.DistanceFromUSMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceFromDSMHNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_LATERAL.DistanceFromDSMHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceFromDSMHNull() {
                this[this.tableAM_ASSET_SEWER_LATERAL.DistanceFromDSMHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMapSizeNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_LATERAL.MapSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMapSizeNull() {
                this[this.tableAM_ASSET_SEWER_LATERAL.MapSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConnectionTypeNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_LATERAL.ConnectionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConnectionTypeNull() {
                this[this.tableAM_ASSET_SEWER_LATERAL.ConnectionTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AM_ASSET_SEWER_MHRow : global::System.Data.DataRow {
            
            private AM_ASSET_SEWER_MHDataTable tableAM_ASSET_SEWER_MH;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AM_ASSET_SEWER_MHRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAM_ASSET_SEWER_MH = ((AM_ASSET_SEWER_MHDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssetID {
                get {
                    return ((int)(this[this.tableAM_ASSET_SEWER_MH.AssetIDColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.AssetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MHID {
                get {
                    return ((string)(this[this.tableAM_ASSET_SEWER_MH.MHIDColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.MHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Latitud {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.LatitudColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Latitud\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.LatitudColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Longitude {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.LongitudeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Longitude\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.LongitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableAM_ASSET_SEWER_MH.DeletedColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableAM_ASSET_SEWER_MH.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ManholeShape {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.ManholeShapeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManholeShape\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.ManholeShapeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaterialID {
                get {
                    try {
                        return ((int)(this[this.tableAM_ASSET_SEWER_MH.MaterialIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialID\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.MaterialIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TopDiameter {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.TopDiameterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TopDiameter\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.TopDiameterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TopDepth {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.TopDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TopDepth\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.TopDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TopFloor {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.TopFloorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TopFloor\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.TopFloorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TopCeiling {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.TopCeilingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TopCeiling\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.TopCeilingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TopBenching {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.TopBenchingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TopBenching\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.TopBenchingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DownDiameter {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.DownDiameterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DownDiameter\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.DownDiameterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DownDepth {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.DownDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DownDepth\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.DownDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DownFloor {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.DownFloorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DownFloor\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.DownFloorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DownCeiling {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.DownCeilingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DownCeiling\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.DownCeilingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DownBenching {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.DownBenchingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DownBenching\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.DownBenchingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rectangle1LongSide {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.Rectangle1LongSideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rectangle1LongSide\' in table \'AM_ASSET_SEWER_MH\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.Rectangle1LongSideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rectangle1ShortSide {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.Rectangle1ShortSideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rectangle1ShortSide\' in table \'AM_ASSET_SEWER_MH\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.Rectangle1ShortSideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rectangle2LongSide {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.Rectangle2LongSideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rectangle2LongSide\' in table \'AM_ASSET_SEWER_MH\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.Rectangle2LongSideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rectangle2ShortSide {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.Rectangle2ShortSideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rectangle2ShortSide\' in table \'AM_ASSET_SEWER_MH\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.Rectangle2ShortSideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TopSurfaceArea {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.TopSurfaceAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TopSurfaceArea\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.TopSurfaceAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DownSurfaceArea {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.DownSurfaceAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DownSurfaceArea\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.DownSurfaceAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ManholeRugs {
                get {
                    try {
                        return ((int)(this[this.tableAM_ASSET_SEWER_MH.ManholeRugsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManholeRugs\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.ManholeRugsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalDepth {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.TotalDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalDepth\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.TotalDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalSurfaceArea {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH.TotalSurfaceAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalSurfaceArea\' in table \'AM_ASSET_SEWER_MH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH.TotalSurfaceAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLatitudNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.LatitudColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLatitudNull() {
                this[this.tableAM_ASSET_SEWER_MH.LatitudColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLongitudeNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.LongitudeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLongitudeNull() {
                this[this.tableAM_ASSET_SEWER_MH.LongitudeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableAM_ASSET_SEWER_MH.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManholeShapeNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.ManholeShapeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManholeShapeNull() {
                this[this.tableAM_ASSET_SEWER_MH.ManholeShapeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableAM_ASSET_SEWER_MH.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaterialIDNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.MaterialIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaterialIDNull() {
                this[this.tableAM_ASSET_SEWER_MH.MaterialIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTopDiameterNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.TopDiameterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTopDiameterNull() {
                this[this.tableAM_ASSET_SEWER_MH.TopDiameterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTopDepthNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.TopDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTopDepthNull() {
                this[this.tableAM_ASSET_SEWER_MH.TopDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTopFloorNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.TopFloorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTopFloorNull() {
                this[this.tableAM_ASSET_SEWER_MH.TopFloorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTopCeilingNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.TopCeilingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTopCeilingNull() {
                this[this.tableAM_ASSET_SEWER_MH.TopCeilingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTopBenchingNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.TopBenchingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTopBenchingNull() {
                this[this.tableAM_ASSET_SEWER_MH.TopBenchingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDownDiameterNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.DownDiameterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDownDiameterNull() {
                this[this.tableAM_ASSET_SEWER_MH.DownDiameterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDownDepthNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.DownDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDownDepthNull() {
                this[this.tableAM_ASSET_SEWER_MH.DownDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDownFloorNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.DownFloorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDownFloorNull() {
                this[this.tableAM_ASSET_SEWER_MH.DownFloorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDownCeilingNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.DownCeilingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDownCeilingNull() {
                this[this.tableAM_ASSET_SEWER_MH.DownCeilingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDownBenchingNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.DownBenchingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDownBenchingNull() {
                this[this.tableAM_ASSET_SEWER_MH.DownBenchingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRectangle1LongSideNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.Rectangle1LongSideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRectangle1LongSideNull() {
                this[this.tableAM_ASSET_SEWER_MH.Rectangle1LongSideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRectangle1ShortSideNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.Rectangle1ShortSideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRectangle1ShortSideNull() {
                this[this.tableAM_ASSET_SEWER_MH.Rectangle1ShortSideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRectangle2LongSideNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.Rectangle2LongSideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRectangle2LongSideNull() {
                this[this.tableAM_ASSET_SEWER_MH.Rectangle2LongSideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRectangle2ShortSideNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.Rectangle2ShortSideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRectangle2ShortSideNull() {
                this[this.tableAM_ASSET_SEWER_MH.Rectangle2ShortSideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTopSurfaceAreaNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.TopSurfaceAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTopSurfaceAreaNull() {
                this[this.tableAM_ASSET_SEWER_MH.TopSurfaceAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDownSurfaceAreaNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.DownSurfaceAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDownSurfaceAreaNull() {
                this[this.tableAM_ASSET_SEWER_MH.DownSurfaceAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManholeRugsNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.ManholeRugsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManholeRugsNull() {
                this[this.tableAM_ASSET_SEWER_MH.ManholeRugsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalDepthNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.TotalDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalDepthNull() {
                this[this.tableAM_ASSET_SEWER_MH.TotalDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalSurfaceAreaNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH.TotalSurfaceAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalSurfaceAreaNull() {
                this[this.tableAM_ASSET_SEWER_MH.TotalSurfaceAreaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AM_ASSET_SEWER_MH_MATERIAL_TYPERow : global::System.Data.DataRow {
            
            private AM_ASSET_SEWER_MH_MATERIAL_TYPEDataTable tableAM_ASSET_SEWER_MH_MATERIAL_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AM_ASSET_SEWER_MH_MATERIAL_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE = ((AM_ASSET_SEWER_MH_MATERIAL_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaterialID {
                get {
                    return ((int)(this[this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE.MaterialIDColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE.MaterialIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaterialType {
                get {
                    return ((string)(this[this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE.MaterialTypeColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE.MaterialTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_ID {
                get {
                    return ((int)(this[this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE.COMPANY_IDColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE.COMPANY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'AM_ASSET_SEWER_MH_MATERIAL_TYPE\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DisplayID {
                get {
                    return ((int)(this[this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE.DisplayIDColumn]));
                }
                set {
                    this[this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE.DisplayIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tableAM_ASSET_SEWER_MH_MATERIAL_TYPE.CodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AM_ASSET_SEWERRowChangeEvent : global::System.EventArgs {
            
            private AM_ASSET_SEWERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWERRowChangeEvent(AM_ASSET_SEWERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AM_ASSET_SEWER_MATERIALRowChangeEvent : global::System.EventArgs {
            
            private AM_ASSET_SEWER_MATERIALRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MATERIALRowChangeEvent(AM_ASSET_SEWER_MATERIALRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MATERIALRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AM_ASSETRowChangeEvent : global::System.EventArgs {
            
            private AM_ASSETRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSETRowChangeEvent(AM_ASSETRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AM_ASSET_SEWER_SECTIONRowChangeEvent : global::System.EventArgs {
            
            private AM_ASSET_SEWER_SECTIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_SECTIONRowChangeEvent(AM_ASSET_SEWER_SECTIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_SECTIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AM_ASSET_SEWER_LATERALRowChangeEvent : global::System.EventArgs {
            
            private AM_ASSET_SEWER_LATERALRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_LATERALRowChangeEvent(AM_ASSET_SEWER_LATERALRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_LATERALRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AM_ASSET_SEWER_MHRowChangeEvent : global::System.EventArgs {
            
            private AM_ASSET_SEWER_MHRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MHRowChangeEvent(AM_ASSET_SEWER_MHRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AM_ASSET_SEWER_MH_MATERIAL_TYPERowChangeEvent : global::System.EventArgs {
            
            private AM_ASSET_SEWER_MH_MATERIAL_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MH_MATERIAL_TYPERowChangeEvent(AM_ASSET_SEWER_MH_MATERIAL_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AM_ASSET_SEWER_MH_MATERIAL_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591